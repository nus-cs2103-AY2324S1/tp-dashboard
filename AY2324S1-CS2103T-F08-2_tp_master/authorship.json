[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"# D.A.V.E. (D’financial AdVisor Expert)","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"[![Java CI](https://github.com/AY2324S1-CS2103T-F08-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-F08-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-F08-2/tp/graph/badge.svg?token\u003dGCZ85WN999)](https://codecov.io/gh/AY2324S1-CS2103T-F08-2/tp)","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"\u003e Manage your leads and clients information effortlessly through D.A.V.E. to gain an edge in your FA journey!","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"yuxunn"},"content":"## About","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"yuxunn"},"content":"D.A.V.E. is a leads and clients management tool for student financial advisors specifically in NUS, but can be used for all student financial advisors.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"yuxunn"},"content":"## UI Mock-up","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yuxunn"},"content":"## Getting Started","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"yuxunn"},"content":"1. Ensure you have Java `11` or above installed in your computer.","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"yuxunn"},"content":"2. Download the latest `DAVE.jar` from here.","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":"3. Copy the file to the folder you want to use as the *home folder* for D.A.V.E.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"4. Double-click `DAVE.jar` to start the app.","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"## Acknowledgements","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"yuxunn"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"yuxunn":16,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"jx124"},"content":"run {","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"jx124"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jx124":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tiif"},"content":"### Gary","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"tiif"},"content":"\u003cimg src\u003d\"images/garylow2001.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"tiif"},"content":"[[github](https://github.com/garylow2001)]","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"tiif"},"content":"* Role: Developer","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"tiif"},"content":"* Responsibilities: Scheduling and Tracking","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"LicongHuang"},"content":"### Licong","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"tiif"},"content":"\u003cimg src\u003d\"images/liconghuang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"tiif"},"content":"[[github](https://github.com/LicongHuang)]","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"tiif"},"content":"* Role: Developer","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"tiif"},"content":"* Responsibilities: Integration","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"tiif"},"content":"### Jie Xiang","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"tiif"},"content":"\u003cimg src\u003d\"images/jx124.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"tiif"},"content":"[[github](https://github.com/jx124)]","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"tiif"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"tiif"},"content":"### Yu Xun","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"tiif"},"content":"\u003cimg src\u003d\"images/yuxunn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"tiif"},"content":"[[github](https://github.com/yuxunn)]","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"tiif"},"content":"* Responsibilities: Testing","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"tiif"},"content":"### Tiffany","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"tiif"},"content":"\u003cimg src\u003d\"images/tiif.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"tiif"},"content":"[[github](https://github.com/tiif)]","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"tiif"},"content":"* Responsibilities: Deliverable and deadlines","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"tiif":22,"-":33,"LicongHuang":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 Developer Guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/UiClassDiagram.png\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/DeleteSequenceDiagram.png\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"jx124"},"content":"\u003cimg src\u003d\"diagrams/PersonClassDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"jx124"},"content":"The abstract `Person` class is extended by two separate classes, `Lead` and `Client`. These instances are distinguished by their `Type` field in `Person`.","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"yuxunn"},"content":"### View Specific Person feature","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"yuxunn"},"content":"Step 1: The user launches the application for the first time. The `SampleAddressBook` will be initialised.","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"yuxunn"},"content":"Step 2: The user executes `addclient n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` to add a new Client.","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"yuxunn"},"content":"Step 3: The user executes a `view 1` command to view the 1st person in the address book. The user’s command is parsed by `ViewCommandParser` which extracts the target index. The `ViewCommand` class is instantiated with the extracted index. `ViewCommand` class interacts with `Model#FilteredPersonList` to verify the validity of the index and retrieve the corresponding person’s details. The command execution would be encapsulated as a `CommandResult` object that is then returned back from `Logic`.","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"yuxunn"},"content":"**Note:** If the index given is more than the size of the list or when the index given is 0, `ViewCommand` will not call `Model#view(Person personToView)`. Instead, a `MESSAGE_INVALID_PERSON_DISPLAYED_INDEX` exception will be thrown. The Main Window display continue displaying the `PersonListPanel` UI instead of the  `ViewWindow` UI","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"yuxunn"},"content":"The following sequence diagram shows how the View Command works:","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"yuxunn"},"content":"\u003cimg src\u003d\"diagrams/ViewSequenceDiagram.png\" alt\u003d \"ViewSequenceDiagram\"/\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/UndoRedoState0.png\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/UndoRedoState1.png\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/UndoRedoState2.png\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/UndoRedoState3.png\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/UndoSequenceDiagram.png\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/UndoRedoState4.png\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/UndoRedoState5.png\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"LicongHuang"},"content":"\u003cimg src\u003d\"diagrams/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"garylow2001"},"content":"### Addclient/Addlead feature","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"garylow2001"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"garylow2001"},"content":"The `Client` and `Lead` model extends from `Person`.","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"garylow2001"},"content":"The `addclient` and `addlead` commands are implemented as follows:","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":272,"author":{"gitId":"garylow2001"},"content":"The `execute()` command in `AddClientCommand` or `AddLeadCommand` is executed.","lastModifiedDate":"2023-10-26"},{"lineNumber":273,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":274,"author":{"gitId":"garylow2001"},"content":"The `execute()` command in `AddClientCommand` or `AddLeadCommand` calls the `addClient()` or `addLead()` method in `ModelManager`.","lastModifiedDate":"2023-10-26"},{"lineNumber":275,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":276,"author":{"gitId":"garylow2001"},"content":"The `addClient()` or `addLead()` method in `ModelManager` calls the `addClient()` or `addLead()` method in `AddressBook`.","lastModifiedDate":"2023-10-26"},{"lineNumber":277,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":278,"author":{"gitId":"garylow2001"},"content":"The `addClient()` or `addLead()` method in `AddressBook` adds the `Client` or `Lead` object to the `UniquePersonList persons`.","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":280,"author":{"gitId":"garylow2001"},"content":"Given below is an example usage scenario and how addclient and addlead behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":281,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":282,"author":{"gitId":"garylow2001"},"content":"Step 1. The user launches the application for the first time. The `AddressBook` will be initialized.","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":284,"author":{"gitId":"garylow2001"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":285,"author":{"gitId":"garylow2001"},"content":"    \u003cimg src\u003d\"images/cleanaddressbook.png\" alt\u003d\"before command\" width\u003d\"500\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":286,"author":{"gitId":"garylow2001"},"content":"    \u003cp\u003eBefore any commands\u003c/p\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"garylow2001"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":288,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":289,"author":{"gitId":"garylow2001"},"content":"Step 2 - addclient. The user executes `addclient n/John Doe...` command add a person named John Doe into the AddressBook. The `addclient` command calls `Model#addClient()`, causing the address book to be updated.","lastModifiedDate":"2023-10-26"},{"lineNumber":290,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":291,"author":{"gitId":"garylow2001"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":292,"author":{"gitId":"garylow2001"},"content":"    \u003cimg src\u003d\"images/addclient.png\" alt\u003d\"after addclient command\" width\u003d\"500\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":293,"author":{"gitId":"garylow2001"},"content":"    \u003cp\u003eAfter addclient command\u003c/p\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"garylow2001"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":295,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"garylow2001"},"content":"Step 2 - addlead. The user executes `addlead n/John Doe...` command add a person named John Doe into the AddressBook. The `addlead` command calls `Model#addLead()`, causing the address book to be updated.","lastModifiedDate":"2023-10-26"},{"lineNumber":297,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":298,"author":{"gitId":"garylow2001"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":299,"author":{"gitId":"garylow2001"},"content":"    \u003cimg src\u003d\"images/addlead.png\" alt\u003d\"after addlead command\" width\u003d\"500\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":300,"author":{"gitId":"garylow2001"},"content":"    \u003cp\u003eAfter addlead command\u003c/p\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":301,"author":{"gitId":"garylow2001"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":302,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":303,"author":{"gitId":"garylow2001"},"content":"The following sequence diagram shows how the addclient operation works (Note that addlead works in the same way but calls `Model#addLead()` instead):","lastModifiedDate":"2023-10-26"},{"lineNumber":304,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":305,"author":{"gitId":"garylow2001"},"content":"\u003cimg src\u003d\"diagrams/AddClientSequenceDiagram.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":306,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":307,"author":{"gitId":"garylow2001"},"content":"The following activity diagram shows what happens when a user executes a new command:","lastModifiedDate":"2023-10-26"},{"lineNumber":308,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":309,"author":{"gitId":"garylow2001"},"content":"\u003cimg src\u003d\"diagrams/AddClientActivityDiagram.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":310,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":311,"author":{"gitId":"garylow2001"},"content":"### \\[Proposed\\] Add Meeting Time feature","lastModifiedDate":"2023-10-26"},{"lineNumber":312,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":313,"author":{"gitId":"garylow2001"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":314,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":315,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":316,"author":{"gitId":"garylow2001"},"content":"The user can specify a meeting time when executing `addclient` or `addlead` command with the `--meeting-time` flag.","lastModifiedDate":"2023-10-26"},{"lineNumber":317,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":318,"author":{"gitId":"garylow2001"},"content":"Alternatively, the user can enter the `addmeeting` command to add a meeting time to an existing client or lead.","lastModifiedDate":"2023-10-26"},{"lineNumber":319,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":320,"author":{"gitId":"garylow2001"},"content":"The `addmeeting` command takes in the `index` of the client or lead, and the meeting time in `dd/MM/yyyy HH:mm` format, e.g. `24/10/2023 12:00`.","lastModifiedDate":"2023-10-26"},{"lineNumber":321,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":322,"author":{"gitId":"garylow2001"},"content":"The following sequence diagram shows how the addMeeting operation works:","lastModifiedDate":"2023-10-26"},{"lineNumber":323,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":324,"author":{"gitId":"garylow2001"},"content":"\u003cimg src\u003d\"diagrams/AddMeetingTimeSequenceDiagram.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":325,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":326,"author":{"gitId":"garylow2001"},"content":"The following activity diagram shows what happens when a user executes the addMeeting operation:","lastModifiedDate":"2023-10-26"},{"lineNumber":327,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":328,"author":{"gitId":"garylow2001"},"content":"\u003cimg src\u003d\"diagrams/AddMeetingTimeActivityDiagram.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"jx124"},"content":"### \\[Proposed\\] Sort Meeting Time feature","lastModifiedDate":"2023-10-27"},{"lineNumber":331,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":332,"author":{"gitId":"jx124"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":333,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":334,"author":{"gitId":"jx124"},"content":"The user can view the upcoming meetings scheduled with leads and clients sorted in chronological order.","lastModifiedDate":"2023-10-27"},{"lineNumber":335,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":336,"author":{"gitId":"jx124"},"content":"This is achieved by entering the `sortmeeting` command, which will filter all the clients and leads with a meeting time, and then sort them chronologically.","lastModifiedDate":"2023-10-27"},{"lineNumber":337,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":338,"author":{"gitId":"jx124"},"content":"The following sequence diagram shows how the `sortmeeting` operation works:","lastModifiedDate":"2023-10-27"},{"lineNumber":339,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":340,"author":{"gitId":"jx124"},"content":"_{sequence diagram to be added}_","lastModifiedDate":"2023-10-27"},{"lineNumber":341,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":342,"author":{"gitId":"jx124"},"content":"The following activity diagram shows what happens when a user executes the `sortmeeting` operation:","lastModifiedDate":"2023-10-27"},{"lineNumber":343,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":344,"author":{"gitId":"jx124"},"content":"_{activity diagram to be added}_","lastModifiedDate":"2023-10-27"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":346,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":352,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":353,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":354,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"LicongHuang"},"content":"* is a student financial advisor","lastModifiedDate":"2023-10-05"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":369,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"LicongHuang"},"content":"* needs a solution that offers robust client relationship management","lastModifiedDate":"2023-10-05"},{"lineNumber":371,"author":{"gitId":"LicongHuang"},"content":"* needs event and policy tracking","lastModifiedDate":"2023-10-05"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"LicongHuang"},"content":"**Value proposition**: to keep track of their leads as well as clients\u0027 details such as their insurance policies, expiry, coverage, personal and contact details, to better assist their leads and clients.","lastModifiedDate":"2023-10-05"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":377,"author":{"gitId":"LicongHuang"},"content":"\u003c!--","lastModifiedDate":"2023-10-05"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                 | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"|----------|--------------------------------------------|------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-09-12"},{"lineNumber":382,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions       | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person             |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person              | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name        | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name         | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"LicongHuang"},"content":"--\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":389,"author":{"gitId":"LicongHuang"},"content":"## Leads","lastModifiedDate":"2023-10-05"},{"lineNumber":390,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":391,"author":{"gitId":"LicongHuang"},"content":"| Priority | As a | I want to …​                      | So that I can…​                          |","lastModifiedDate":"2023-10-05"},{"lineNumber":392,"author":{"gitId":"LicongHuang"},"content":"|----------|--------------------------------|----------------------------------|------------------------------------------|","lastModifiedDate":"2023-10-05"},{"lineNumber":393,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                                | view all my potential leads      | recall all my leads                      |","lastModifiedDate":"2023-10-05"},{"lineNumber":394,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                                | add a potential lead             | follow up with them                      |","lastModifiedDate":"2023-10-05"},{"lineNumber":395,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                                | edit the details of my leads     | correct mistakes I have made when adding a lead |","lastModifiedDate":"2023-10-05"},{"lineNumber":396,"author":{"gitId":"LicongHuang"},"content":"| `* *`  |  student financial advisor                                | mark leads as done               | keep track of who I have visited         |","lastModifiedDate":"2023-10-05"},{"lineNumber":397,"author":{"gitId":"LicongHuang"},"content":"| `* *`  |  student financial advisor                                | unmark leads that are marked done | amend a mistake of marking leads that were mistakenly marked |","lastModifiedDate":"2023-10-05"},{"lineNumber":398,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                                | add a meeting time with my lead  | keep track of when I need to visit my leads |","lastModifiedDate":"2023-10-05"},{"lineNumber":399,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                                | sort meeting times by most recent | focus on potential leads that are more urgent |","lastModifiedDate":"2023-10-05"},{"lineNumber":400,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                                | convert leads into clients       | keep track of who are my leads and clients |","lastModifiedDate":"2023-10-05"},{"lineNumber":401,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":402,"author":{"gitId":"LicongHuang"},"content":"## Clients","lastModifiedDate":"2023-10-05"},{"lineNumber":403,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":404,"author":{"gitId":"LicongHuang"},"content":"| Priority | As a student... | I want to …​                      | So that I can…​                          |","lastModifiedDate":"2023-10-05"},{"lineNumber":405,"author":{"gitId":"LicongHuang"},"content":"|----------|--------------------------------|----------------------------------|------------------------------------------|","lastModifiedDate":"2023-10-05"},{"lineNumber":406,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                                | add clients who have purchased a plan from me | keep track of my clients        |","lastModifiedDate":"2023-10-05"},{"lineNumber":407,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                               | update client information        | accurately reflect the information of my clients if I had mistakenly added the wrong information prior |","lastModifiedDate":"2023-10-05"},{"lineNumber":408,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                               | remove clients who did not continue their services with me | not clutter up my address book |","lastModifiedDate":"2023-10-05"},{"lineNumber":409,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                               | find available meeting timings   | more easily schedule meetings             |","lastModifiedDate":"2023-10-05"},{"lineNumber":410,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                               | check whose policies are expiring soon | plan a meeting with them            |","lastModifiedDate":"2023-10-05"},{"lineNumber":411,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                               | edit a policy of my client       | accurately reflect their policies on the app if my client has changed his or her policy |","lastModifiedDate":"2023-10-05"},{"lineNumber":412,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |   student financial advisor                              | remove a policy of my client     | accurately reflect their policies on the app if my client has unsubscribed from his or her policy |","lastModifiedDate":"2023-10-05"},{"lineNumber":413,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                               | create and manage client profiles | keep track of their financial information, goals, and progress |","lastModifiedDate":"2023-10-05"},{"lineNumber":414,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                               | schedule and manage appointments with my clients | ensure regular communication and updates |","lastModifiedDate":"2023-10-05"},{"lineNumber":415,"author":{"gitId":"LicongHuang"},"content":"| `*`  |  student financial advisor                               | set and track financial goals for my clients | help them work toward their objectives |","lastModifiedDate":"2023-10-05"},{"lineNumber":416,"author":{"gitId":"LicongHuang"},"content":"| `*`  |  student financial advisor                               | create and manage investment portfolios for my clients | make adjustments as needed |","lastModifiedDate":"2023-10-05"},{"lineNumber":417,"author":{"gitId":"LicongHuang"},"content":"| `*`  |  student financial advisor                               | generate and share reports with my clients | keep them informed about their financial progress |","lastModifiedDate":"2023-10-05"},{"lineNumber":418,"author":{"gitId":"LicongHuang"},"content":"| `*`  |  student financial advisor                               | securely message and communicate with my clients within the app | address their questions and concerns |","lastModifiedDate":"2023-10-05"},{"lineNumber":419,"author":{"gitId":"LicongHuang"},"content":"| `* *`  |  student financial advisor                               | have access to analytics and tools that help me analyze my clients\u0027 financial data | provide them with the best advice |","lastModifiedDate":"2023-10-05"},{"lineNumber":420,"author":{"gitId":"LicongHuang"},"content":"| `* *`  |  student financial advisor                               | generate tax reports and provide tax planning advice | help my clients minimize their tax liabilities |","lastModifiedDate":"2023-10-05"},{"lineNumber":421,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                               | keep track of my clients’ birthdays | make the necessary arrangements like sending well wishes to them |","lastModifiedDate":"2023-10-05"},{"lineNumber":422,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                               | send celebration message to all of my clients | not have to utilize another platform to do so |","lastModifiedDate":"2023-10-05"},{"lineNumber":423,"author":{"gitId":"LicongHuang"},"content":"| `* *`  |  student financial advisor                               | search up a list of clients who purchased a specific policy | monitor the policies based on their specific type |","lastModifiedDate":"2023-10-05"},{"lineNumber":424,"author":{"gitId":"LicongHuang"},"content":"| `*`  |  student financial advisor                               | inform my clients about new updates | help them stay updated |","lastModifiedDate":"2023-10-05"},{"lineNumber":425,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |  student financial advisor                               | sort my clients based on the commissions they have made me | know which clients to prioritize |","lastModifiedDate":"2023-10-05"},{"lineNumber":426,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":427,"author":{"gitId":"LicongHuang"},"content":"## General Information","lastModifiedDate":"2023-10-05"},{"lineNumber":428,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":429,"author":{"gitId":"LicongHuang"},"content":"| Priority | As a student financial advisor, | I want to …​                      | So that I can…​                          |","lastModifiedDate":"2023-10-05"},{"lineNumber":430,"author":{"gitId":"LicongHuang"},"content":"|----------|--------------------------------|----------------------------------|------------------------------------------|","lastModifiedDate":"2023-10-05"},{"lineNumber":431,"author":{"gitId":"LicongHuang"},"content":"| `*`  |   student financial advisor                              | upload and store important documents securely | easily access them when needed    |","lastModifiedDate":"2023-10-05"},{"lineNumber":432,"author":{"gitId":"LicongHuang"},"content":"| `*`  |   student financial advisor                              | modify my authentication details regularly | ensure my account is safe and secure |","lastModifiedDate":"2023-10-05"},{"lineNumber":433,"author":{"gitId":"LicongHuang"},"content":"| `*`  |   student financial advisor                              | write notes on the platform      | keep track of any additional notes related to my work |","lastModifiedDate":"2023-10-05"},{"lineNumber":434,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |   student financial advisor                              | keep track of my commissions     | to keep track of my financial performance        |","lastModifiedDate":"2023-10-05"},{"lineNumber":435,"author":{"gitId":"LicongHuang"},"content":"| `* * *`  |   student financial advisor                              | keep track of upcoming events    | be on track with the different upcoming appointments |","lastModifiedDate":"2023-10-05"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"LicongHuang"},"content":"**Use case: Edit event information**","lastModifiedDate":"2023-10-05"},{"lineNumber":465,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":466,"author":{"gitId":"LicongHuang"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":467,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":468,"author":{"gitId":"LicongHuang"},"content":"1. User requests to list persons","lastModifiedDate":"2023-10-05"},{"lineNumber":469,"author":{"gitId":"LicongHuang"},"content":"2. D.A.V.E. shows a list of persons","lastModifiedDate":"2023-10-05"},{"lineNumber":470,"author":{"gitId":"LicongHuang"},"content":"3. User requests to see a specific person","lastModifiedDate":"2023-10-05"},{"lineNumber":471,"author":{"gitId":"LicongHuang"},"content":"4. D.A.V.E. shows information of the person","lastModifiedDate":"2023-10-05"},{"lineNumber":472,"author":{"gitId":"LicongHuang"},"content":"5. User requests to edit the person\u0027s event information","lastModifiedDate":"2023-10-05"},{"lineNumber":473,"author":{"gitId":"LicongHuang"},"content":"6. D.A.V.E. updates the person\u0027s information","lastModifiedDate":"2023-10-05"},{"lineNumber":474,"author":{"gitId":"LicongHuang"},"content":"7. D.A.V.E. displays person\u0027s information","lastModifiedDate":"2023-10-05"},{"lineNumber":475,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":476,"author":{"gitId":"LicongHuang"},"content":"Use case ends","lastModifiedDate":"2023-10-05"},{"lineNumber":477,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":478,"author":{"gitId":"LicongHuang"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":479,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":480,"author":{"gitId":"LicongHuang"},"content":"* 2a. The person\u0027s information is empty","lastModifiedDate":"2023-10-05"},{"lineNumber":481,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":482,"author":{"gitId":"LicongHuang"},"content":"  Add person event information","lastModifiedDate":"2023-10-05"},{"lineNumber":483,"author":{"gitId":"LicongHuang"},"content":"* 3a. The given index is invalid","lastModifiedDate":"2023-10-05"},{"lineNumber":484,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":485,"author":{"gitId":"LicongHuang"},"content":"    * 3a1 D.A.V.E. shows an error message","lastModifiedDate":"2023-10-05"},{"lineNumber":486,"author":{"gitId":"LicongHuang"},"content":"      Use case resumes at step 2","lastModifiedDate":"2023-10-05"},{"lineNumber":487,"author":{"gitId":"LicongHuang"},"content":"      ** Use case: Add a New Person **","lastModifiedDate":"2023-10-05"},{"lineNumber":488,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":489,"author":{"gitId":"LicongHuang"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":490,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":491,"author":{"gitId":"LicongHuang"},"content":"1. User requests to add a new person","lastModifiedDate":"2023-10-05"},{"lineNumber":492,"author":{"gitId":"LicongHuang"},"content":"2. AddressBook prompts the user to input the person\u0027s information","lastModifiedDate":"2023-10-05"},{"lineNumber":493,"author":{"gitId":"LicongHuang"},"content":"3. User enters the person\u0027s details","lastModifiedDate":"2023-10-05"},{"lineNumber":494,"author":{"gitId":"LicongHuang"},"content":"4. AddressBook saves the new person\u0027s information","lastModifiedDate":"2023-10-05"},{"lineNumber":495,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":496,"author":{"gitId":"LicongHuang"},"content":"Use case ends","lastModifiedDate":"2023-10-05"},{"lineNumber":497,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":498,"author":{"gitId":"LicongHuang"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":499,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":500,"author":{"gitId":"LicongHuang"},"content":"    2a. The person exists in the list","lastModifiedDate":"2023-10-05"},{"lineNumber":501,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":502,"author":{"gitId":"LicongHuang"},"content":"    Use case ends","lastModifiedDate":"2023-10-05"},{"lineNumber":503,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":504,"author":{"gitId":"LicongHuang"},"content":"**Use case: Schedule a Meeting**","lastModifiedDate":"2023-10-05"},{"lineNumber":505,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":506,"author":{"gitId":"LicongHuang"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":507,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":508,"author":{"gitId":"LicongHuang"},"content":"1. User requests to list persons","lastModifiedDate":"2023-10-05"},{"lineNumber":509,"author":{"gitId":"LicongHuang"},"content":"2. AddressBook displays a list of persons","lastModifiedDate":"2023-10-05"},{"lineNumber":510,"author":{"gitId":"LicongHuang"},"content":"3. User selects a specific person","lastModifiedDate":"2023-10-05"},{"lineNumber":511,"author":{"gitId":"LicongHuang"},"content":"4. AddressBook shows the person\u0027s details","lastModifiedDate":"2023-10-05"},{"lineNumber":512,"author":{"gitId":"LicongHuang"},"content":"5. User requests to schedule a meeting with the selected person","lastModifiedDate":"2023-10-05"},{"lineNumber":513,"author":{"gitId":"LicongHuang"},"content":"6. AddressBook prompts the user to enter meeting details (date, time, location, etc.)","lastModifiedDate":"2023-10-05"},{"lineNumber":514,"author":{"gitId":"LicongHuang"},"content":"7. User provides meeting details","lastModifiedDate":"2023-10-05"},{"lineNumber":515,"author":{"gitId":"LicongHuang"},"content":"8. AddressBook schedules the meeting and updates the person\u0027s information","lastModifiedDate":"2023-10-05"},{"lineNumber":516,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":517,"author":{"gitId":"LicongHuang"},"content":"Use case ends","lastModifiedDate":"2023-10-05"},{"lineNumber":518,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":519,"author":{"gitId":"LicongHuang"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":520,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":521,"author":{"gitId":"LicongHuang"},"content":"    2a. The list of persons is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":522,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":523,"author":{"gitId":"LicongHuang"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":524,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":525,"author":{"gitId":"LicongHuang"},"content":"    3a. The user enters invalid meeting details.","lastModifiedDate":"2023-10-05"},{"lineNumber":526,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":527,"author":{"gitId":"LicongHuang"},"content":"        5a1. AddressBook shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":528,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":529,"author":{"gitId":"LicongHuang"},"content":"        Use case resumes at step 6.","lastModifiedDate":"2023-10-05"},{"lineNumber":530,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":531,"author":{"gitId":"LicongHuang"},"content":"**Use case: View Upcoming Appointments**","lastModifiedDate":"2023-10-05"},{"lineNumber":532,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":533,"author":{"gitId":"LicongHuang"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":534,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":535,"author":{"gitId":"LicongHuang"},"content":"1. User requests to view their upcoming appointments.","lastModifiedDate":"2023-10-05"},{"lineNumber":536,"author":{"gitId":"LicongHuang"},"content":"2. AddressBook displays a list of scheduled appointments, including date, time, and person involved.","lastModifiedDate":"2023-10-05"},{"lineNumber":537,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":538,"author":{"gitId":"LicongHuang"},"content":"Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":539,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":540,"author":{"gitId":"LicongHuang"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":541,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":542,"author":{"gitId":"LicongHuang"},"content":"    2a. There are no upcoming appointments.","lastModifiedDate":"2023-10-05"},{"lineNumber":543,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":544,"author":{"gitId":"LicongHuang"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":545,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":546,"author":{"gitId":"LicongHuang"},"content":"**Use case: Search for a Person**","lastModifiedDate":"2023-10-05"},{"lineNumber":547,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":548,"author":{"gitId":"LicongHuang"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":549,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":550,"author":{"gitId":"LicongHuang"},"content":"1. User requests to search for a specific person.","lastModifiedDate":"2023-10-05"},{"lineNumber":551,"author":{"gitId":"LicongHuang"},"content":"2. AddressBook prompts the user to enter search criteria (e.g., name, email, phone number).","lastModifiedDate":"2023-10-05"},{"lineNumber":552,"author":{"gitId":"LicongHuang"},"content":"3. User provides search criteria.","lastModifiedDate":"2023-10-05"},{"lineNumber":553,"author":{"gitId":"LicongHuang"},"content":"4. AddressBook performs a search and displays a list of matching persons.","lastModifiedDate":"2023-10-05"},{"lineNumber":554,"author":{"gitId":"LicongHuang"},"content":"5. User selects a person from the search results.","lastModifiedDate":"2023-10-05"},{"lineNumber":555,"author":{"gitId":"LicongHuang"},"content":"6. AddressBook shows the selected person\u0027s details.","lastModifiedDate":"2023-10-05"},{"lineNumber":556,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":557,"author":{"gitId":"LicongHuang"},"content":"Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":558,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":559,"author":{"gitId":"LicongHuang"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":560,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":561,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":562,"author":{"gitId":"LicongHuang"},"content":"    2a. No persons match the search criteria.","lastModifiedDate":"2023-10-05"},{"lineNumber":563,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":564,"author":{"gitId":"LicongHuang"},"content":"        2a1. AddressBook displays a message indicating no matches found.","lastModifiedDate":"2023-10-05"},{"lineNumber":565,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":566,"author":{"gitId":"LicongHuang"},"content":"        Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":567,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":568,"author":{"gitId":"LicongHuang"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":569,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":570,"author":{"gitId":"LicongHuang"},"content":"**Use case: List Clients**","lastModifiedDate":"2023-10-26"},{"lineNumber":571,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":572,"author":{"gitId":"LicongHuang"},"content":"**MSS**","lastModifiedDate":"2023-10-26"},{"lineNumber":573,"author":{"gitId":"LicongHuang"},"content":"1. User requests to list clients.","lastModifiedDate":"2023-10-26"},{"lineNumber":574,"author":{"gitId":"LicongHuang"},"content":"2. AddressBook filters the list of Persons to a list of clients.","lastModifiedDate":"2023-10-26"},{"lineNumber":575,"author":{"gitId":"LicongHuang"},"content":"3. AddressBook displays the list of clients to the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":576,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":577,"author":{"gitId":"LicongHuang"},"content":"Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":578,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":579,"author":{"gitId":"LicongHuang"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":580,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":581,"author":{"gitId":"LicongHuang"},"content":"    3a. The list of clients is empty.","lastModifiedDate":"2023-10-26"},{"lineNumber":582,"author":{"gitId":"LicongHuang"},"content":"        3a1. AddressBooks display a message indicating all clients are displayed.","lastModifiedDate":"2023-10-26"},{"lineNumber":583,"author":{"gitId":"LicongHuang"},"content":"        3a2. No information is displayed.","lastModifiedDate":"2023-10-26"},{"lineNumber":584,"author":{"gitId":"LicongHuang"},"content":"        Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":585,"author":{"gitId":"LicongHuang"},"content":"    Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":586,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":587,"author":{"gitId":"LicongHuang"},"content":"**Use case: List Leads**","lastModifiedDate":"2023-10-26"},{"lineNumber":588,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":589,"author":{"gitId":"LicongHuang"},"content":"**MSS**","lastModifiedDate":"2023-10-26"},{"lineNumber":590,"author":{"gitId":"LicongHuang"},"content":"1. User requests to list leads.","lastModifiedDate":"2023-10-26"},{"lineNumber":591,"author":{"gitId":"LicongHuang"},"content":"2. AddressBook filters the list of Persons to a list of leads.","lastModifiedDate":"2023-10-26"},{"lineNumber":592,"author":{"gitId":"LicongHuang"},"content":"3. AddressBook displays the list of leads to the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":593,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":594,"author":{"gitId":"LicongHuang"},"content":"Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":595,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":596,"author":{"gitId":"LicongHuang"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":597,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":598,"author":{"gitId":"LicongHuang"},"content":"    3a. The list of leads is empty.","lastModifiedDate":"2023-10-26"},{"lineNumber":599,"author":{"gitId":"LicongHuang"},"content":"        3a1. AddressBooks display a message indicating all clients are displayed.","lastModifiedDate":"2023-10-26"},{"lineNumber":600,"author":{"gitId":"LicongHuang"},"content":"        Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":601,"author":{"gitId":"LicongHuang"},"content":"    Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":602,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":603,"author":{"gitId":"LicongHuang"},"content":"**Extensions**","lastModifiedDate":"2023-10-29"},{"lineNumber":604,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":605,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"LicongHuang"},"content":"4. The system should be able to scale gracefully to accommodate a growing number of users, clients, and data without significant performance degradation.","lastModifiedDate":"2023-10-05"},{"lineNumber":613,"author":{"gitId":"LicongHuang"},"content":"5. It should support easy integration with additional modules or features as the user base expands.","lastModifiedDate":"2023-10-05"},{"lineNumber":614,"author":{"gitId":"LicongHuang"},"content":"8. The user interface should be intuitive and user-friendly, ensuring that users can quickly learn and navigate the application.","lastModifiedDate":"2023-10-05"},{"lineNumber":615,"author":{"gitId":"-"},"content":"   *{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"LicongHuang"},"content":"* **Graceful scaling**: Ability for the system to handle increased user loads without significant performance loss","lastModifiedDate":"2023-10-05"},{"lineNumber":622,"author":{"gitId":"LicongHuang"},"content":"* **Integration**: Combining different software components together to easily incorporate additional modules or features as needed","lastModifiedDate":"2023-10-05"},{"lineNumber":623,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":631,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":632,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"tiif"},"content":"### Add a client","lastModifiedDate":"2023-10-26"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"tiif"},"content":"1. Add a client with a necessary fields","lastModifiedDate":"2023-10-26"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"tiif"},"content":"    1. Prerequisites: List all clients/leads using the `list` command. The information about the lead to be added should not already exist in the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":658,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":659,"author":{"gitId":"tiif"},"content":"    1. Test case: `addclient n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/classmate`","lastModifiedDate":"2023-10-26"},{"lineNumber":660,"author":{"gitId":"tiif"},"content":"       Expected: A client with the information above will be added.","lastModifiedDate":"2023-10-26"},{"lineNumber":661,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":662,"author":{"gitId":"tiif"},"content":"    1. Test case: `addclient p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/classmate`","lastModifiedDate":"2023-10-26"},{"lineNumber":663,"author":{"gitId":"tiif"},"content":"       Expected: No client will be added. The following error message will be shown.","lastModifiedDate":"2023-10-26"},{"lineNumber":664,"author":{"gitId":"tiif"},"content":"    ```","lastModifiedDate":"2023-10-26"},{"lineNumber":665,"author":{"gitId":"tiif"},"content":"    Invalid command format!","lastModifiedDate":"2023-10-26"},{"lineNumber":666,"author":{"gitId":"tiif"},"content":"    addclient: Adds a client to the address book. Parameters: n/NAME p/PHONE e/EMAIL a/ADDRESS [t/TAG]...","lastModifiedDate":"2023-10-26"},{"lineNumber":667,"author":{"gitId":"tiif"},"content":"    Example: addclient n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/classmate","lastModifiedDate":"2023-10-26"},{"lineNumber":668,"author":{"gitId":"tiif"},"content":"    ```","lastModifiedDate":"2023-10-26"},{"lineNumber":669,"author":{"gitId":"tiif"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2023-10-26"},{"lineNumber":670,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":671,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":672,"author":{"gitId":"tiif"},"content":"### Add a lead","lastModifiedDate":"2023-10-26"},{"lineNumber":673,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":674,"author":{"gitId":"tiif"},"content":"1. Add a lead with a necessary fields","lastModifiedDate":"2023-10-26"},{"lineNumber":675,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":676,"author":{"gitId":"tiif"},"content":"    1. Prerequisites: List all clients/leads using the `list` command. The information about the lead to be added should not already exist in the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":677,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":678,"author":{"gitId":"tiif"},"content":"    1. Test case: `addlead n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/classmate`","lastModifiedDate":"2023-10-26"},{"lineNumber":679,"author":{"gitId":"tiif"},"content":"       Expected: A lead with the information above will be added.","lastModifiedDate":"2023-10-26"},{"lineNumber":680,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":681,"author":{"gitId":"tiif"},"content":"    1. Test case: `addlead p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/classmate`","lastModifiedDate":"2023-10-26"},{"lineNumber":682,"author":{"gitId":"tiif"},"content":"       Expected: No lead will be added. The following error message will be shown.","lastModifiedDate":"2023-10-26"},{"lineNumber":683,"author":{"gitId":"tiif"},"content":"    ```","lastModifiedDate":"2023-10-26"},{"lineNumber":684,"author":{"gitId":"tiif"},"content":"    Invalid command format!","lastModifiedDate":"2023-10-26"},{"lineNumber":685,"author":{"gitId":"tiif"},"content":"    addlead: Adds a lead to the address book. Parameters: n/NAME p/PHONE e/EMAIL a/ADDRESS [t/TAG]...","lastModifiedDate":"2023-10-26"},{"lineNumber":686,"author":{"gitId":"tiif"},"content":"    Example: addlead n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/classmate","lastModifiedDate":"2023-10-26"},{"lineNumber":687,"author":{"gitId":"tiif"},"content":"    ```","lastModifiedDate":"2023-10-26"},{"lineNumber":688,"author":{"gitId":"tiif"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2023-10-26"},{"lineNumber":689,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":690,"author":{"gitId":"tiif"},"content":"### Edit a client/lead","lastModifiedDate":"2023-10-26"},{"lineNumber":691,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":692,"author":{"gitId":"tiif"},"content":"1. Deleting a client/lead while all clients/leads are being shown","lastModifiedDate":"2023-10-26"},{"lineNumber":693,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":694,"author":{"gitId":"tiif"},"content":"   1. Prerequisites: List all clients/leads using the `list` command. Multiple clients/leads in the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":695,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":696,"author":{"gitId":"tiif"},"content":"   1. Test case: `edit 1 n/Alan`\u003cbr\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":697,"author":{"gitId":"tiif"},"content":"      Expected: The name of first contact is edited to ``Alan``. Details of the edited contact shown in the status message.","lastModifiedDate":"2023-10-26"},{"lineNumber":698,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":699,"author":{"gitId":"tiif"},"content":"   1. Test case: `edit 1`\u003cbr\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":700,"author":{"gitId":"tiif"},"content":"      Expected: No client/lead is edited. Error details shown in the status message.","lastModifiedDate":"2023-10-26"},{"lineNumber":701,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":702,"author":{"gitId":"tiif"},"content":"   1. Test case: `edit 0`\u003cbr\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":703,"author":{"gitId":"tiif"},"content":"      Expected: No client/lead is edited. Error details shown in the status message.","lastModifiedDate":"2023-10-26"},{"lineNumber":704,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":705,"author":{"gitId":"tiif"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2023-10-26"},{"lineNumber":706,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":707,"author":{"gitId":"tiif"},"content":"### Deleting a client/lead","lastModifiedDate":"2023-10-26"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":709,"author":{"gitId":"tiif"},"content":"1. Deleting a client/lead while all clients/leads are being shown","lastModifiedDate":"2023-10-26"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":711,"author":{"gitId":"tiif"},"content":"   1. Prerequisites: List all clients/leads using the `list` command. Multiple clients/leads in the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"tiif"},"content":"      Expected: No client/lead is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-10-26"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"yuxunn"},"content":"### Viewing a person","lastModifiedDate":"2023-10-26"},{"lineNumber":725,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":726,"author":{"gitId":"yuxunn"},"content":"1. Viewing a person while all persons are being shown","lastModifiedDate":"2023-10-26"},{"lineNumber":727,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":728,"author":{"gitId":"yuxunn"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":729,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":730,"author":{"gitId":"yuxunn"},"content":"    1. Test case: `view 0`\u003cbr\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":731,"author":{"gitId":"yuxunn"},"content":"       Expected: Entire list remains displayed. Error details shown in status message. Status bar remains the same.","lastModifiedDate":"2023-10-26"},{"lineNumber":732,"author":{"gitId":"yuxunn"},"content":"    1. Other incorrect view commands to try: `view`, `view x` (where x is larger than the list size, or x is a negative index)\u003cbr\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":733,"author":{"gitId":"yuxunn"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2023-10-26"},{"lineNumber":734,"author":{"gitId":"yuxunn"},"content":"    1. Test case: `view 1`, `view x` (where x is an integer within the size of the list) \u003cbr\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":735,"author":{"gitId":"yuxunn"},"content":"       Expected: The full details of the first person is displayed. Success message: `Viewed Person Successfully`","lastModifiedDate":"2023-10-26"},{"lineNumber":736,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":737,"author":{"gitId":"LicongHuang"},"content":"### Converting a lead to client","lastModifiedDate":"2023-10-29"},{"lineNumber":738,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":739,"author":{"gitId":"LicongHuang"},"content":"1. Converting a lead to a client","lastModifiedDate":"2023-10-29"},{"lineNumber":740,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":741,"author":{"gitId":"LicongHuang"},"content":"   1. Prerequisites: At least one client shown on the interface.","lastModifiedDate":"2023-10-29"},{"lineNumber":742,"author":{"gitId":"LicongHuang"},"content":"   2. Test case: `converttoclient 1`\u003cbr\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":743,"author":{"gitId":"LicongHuang"},"content":"      Expected: Person changes from a lead to a client","lastModifiedDate":"2023-10-29"},{"lineNumber":744,"author":{"gitId":"LicongHuang"},"content":"   3. Test case: `converttoclient 0`\u003cbr\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":745,"author":{"gitId":"LicongHuang"},"content":"      Expected: No change to any information. Error details shown in status message. Status bar remains the same.","lastModifiedDate":"2023-10-29"},{"lineNumber":746,"author":{"gitId":"LicongHuang"},"content":"   4. Other incorrect convert commands to try: `converttoclient`, `converttoclient x` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":747,"author":{"gitId":"LicongHuang"},"content":"      Expected: Similar to previous","lastModifiedDate":"2023-10-29"},{"lineNumber":748,"author":{"gitId":"LicongHuang"},"content":"### Converting a client to lead","lastModifiedDate":"2023-10-29"},{"lineNumber":749,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":750,"author":{"gitId":"LicongHuang"},"content":"1. Similar to converting a lead to client, but for client to lead","lastModifiedDate":"2023-10-29"},{"lineNumber":751,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":752,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":753,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tiif":56,"jx124":17,"yuxunn":25,"garylow2001":65,"-":359,"LicongHuang":237}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"# Welcome to D.A.V.E. (**D**’financial **A**d**V**isor **E**xpert)","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"*Manage your leads and clients information effortlessly through D.A.V.E. to gain an edge in your FA journey!*","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"D.A.V.E. is a leads and clients management tool for student financial advisors specifically in NUS, but can be used for all student financial advisors.","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"Here’s a quick overview of D.A.V.E.’s features","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"- Store and edit information of your leads and clients","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"- Convert successful leads into clients","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"- Manage clients’ policies","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"- Delete policies and leads","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"- Reminders such as upcoming meetings with leads/clients","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"# Table of Contents","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"- [Glossary](#Glossary)","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"- [Tutorial for new users](#D.A.V.E.-Tutorial-for-new-users)","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"- [Features](#Features)","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"# Glossary","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"## Definitions","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"Here are some descriptions of the words we use throughout the User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"| Term | Definition |","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"| --- | --- |","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"| Command | An input from the user that tells D.A.V.E. to perform an action (e.g. add a client). |","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"| GUI | Graphical User Interface (GUI) refers to the visual display of D.A.V.E that users can see. |","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"| CLI | Command Line Interface (CLI) represents a text-based user interface to interact with the application. |","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"# D.A.V.E. Tutorial for new users","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"1. Ensure you have Java `11` or above installed in your computer.","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"2. Download the latest `DAVE.jar` from here.","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"3. Copy the file to the folder you want to use as the *home folder* for D.A.V.E.","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"4. Double-click `DAVE.jar` to start the app.","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"# Features","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"![Ui1](images/Ui1.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"### Add lead","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"- What it does: Add potential leads and their basic information, e.g. name, age, year of study, major, etc.","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"- Command format: `addlead n/NAME p/PHONE e/EMAIL a/ADDRESS [t/TAG]...`.","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"- Example usage: `Example: addlead n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/classmate`.","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"- Acceptable values for each parameter:","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"    - `NAME`: can contain any character.","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"    - `PHONE`: any valid 8-digit integer.","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"    - `EMAIL`: a string of the format `local-part@domain`","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"    - `ADDRESS`: can contain any character.","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"    - `TAG`: can contain any character.","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"- Precise expected outputs when the command succeeds:","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"garylow2001"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"    \u003cimg src\u003d\"./images/addlead.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"    \u003cp\u003eAfter using addlead command\u003c/p\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"garylow2001"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"garylow2001"},"content":"- Precise expected outputs when the command fails:","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"garylow2001"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"garylow2001"},"content":"Invalid command format!","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"garylow2001"},"content":"addlead: Adds a lead to the address book. Parameters: n/NAME p/PHONE e/EMAIL a/ADDRESS [t/TAG]...","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"garylow2001"},"content":"Example: addlead n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/classmate","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"garylow2001"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"tiif"},"content":"### Add Lead with Key Milestone Information [Coming soon]","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"tiif"},"content":"- What it does: Add potential leads and their basic information, e.g. name, age, year of study, major, etc.","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"tiif"},"content":"- Command format: `addlead n/NAME p/PHONE e/EMAIL a/ADDRESS k/DATE [t/TAG]...`.","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"tiif"},"content":"- Example usage: `Example: addlead n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 k/2022-12-01 t/classmate`.","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"tiif"},"content":"- Acceptable values for each parameter:","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"tiif"},"content":"    - `NAME`: can contain any character.","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"tiif"},"content":"    - `PHONE`: any valid 8-digit integer.","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"tiif"},"content":"    - `EMAIL`: a string of the format `local-part@domain`","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"tiif"},"content":"    - `ADDRESS`: can contain any character.","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"tiif"},"content":"    - `DATE`: only contains date in the format of ``YYYY-MM-DD``","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"tiif"},"content":"    - `TAG`: can contain any character.","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"garylow2001"},"content":"### Add Client","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"garylow2001"},"content":"- What it does: Add potential clients and their basic information, e.g. name, age, year of study, major, etc.","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"garylow2001"},"content":"- Command format: `addclient n/NAME p/PHONE e/EMAIL a/ADDRESS [t/TAG]...`.","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"garylow2001"},"content":"- Example usage: `Example: addclient n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/classmate`.","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"garylow2001"},"content":"- Acceptable values for each parameter:","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"garylow2001"},"content":"  - `NAME`: can contain any character.","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"garylow2001"},"content":"  - `PHONE`: any valid 8-digit integer.","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"garylow2001"},"content":"  - `EMAIL`: a string of the format `local-part@domain`","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"garylow2001"},"content":"  - `ADDRESS`: can contain any character.","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"garylow2001"},"content":"  - `TAG`: can contain any character.","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"garylow2001"},"content":"- Precise expected outputs when the command succeeds:","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"garylow2001"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"garylow2001"},"content":"    \u003cimg src\u003d\"./images/addclient.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"garylow2001"},"content":"    \u003cp\u003eAfter using addclient command\u003c/p\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"garylow2001"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"garylow2001"},"content":"- Precise expected outputs when the command fails:","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"garylow2001"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"garylow2001"},"content":"Invalid command format!","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"garylow2001"},"content":"addclient: Adds a client to the address book. Parameters: n/NAME p/PHONE e/EMAIL a/ADDRESS [t/TAG]...","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"garylow2001"},"content":"Example: addclient n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/classmate","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"garylow2001"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"LicongHuang"},"content":"### View all clients","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"garylow2001"},"content":"- What it does: View all clients you have stored, including their basic information and index in the list of clients, e.g. id, name, age, gender, occupation, etc.","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"LicongHuang"},"content":"- Command: `listclient`.","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"LicongHuang"},"content":"- Precise expected outputs when the command succeeds:","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"LicongHuang"},"content":"In output section of the","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"LicongHuang"},"content":"`List of all clients`","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"LicongHuang"},"content":"\u003ch4\u003eExamples of usage:\u003c/h4\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"LicongHuang"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"LicongHuang"},"content":"    \u003cimg src\u003d\"./images/List.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"LicongHuang"},"content":"    \u003cp\u003eList of leads and clients\u003c/p\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"LicongHuang"},"content":"    \u003cimg src\u003d\"./images/Listclient.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"LicongHuang"},"content":"    \u003cp\u003eAfter using listclient command\u003c/p\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"LicongHuang"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"LicongHuang"},"content":"### View all leads","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"garylow2001"},"content":"- What it does: View all leads you have stored, including their basic information and index in the list of leads, e.g. id, name, age, gender, occupation, etc.","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"LicongHuang"},"content":"- Command: `listlead`.","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"garylow2001"},"content":"- Precise expected outputs when the command succeeds:","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"LicongHuang"},"content":"`List of all leads`","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"LicongHuang"},"content":"\u003ch4\u003eExample usage:\u003ch4\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"LicongHuang"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"LicongHuang"},"content":"    \u003cimg src\u003d\"./images/List.png\" width \u003d \"500\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"LicongHuang"},"content":"    \u003cp\u003eList of leads and clients\u003c/p\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"LicongHuang"},"content":"    \u003cimg src\u003d\"./images/Listlead.png\" width \u003d \"500\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"LicongHuang"},"content":"    \u003cp\u003eAfter using listlead command\u003c/p\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"LicongHuang"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"yuxunn"},"content":"### View Specific Person","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"yuxunn"},"content":"- What it does: View a specific person that you have stored, including their basic information and another relevant lead/client","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"yuxunn"},"content":"  details.","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"yuxunn"},"content":"- Command: `view INDEX`.","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"yuxunn"},"content":"- Example usage: `view 1`.","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"yuxunn"},"content":"- Acceptable values for `INDEX` parameter:","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"yuxunn"},"content":"  - Must be an integer from `1` to the last index of the main list.","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"yuxunn"},"content":"- Precise expected output when the command succeeds:","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"yuxunn"},"content":"`Viewed Person Successfully`","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"yuxunn"},"content":"- Precise expected output when command fails:","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"yuxunn"},"content":"`The person index provided is invalid`","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"yuxunn"},"content":"\u003ch4\u003eExample usage:\u003ch4\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"yuxunn"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"yuxunn"},"content":"    \u003cimg src\u003d\"./images/ViewExample.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"yuxunn"},"content":"    \u003cp\u003eAfter using View Command on a Lead\u003c/p\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"yuxunn"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"yuxunn"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"yuxunn"},"content":"    \u003cimg src\u003d\"./images/ViewExampleClient.png\" width \u003d \"500\"/\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"yuxunn"},"content":"    \u003cp\u003eAfter using View Command on a Client\u003c/p\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"yuxunn"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":170,"author":{"gitId":"garylow2001"},"content":"### Delete [Coming soon]","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"garylow2001"},"content":"- What it does: Deletes a lead from your list of leads.","lastModifiedDate":"2023-10-05"},{"lineNumber":173,"author":{"gitId":"garylow2001"},"content":"- Command format: `delete INDEX`.","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"garylow2001"},"content":"- Example usage: `delete 1`.","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"garylow2001"},"content":"- Acceptable values for `INDEX` parameter:","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"garylow2001"},"content":"    - Must be an integer from `1` to the last index of the leads list","lastModifiedDate":"2023-10-05"},{"lineNumber":177,"author":{"gitId":"garylow2001"},"content":"- Precise expected outputs when the command succeeds:","lastModifiedDate":"2023-10-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"garylow2001"},"content":"`Lead deleted: \u003clead details\u003e`","lastModifiedDate":"2023-10-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"garylow2001"},"content":"- Precise expected outputs when the command fails:","lastModifiedDate":"2023-10-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"garylow2001"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"garylow2001"},"content":"Invalid command format!","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"garylow2001"},"content":"delete: Deletes the person identified by the index number used in the displayed person list.","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"garylow2001"},"content":"Parameters: INDEX (must be a positive integer)","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"garylow2001"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"garylow2001"},"content":"### Add meeting time [Coming soon]","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"garylow2001"},"content":"- What it does: Adds a meeting time for a lead","lastModifiedDate":"2023-10-05"},{"lineNumber":192,"author":{"gitId":"garylow2001"},"content":"- Command format: `addmeetingtime INDEX m/MEETING_TIME`","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"garylow2001"},"content":"- Example usage: `addmeetingtime 1 m/12/12/2020 12:00`","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"garylow2001"},"content":"- Acceptable values for each parameter:","lastModifiedDate":"2023-10-05"},{"lineNumber":195,"author":{"gitId":"garylow2001"},"content":"    - `INDEX`: Any integer from `1` to the last index of the leads list.","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"garylow2001"},"content":"    - `MEETING_TIME`: A string of format `dd/MM/yyyy HH:mm`.","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"garylow2001"},"content":"- Precise expected outputs when the command succeeds:","lastModifiedDate":"2023-10-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"garylow2001"},"content":"`Meeting time added to \u003clead/client\u003e : \u003cmeeting datetime\u003e`","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"garylow2001"},"content":"- Precise expected outputs when the command fails:","lastModifiedDate":"2023-10-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"garylow2001"},"content":"`Meeting time failed to add. Please enter a valid lead id or meeting time`","lastModifiedDate":"2023-10-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":205,"author":{"gitId":"garylow2001"},"content":"### Delete meeting time for lead [Coming soon]","lastModifiedDate":"2023-10-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"garylow2001"},"content":"- What it does: Delete a meeting time for meetings that has been cancelled or postponed.","lastModifiedDate":"2023-10-05"},{"lineNumber":208,"author":{"gitId":"garylow2001"},"content":"- Command format: `deletemeeting --lead \u003clead_id\u003e --id \u003cmeeting_time_id\u003e`","lastModifiedDate":"2023-10-05"},{"lineNumber":209,"author":{"gitId":"garylow2001"},"content":"- Example usage: `deletemeeting --lead 1 --id 1`","lastModifiedDate":"2023-10-05"},{"lineNumber":210,"author":{"gitId":"garylow2001"},"content":"- Acceptable values for each parameter:","lastModifiedDate":"2023-10-05"},{"lineNumber":211,"author":{"gitId":"garylow2001"},"content":"    - `lead`: Any integer from `1` to the last index of the leads list","lastModifiedDate":"2023-10-05"},{"lineNumber":212,"author":{"gitId":"garylow2001"},"content":"    - `id`: Any integer from `1` to the last index of the list","lastModifiedDate":"2023-10-05"},{"lineNumber":213,"author":{"gitId":"garylow2001"},"content":"- Precise expected outputs when the command succeeds:","lastModifiedDate":"2023-10-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"garylow2001"},"content":"`Meeting time deleted from \u003clead\u003e : \u003cmeeting datetime\u003e`","lastModifiedDate":"2023-10-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"garylow2001"},"content":"- Precise expected outputs when the command fails:","lastModifiedDate":"2023-10-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"garylow2001"},"content":"`Meeting time failed to be deleted. Please enter a valid lead id or meeting time`","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"tiif":11,"yuxunn":23,"garylow2001":109,"-":54,"LicongHuang":22}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eD.A.V.E.\u003c/a\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"tiif"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S1-CS2103T-F08-2/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"tiif":1,"-":65}},{"path":"docs/diagrams/AddClientActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"skin rose","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":":User executes command;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":":AddressBookParser parses command;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"if () then ([valid addclient command string])","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"    :Create new client;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"    :Add client to persons in AddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"    stop","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"else ([else])","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"    :Display error message;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"    stop","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"garylow2001":19}},{"path":"docs/diagrams/AddClientSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"participant \"u:AddClientCommand\" as AddClientCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"[-\u003e LogicManager : execute(addclient n/...)","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(addclient n/...)","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"create AddClientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"AddressBookParser -\u003e AddClientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"activate AddClientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"AddClientCommand --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"deactivate AddClientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"LogicManager -\u003e AddClientCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"activate AddClientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"AddClientCommand -\u003e Model : addClient()","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"Model -\u003e AddressBook : addClient()","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"activate AddressBook","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"Model --\u003e AddClientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"AddClientCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"deactivate AddClientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"AddClientCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"destroy AddClientCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"garylow2001":50}},{"path":"docs/diagrams/AddMeetingTimeActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"skin rose","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":":User executes addmeeting command;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":":AddressBookParser parses command;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"if () then ([valid addmeeting command string])","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"    :Finds Person in AddressBook to update;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"    :Creates updatedPerson with new meeting added;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"    :Set Person to updatedPerson in AddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"    stop","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"else ([else])","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"    :Display error message;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"    stop","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"garylow2001":20}},{"path":"docs/diagrams/AddMeetingTimeSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"participant \"u:AddMeetingTime\" as AddMeetingTime LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"participant \"updatedPerson:Person\" as Person MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"[-\u003e LogicManager : execute(addmeeting ...)","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(addmeeting ...)","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"create AddMeetingTime","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"AddressBookParser -\u003e AddMeetingTime","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"activate AddMeetingTime","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"AddMeetingTime --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"deactivate AddMeetingTime","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"LogicManager -\u003e AddMeetingTime : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"activate AddMeetingTime","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"AddMeetingTime -\u003e Model : addMeeting()","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"Model -\u003e AddressBook : addMeeting()","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"activate AddressBook","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"create Person","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"AddressBook -\u003e Person","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"activate Person","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"Person --\u003e AddressBook","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"deactivate Person","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"AddressBook --\u003e AddressBook : setPerson(personToUpdate, updatedPerson)","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"deactivate AddressBook","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"Model --\u003e AddMeetingTime","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"garylow2001"},"content":"AddMeetingTime --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"deactivate AddMeetingTime","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"AddMeetingTime -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"garylow2001"},"content":"destroy AddMeetingTime","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"garylow2001"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"garylow2001"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"garylow2001"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"garylow2001":64}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"Class \"{abstract}\\nPerson\" as Person","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"Class Type","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":41,"author":{"gitId":"jx124"},"content":"UniquePersonList --\u003e \"~* all\" Person : \"           \"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"jx124"},"content":"Person *--\u003e Type","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jx124":5,"-":52}},{"path":"docs/diagrams/PersonClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"Package \"Person Classes\" as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"Class \"{abstract}\\nPerson\" as Person","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"Class Lead","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"Class Client","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"HiddenOutside ..\u003e Person","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"Lead -up-|\u003e Person","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"Client -up-|\u003e Person","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jx124":17}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"!pragma layout smetana","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"Class ViewWindow","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"yuxunn"},"content":"MainWindow --\u003e \"0..1\" ViewWindow","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"yuxunn"},"content":"ViewWindow --|\u003e UiPart","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"yuxunn":4,"-":60}},{"path":"docs/diagrams/ViewSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"yuxunn"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"yuxunn"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"yuxunn"},"content":"participant \":ViewCommandParser\" as ViewCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"yuxunn"},"content":"participant \"d:ViewCommand\" as ViewCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"yuxunn"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"yuxunn"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"yuxunn"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"yuxunn"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"yuxunn"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"[-\u003e LogicManager : execute(\"view 1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"yuxunn"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"view 1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"yuxunn"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"yuxunn"},"content":"create ViewCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"yuxunn"},"content":"AddressBookParser -\u003e ViewCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"yuxunn"},"content":"activate ViewCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"yuxunn"},"content":"ViewCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"yuxunn"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"yuxunn"},"content":"AddressBookParser -\u003e ViewCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"yuxunn"},"content":"activate ViewCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"yuxunn"},"content":"create ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"yuxunn"},"content":"ViewCommandParser -\u003e ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"yuxunn"},"content":"activate ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"yuxunn"},"content":"ViewCommand --\u003e ViewCommandParser : v","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"yuxunn"},"content":"deactivate ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"yuxunn"},"content":"ViewCommandParser --\u003e AddressBookParser : v","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"yuxunn"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"yuxunn"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"yuxunn"},"content":"ViewCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"yuxunn"},"content":"destroy ViewCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"yuxunn"},"content":"AddressBookParser --\u003e LogicManager : v","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"yuxunn"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"yuxunn"},"content":"LogicManager -\u003e ViewCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"yuxunn"},"content":"activate ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"yuxunn"},"content":"ViewCommand -\u003e Model : view(person)","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"yuxunn"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"yuxunn"},"content":"Model --\u003e ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"yuxunn"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"yuxunn"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"yuxunn"},"content":"ViewCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"yuxunn"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"yuxunn"},"content":"CommandResult --\u003e ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"yuxunn"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"yuxunn"},"content":"ViewCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"yuxunn"},"content":"deactivate ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"yuxunn"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"yuxunn"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"yuxunn"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"yuxunn":70}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"tiif"},"content":"# DAVE","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"tiif"},"content":"**DAVE is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"tiif"},"content":"* If you are interested in using DAVE, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"tiif"},"content":"* If you are interested about developing DAVE, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tiif":4,"-":17}},{"path":"docs/team/garylow2001.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"layout: default.md","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"title: \"Gary\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"### Project: D.A.V.E.","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"D.A.V.E. is a leads and clients management tool for student financial advisors specifically in NUS, but can be used for all student financial advisors.","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"    * to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"    * to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"* **Project management**:","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"    * Managed release `v1.1` on GitHub","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"    * to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"    * User Guide:","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"        * Added documentation for the features `view all leads`, `add meeting time for lead` and `delete meeting time for lead`","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"        * to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"* **Community**:","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"    * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"* **Tools**:","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"    * to be added soon","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"garylow2001":35}},{"path":"docs/team/jx124.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"\u003ch1\u003e Neo Jie Xiang\u0027s Project Portfolio Page\u003c/h1\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"\u003ch3\u003eProject: D.A.V.E.\u003c/h3\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"D.A.V.E. -","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"- **New Feature**:","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"  - to be added soon.","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"- **Code contributed**:","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"  - to be added soon.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"- **Project Management**:","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"  - to be added soon.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"- **Enhancement to existing features**:","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"  - to be added soon.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"- **Documentation**:","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"  - to be added soon.","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"- **Community**:","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"  - to be added soon.","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"- **Tools**:","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"  - to be added soon.","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"jx124":23}},{"path":"docs/team/liconghuang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"LicongHuang"},"content":"\u003ch1\u003e Huang Licong\u0027s Project Portfolio Page\u003c/h1\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"LicongHuang"},"content":"\u003ch3\u003eProject: D.A.V.E.\u003c/h3\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"LicongHuang"},"content":"D.A.V.E. -","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"LicongHuang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"LicongHuang"},"content":" - New Feature: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"LicongHuang"},"content":" - Code contributed: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"LicongHuang"},"content":" - Project Management: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"LicongHuang"},"content":" - Enhancement to existing features: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"LicongHuang"},"content":" - Documentation: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"LicongHuang"},"content":" - Community: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"LicongHuang"},"content":" - Tools: to be added soon","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"LicongHuang":16}},{"path":"docs/team/tiif.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tiif"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"tiif"},"content":"  layout: default.md","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"tiif"},"content":"  title: \"Tiffany\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"tiif"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"tiif"},"content":"### Project: D.A.V.E.","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"tiif"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"tiif"},"content":"- **New Feature**:","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"tiif"},"content":"  - to be added soon.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"tiif"},"content":"- **Code contributed**:","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"tiif"},"content":"  - to be added soon.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"tiif"},"content":"- **Project Management**:","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"tiif"},"content":"  - to be added soon.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"tiif"},"content":"- **Enhancement to existing features**:","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"tiif"},"content":"  - to be added soon.","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"tiif"},"content":"- **Documentation**:","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"tiif"},"content":"  - to be added soon.","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"tiif"},"content":"- **Community**:","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"tiif"},"content":"  - to be added soon.","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"tiif"},"content":"- **Tools**:","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"tiif"},"content":"  - to be added soon.","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"tiif":24}},{"path":"docs/team/yuxunn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"### Yu Xun\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"### Project: D.A.V.E.","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"D.A.V.E. is a leads and clients management tool for student financial advisors specifically in NUS, but can be used for all student financial advisors.","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"yuxunn"},"content":"* New feature","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"yuxunn"},"content":"* New feature","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"yuxunn"},"content":"**Code Contributed:** [yuxun\u0027s reposense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dyuxunn\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dyuxunn\u0026tabRepo\u003dAY2324S1-CS2103T-F08-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"yuxunn"},"content":"**Project management:**","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"yuxunn"},"content":"**Enhancements to existing features:**","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"yuxunn"},"content":"**Documentation**","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"**Community**","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"**Tools**","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"yuxunn":19}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"tiif"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, true);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tiif":1,"-":185}},{"path":"src/main/java/seedu/address/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"jx124"},"content":"     * Adds an item to a set and returns that set.","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"jx124"},"content":"    public static \u003cT\u003e Set\u003cT\u003e addItemToSet(Set\u003cT\u003e set, T item) {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"jx124"},"content":"        Set\u003cT\u003e copy \u003d new HashSet\u003cT\u003e(set);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"jx124"},"content":"        copy.add(item);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"jx124"},"content":"        return copy;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jx124":11,"-":35}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"                .append(\"; Meeting Time: \")","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"                .append(person.getMeetingTimeString())","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"garylow2001":2,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":" * Adds a client to the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"public class AddClientCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"    public static final String COMMAND_WORD \u003d \"addclient\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to the address book. \"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_MEETING_TIME + \"MEETING_TIME \"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_MEETING_TIME + \"10/10/2023 14:30 \"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_TAG + \"classmate\";","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the address book\";","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"    private final Client toAdd;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"     * Creates an AddClientCommand to add the specified {@code Client}","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"    public AddClientCommand(Client client) {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"        requireNonNull(client);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"        this.toAdd \u003d client;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"garylow2001"},"content":"        model.addClient(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"garylow2001"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"garylow2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"garylow2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"garylow2001"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"garylow2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"garylow2001"},"content":"        if (!(other instanceof AddClientCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"garylow2001"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"garylow2001"},"content":"        AddClientCommand otherAddClientCommand \u003d (AddClientCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"garylow2001"},"content":"        return toAdd.equals(otherAddClientCommand.toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"garylow2001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"garylow2001"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"garylow2001"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"garylow2001"},"content":"                .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"garylow2001":87}},{"path":"src/main/java/seedu/address/logic/commands/AddLeadCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":" * Adds a lead to the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"public class AddLeadCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"    public static final String COMMAND_WORD \u003d \"addlead\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a lead to the address book. \"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_MEETING_TIME + \"MEETING_TIME \"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_MEETING_TIME + \"10/10/2023 14:30 \"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"            + PREFIX_TAG + \"classmate\";","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New lead added: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"    public static final String MESSAGE_DUPLICATE_LEAD \u003d \"This lead already exists in the address book\";","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"    private final Lead toAdd;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"     * Creates an AddLeadCommand to add the specified {@code Lead}","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"    public AddLeadCommand(Lead lead) {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"        requireNonNull(lead);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"        this.toAdd \u003d lead;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_LEAD);","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"garylow2001"},"content":"        model.addLead(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"garylow2001"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"garylow2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"garylow2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"garylow2001"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"garylow2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"garylow2001"},"content":"        if (!(other instanceof AddLeadCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"garylow2001"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"garylow2001"},"content":"        AddLeadCommand otherAddLeadCommand \u003d (AddLeadCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"garylow2001"},"content":"        return toAdd.equals(otherAddLeadCommand.toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"garylow2001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"garylow2001"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"garylow2001"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"garylow2001"},"content":"                .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"garylow2001":87}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"yuxunn"},"content":"    private String state;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"yuxunn"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, String state) {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"yuxunn"},"content":"        this.state \u003d state;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"yuxunn"},"content":"        this(feedbackToUser, false, false, \"null\");","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"yuxunn"},"content":"    public String checkState() {","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"yuxunn"},"content":"        return state;","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yuxunn":9,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/ConvertClientToLeadCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LicongHuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"LicongHuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"LicongHuang"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"LicongHuang"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"LicongHuang"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.MeetingTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"LicongHuang"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"LicongHuang"},"content":" * Converts a Client to a Lead in the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"LicongHuang"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"LicongHuang"},"content":"public class ConvertClientToLeadCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"LicongHuang"},"content":"    public static final String COMMAND_WORD \u003d \"converttolead\";","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"LicongHuang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Converts a client to a lead by the index \"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"LicongHuang"},"content":"            + \"number used in the displayed person list. \\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"LicongHuang"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"LicongHuang"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"LicongHuang"},"content":"    public static final String MESSAGE_CONVERT_SUCCESS \u003d \"Converted Client to Lead: %1$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"LicongHuang"},"content":"    public static final String MESSAGE_CONVERT_FAILURE \u003d \"The person at the specified index is not a Client.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"LicongHuang"},"content":"    private final Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"LicongHuang"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"LicongHuang"},"content":"     * Creates an ConvertClientToLeadCommand to convert the specified {@code Client} to {@code Lead}","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"LicongHuang"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"LicongHuang"},"content":"    public ConvertClientToLeadCommand(Index index) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"LicongHuang"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"LicongHuang"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"LicongHuang"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"LicongHuang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"LicongHuang"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"LicongHuang"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"LicongHuang"},"content":"        System.out.println(lastShownList);","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"LicongHuang"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"LicongHuang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"LicongHuang"},"content":"        Person personToConvert \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"LicongHuang"},"content":"        if (!(personToConvert instanceof Client)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"LicongHuang"},"content":"            throw new CommandException(\"The person at the specified index is not a Client.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"LicongHuang"},"content":"        Name name \u003d personToConvert.getName();","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"LicongHuang"},"content":"        Phone phone \u003d personToConvert.getPhone();","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"LicongHuang"},"content":"        Email email \u003d personToConvert.getEmail();","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"LicongHuang"},"content":"        Address address \u003d personToConvert.getAddress();","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"LicongHuang"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(personToConvert.getTags());","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"garylow2001"},"content":"        Optional\u003cMeetingTime\u003e meetingTime \u003d personToConvert.getMeetingTime();","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"LicongHuang"},"content":"        // TODO: Add more fields from client to lead","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"LicongHuang"},"content":"        Lead convertedLead \u003d new Lead(name, phone, email, address, meetingTime, tags);","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"LicongHuang"},"content":"        model.setPerson(personToConvert, convertedLead);","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"LicongHuang"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"LicongHuang"},"content":"        return new CommandResult(String.format(MESSAGE_CONVERT_SUCCESS, Messages.format(convertedLead)));","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"LicongHuang"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"LicongHuang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"LicongHuang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"LicongHuang"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"LicongHuang"},"content":"        if (!(other instanceof ConvertClientToLeadCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"LicongHuang"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"LicongHuang"},"content":"        ConvertClientToLeadCommand otherConvertCommand \u003d (ConvertClientToLeadCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"LicongHuang"},"content":"        return index.equals(otherConvertCommand.index);","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"LicongHuang"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"garylow2001":2,"LicongHuang":93}},{"path":"src/main/java/seedu/address/logic/commands/ConvertLeadToClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LicongHuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"LicongHuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"LicongHuang"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"LicongHuang"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"LicongHuang"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.MeetingTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"LicongHuang"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"LicongHuang"},"content":" * Converts a Lead to a Client in the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"LicongHuang"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"LicongHuang"},"content":"public class ConvertLeadToClientCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"LicongHuang"},"content":"    public static final String COMMAND_WORD \u003d \"converttoclient\";","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"LicongHuang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Converts a lead to a client by the index \"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"LicongHuang"},"content":"            + \"number used in the displayed person list. \\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"LicongHuang"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"LicongHuang"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"LicongHuang"},"content":"    public static final String MESSAGE_CONVERT_SUCCESS \u003d \"Converted Lead to Client: %1$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"LicongHuang"},"content":"    public static final String MESSAGE_NOT_LEAD \u003d \"The person at the specified index is not a Lead.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"LicongHuang"},"content":"    private final Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"LicongHuang"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"LicongHuang"},"content":"     * Creates an ConvertLeadToClientCommand to convert the specified {@code Lead} to {@code Client}","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"LicongHuang"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"LicongHuang"},"content":"    public ConvertLeadToClientCommand(Index index) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"LicongHuang"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"LicongHuang"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"LicongHuang"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"LicongHuang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"LicongHuang"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"LicongHuang"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"LicongHuang"},"content":"        System.out.println(lastShownList);","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"LicongHuang"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"LicongHuang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"LicongHuang"},"content":"        Person personToConvert \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"LicongHuang"},"content":"        if (!(personToConvert instanceof Lead)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"LicongHuang"},"content":"            throw new CommandException(\"The person at the specified index is not a Lead.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"LicongHuang"},"content":"        Name name \u003d personToConvert.getName();","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"LicongHuang"},"content":"        Phone phone \u003d personToConvert.getPhone();","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"LicongHuang"},"content":"        Email email \u003d personToConvert.getEmail();","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"LicongHuang"},"content":"        Address address \u003d personToConvert.getAddress();","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"LicongHuang"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(personToConvert.getTags());","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"garylow2001"},"content":"        Optional\u003cMeetingTime\u003e meetingTime \u003d personToConvert.getMeetingTime();","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"LicongHuang"},"content":"        // TODO: Add more fields from lead to client","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"LicongHuang"},"content":"        Client convertedClient \u003d new Client(name, phone, email, address, meetingTime, tags);","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"LicongHuang"},"content":"        model.setPerson(personToConvert, convertedClient);","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"LicongHuang"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"LicongHuang"},"content":"        return new CommandResult(String.format(MESSAGE_CONVERT_SUCCESS, Messages.format(convertedClient)));","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"LicongHuang"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"LicongHuang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"LicongHuang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"LicongHuang"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"LicongHuang"},"content":"        if (!(other instanceof ConvertLeadToClientCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"LicongHuang"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"LicongHuang"},"content":"        ConvertLeadToClientCommand otherConvertCommand \u003d (ConvertLeadToClientCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"LicongHuang"},"content":"        return index.equals(otherConvertCommand.index);","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"LicongHuang"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"garylow2001":2,"LicongHuang":91}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TIME;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.MeetingTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"            + \"[\" + PREFIX_MEETING_TIME + \"MEETING_TIME] \"","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"jx124"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"jx124"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"jx124"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"jx124"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"jx124"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"jx124"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"jx124"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"jx124"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"garylow2001"},"content":"        Optional\u003cMeetingTime\u003e updatedMeetingTime \u003d editPersonDescriptor.getMeetingTime()","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"garylow2001"},"content":"                .or(personToEdit::getMeetingTime);","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"jx124"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"jx124"},"content":"        if (personToEdit.isClient()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"garylow2001"},"content":"            return new Client(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedMeetingTime, updatedTags);","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"jx124"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"garylow2001"},"content":"            return new Lead(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedMeetingTime, updatedTags);","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"garylow2001"},"content":"        private Optional\u003cMeetingTime\u003e meetingTime \u003d Optional.empty();","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"jx124"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"garylow2001"},"content":"            setMeetingTime(toCopy.meetingTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"garylow2001"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags) || meetingTime.isPresent();","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-10-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"garylow2001"},"content":"        public Optional\u003cMeetingTime\u003e getMeetingTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"garylow2001"},"content":"            return meetingTime;","lastModifiedDate":"2023-10-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"garylow2001"},"content":"        public void setMeetingTime(Optional\u003cMeetingTime\u003e meetingTime) {","lastModifiedDate":"2023-10-30"},{"lineNumber":214,"author":{"gitId":"garylow2001"},"content":"            this.meetingTime \u003d meetingTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"jx124"},"content":"        /**","lastModifiedDate":"2023-10-12"},{"lineNumber":227,"author":{"gitId":"jx124"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-10-12"},{"lineNumber":228,"author":{"gitId":"jx124"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-12"},{"lineNumber":229,"author":{"gitId":"jx124"},"content":"         */","lastModifiedDate":"2023-10-12"},{"lineNumber":230,"author":{"gitId":"jx124"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-12"},{"lineNumber":231,"author":{"gitId":"jx124"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-10-12"},{"lineNumber":232,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":233,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":250,"author":{"gitId":"garylow2001"},"content":"                    \u0026\u0026 Objects.equals(meetingTime, otherEditPersonDescriptor.meetingTime)","lastModifiedDate":"2023-10-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":261,"author":{"gitId":"garylow2001"},"content":"                    .add(\"meetingTime\", meetingTime)","lastModifiedDate":"2023-10-30"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"jx124":28,"garylow2001":18,"-":220}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, \"exit\");","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yuxunn":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, \"help\");","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yuxunn":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LicongHuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"LicongHuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"LicongHuang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"LicongHuang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"LicongHuang"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"LicongHuang"},"content":" * Lists all client in the address book to the user.","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"LicongHuang"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"LicongHuang"},"content":"public class ListClientCommand extends Command {","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"LicongHuang"},"content":"    public static final String COMMAND_WORD \u003d \"listclient\";","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"LicongHuang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all clients\";","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"LicongHuang"},"content":"    public static final Predicate\u003cPerson\u003e CLIENT_TAG_PREDICATE \u003d person -\u003e person.isClient();","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"LicongHuang"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ListClientCommand.class);","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"LicongHuang"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"LicongHuang"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"LicongHuang"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"        model.updateFilteredPersonList(CLIENT_TAG_PREDICATE);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"LicongHuang"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"LicongHuang"},"content":"}","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"garylow2001":2,"LicongHuang":31}},{"path":"src/main/java/seedu/address/logic/commands/ListLeadCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LicongHuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"LicongHuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"LicongHuang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"LicongHuang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"LicongHuang"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"LicongHuang"},"content":" * Lists all lead in the address book to the user.","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"LicongHuang"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"LicongHuang"},"content":"public class ListLeadCommand extends Command {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"LicongHuang"},"content":"    public static final String COMMAND_WORD \u003d \"listlead\";","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"LicongHuang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all leads\";","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"LicongHuang"},"content":"    public static final Predicate\u003cPerson\u003e LEAD_TAG_PREDICATE \u003d person -\u003e person.isLead();","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"LicongHuang"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ListLeadCommand.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"LicongHuang"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"LicongHuang"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"LicongHuang"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"        model.updateFilteredPersonList(LEAD_TAG_PREDICATE);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"LicongHuang"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"LicongHuang"},"content":"}","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"garylow2001":2,"LicongHuang":31}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"yuxunn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"yuxunn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"yuxunn"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"yuxunn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"yuxunn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"yuxunn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"yuxunn"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"yuxunn"},"content":" * Views specified person based on input index.","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"yuxunn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Viewed Person Successfully\";","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"yuxunn"},"content":"    private static final String state \u003d \"view\";","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"yuxunn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"yuxunn"},"content":"            + \": Views the person identified by the index number used.\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"yuxunn"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"yuxunn"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"yuxunn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ViewCommand.class);","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"yuxunn"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"yuxunn"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"yuxunn"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"yuxunn"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"yuxunn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"yuxunn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"yuxunn"},"content":"        if (targetIndex.getZeroBased() \u003c 0 || targetIndex.getZeroBased() \u003e\u003d model.getFilteredPersonList().size()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"yuxunn"},"content":"            logger.info(targetIndex.getZeroBased() + \"+ \" + model.getFilteredPersonList().size());","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"yuxunn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"yuxunn"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"yuxunn"},"content":"        model.view(personToView);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"yuxunn"},"content":"        logger.info(\"Target Index: \" + targetIndex.getZeroBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"yuxunn"},"content":"        logger.info(\"Client to View: \" + personToView);","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"yuxunn"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, \"view\");","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"yuxunn"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"yuxunn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"yuxunn"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"yuxunn"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"yuxunn"},"content":"        if (other \u003d\u003d null || getClass() !\u003d other.getClass()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"yuxunn"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"yuxunn"},"content":"        ViewCommand that \u003d (ViewCommand) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"yuxunn"},"content":"        return targetIndex.equals(that.targetIndex);","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"yuxunn"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"yuxunn":70}},{"path":"src/main/java/seedu/address/logic/parser/AddClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.commands.AddClientCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.MeetingTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":" * Parses input arguments and creates a new AddClientCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"public class AddClientCommandParser implements Parser\u003cAddClientCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"     * Parses the given {@code String} of arguments in the context of the AddClientCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"     * and returns an AddClientCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"    public AddClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"                        PREFIX_ADDRESS, PREFIX_MEETING_TIME, PREFIX_TAG);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"                PREFIX_ADDRESS, PREFIX_MEETING_TIME);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"        Optional\u003cMeetingTime\u003e meetingTime \u003d argMultimap.getValue(PREFIX_MEETING_TIME).isPresent()","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"                ? Optional.of(ParserUtil.parseMeetingTime(argMultimap.getValue(PREFIX_MEETING_TIME).get()))","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"                : Optional.empty();","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"        // TODO: temporary fix, implement add Client and Lead commands","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"garylow2001"},"content":"        Client client \u003d new Client(name, phone, email, address, meetingTime, tagList);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"        return new AddClientCommand(client);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"garylow2001"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"garylow2001"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"garylow2001"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"garylow2001"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"garylow2001":70}},{"path":"src/main/java/seedu/address/logic/parser/AddLeadCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.commands.AddLeadCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.MeetingTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":" * Parses input arguments and creates a new AddLeadCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"public class AddLeadCommandParser implements Parser\u003cAddLeadCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"     * Parses the given {@code String} of arguments in the context of the AddLeadCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"     * and returns an AddLeadCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"    public AddLeadCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"                        PREFIX_ADDRESS, PREFIX_MEETING_TIME, PREFIX_TAG);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeadCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"                PREFIX_ADDRESS, PREFIX_MEETING_TIME);","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"        Optional\u003cMeetingTime\u003e meetingTime \u003d argMultimap.getValue(PREFIX_MEETING_TIME).isPresent()","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"                ? Optional.of(ParserUtil.parseMeetingTime(argMultimap.getValue(PREFIX_MEETING_TIME).get()))","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"                : Optional.empty();","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"        // TODO: temporary fix, implement add Client and Lead commands","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"garylow2001"},"content":"        Lead lead \u003d new Lead(name, phone, email, address, meetingTime, tagList);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"        return new AddLeadCommand(lead);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"garylow2001":21,"-":49}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.commands.AddClientCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.commands.AddLeadCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.commands.ConvertClientToLeadCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.commands.ConvertLeadToClientCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.commands.ListClientCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.commands.ListLeadCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"yuxunn"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"garylow2001"},"content":"        case AddClientCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"garylow2001"},"content":"            return new AddClientCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"garylow2001"},"content":"        case AddLeadCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"garylow2001"},"content":"            return new AddLeadCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":89,"author":{"gitId":"LicongHuang"},"content":"        case ListClientCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"LicongHuang"},"content":"            return new ListClientCommand();","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"LicongHuang"},"content":"        case ListLeadCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"LicongHuang"},"content":"            return new ListLeadCommand();","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"yuxunn"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"yuxunn"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"LicongHuang"},"content":"        case ConvertClientToLeadCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"LicongHuang"},"content":"            return new ConvertClientToLeadCommandParser().parse(arguments);","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"LicongHuang"},"content":"        case ConvertLeadToClientCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-29"},{"lineNumber":102,"author":{"gitId":"LicongHuang"},"content":"            return new ConvertLeadToClientCommandParser().parse(arguments);","lastModifiedDate":"2023-10-29"},{"lineNumber":103,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yuxunn":4,"garylow2001":7,"-":83,"LicongHuang":16}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"    public static final Prefix PREFIX_MEETING_TIME \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":"    public static final Prefix PREFIX_NAME_TP \u003d new Prefix(\"--name\");","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"    public static final Prefix PREFIX_PHONE_TP \u003d new Prefix(\"--phone\");","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"    public static final Prefix PREFIX_EMAIL_TP \u003d new Prefix(\"--email\");","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"    public static final Prefix PREFIX_ADDRESS_TP \u003d new Prefix(\"--address\");","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"    public static final Prefix PREFIX_MEETING_TIME_TP \u003d new Prefix(\"--meeting-time\");","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"yuxunn"},"content":"    public static final Prefix PREFIX_TAG_TP \u003d new Prefix(\"--tag\");","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yuxunn":5,"garylow2001":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/ConvertClientToLeadCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LicongHuang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.commands.ConvertClientToLeadCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"LicongHuang"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"LicongHuang"},"content":" * Parses input arguments and creates a new ConvertClientToLeadCommand object","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"LicongHuang"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"LicongHuang"},"content":"public class ConvertClientToLeadCommandParser implements Parser\u003cConvertClientToLeadCommand\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"LicongHuang"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"LicongHuang"},"content":"     * Parses the given {@code String} of arguments in the context of the ConvertClientToLeadCommand","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"LicongHuang"},"content":"     * and returns a ConvertClientToLeadCommand object for execution.","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"LicongHuang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"LicongHuang"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"LicongHuang"},"content":"    public ConvertClientToLeadCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"LicongHuang"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"LicongHuang"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"LicongHuang"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"LicongHuang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ConvertClientToLeadCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"LicongHuang"},"content":"        Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"LicongHuang"},"content":"        return new ConvertClientToLeadCommand(index);","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"LicongHuang"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"LicongHuang":29}},{"path":"src/main/java/seedu/address/logic/parser/ConvertLeadToClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"LicongHuang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.commands.ConvertLeadToClientCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"LicongHuang"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"LicongHuang"},"content":" * Parses input arguments and creates a new ConvertLeadToClientCommand object","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"LicongHuang"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"LicongHuang"},"content":"public class ConvertLeadToClientCommandParser implements Parser\u003cConvertLeadToClientCommand\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"LicongHuang"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"LicongHuang"},"content":"     * Parses the given {@code String} of arguments in the context of the ConvertLeadToClientCommand","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"LicongHuang"},"content":"     * and returns a ConvertLeadToClientCommand object for execution.","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"LicongHuang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"LicongHuang"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"LicongHuang"},"content":"    public ConvertLeadToClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"LicongHuang"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"LicongHuang"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"LicongHuang"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"LicongHuang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ConvertLeadToClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"LicongHuang"},"content":"        Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"LicongHuang"},"content":"        return new ConvertLeadToClientCommand(index);","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"LicongHuang"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"LicongHuang":32}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TIME;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"                        PREFIX_ADDRESS, PREFIX_MEETING_TIME, PREFIX_TAG);","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"                PREFIX_MEETING_TIME, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"garylow2001"},"content":"        if (argMultimap.getValue(PREFIX_MEETING_TIME).isPresent()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"garylow2001"},"content":"            editPersonDescriptor.setMeetingTime(","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"garylow2001"},"content":"                    Optional.of(ParserUtil.parseMeetingTime(argMultimap.getValue(PREFIX_MEETING_TIME).get())));","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"garylow2001":9,"-":83}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.MeetingTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"garylow2001"},"content":"     * Parses a {@code String meetingTime} into a {@code MeetingTime}.","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"garylow2001"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"garylow2001"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"garylow2001"},"content":"     * @throws ParseException if the given {@code meetingTime} is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"garylow2001"},"content":"    public static MeetingTime parseMeetingTime(String meetingTime) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"garylow2001"},"content":"        requireNonNull(meetingTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"garylow2001"},"content":"        String trimmedMeetingTime \u003d meetingTime.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"garylow2001"},"content":"        if (!MeetingTime.isValidMeetingTime(trimmedMeetingTime)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"garylow2001"},"content":"            throw new ParseException(MeetingTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"garylow2001"},"content":"        return new MeetingTime(trimmedMeetingTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"garylow2001":16,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yuxunn"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"yuxunn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"yuxunn"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"yuxunn"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"yuxunn"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"yuxunn"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"yuxunn"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"yuxunn"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"yuxunn"},"content":"        try {","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"yuxunn"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"yuxunn"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"yuxunn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"yuxunn"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"yuxunn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"yuxunn"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"yuxunn":29}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"garylow2001"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"garylow2001"},"content":"        persons.add(person);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"garylow2001"},"content":"     * Adds a client to the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"garylow2001"},"content":"     * The client must not already exist in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"garylow2001"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"garylow2001"},"content":"        persons.add(client);","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"garylow2001"},"content":"     * Adds a lead to the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"garylow2001"},"content":"     * The lead must not already exist in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"garylow2001"},"content":"    public void addLead(Lead lead) {","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"garylow2001"},"content":"        persons.add(lead);","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"garylow2001"},"content":"     * Removes {@code personKey} from this {@code AddressBook}.","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"garylow2001"},"content":"     * {@code personKey} must exist in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"garylow2001"},"content":"    public void removePerson(Person personKey) {","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"garylow2001"},"content":"        persons.remove(personKey);","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":128,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"garylow2001":23,"-":124}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"yuxunn"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"yuxunn"},"content":"     * Returns the AddressBook","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"yuxunn"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"garylow2001"},"content":"    void addClient(Client client);","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"garylow2001"},"content":"    void addLead(Lead lead);","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"yuxunn"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"yuxunn"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"yuxunn"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"yuxunn"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"yuxunn"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"yuxunn"},"content":"     * Updates the filter of the filtered person list to just the specified person {@code predicate}.","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"yuxunn"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"yuxunn"},"content":"    void view(Person clientToView);","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yuxunn":15,"garylow2001":6,"-":84}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"garylow2001"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"garylow2001"},"content":"        addressBook.addClient(client);","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"garylow2001"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"garylow2001"},"content":"    public void addLead(Lead lead) {","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"garylow2001"},"content":"        addressBook.addLead(lead);","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"garylow2001"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"yuxunn"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"yuxunn"},"content":"    public void view(Person clientToView) {","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"yuxunn"},"content":"        Predicate\u003cPerson\u003e leadPredicate \u003d person -\u003e person.equals(clientToView);","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"yuxunn"},"content":"        updateFilteredPersonList(leadPredicate);","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yuxunn":5,"garylow2001":13,"-":147}},{"path":"src/main/java/seedu/address/model/person/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":" * Represents a Client in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"public class Client extends Person {","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"    public static final String TYPE_CLIENT \u003d \"client\";","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"    public Client(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"                  Optional\u003cMeetingTime\u003e meetingTime, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"        super(name, phone, email, new Type(TYPE_CLIENT), address, meetingTime, tags);","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"    public boolean isClient() {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"        return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"jx124"},"content":"    public boolean isLead() {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"jx124"},"content":"        return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jx124":27,"garylow2001":4}},{"path":"src/main/java/seedu/address/model/person/Lead.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":" * Represents a Lead in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"public class Lead extends Person {","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"    public static final String TYPE_LEAD \u003d \"lead\";","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"    public Lead(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"                Optional\u003cMeetingTime\u003e meetingTime, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"        super(name, phone, email, new Type(TYPE_LEAD), address, meetingTime, tags);","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"    public boolean isClient() {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"        return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"jx124"},"content":"    public boolean isLead() {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"jx124"},"content":"        return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jx124":27,"garylow2001":4}},{"path":"src/main/java/seedu/address/model/person/MeetingTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.model.person.MeetingTimeFormatter.DATE_TIME_FORMAT;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":" * Represents a Person\u0027s meeting time in the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMeetingTime(String)}","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"public class MeetingTime {","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Meeting time should be in the format of \" + DATE_TIME_FORMAT;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"     * Constructs a {@code MeetingTime}.","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"     * @param meetingTime A valid meeting time.","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"    public MeetingTime(String meetingTime) {","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"        checkArgument(isValidMeetingTime(meetingTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"        this.value \u003d MeetingTimeFormatter.parse(meetingTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"    public static boolean isValidMeetingTime(String test) {","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"        return MeetingTimeFormatter.isValid(test);","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"        return MeetingTimeFormatter.format(value);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"        if (!(other instanceof MeetingTime)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"        MeetingTime otherMeetingTime \u003d (MeetingTime) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"        return value.equals(otherMeetingTime.value);","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"garylow2001":56}},{"path":"src/main/java/seedu/address/model/person/MeetingTimeFormatter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":" * Helper class for handling meeting time formatting and parsing.","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"public class MeetingTimeFormatter {","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"    public static final String DATE_TIME_FORMAT \u003d \"dd/MM/yyyy HH:mm\";","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"    private static DateTimeFormatter getFormatter() {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"        return DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"    public static LocalDateTime parse(String meetingTime) {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"        return LocalDateTime.parse(meetingTime, getFormatter());","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"    public static String format(LocalDateTime value) {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"        return value.format(getFormatter());","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"     * Returns true if a given string is a valid meeting time.","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"    public static boolean isValid(String test) {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"            parse(test);","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"garylow2001":36}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"public abstract class Person {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"    private final Type type;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"    private final Optional\u003cMeetingTime\u003e meetingTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"    public Person(Name name, Phone phone, Email email, Type type,","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"                  Address address, Optional\u003cMeetingTime\u003e meetingTime, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"        requireAllNonNull(name, phone, email, address, meetingTime, tags);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"jx124"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"        this.meetingTime \u003d meetingTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"jx124"},"content":"    public Type getType() {","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"jx124"},"content":"        return type;","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"garylow2001"},"content":"    public Optional\u003cMeetingTime\u003e getMeetingTime() {","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"garylow2001"},"content":"        return meetingTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"garylow2001"},"content":"    public String getMeetingTimeString() {","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"garylow2001"},"content":"        return meetingTime.map(MeetingTime::toString).orElse(null);","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"garylow2001"},"content":"    public String getMeetingTimeStringForUserInterface() {","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"garylow2001"},"content":"        return meetingTime.map(meetingTime -\u003e \"Meeting on: \" + meetingTime)","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"garylow2001"},"content":"                .orElse(null);","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"jx124"},"content":"                \u0026\u0026 type.equals(otherPerson.type)","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"garylow2001"},"content":"                \u0026\u0026 meetingTime.equals(otherPerson.meetingTime)","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"garylow2001"},"content":"        return Objects.hash(name, phone, email, type, address, meetingTime, tags);","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"jx124"},"content":"                .add(\"type\", type)","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"garylow2001"},"content":"                .add(\"meetingTime\", meetingTime)","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"jx124"},"content":"    public abstract boolean isClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"jx124"},"content":"    public abstract boolean isLead();","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jx124":12,"garylow2001":21,"-":113}},{"path":"src/main/java/seedu/address/model/person/Type.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":" * Represents a Person\u0027s type in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidType(String)}","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"public class Type {","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Types can only be \u0027client\u0027 or \u0027lead\u0027\";","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"    public static final String VALIDATION_REGEX \u003d \"client|lead\";","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"    public final String value;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"     * Constructs a {@code Type}.","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"     * @param type A valid type.","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"    public Type(String type) {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"        requireNonNull(type);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"        checkArgument(isValidType(type), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"        value \u003d type;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"jx124"},"content":"     * Returns true if a given string is a valid type.","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"jx124"},"content":"    public static boolean isValidType(String test) {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"jx124"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"jx124"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"jx124"},"content":"        return value;","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"jx124"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"jx124"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"jx124"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"jx124"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"jx124"},"content":"        if (!(other instanceof Type)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"jx124"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"jx124"},"content":"        Type otherType \u003d (Type) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"jx124"},"content":"        return value.equals(otherType.value);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"jx124"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"jx124"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"jx124":61}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.MeetingTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"            new Client(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), Optional.of(new MeetingTime(\"10/10/2023 14:30\")),","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"jx124"},"content":"            new Client(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"                    Optional.of(new MeetingTime(\"10/10/2023 14:30\")),","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"jx124"},"content":"            new Client(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"                    Optional.of(new MeetingTime(\"10/10/2023 14:30\")),","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"jx124"},"content":"            new Lead(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"                    Optional.of(new MeetingTime(\"10/10/2023 14:30\")),","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"jx124"},"content":"            new Lead(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), Optional.of(new MeetingTime(\"10/10/2023 14:30\")),","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"jx124"},"content":"            new Lead(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), Optional.of(new MeetingTime(\"10/10/2023 14:30\")),","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"jx124":6,"garylow2001":10,"-":51}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"import static seedu.address.model.person.Client.TYPE_CLIENT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"import static seedu.address.model.person.Lead.TYPE_LEAD;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.MeetingTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Type;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"jx124"},"content":"    private final String type;","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"    private String meetingTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"jx124"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"type\") String type,","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"                             @JsonProperty(\"address\") String address, @JsonProperty(\"meetingTime\") String meetingTime,","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"jx124"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"        if (meetingTime !\u003d null) {","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"garylow2001"},"content":"            this.meetingTime \u003d meetingTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"jx124"},"content":"        type \u003d source.getType().value;","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"garylow2001"},"content":"        meetingTime \u003d source.getMeetingTime().map(MeetingTime::toString).orElse(null);","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"garylow2001"},"content":"        final Optional\u003cMeetingTime\u003e modelMeetingTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":123,"author":{"gitId":"garylow2001"},"content":"        if (meetingTime \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"garylow2001"},"content":"            modelMeetingTime \u003d Optional.empty();","lastModifiedDate":"2023-10-29"},{"lineNumber":125,"author":{"gitId":"garylow2001"},"content":"        } else {","lastModifiedDate":"2023-10-29"},{"lineNumber":126,"author":{"gitId":"garylow2001"},"content":"            if (!MeetingTime.isValidMeetingTime(meetingTime)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"garylow2001"},"content":"                throw new IllegalValueException(MeetingTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"garylow2001"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"garylow2001"},"content":"            modelMeetingTime \u003d Optional.of(new MeetingTime(meetingTime));","lastModifiedDate":"2023-10-29"},{"lineNumber":130,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":131,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"jx124"},"content":"        if (type \u003d\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"jx124"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Type\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"jx124"},"content":"        if (type.equals(TYPE_CLIENT)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"garylow2001"},"content":"            return new Client(modelName, modelPhone, modelEmail, modelAddress, modelMeetingTime, modelTags);","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"jx124"},"content":"        } else if (type.equals(TYPE_LEAD)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"garylow2001"},"content":"            return new Lead(modelName, modelPhone, modelEmail, modelAddress, modelMeetingTime, modelTags);","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"jx124"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"jx124"},"content":"            throw new IllegalValueException(Type.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jx124":16,"garylow2001":24,"-":106}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"yuxunn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"yuxunn"},"content":"    private ViewWindow viewWindow;","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"yuxunn"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"yuxunn"},"content":"    private StackPane viewWindowPlaceholder;","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"yuxunn"},"content":"    @FXML","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"yuxunn"},"content":"    private StackPane clientListPanelPlaceholder;","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"yuxunn"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"yuxunn"},"content":"     * Handles the View Command.","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"yuxunn"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"yuxunn"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"yuxunn"},"content":"    public void handleView(Person selectedPerson, int displayedIndex) {","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"yuxunn"},"content":"        logger.info(\"handleView\");","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"yuxunn"},"content":"        showViewWindow(selectedPerson, displayedIndex);","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"yuxunn"},"content":"    private void showViewWindow(Person selectedPerson, int displayedIndex) {","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"yuxunn"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"yuxunn"},"content":"            if (viewWindow !\u003d null \u0026\u0026 viewWindowPlaceholder !\u003d null) {","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"yuxunn"},"content":"                clearViewContent();","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"yuxunn"},"content":"                viewWindowPlaceholder.getChildren().add(viewWindow.getRoot());","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"yuxunn"},"content":"                personListPanelPlaceholder.setVisible(false);","lastModifiedDate":"2023-10-24"},{"lineNumber":193,"author":{"gitId":"yuxunn"},"content":"                personListPanelPlaceholder.setManaged(false);","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"yuxunn"},"content":"                viewWindowPlaceholder.setVisible(true);","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"yuxunn"},"content":"                viewWindowPlaceholder.setManaged(true);","lastModifiedDate":"2023-10-24"},{"lineNumber":196,"author":{"gitId":"yuxunn"},"content":"            } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":197,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"yuxunn"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":199,"author":{"gitId":"yuxunn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":200,"author":{"gitId":"yuxunn"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":202,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":204,"author":{"gitId":"yuxunn"},"content":"    public void clearViewContent() {","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"yuxunn"},"content":"        viewWindowPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-24"},{"lineNumber":206,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":207,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":208,"author":{"gitId":"yuxunn"},"content":"    private void hideViewWindow() {","lastModifiedDate":"2023-10-24"},{"lineNumber":209,"author":{"gitId":"yuxunn"},"content":"        if (viewWindow !\u003d null \u0026\u0026 viewWindowPlaceholder !\u003d null) {","lastModifiedDate":"2023-10-24"},{"lineNumber":210,"author":{"gitId":"yuxunn"},"content":"            viewWindowPlaceholder.setVisible(false);","lastModifiedDate":"2023-10-24"},{"lineNumber":211,"author":{"gitId":"yuxunn"},"content":"            personListPanelPlaceholder.setVisible(true);","lastModifiedDate":"2023-10-24"},{"lineNumber":212,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":213,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"yuxunn"},"content":"            logger.info(\"reached here: \" + logic.getFilteredPersonList());","lastModifiedDate":"2023-10-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"yuxunn"},"content":"            if (commandResult.checkState().equals(\"view\")) {","lastModifiedDate":"2023-10-24"},{"lineNumber":240,"author":{"gitId":"yuxunn"},"content":"                ObservableList\u003cPerson\u003e allPersons \u003d logic.getFilteredPersonList();","lastModifiedDate":"2023-10-24"},{"lineNumber":241,"author":{"gitId":"yuxunn"},"content":"                Person selectedPerson \u003d allPersons.get(0);","lastModifiedDate":"2023-10-24"},{"lineNumber":242,"author":{"gitId":"yuxunn"},"content":"                viewWindow \u003d new ViewWindow(selectedPerson, 1);","lastModifiedDate":"2023-10-24"},{"lineNumber":243,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":244,"author":{"gitId":"yuxunn"},"content":"                handleView(selectedPerson, 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":245,"author":{"gitId":"yuxunn"},"content":"            } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":246,"author":{"gitId":"yuxunn"},"content":"                hideViewWindow();","lastModifiedDate":"2023-10-24"},{"lineNumber":247,"author":{"gitId":"yuxunn"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yuxunn":60,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"    private Label meetingTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"        if (person.getMeetingTime().isPresent()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"garylow2001"},"content":"            meetingTime.setManaged(true);","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"            meetingTime.setText(person.getMeetingTimeStringForUserInterface());","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"jx124"},"content":"        Label label \u003d new Label(person.getType().value);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"jx124"},"content":"        if (person.isClient()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"jx124"},"content":"            label.getStyleClass().add(\"client-label\");","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"jx124"},"content":"        } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"jx124"},"content":"            label.getStyleClass().add(\"lead-label\");","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"jx124"},"content":"        tags.getChildren().add(label);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jx124":9,"garylow2001":6,"-":59}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yuxunn":1,"-":88}},{"path":"src/main/java/seedu/address/ui/ViewWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"yuxunn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"yuxunn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"yuxunn"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"yuxunn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"yuxunn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"yuxunn"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"yuxunn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"yuxunn"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"yuxunn"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"public class ViewWindow extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"    private static final String FXML \u003d \"ViewWindow.fxml\";","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"yuxunn"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"yuxunn"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"yuxunn"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"yuxunn"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"yuxunn"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"yuxunn"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"yuxunn"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"yuxunn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ViewWindow.class);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"yuxunn"},"content":"    public final Person person;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"yuxunn"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"yuxunn"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"yuxunn"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"yuxunn"},"content":"    private Label name;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"yuxunn"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"yuxunn"},"content":"    private Label id;","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"yuxunn"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"yuxunn"},"content":"    private Label phone;","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"yuxunn"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"yuxunn"},"content":"    private Label address;","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"yuxunn"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"yuxunn"},"content":"    private Label email;","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"yuxunn"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"yuxunn"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"yuxunn"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"yuxunn"},"content":"    private Label otherInfo;","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"yuxunn"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"yuxunn"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"yuxunn"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"yuxunn"},"content":"    public ViewWindow(Person person, int displayedIndex) {","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"yuxunn"},"content":"        super(FXML);","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"yuxunn"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"yuxunn"},"content":"        //id.setText(displayedIndex + \".\");","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"yuxunn"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"yuxunn"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"yuxunn"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"yuxunn"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"yuxunn"},"content":"        Label label \u003d new Label(person.getType().value);","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"yuxunn"},"content":"        if (person.isClient()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"yuxunn"},"content":"            label.getStyleClass().add(\"client-label\");","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"yuxunn"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"yuxunn"},"content":"            label.getStyleClass().add(\"lead-label\");","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"yuxunn"},"content":"        tags.getChildren().add(label);","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"yuxunn"},"content":"        person.getTags().stream()","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"yuxunn"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"yuxunn"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"yuxunn"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"yuxunn":74}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"yuxunn"},"content":"    -fx-hgap: 10;","lastModifiedDate":"2023-10-24"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":354,"author":{"gitId":"jx124"},"content":"#tags .client-label {","lastModifiedDate":"2023-10-19"},{"lineNumber":355,"author":{"gitId":"jx124"},"content":"    -fx-background-color: #007011;","lastModifiedDate":"2023-10-19"},{"lineNumber":356,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-10-19"},{"lineNumber":357,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":358,"author":{"gitId":"jx124"},"content":"#tags .lead-label {","lastModifiedDate":"2023-10-19"},{"lineNumber":359,"author":{"gitId":"jx124"},"content":"    -fx-background-color: #de5900;","lastModifiedDate":"2023-10-19"},{"lineNumber":360,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"jx124":8,"yuxunn":1,"-":351}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"yuxunn"},"content":"          \u003cStackPane fx:id\u003d\"viewWindowPlaceholder\" visible\u003d \"false\"/\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"yuxunn":1,"-":59}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"      \u003cLabel fx:id\u003d\"meetingTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$meetingTime\" managed\u003d\"false\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"garylow2001":1,"-":36}},{"path":"src/main/resources/view/ViewWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"#cardPane {","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"    -fx-background-color: #FBFBD4;","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":".label {","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"yuxunn"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"yuxunn"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"yuxunn"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"yuxunn"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"yuxunn"},"content":".cell_big_label {","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"yuxunn"},"content":"    -fx-font-size: 24px;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"yuxunn"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"yuxunn"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"yuxunn"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":".cell_small_label {","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"yuxunn"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"yuxunn"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"yuxunn"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"yuxunn":22}},{"path":"src/main/resources/view/ViewWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"yuxunn"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"yuxunn"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"yuxunn"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"yuxunn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"yuxunn"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"yuxunn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"yuxunn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"yuxunn"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"yuxunn"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"yuxunn"},"content":"        \u003cVBox alignment\u003d\"TOP_LEFT\" minHeight\u003d\"650\" GridPane.columnIndex\u003d\"0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"yuxunn"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"yuxunn"},"content":"                \u003cInsets top\u003d\"20\" right\u003d\"5\" bottom\u003d\"30\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"yuxunn"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"yuxunn"},"content":"            \u003cHBox spacing\u003d\"2\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"yuxunn"},"content":"                \u003cImageView fx:id\u003d\"profileImage\" fitHeight\u003d\"50\" fitWidth\u003d\"50\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"yuxunn"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"yuxunn"},"content":"                        \u003cImage url\u003d\"@/images/profile.png\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"yuxunn"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"yuxunn"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"yuxunn"},"content":"\u003c!--                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e--\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"yuxunn"},"content":"\u003c!--                    \u003cminWidth\u003e--\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"yuxunn"},"content":"\u003c!--                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e--\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"yuxunn"},"content":"\u003c!--                    \u003c/minWidth\u003e--\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"yuxunn"},"content":"\u003c!--                \u003c/Label\u003e--\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"yuxunn"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"yuxunn"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"yuxunn"},"content":"            \u003cRegion prefHeight\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"yuxunn"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"yuxunn"},"content":"            \u003cRegion prefHeight\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"yuxunn"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"yuxunn"},"content":"                \u003cImageView fx:id\u003d\"phoneIcon\" fitHeight\u003d\"16\" fitWidth\u003d\"16\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"yuxunn"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"yuxunn"},"content":"                        \u003cImage url\u003d\"@/images/smartphone-call.png\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"yuxunn"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"yuxunn"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"yuxunn"},"content":"                \u003cLabel styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"yuxunn"},"content":"                    \u003ctext\u003ePhone:\u003c/text\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"yuxunn"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"yuxunn"},"content":"                \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"yuxunn"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"yuxunn"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"yuxunn"},"content":"                \u003cImageView fx:id\u003d\"addressIcon\" fitHeight\u003d\"16\" fitWidth\u003d\"16\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"yuxunn"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"yuxunn"},"content":"                        \u003cImage url\u003d\"@/images/home-address.png\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"yuxunn"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"yuxunn"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"yuxunn"},"content":"                \u003cLabel styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"yuxunn"},"content":"                    \u003ctext\u003eAddress:\u003c/text\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"yuxunn"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"yuxunn"},"content":"                \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"yuxunn"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"yuxunn"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"yuxunn"},"content":"                \u003cImageView fx:id\u003d\"emailIcon\" fitHeight\u003d\"16\" fitWidth\u003d\"16\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"yuxunn"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"yuxunn"},"content":"                        \u003cImage url\u003d\"@/images/email.png\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"yuxunn"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"yuxunn"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"yuxunn"},"content":"                \u003cLabel styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"yuxunn"},"content":"                    \u003ctext\u003eEmail:\u003c/text\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"yuxunn"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"yuxunn"},"content":"                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"yuxunn"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"yuxunn"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"yuxunn"},"content":"                \u003cImageView fx:id\u003d\"otherIcon\" fitHeight\u003d\"16\" fitWidth\u003d\"16\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"yuxunn"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"yuxunn"},"content":"                        \u003cImage url\u003d\"@/images/application.png\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"yuxunn"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"yuxunn"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"yuxunn"},"content":"                \u003cLabel styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"yuxunn"},"content":"                    \u003ctext\u003eAdditional Information:\u003c/text\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"yuxunn"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"yuxunn"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"yuxunn"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"yuxunn"},"content":"                \u003cLabel fx:id\u003d\"otherInfo\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"yuxunn"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"yuxunn"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"yuxunn"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"yuxunn"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"yuxunn"},"content":"        \u003cURL value\u003d\"@ViewWindow.css\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"yuxunn"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"yuxunn"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"yuxunn":91}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_TIME_DESC_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.commands.AddClientCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"garylow2001"},"content":"        // Triggers the saveAddressBook method by executing an addclient command","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"garylow2001"},"content":"        String addClientCommand \u003d AddClientCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"garylow2001"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + MEETING_TIME_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"garylow2001"},"content":"        Client expectedClient \u003d new PersonBuilder(AMY).withTags().buildClient();","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"garylow2001"},"content":"        expectedModel.addClient(expectedClient);","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"garylow2001"},"content":"        assertCommandFailure(addClientCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"garylow2001":9,"-":167}},{"path":"src/test/java/seedu/address/logic/commands/AddClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"public class AddClientCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddClientCommand(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"    public void execute_clientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"        ModelStubAcceptingClientAdded modelStub \u003d new ModelStubAcceptingClientAdded();","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"        Client validClient \u003d new PersonBuilder().buildClient();","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"        CommandResult commandResult \u003d new AddClientCommand(validClient).execute(modelStub);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"        assertEquals(String.format(AddClientCommand.MESSAGE_SUCCESS, Messages.format(validClient)),","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"        assertEquals(Arrays.asList(validClient), modelStub.personsAdded);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"        Client validClient \u003d new PersonBuilder().buildClient();","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"        AddClientCommand addCommand \u003d new AddClientCommand(validClient);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validClient);","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"                AddClientCommand.MESSAGE_DUPLICATE_CLIENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"garylow2001"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"garylow2001"},"content":"        Client alice \u003d new PersonBuilder().withName(\"Alice\").buildClient();","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"garylow2001"},"content":"        Client bob \u003d new PersonBuilder().withName(\"Bob\").buildClient();","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"garylow2001"},"content":"        AddClientCommand addAliceCommand \u003d new AddClientCommand(alice);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"garylow2001"},"content":"        AddClientCommand addBobCommand \u003d new AddClientCommand(bob);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"garylow2001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"garylow2001"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"garylow2001"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"garylow2001"},"content":"        AddClientCommand addAliceCommandCopy \u003d new AddClientCommand(alice);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"garylow2001"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"garylow2001"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"garylow2001"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"garylow2001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"garylow2001"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"garylow2001"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"garylow2001"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"garylow2001"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"garylow2001"},"content":"        AddClientCommand addCommand \u003d new AddClientCommand(ALICE);","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"garylow2001"},"content":"        String expected \u003d AddClientCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"garylow2001"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"garylow2001"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"garylow2001"},"content":"    private abstract class ModelStub implements Model {","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"garylow2001"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"garylow2001"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"garylow2001"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"garylow2001"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"garylow2001"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"garylow2001"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"garylow2001"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"garylow2001"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"garylow2001"},"content":"        public void addLead(Lead lead) {","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"garylow2001"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"garylow2001"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"garylow2001"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"garylow2001"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"garylow2001"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"garylow2001"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"garylow2001"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":173,"author":{"gitId":"yuxunn"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":174,"author":{"gitId":"yuxunn"},"content":"        public void view(Person personToView) {","lastModifiedDate":"2023-10-22"},{"lineNumber":175,"author":{"gitId":"yuxunn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":176,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":177,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"garylow2001"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"garylow2001"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"garylow2001"},"content":"        private final Person person;","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"garylow2001"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"garylow2001"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"garylow2001"},"content":"            this.person \u003d person;","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"garylow2001"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"garylow2001"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"garylow2001"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"garylow2001"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"garylow2001"},"content":"    private class ModelStubAcceptingClientAdded extends ModelStub {","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"garylow2001"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"garylow2001"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"garylow2001"},"content":"            requireNonNull(client);","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"garylow2001"},"content":"            personsAdded.add(client);","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"yuxunn"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":208,"author":{"gitId":"yuxunn"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-22"},{"lineNumber":209,"author":{"gitId":"yuxunn"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-22"},{"lineNumber":210,"author":{"gitId":"yuxunn"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":211,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":212,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":213,"author":{"gitId":"garylow2001"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"garylow2001"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"yuxunn":10,"garylow2001":207}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"jx124"},"content":"        Person validPerson \u003d new PersonBuilder().buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jx124":1,"-":47}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"jx124"},"content":"        Person validPerson \u003d new PersonBuilder().buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"jx124"},"content":"        Person validPerson \u003d new PersonBuilder().buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"jx124"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"jx124"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"tiif"},"content":"    //test the difference between client and lead","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"tiif"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"tiif"},"content":"    public void equalsForClientandLeads() {","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"tiif"},"content":"        Person aliceClient \u003d new PersonBuilder().withName(\"Alice\").buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"tiif"},"content":"        Person aliceLead \u003d new PersonBuilder().withName(\"Alice\").buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"tiif"},"content":"        AddCommand addClientCommand \u003d new AddCommand(aliceClient);","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"tiif"},"content":"        AddCommand addLeadCommand \u003d new AddCommand(aliceLead);","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"tiif"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"tiif"},"content":"        assertTrue(addClientCommand.equals(addClientCommand));","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"tiif"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"tiif"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(aliceClient);","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"tiif"},"content":"        assertTrue(addClientCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"tiif"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"tiif"},"content":"        AddCommand addAliceLeadCommandCopy \u003d new AddCommand(aliceLead);","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"tiif"},"content":"        assertTrue(addLeadCommand.equals(addAliceLeadCommandCopy));","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":100,"author":{"gitId":"tiif"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"tiif"},"content":"        assertFalse(addClientCommand.equals(1));","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"tiif"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"tiif"},"content":"        assertFalse(addLeadCommand.equals(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"tiif"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"tiif"},"content":"        assertFalse(addClientCommand.equals(addLeadCommand));","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"tiif"},"content":"    //todo: test to string method for client and lead","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"garylow2001"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"garylow2001"},"content":"        public void addLead(Lead lead) {","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"yuxunn"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":200,"author":{"gitId":"yuxunn"},"content":"        public void view(Person personToView) {","lastModifiedDate":"2023-10-22"},{"lineNumber":201,"author":{"gitId":"yuxunn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":202,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"tiif":28,"jx124":4,"yuxunn":4,"garylow2001":12,"-":199}},{"path":"src/test/java/seedu/address/logic/commands/AddLeadCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"public class AddLeadCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddLeadCommand(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"        ModelStubAcceptingLeadAdded modelStub \u003d new ModelStubAcceptingLeadAdded();","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"        Lead validPerson \u003d new PersonBuilder().buildLead();","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"        CommandResult commandResult \u003d new AddLeadCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"        assertEquals(String.format(AddLeadCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"        Lead validPerson \u003d new PersonBuilder().buildLead();","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"        AddLeadCommand addCommand \u003d new AddLeadCommand(validPerson);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"                AddLeadCommand.MESSAGE_DUPLICATE_LEAD, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"garylow2001"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"garylow2001"},"content":"        Lead alice \u003d new PersonBuilder().withName(\"Alice\").buildLead();","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"garylow2001"},"content":"        Lead bob \u003d new PersonBuilder().withName(\"Bob\").buildLead();","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"garylow2001"},"content":"        AddLeadCommand addAliceCommand \u003d new AddLeadCommand(alice);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"garylow2001"},"content":"        AddLeadCommand addBobCommand \u003d new AddLeadCommand(bob);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"garylow2001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"garylow2001"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"garylow2001"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"garylow2001"},"content":"        AddLeadCommand addAliceCommandCopy \u003d new AddLeadCommand(alice);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"garylow2001"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"garylow2001"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"garylow2001"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"garylow2001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"garylow2001"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"garylow2001"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"garylow2001"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"garylow2001"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"garylow2001"},"content":"        AddLeadCommand addCommand \u003d new AddLeadCommand(ELLE);","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"garylow2001"},"content":"        String expected \u003d AddLeadCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ELLE + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"garylow2001"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"garylow2001"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"garylow2001"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"garylow2001"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"garylow2001"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"garylow2001"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"garylow2001"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"garylow2001"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"garylow2001"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"garylow2001"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"garylow2001"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"garylow2001"},"content":"        public void addLead(Lead lead) {","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"garylow2001"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"garylow2001"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"garylow2001"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"garylow2001"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"garylow2001"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"garylow2001"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"garylow2001"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"garylow2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"yuxunn"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":173,"author":{"gitId":"yuxunn"},"content":"        public void view(Person personToView) {","lastModifiedDate":"2023-10-22"},{"lineNumber":174,"author":{"gitId":"yuxunn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":175,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":176,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"garylow2001"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"garylow2001"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"garylow2001"},"content":"        private final Person person;","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"garylow2001"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"garylow2001"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"garylow2001"},"content":"            this.person \u003d person;","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"garylow2001"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"garylow2001"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"garylow2001"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"garylow2001"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"garylow2001"},"content":"    private class ModelStubAcceptingLeadAdded extends ModelStub {","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"garylow2001"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"garylow2001"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"garylow2001"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"garylow2001"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"garylow2001"},"content":"        public void addLead(Lead lead) {","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"garylow2001"},"content":"            requireNonNull(lead);","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"garylow2001"},"content":"            personsAdded.add(lead);","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":213,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"garylow2001"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"garylow2001"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"garylow2001"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"yuxunn":4,"garylow2001":216}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, \"feedback\")));","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"yuxunn"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, \"help\")));","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"yuxunn"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, \"exit\")));","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"yuxunn"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, \"help\").hashCode());","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"yuxunn"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, \"exit\").hashCode());","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"yuxunn"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"yuxunn"},"content":"    public void stateTest() {","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"yuxunn"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", true, false, \"view\");","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"yuxunn"},"content":"        assertEquals(\"view\", commandResult.checkState());","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"yuxunn"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"yuxunn"},"content":"    public void notEqualsTest() {","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"yuxunn"},"content":"        CommandResult commandResult1 \u003d new CommandResult(\"feedback\", true, true, \"view\");","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"yuxunn"},"content":"        CommandResult commandResult2 \u003d new CommandResult(\"differentFeedback\", true, true, \"help\");","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"yuxunn"},"content":"        assertNotEquals(commandResult1, commandResult2);","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"yuxunn"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"yuxunn"},"content":"    public void defaultConstructorTest() {","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"yuxunn"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"yuxunn"},"content":"        assertFalse(commandResult.isShowHelp());","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"yuxunn"},"content":"        assertFalse(commandResult.isExit());","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"yuxunn"},"content":"        assertEquals(\"null\", commandResult.checkState());","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"yuxunn"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"yuxunn"},"content":"    public void hashCodeConsistencyTest() {","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"yuxunn"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", true, false, \"state\");","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"yuxunn"},"content":"        assertEquals(commandResult.hashCode(), commandResult.hashCode());","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"yuxunn":28,"-":59}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"    public static final String VALID_MEETING_TIME_AMY \u003d \"10/10/2024 10:00\";","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"    public static final String VALID_MEETING_TIME_BOB \u003d \"16/12/2023 11:00\";","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"    public static final String MEETING_TIME_DESC_AMY \u003d \" \" + PREFIX_MEETING_TIME + VALID_MEETING_TIME_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"    public static final String MEETING_TIME_DESC_BOB \u003d \" \" + PREFIX_MEETING_TIME + VALID_MEETING_TIME_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"garylow2001"},"content":"    // TODO: add invalid meeting time","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"garylow2001"},"content":"                .withMeetingTime(VALID_MEETING_TIME_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"garylow2001"},"content":"                .withMeetingTime(VALID_MEETING_TIME_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"garylow2001":8,"-":126}},{"path":"src/test/java/seedu/address/logic/commands/ConvertClientToLeadCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LicongHuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"LicongHuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"LicongHuang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"LicongHuang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"LicongHuang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"LicongHuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"LicongHuang"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"LicongHuang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"LicongHuang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"LicongHuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"LicongHuang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"LicongHuang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"LicongHuang"},"content":"public class ConvertClientToLeadCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"LicongHuang"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"LicongHuang"},"content":"    public void constructorNullPersonThrowsNullPointerException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"LicongHuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ConvertClientToLeadCommand(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"LicongHuang"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"LicongHuang"},"content":"    public void executeClientConvertToLeadSuccess() throws CommandException {","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"LicongHuang"},"content":"        final String expectedOutput \u003d \"Converted Client to Lead: Amy Bee; Phone: 85355255; Email: amy@gmail.com; \"","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"LicongHuang"},"content":"                + \"Address: 123, Jurong West Ave 6, #08-111; \"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"                + \"Meeting Time: null; Tags: \";","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"LicongHuang"},"content":"        // Step 1: Set up the necessary test data and model stub.","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"LicongHuang"},"content":"        ModelStubAcceptingClientAdded modelStub \u003d new ModelStubAcceptingClientAdded();","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"LicongHuang"},"content":"        Client validPerson \u003d new PersonBuilder().buildClient();","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"LicongHuang"},"content":"        modelStub.addClient(validPerson);","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"LicongHuang"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"LicongHuang"},"content":"        ConvertClientToLeadCommand convertClientToLeadCommand \u003d new ConvertClientToLeadCommand(index);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"LicongHuang"},"content":"        // Step 2: Execute the ConvertClientToLeadCommand.","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"LicongHuang"},"content":"        CommandResult commandResult \u003d convertClientToLeadCommand.execute(modelStub);","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"LicongHuang"},"content":"        // Step 3: Check the results.","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"LicongHuang"},"content":"        // You may want to assert that the model stub has been updated correctly, e.g., by checking the filteredPersons.","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"LicongHuang"},"content":"        // For example:","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"LicongHuang"},"content":"        if (!modelStub.getFilteredPersonList().isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"LicongHuang"},"content":"            assertTrue(modelStub.getFilteredPersonList().get(0).isLead());","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"LicongHuang"},"content":"        // You should also check that the CommandResult is the expected one.","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"LicongHuang"},"content":"        // For example:","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"LicongHuang"},"content":"        assertEquals(expectedOutput, commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"LicongHuang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"LicongHuang"},"content":"    public void executeClientConvertToLeadInvalidIndexThrowsCommandException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"LicongHuang"},"content":"        ModelStubAcceptingClientAdded modelStub \u003d new ModelStubAcceptingClientAdded();","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"LicongHuang"},"content":"        Index invalidIndex \u003d Index.fromOneBased(2); // An index that does not exist in the model","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"LicongHuang"},"content":"        ConvertClientToLeadCommand convertClientToLeadCommand \u003d new ConvertClientToLeadCommand(invalidIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"LicongHuang"},"content":"        assertThrows(","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"LicongHuang"},"content":"                CommandException.class,","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"LicongHuang"},"content":"                \"The person index provided is invalid\", ()","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"LicongHuang"},"content":"                        -\u003e convertClientToLeadCommand.execute(modelStub)","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"LicongHuang"},"content":"        );","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"LicongHuang"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"LicongHuang"},"content":"    public void executeConvertLeadToLeadThrowsException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"LicongHuang"},"content":"        ModelStubAcceptingClientAdded modelStub \u003d new ModelStubAcceptingClientAdded();","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"LicongHuang"},"content":"        Lead validPerson \u003d new PersonBuilder().buildLead();","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"LicongHuang"},"content":"        modelStub.addLead(validPerson);","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"LicongHuang"},"content":"        Index validIndex \u003d Index.fromOneBased(1); // Assuming index 1 is valid, but there are no clients in the model","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"LicongHuang"},"content":"        ConvertClientToLeadCommand convertClientToLeadCommand \u003d new ConvertClientToLeadCommand(validIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"LicongHuang"},"content":"        assertThrows(","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"LicongHuang"},"content":"                CommandException.class, \"The person at the specified index is not a Client.\", ()","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"LicongHuang"},"content":"                        -\u003e convertClientToLeadCommand.execute(modelStub));","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"LicongHuang"},"content":"    private abstract class ModelStub implements Model {","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"LicongHuang"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"LicongHuang"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"LicongHuang"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"LicongHuang"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"LicongHuang"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"LicongHuang"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"LicongHuang"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"LicongHuang"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"LicongHuang"},"content":"        public void addLead(Lead lead) {","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"LicongHuang"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"LicongHuang"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"LicongHuang"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"LicongHuang"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"LicongHuang"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"LicongHuang"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"LicongHuang"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"LicongHuang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"LicongHuang"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"LicongHuang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"LicongHuang"},"content":"    private abstract class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"LicongHuang"},"content":"        private final Person person;","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"LicongHuang"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"LicongHuang"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"LicongHuang"},"content":"            this.person \u003d person;","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"LicongHuang"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"LicongHuang"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"LicongHuang"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"LicongHuang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"LicongHuang"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"LicongHuang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"LicongHuang"},"content":"    private class ModelStubAcceptingClientAdded extends ModelStub {","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"LicongHuang"},"content":"        final List\u003cPerson\u003e clientAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"LicongHuang"},"content":"        private final ObservableList\u003cPerson\u003e filteredPersons \u003d FXCollections.observableArrayList(clientAdded);","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"LicongHuang"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"LicongHuang"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"LicongHuang"},"content":"            return clientAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"LicongHuang"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"LicongHuang"},"content":"            requireNonNull(client);","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"LicongHuang"},"content":"            filteredPersons.add(client);","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"LicongHuang"},"content":"        public void addLead(Lead lead) {","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"LicongHuang"},"content":"            requireNonNull(lead);","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"LicongHuang"},"content":"            filteredPersons.add(lead);","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"LicongHuang"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"LicongHuang"},"content":"            return filteredPersons;","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"LicongHuang"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e person) {","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"LicongHuang"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"LicongHuang"},"content":"            filteredPersons.setAll(","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"LicongHuang"},"content":"                    clientAdded.stream().filter(person).collect(Collectors.toList())","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"LicongHuang"},"content":"            );","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"LicongHuang"},"content":"        public void setPerson(Person target, Person converted) {","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"LicongHuang"},"content":"            clientAdded.remove(target);","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"LicongHuang"},"content":"            clientAdded.add(converted);","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"LicongHuang"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"LicongHuang"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"LicongHuang"},"content":"        public void view(Person person) {","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"LicongHuang"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"LicongHuang"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"garylow2001":1,"LicongHuang":246}},{"path":"src/test/java/seedu/address/logic/commands/ConvertLeadToClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LicongHuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"LicongHuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"LicongHuang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"LicongHuang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"LicongHuang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"LicongHuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"LicongHuang"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"LicongHuang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"LicongHuang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"LicongHuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"LicongHuang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"LicongHuang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"LicongHuang"},"content":"public class ConvertLeadToClientCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"LicongHuang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"LicongHuang"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"LicongHuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ConvertLeadToClientCommand(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"LicongHuang"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"LicongHuang"},"content":"    public void executeLeadConvertToClientAddSuccessfully() throws CommandException {","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"LicongHuang"},"content":"        final String expectedOutput \u003d \"Converted Lead to Client: Amy Bee; Phone: 85355255; \"","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"LicongHuang"},"content":"                + \"Email: amy@gmail.com; Address: 123, Jurong West Ave 6, #08-111; \"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"                + \"Meeting Time: null; Tags: \";","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"LicongHuang"},"content":"        // Step 1: Set up the necessary test data and model stub.","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"LicongHuang"},"content":"        ModelStubAcceptingLeadAdded modelStub \u003d new ModelStubAcceptingLeadAdded();","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"LicongHuang"},"content":"        Lead validPerson \u003d new PersonBuilder().buildLead();","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"LicongHuang"},"content":"        modelStub.addLead(validPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"LicongHuang"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"LicongHuang"},"content":"        ConvertLeadToClientCommand convertLeadToClientCommand \u003d new ConvertLeadToClientCommand(index);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"LicongHuang"},"content":"        // Step 2: Execute the ConvertLeadToClientCommand.","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"LicongHuang"},"content":"        CommandResult commandResult \u003d convertLeadToClientCommand.execute(modelStub);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"LicongHuang"},"content":"        // Step 3: Check the results.","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"LicongHuang"},"content":"        // You may want to assert that the model stub has been updated correctly, e.g., by checking the filteredPersons.","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"LicongHuang"},"content":"        // For example:","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"LicongHuang"},"content":"        if (!modelStub.getFilteredPersonList().isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"LicongHuang"},"content":"            assertTrue(modelStub.getFilteredPersonList().get(0).isClient());","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"LicongHuang"},"content":"        // You should also check that the CommandResult is the expected one.","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"LicongHuang"},"content":"        // For example:","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"LicongHuang"},"content":"        assertEquals(expectedOutput, commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"LicongHuang"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"LicongHuang"},"content":"    public void executeLeadConvertToClientInvalidIndexAddFailure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"LicongHuang"},"content":"        ModelStubAcceptingLeadAdded modelStub \u003d new ModelStubAcceptingLeadAdded();","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"LicongHuang"},"content":"        Index invalidIndex \u003d Index.fromOneBased(2); // An index that does not exist in the model","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"LicongHuang"},"content":"        ConvertLeadToClientCommand convertLeadToClientCommand \u003d new ConvertLeadToClientCommand(invalidIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"LicongHuang"},"content":"        assertThrows(","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"LicongHuang"},"content":"                CommandException.class,","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"LicongHuang"},"content":"                \"The person index provided is invalid\", () -\u003e convertLeadToClientCommand.execute(modelStub)","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"LicongHuang"},"content":"        );","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"LicongHuang"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"LicongHuang"},"content":"    public void executeConvertClientToClientThrowException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"LicongHuang"},"content":"        ModelStubAcceptingLeadAdded modelStub \u003d new ModelStubAcceptingLeadAdded();","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"LicongHuang"},"content":"        Client validPerson \u003d new PersonBuilder().buildClient();","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"LicongHuang"},"content":"        modelStub.addClient(validPerson);","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"LicongHuang"},"content":"        Index validIndex \u003d Index.fromOneBased(1); // Assuming index 1 is valid, but there are no leads in the model","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"LicongHuang"},"content":"        ConvertLeadToClientCommand convertLeadToClientCommand \u003d new ConvertLeadToClientCommand(validIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"LicongHuang"},"content":"        assertThrows(","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"LicongHuang"},"content":"                CommandException.class,","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"LicongHuang"},"content":"                \"The person at the specified index is not a Lead.\", () -\u003e convertLeadToClientCommand.execute(modelStub)","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"LicongHuang"},"content":"        );","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"LicongHuang"},"content":"    private abstract class ModelStub implements Model {","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"LicongHuang"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"LicongHuang"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"LicongHuang"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"LicongHuang"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"LicongHuang"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"LicongHuang"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"LicongHuang"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"LicongHuang"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"LicongHuang"},"content":"        public void addLead(Lead lead) {","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"LicongHuang"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"LicongHuang"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"LicongHuang"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"LicongHuang"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"LicongHuang"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"LicongHuang"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"LicongHuang"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"LicongHuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"LicongHuang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"LicongHuang"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"LicongHuang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"LicongHuang"},"content":"    private abstract class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"LicongHuang"},"content":"        private final Person person;","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"LicongHuang"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"LicongHuang"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"LicongHuang"},"content":"            this.person \u003d person;","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"LicongHuang"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"LicongHuang"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"LicongHuang"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"LicongHuang"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"LicongHuang"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"LicongHuang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"LicongHuang"},"content":"    private class ModelStubAcceptingLeadAdded extends ModelStub {","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"LicongHuang"},"content":"        final List\u003cPerson\u003e leadsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"LicongHuang"},"content":"        private final ObservableList\u003cPerson\u003e filteredPersons \u003d FXCollections.observableArrayList(leadsAdded);","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"LicongHuang"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"LicongHuang"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"LicongHuang"},"content":"            return leadsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"LicongHuang"},"content":"        public void addLead(Lead lead) {","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"LicongHuang"},"content":"            requireNonNull(lead);","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"LicongHuang"},"content":"            filteredPersons.add(lead);","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"LicongHuang"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"LicongHuang"},"content":"            requireNonNull(client);","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"LicongHuang"},"content":"            filteredPersons.add(client);","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"LicongHuang"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"LicongHuang"},"content":"            return filteredPersons;","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"LicongHuang"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e person) {","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"LicongHuang"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-27"},{"lineNumber":224,"author":{"gitId":"LicongHuang"},"content":"            filteredPersons.setAll(","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"LicongHuang"},"content":"                    leadsAdded.stream().filter(person).collect(Collectors.toList())","lastModifiedDate":"2023-10-27"},{"lineNumber":226,"author":{"gitId":"LicongHuang"},"content":"            );","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"LicongHuang"},"content":"        public void setPerson(Person target, Person converted) {","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"LicongHuang"},"content":"            leadsAdded.remove(target);","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"LicongHuang"},"content":"            leadsAdded.add(converted);","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"LicongHuang"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"LicongHuang"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"LicongHuang"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"LicongHuang"},"content":"        public void view(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"LicongHuang"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"LicongHuang"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"LicongHuang"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"garylow2001":1,"LicongHuang":244}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"jx124"},"content":"        Person editedPerson \u003d new PersonBuilder().buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"jx124"},"content":"                .withTags(VALID_TAG_HUSBAND).buildLead();","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"jx124"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"jx124":3,"-":181}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_TIME_BOB;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"        // different meeting time -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"garylow2001"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withMeetingTime(VALID_MEETING_TIME_BOB).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"garylow2001"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", meetingTime\u003d\"","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"garylow2001"},"content":"                + editPersonDescriptor.getMeetingTime() + \", tags\u003d\"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"garylow2001":7,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, \"exit\");","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"yuxunn":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, \"help\");","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"yuxunn":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LicongHuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.logic.commands.ListClientCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"tiif"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalClientsAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"tiif"},"content":"import static seedu.address.testutil.TypicalLeads.getTypicalLeadsAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"LicongHuang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"LicongHuang"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"LicongHuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"LicongHuang"},"content":"public class ListClientCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"tiif"},"content":"    private Model personModel;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"tiif"},"content":"    private Model expectedPersonModel;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"tiif"},"content":"    private Model leadModel;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"tiif"},"content":"    private Model expectedLeadModel;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"tiif"},"content":"    private Model clientModel;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"tiif"},"content":"    private Model expectedClientModel;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"LicongHuang"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"LicongHuang"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"tiif"},"content":"        personModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"tiif"},"content":"        expectedPersonModel \u003d new ModelManager(personModel.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"tiif"},"content":"        clientModel \u003d new ModelManager(getTypicalClientsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"tiif"},"content":"        expectedClientModel \u003d new ModelManager(clientModel.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"tiif"},"content":"        leadModel \u003d new ModelManager(getTypicalLeadsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"tiif"},"content":"        expectedLeadModel \u003d new ModelManager(leadModel.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"tiif"},"content":"    //filter list with both client and leads","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"LicongHuang"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"tiif"},"content":"    public void execute_personListIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"LicongHuang"},"content":"        // Filter the model as required by ListClientCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"        Predicate\u003cPerson\u003e predicate \u003d ListClientCommand.CLIENT_TAG_PREDICATE;","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"tiif"},"content":"        personModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"tiif"},"content":"        expectedPersonModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"tiif"},"content":"        assertCommandSuccess(new ListClientCommand(), personModel, MESSAGE_SUCCESS, expectedPersonModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"tiif"},"content":"    //filter list with only clients","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"tiif"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"tiif"},"content":"    public void execute_clientListIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"tiif"},"content":"        // Filter the model as required by ListClientCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"tiif"},"content":"        Predicate\u003cPerson\u003e predicate \u003d ListClientCommand.CLIENT_TAG_PREDICATE;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"tiif"},"content":"        clientModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"tiif"},"content":"        expectedClientModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"tiif"},"content":"        assertCommandSuccess(new ListClientCommand(), clientModel, MESSAGE_SUCCESS, expectedClientModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"tiif"},"content":"    //filter list with only leads","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"tiif"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"tiif"},"content":"    public void execute_leadListIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"tiif"},"content":"        // Filter the model as required by ListLeadCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"tiif"},"content":"        Predicate\u003cPerson\u003e predicate \u003d ListClientCommand.CLIENT_TAG_PREDICATE;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"tiif"},"content":"        leadModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"tiif"},"content":"        expectedLeadModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"tiif"},"content":"        assertCommandSuccess(new ListClientCommand(), leadModel, ListClientCommand.MESSAGE_SUCCESS, expectedLeadModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"LicongHuang"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"tiif":39,"garylow2001":1,"LicongHuang":26}},{"path":"src/test/java/seedu/address/logic/commands/ListLeadCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LicongHuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.logic.commands.ListLeadCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"tiif"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalClientsAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"tiif"},"content":"import static seedu.address.testutil.TypicalLeads.getTypicalLeadsAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"LicongHuang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"LicongHuang"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"LicongHuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"LicongHuang"},"content":"public class ListLeadCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"tiif"},"content":"    private Model personModel;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"tiif"},"content":"    private Model expectedPersonModel;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"tiif"},"content":"    private Model leadModel;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"tiif"},"content":"    private Model expectedLeadModel;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"tiif"},"content":"    private Model clientModel;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"tiif"},"content":"    private Model expectedClientModel;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"LicongHuang"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"LicongHuang"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"tiif"},"content":"        personModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"tiif"},"content":"        expectedPersonModel \u003d new ModelManager(personModel.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"tiif"},"content":"        leadModel \u003d new ModelManager(getTypicalLeadsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"tiif"},"content":"        expectedLeadModel \u003d new ModelManager(leadModel.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"tiif"},"content":"        clientModel \u003d new ModelManager(getTypicalClientsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"tiif"},"content":"        expectedClientModel \u003d new ModelManager(clientModel.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"LicongHuang"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"tiif"},"content":"    public void execute_personListIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"tiif"},"content":"        // Filter the model as required by ListLeadCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"tiif"},"content":"        Predicate\u003cPerson\u003e predicate \u003d ListLeadCommand.LEAD_TAG_PREDICATE;","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"tiif"},"content":"        personModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"tiif"},"content":"        expectedPersonModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"tiif"},"content":"        assertCommandSuccess(new ListLeadCommand(), personModel, MESSAGE_SUCCESS, expectedPersonModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"tiif"},"content":"    //filter list with only leads","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"tiif"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"tiif"},"content":"    public void execute_leadListIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"tiif"},"content":"        // Filter the model as required by ListLeadCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"tiif"},"content":"        Predicate\u003cPerson\u003e predicate \u003d ListLeadCommand.LEAD_TAG_PREDICATE;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"tiif"},"content":"        leadModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"tiif"},"content":"        expectedLeadModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"tiif"},"content":"        assertCommandSuccess(new ListLeadCommand(), leadModel, ListLeadCommand.MESSAGE_SUCCESS, expectedLeadModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"tiif"},"content":"    //filter list with only clients","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"tiif"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"tiif"},"content":"    public void execute_clientListIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"tiif"},"content":"        // Filter the model as required by ListLeadCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"garylow2001"},"content":"        Predicate\u003cPerson\u003e predicate \u003d ListLeadCommand.LEAD_TAG_PREDICATE;","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"tiif"},"content":"        clientModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"tiif"},"content":"        expectedClientModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"tiif"},"content":"        assertCommandSuccess(new ListLeadCommand(), clientModel, MESSAGE_SUCCESS, expectedClientModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"LicongHuang"},"content":"}","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"tiif":39,"garylow2001":1,"LicongHuang":27}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"yuxunn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"yuxunn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"yuxunn"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"yuxunn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"yuxunn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"yuxunn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"yuxunn"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"yuxunn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"yuxunn"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"yuxunn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"yuxunn"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"yuxunn"},"content":"public class ViewCommandTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"yuxunn"},"content":"    private Model model;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"yuxunn"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"yuxunn"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"yuxunn"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"yuxunn"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"yuxunn"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"yuxunn"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"yuxunn"},"content":"    public void equals() {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"yuxunn"},"content":"        Index index1 \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"yuxunn"},"content":"        Index index2 \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"yuxunn"},"content":"        ViewCommand viewCommand1 \u003d new ViewCommand(index1);","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"yuxunn"},"content":"        ViewCommand viewCommand2 \u003d new ViewCommand(index2);","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"yuxunn"},"content":"        assertTrue(viewCommand1.equals(viewCommand1));","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"yuxunn"},"content":"        assertFalse(viewCommand1.equals(viewCommand2));","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"yuxunn"},"content":"        assertFalse(viewCommand1.equals(5));","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"yuxunn"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"yuxunn"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"yuxunn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"yuxunn"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"yuxunn"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"yuxunn"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"yuxunn"},"content":"    public void execute_validIndexViewPerson_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"yuxunn"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"yuxunn"},"content":"        String expectedMessage \u003d String.format(ViewCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"yuxunn"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"yuxunn"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"yuxunn"},"content":"        expectedModel.view(personToView);","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"yuxunn"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"yuxunn"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"yuxunn":67}},{"path":"src/test/java/seedu/address/logic/parser/AddClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_TIME_DESC_AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_TIME_DESC_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.testutil.TypicalClients.AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.testutil.TypicalClients.BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.commands.AddClientCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"public class AddClientCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"    private final AddClientCommandParser parser \u003d new AddClientCommandParser();","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"        Client expectedClient \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).buildClient();","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"garylow2001"},"content":"                + ADDRESS_DESC_BOB + MEETING_TIME_DESC_BOB + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"garylow2001"},"content":"        Client expectedClientMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"jx124"},"content":"                .buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"garylow2001"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"garylow2001"},"content":"                        + MEETING_TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"garylow2001"},"content":"                new AddClientCommand(expectedClientMultipleTags));","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"garylow2001"},"content":"                + ADDRESS_DESC_BOB + MEETING_TIME_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"garylow2001"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"garylow2001"},"content":"                        + NAME_DESC_AMY + ADDRESS_DESC_AMY + MEETING_TIME_DESC_BOB","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"garylow2001"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"garylow2001"},"content":"                        PREFIX_MEETING_TIME, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"garylow2001"},"content":"        Client expectedClient \u003d new PersonBuilder(AMY).withTags().buildClient();","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"garylow2001"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"garylow2001"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + MEETING_TIME_DESC_AMY,","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"garylow2001"},"content":"                new AddClientCommand(expectedClient));","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":146,"author":{"gitId":"garylow2001"},"content":"        // no meeting time","lastModifiedDate":"2023-10-29"},{"lineNumber":147,"author":{"gitId":"garylow2001"},"content":"        Client expectedClient2 \u003d new PersonBuilder(BOB).withMeetingTime(null).buildClient();","lastModifiedDate":"2023-10-29"},{"lineNumber":148,"author":{"gitId":"garylow2001"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-29"},{"lineNumber":149,"author":{"gitId":"garylow2001"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-10-29"},{"lineNumber":150,"author":{"gitId":"garylow2001"},"content":"                new AddClientCommand(expectedClient2));","lastModifiedDate":"2023-10-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"garylow2001"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":182,"author":{"gitId":"garylow2001"},"content":"                + MEETING_TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":186,"author":{"gitId":"garylow2001"},"content":"                + MEETING_TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":190,"author":{"gitId":"garylow2001"},"content":"                + MEETING_TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"garylow2001"},"content":"                + MEETING_TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":198,"author":{"gitId":"garylow2001"},"content":"                + MEETING_TIME_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"garylow2001"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"garylow2001"},"content":"                + INVALID_ADDRESS_DESC + MEETING_TIME_DESC_BOB , Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":206,"author":{"gitId":"garylow2001"},"content":"                        + MEETING_TIME_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"garylow2001"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jx124":1,"garylow2001":67,"-":141}},{"path":"src/test/java/seedu/address/logic/parser/AddLeadCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_TIME_DESC_AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_TIME_DESC_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TIME;","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.testutil.TypicalLeads.AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.testutil.TypicalLeads.BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.commands.AddLeadCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"public class AddLeadCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"    private final AddLeadCommandParser parser \u003d new AddLeadCommandParser();","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"        Lead expectedLead \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).buildLead();","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"garylow2001"},"content":"                + ADDRESS_DESC_BOB + MEETING_TIME_DESC_BOB + TAG_DESC_FRIEND, new AddLeadCommand(expectedLead));","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"garylow2001"},"content":"        Lead expectedLeadMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"garylow2001"},"content":"                .buildLead();","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"garylow2001"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"garylow2001"},"content":"                        + MEETING_TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"garylow2001"},"content":"                new AddLeadCommand(expectedLeadMultipleTags));","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"garylow2001"},"content":"                + ADDRESS_DESC_BOB + MEETING_TIME_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"garylow2001"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"garylow2001"},"content":"                        + NAME_DESC_AMY + ADDRESS_DESC_AMY + MEETING_TIME_DESC_BOB","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"garylow2001"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"garylow2001"},"content":"                        PREFIX_MEETING_TIME, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"garylow2001"},"content":"        Lead expectedLead \u003d new PersonBuilder(AMY).withTags().buildLead();","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"garylow2001"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"garylow2001"},"content":"                        + ADDRESS_DESC_AMY + MEETING_TIME_DESC_AMY, new AddLeadCommand(expectedLead));","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"garylow2001"},"content":"        // no meeting time","lastModifiedDate":"2023-10-29"},{"lineNumber":146,"author":{"gitId":"garylow2001"},"content":"        Lead expectedLead2 \u003d new PersonBuilder(BOB).withMeetingTime(null).buildLead();","lastModifiedDate":"2023-10-29"},{"lineNumber":147,"author":{"gitId":"garylow2001"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-29"},{"lineNumber":148,"author":{"gitId":"garylow2001"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-10-29"},{"lineNumber":149,"author":{"gitId":"garylow2001"},"content":"                new AddLeadCommand(expectedLead2));","lastModifiedDate":"2023-10-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"garylow2001"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeadCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"garylow2001"},"content":"                + MEETING_TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"garylow2001"},"content":"                + MEETING_TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"garylow2001"},"content":"                + MEETING_TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"garylow2001"},"content":"                + MEETING_TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":197,"author":{"gitId":"garylow2001"},"content":"                + MEETING_TIME_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"garylow2001"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"garylow2001"},"content":"                + MEETING_TIME_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":205,"author":{"gitId":"garylow2001"},"content":"                        + ADDRESS_DESC_BOB + MEETING_TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"garylow2001"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeadCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"garylow2001":40,"-":168}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.testutil.TypicalClients.AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.testutil.TypicalLeads.ELLE;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.commands.AddClientCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.commands.AddLeadCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"yuxunn"},"content":"import seedu.address.logic.commands.ListClientCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"yuxunn"},"content":"import seedu.address.logic.commands.ListLeadCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"yuxunn"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"import seedu.address.testutil.ClientUtil;","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"import seedu.address.testutil.LeadUtil;","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"    public void parseCommand_addClient() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"        Client client \u003d new PersonBuilder(AMY).buildClient();","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"        AddClientCommand command \u003d (AddClientCommand) parser.parseCommand(ClientUtil.getAddClientCommand(client));","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"        assertEquals(new AddClientCommand(client), command);","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"    public void parseCommand_addLead() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"        Lead lead \u003d new PersonBuilder(ELLE).buildLead();","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"        AddLeadCommand command \u003d (AddLeadCommand) parser.parseCommand(LeadUtil.getAddLeadCommand(lead));","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"garylow2001"},"content":"        assertEquals(new AddLeadCommand(lead), command);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"garylow2001"},"content":"    public void parseCommand_edit_withClient() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"garylow2001"},"content":"        Client client \u003d new PersonBuilder().buildClient();","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"garylow2001"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(client).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"garylow2001"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"garylow2001"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"garylow2001"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"garylow2001"},"content":"    public void parseCommand_edit_withLead() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"garylow2001"},"content":"        Lead lead \u003d new PersonBuilder().buildLead();","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"garylow2001"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(lead).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"yuxunn"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"yuxunn"},"content":"    public void parseCommand_view() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"yuxunn"},"content":"        ViewCommand command \u003d (ViewCommand) parser.parseCommand(","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"yuxunn"},"content":"                ViewCommand.COMMAND_WORD + \" \" + 3);","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"yuxunn"},"content":"        assertEquals(new ViewCommand(Index.fromOneBased(3)), command);","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"yuxunn"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"yuxunn"},"content":"    public void parseCommand_listClient() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"yuxunn"},"content":"        assertTrue(parser.parseCommand(ListClientCommand.COMMAND_WORD) instanceof ListClientCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"yuxunn"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"yuxunn"},"content":"    public void parseCommand_listLead() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"yuxunn"},"content":"        assertTrue(parser.parseCommand(ListLeadCommand.COMMAND_WORD) instanceof ListLeadCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"yuxunn":19,"garylow2001":31,"-":92}},{"path":"src/test/java/seedu/address/logic/parser/ConvertClientToLeadCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LicongHuang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"LicongHuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.commands.ConvertClientToLeadCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"LicongHuang"},"content":"public class ConvertClientToLeadCommandParserTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"LicongHuang"},"content":"    private ConvertClientToLeadCommandParser parser \u003d new ConvertClientToLeadCommandParser();","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"LicongHuang"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"LicongHuang"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"LicongHuang"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"LicongHuang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ConvertClientToLeadCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"LicongHuang"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"LicongHuang"},"content":"    public void parse_validArgs_returnsConvertClientToLeadCommand() throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"LicongHuang"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"LicongHuang"},"content":"        ConvertClientToLeadCommand expectedConvertLeadToClientCommand \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"LicongHuang"},"content":"                new ConvertClientToLeadCommand(ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"LicongHuang"},"content":"        assertParseSuccess(parser, \"1\", expectedConvertLeadToClientCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"LicongHuang"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"LicongHuang":29}},{"path":"src/test/java/seedu/address/logic/parser/ConvertLeadToClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LicongHuang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"LicongHuang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"LicongHuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.commands.ConvertLeadToClientCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"LicongHuang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"LicongHuang"},"content":"public class ConvertLeadToClientCommandParserTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"LicongHuang"},"content":"    private ConvertLeadToClientCommandParser parser \u003d new ConvertLeadToClientCommandParser();","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"LicongHuang"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"LicongHuang"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"LicongHuang"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"LicongHuang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ConvertLeadToClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"LicongHuang"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"LicongHuang"},"content":"    public void parse_validArgs_returnsConvertClientToLeadCommand() throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"LicongHuang"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"LicongHuang"},"content":"        ConvertLeadToClientCommand expectedConvertLeadToClientCommand \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"LicongHuang"},"content":"                new ConvertLeadToClientCommand(ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"LicongHuang"},"content":"        assertParseSuccess(parser, \"1\", expectedConvertLeadToClientCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"LicongHuang"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"LicongHuang"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"LicongHuang"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"LicongHuang":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_TIME_DESC_AMY;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_TIME_AMY;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"garylow2001"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"garylow2001"},"content":"                + MEETING_TIME_DESC_AMY + NAME_DESC_AMY + TAG_DESC_HUSBAND + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"garylow2001"},"content":"                .withMeetingTime(VALID_MEETING_TIME_AMY).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"garylow2001"},"content":"        // meeting time","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"garylow2001"},"content":"        userInput \u003d targetIndex.getOneBased() + MEETING_TIME_DESC_AMY;","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"garylow2001"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withMeetingTime(VALID_MEETING_TIME_AMY).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"garylow2001"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":165,"author":{"gitId":"garylow2001"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"garylow2001":11,"-":205}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.MeetingTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"    private static final String INVALID_MEETING_TIME \u003d \"32/13/2020 2359\";","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"    private static final String VALID_MEETING_TIME \u003d \"24/10/2023 12:30\";","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"garylow2001"},"content":"    public void parseMeetingTime_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"garylow2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMeetingTime((String) null));","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"garylow2001"},"content":"    public void parseMeetingTime_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"garylow2001"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMeetingTime(INVALID_MEETING_TIME));","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"garylow2001"},"content":"    public void parseMeetingTime_validValueWithoutWhitespace_returnsMeetingTime() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"garylow2001"},"content":"        MeetingTime expectedMeetingTime \u003d new MeetingTime(VALID_MEETING_TIME);","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"garylow2001"},"content":"        assertEquals(expectedMeetingTime, ParserUtil.parseMeetingTime(VALID_MEETING_TIME));","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"garylow2001"},"content":"    public void parseMeetingTime_validValueWithWhitespace_returnsTrimmedMeetingTime() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"garylow2001"},"content":"        String meetingTimeWithWhiteSpace \u003d WHITESPACE + VALID_MEETING_TIME + WHITESPACE;","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"garylow2001"},"content":"        MeetingTime expectedMeetingTime \u003d new MeetingTime(VALID_MEETING_TIME);","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"garylow2001"},"content":"        assertEquals(expectedMeetingTime, ParserUtil.parseMeetingTime(meetingTimeWithWhiteSpace));","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"garylow2001":26,"-":196}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"yuxunn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"yuxunn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"yuxunn"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"yuxunn"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"yuxunn"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"yuxunn"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"yuxunn"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"yuxunn"},"content":"        assertParseSuccess(parser, \"2\", new ViewCommand(Index.fromOneBased(2)));","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"yuxunn"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"yuxunn":23}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"tiif"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.testutil.TypicalLeads.BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tiif"},"content":"import static seedu.address.testutil.TypicalLeads.GEORGE;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"    public void resetData_withDuplicateClients_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"        Client editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"jx124"},"content":"                .buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"tiif"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"tiif"},"content":"    public void resetData_withDuplicateLeads_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"tiif"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"garylow2001"},"content":"        Lead editedGeorge \u003d new PersonBuilder(GEORGE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"garylow2001"},"content":"                .buildLead();","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"tiif"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(GEORGE, editedGeorge);","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"tiif"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"tiif"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"garylow2001"},"content":"    public void hasPerson_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"garylow2001"},"content":"        addressBook.addClient(ALICE);","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"garylow2001"},"content":"    public void hasPerson_leadInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"garylow2001"},"content":"        addressBook.addLead(GEORGE);","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"tiif"},"content":"        assertTrue(addressBook.hasPerson(GEORGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"garylow2001"},"content":"    public void hasPerson_clientWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"garylow2001"},"content":"        addressBook.addClient(ALICE);","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"jx124"},"content":"                .buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"tiif"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"tiif"},"content":"    public void hasLead_leadWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"garylow2001"},"content":"        addressBook.addLead(GEORGE);","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"tiif"},"content":"        Person editedGeorge \u003d new PersonBuilder(GEORGE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"tiif"},"content":"                .buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"tiif"},"content":"        assertTrue(addressBook.hasPerson(editedGeorge));","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"garylow2001"},"content":"    public void equalsMethodSameObject() {","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"garylow2001"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"garylow2001"},"content":"        assertTrue(addressBook.equals(addressBook));","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"garylow2001"},"content":"    public void equalsMethodSamePersonsList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"garylow2001"},"content":"        AddressBook addressBook1 \u003d new AddressBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"garylow2001"},"content":"        AddressBook addressBook2 \u003d new AddressBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"garylow2001"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"garylow2001"},"content":"            addressBook1.addPerson(person);","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"garylow2001"},"content":"            addressBook2.addPerson(person);","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"garylow2001"},"content":"        assertTrue(addressBook1.equals(addressBook2));","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"garylow2001"},"content":"    public void equalsMethodDifferentPersonsList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"garylow2001"},"content":"        AddressBook addressBook1 \u003d new AddressBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"garylow2001"},"content":"        AddressBook addressBook2 \u003d new AddressBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"garylow2001"},"content":"        List\u003cPerson\u003e persons1 \u003d Arrays.asList(ALICE);","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"garylow2001"},"content":"        List\u003cPerson\u003e persons2 \u003d Arrays.asList(BOB);","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"garylow2001"},"content":"        addressBook1.setPersons(persons1);","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"garylow2001"},"content":"        addressBook1.setPersons(persons2);","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"garylow2001"},"content":"        assertFalse(addressBook1.equals(addressBook2));","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"tiif":19,"jx124":2,"garylow2001":44,"-":99}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"garylow2001"},"content":"        assertFalse(modelManager.hasPerson(ELLE));","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"garylow2001"},"content":"    public void hasPerson_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"garylow2001"},"content":"        modelManager.addClient(ALICE);","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"garylow2001"},"content":"    public void hasPerson_leadInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"garylow2001"},"content":"        modelManager.addLead(ELLE);","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"garylow2001"},"content":"        assertTrue(modelManager.hasPerson(ELLE));","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"garylow2001":10,"-":130}},{"path":"src/test/java/seedu/address/model/person/ClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"tiif"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"tiif"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"tiif"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"tiif"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"tiif"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"tiif"},"content":"import static seedu.address.testutil.TypicalClients.BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"tiif"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"tiif"},"content":"import seedu.address.testutil.TypicalClients;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"public class ClientTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"tiif"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"tiif"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"tiif"},"content":"        Person person \u003d new PersonBuilder().buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"tiif"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"tiif"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"tiif"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"tiif"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"tiif"},"content":"        assertTrue(TypicalClients.ALICE.isSamePerson(TypicalClients.ALICE));","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"tiif"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"tiif"},"content":"        assertFalse(TypicalClients.ALICE.isSamePerson(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"tiif"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"tiif"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalClients.ALICE)","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"tiif"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"tiif"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"tiif"},"content":"        assertTrue(TypicalClients.ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"tiif"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"tiif"},"content":"        editedAlice \u003d new PersonBuilder(TypicalClients.ALICE).withName(VALID_NAME_BOB).buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"tiif"},"content":"        assertFalse(TypicalClients.ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"tiif"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"tiif"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"tiif"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"tiif"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"tiif"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"tiif"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"tiif"},"content":"    public void equals() {","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"tiif"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"tiif"},"content":"        Person aliceCopy \u003d new PersonBuilder(TypicalClients.ALICE).buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"tiif"},"content":"        assertTrue(TypicalClients.ALICE.equals(aliceCopy));","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"tiif"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"tiif"},"content":"        assertTrue(TypicalClients.ALICE.equals(TypicalClients.ALICE));","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"tiif"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"tiif"},"content":"        assertFalse(TypicalClients.ALICE.equals(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"tiif"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"tiif"},"content":"        assertFalse(TypicalClients.ALICE.equals(5));","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"tiif"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"tiif"},"content":"        assertFalse(TypicalClients.ALICE.equals(BOB));","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"tiif"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"tiif"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalClients.ALICE).withName(VALID_NAME_BOB).buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"tiif"},"content":"        assertFalse(TypicalClients.ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"tiif"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"tiif"},"content":"        editedAlice \u003d new PersonBuilder(TypicalClients.ALICE).withPhone(VALID_PHONE_BOB).buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"tiif"},"content":"        assertFalse(TypicalClients.ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"tiif"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"tiif"},"content":"        editedAlice \u003d new PersonBuilder(TypicalClients.ALICE).withEmail(VALID_EMAIL_BOB).buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"tiif"},"content":"        assertFalse(TypicalClients.ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"tiif"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"tiif"},"content":"        editedAlice \u003d new PersonBuilder(TypicalClients.ALICE).withAddress(VALID_ADDRESS_BOB).buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"tiif"},"content":"        assertFalse(TypicalClients.ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"tiif"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"tiif"},"content":"        editedAlice \u003d new PersonBuilder(TypicalClients.ALICE).withTags(VALID_TAG_HUSBAND).buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"tiif"},"content":"        assertFalse(TypicalClients.ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"tiif"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"tiif"},"content":"        Person bobCopy \u003d new PersonBuilder(BOB).buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"tiif"},"content":"        assertTrue(BOB.equals(bobCopy));","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"tiif"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"tiif"},"content":"        assertTrue(BOB.equals(BOB));","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"tiif"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.equals(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"tiif"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.equals(5));","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"tiif"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.equals(TypicalClients.ALICE));","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"tiif"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"tiif"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_AMY).buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"tiif"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"tiif"},"content":"        editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY).buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"tiif"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"tiif"},"content":"        editedBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY).buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"tiif"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"tiif"},"content":"        editedBob \u003d new PersonBuilder(BOB).withAddress(VALID_ADDRESS_AMY).buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"tiif"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"tiif"},"content":"        editedBob \u003d new PersonBuilder(BOB).withTags(VALID_TAG_HUSBAND).buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"tiif"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"tiif"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"jx124"},"content":"        String expected \u003d Client.class.getCanonicalName() + \"{name\u003d\" + TypicalClients.ALICE.getName()","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"tiif"},"content":"                + \", phone\u003d\" + TypicalClients.ALICE.getPhone()","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"jx124"},"content":"                + \", email\u003d\" + TypicalClients.ALICE.getEmail()","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"jx124"},"content":"                + \", type\u003d\" + TypicalClients.ALICE.getType()","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"jx124"},"content":"                + \", address\u003d\" + TypicalClients.ALICE.getAddress()","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"garylow2001"},"content":"                + \", meetingTime\u003d\" + TypicalClients.ALICE.getMeetingTime()","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"garylow2001"},"content":"                + \", tags\u003d\" + TypicalClients.ALICE.getTags() + \"}\";","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"tiif"},"content":"        assertEquals(expected, TypicalClients.ALICE.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"jx124"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"jx124"},"content":"    public void isClient() {","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"jx124"},"content":"        assertTrue(ALICE.isClient());","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"jx124"},"content":"        assertFalse(ALICE.isLead());","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"tiif":133,"jx124":16,"garylow2001":2}},{"path":"src/test/java/seedu/address/model/person/LeadTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tiif"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"tiif"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"tiif"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"tiif"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"tiif"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"tiif"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"tiif"},"content":"import static seedu.address.testutil.TypicalLeads.ALICE;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"tiif"},"content":"import static seedu.address.testutil.TypicalLeads.BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"tiif"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"tiif"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"tiif"},"content":"public class LeadTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"tiif"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"tiif"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"tiif"},"content":"        Person person \u003d new PersonBuilder().buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"tiif"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"tiif"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"tiif"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"tiif"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"tiif"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"tiif"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"tiif"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"tiif"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"tiif"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"tiif"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"tiif"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"tiif"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"tiif"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"tiif"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"tiif"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"tiif"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"tiif"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"tiif"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"tiif"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"tiif"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"tiif"},"content":"    public void equals() {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"tiif"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"tiif"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"tiif"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"tiif"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"tiif"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"tiif"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"tiif"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"tiif"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"tiif"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"tiif"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"tiif"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"tiif"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"tiif"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"tiif"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"tiif"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"tiif"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"tiif"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"tiif"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"tiif"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"tiif"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"tiif"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"tiif"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"tiif"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"tiif"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"tiif"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"tiif"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"tiif"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"tiif"},"content":"        Person bobCopy \u003d new PersonBuilder(BOB).buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"tiif"},"content":"        assertTrue(BOB.equals(bobCopy));","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"tiif"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"tiif"},"content":"        assertTrue(BOB.equals(BOB));","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"tiif"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.equals(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"tiif"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.equals(5));","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"tiif"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.equals(ALICE));","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"tiif"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"tiif"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_AMY).buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"tiif"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"tiif"},"content":"        editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY).buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"tiif"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"tiif"},"content":"        editedBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY).buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"tiif"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"tiif"},"content":"        editedBob \u003d new PersonBuilder(BOB).withAddress(VALID_ADDRESS_AMY).buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"tiif"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"tiif"},"content":"        editedBob \u003d new PersonBuilder(BOB).withTags(VALID_TAG_HUSBAND).buildLead();","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"tiif"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"tiif"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"tiif"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"jx124"},"content":"        String expected \u003d Lead.class.getCanonicalName()","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"jx124"},"content":"                + \"{name\u003d\" + ALICE.getName()","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"jx124"},"content":"                + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"jx124"},"content":"                + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"jx124"},"content":"                + \", type\u003d\" + ALICE.getType()","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"jx124"},"content":"                + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"garylow2001"},"content":"                + \", meetingTime\u003d\" + ALICE.getMeetingTime()","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"garylow2001"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"tiif"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"tiif"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"tiif":137,"jx124":6,"garylow2001":2}},{"path":"src/test/java/seedu/address/model/person/MeetingTimeFormatterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"public class MeetingTimeFormatterTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"    public void parse() {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"        // null meeting time string","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e MeetingTimeFormatter.parse(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"        // invalid meeting time strings","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e MeetingTimeFormatter.parse(\"\")); // empty string","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e MeetingTimeFormatter.parse(\" \")); // spaces only","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e MeetingTimeFormatter.parse(\"meeting\")); // non-numeric","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"                MeetingTimeFormatter.parse(\"23/10/2023\")); // only date and no time","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"                MeetingTimeFormatter.parse(\"2/1/2023\")); // date not enough numbers","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"                MeetingTimeFormatter.parse(\"23-10-2023 10:53pm\")); // datetime with wrong format","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"                MeetingTimeFormatter.parse(\"23/10/2023 10.53\")); // datetime with wrong format","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"        // valid meeting time strings","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"        LocalDateTime meetingTime1 \u003d LocalDateTime.parse(\"2023-10-23T15:30:00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"        assertEquals(MeetingTimeFormatter.parse(\"23/10/2023 15:30\"), meetingTime1);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"        LocalDateTime meetingTime2 \u003d LocalDateTime.parse(\"2020-12-31T12:00:00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"        assertEquals(MeetingTimeFormatter.parse(\"31/12/2020 12:00\"), meetingTime2);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"        LocalDateTime meetingTime3 \u003d LocalDateTime.parse(\"2021-01-01T00:00:00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"        assertEquals(MeetingTimeFormatter.parse(\"01/01/2021 00:00\"), meetingTime3);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"    public void format() {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"        // null meeting time","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e MeetingTimeFormatter.format(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"        // valid meeting time","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"        LocalDateTime meetingTime1 \u003d LocalDateTime.parse(\"2023-10-23T15:30:00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"        assertEquals(MeetingTimeFormatter.format(meetingTime1), \"23/10/2023 15:30\");","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"        LocalDateTime meetingTime2 \u003d LocalDateTime.parse(\"2020-12-31T12:00:00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"        assertEquals(MeetingTimeFormatter.format(meetingTime2), \"31/12/2020 12:00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"        LocalDateTime meetingTime3 \u003d LocalDateTime.parse(\"2021-01-01T00:00:00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"        assertEquals(MeetingTimeFormatter.format(meetingTime3), \"01/01/2021 00:00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"    public void isValid() {","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"garylow2001"},"content":"        // null meeting time string","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e MeetingTimeFormatter.isValid(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"garylow2001"},"content":"        // invalid meeting time strings","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"garylow2001"},"content":"        assertFalse(MeetingTimeFormatter.isValid(\"\")); // empty string","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"garylow2001"},"content":"        assertFalse(MeetingTimeFormatter.isValid(\" \")); // spaces only","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"garylow2001"},"content":"        assertFalse(MeetingTimeFormatter.isValid(\"meeting\")); // non-numeric","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"garylow2001"},"content":"        assertFalse(MeetingTimeFormatter.isValid(\"23/10/2023\")); // only date and no time","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"garylow2001"},"content":"        assertFalse(MeetingTimeFormatter.isValid(\"2/1/2023\")); // date not enough numbers","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"garylow2001"},"content":"        assertFalse(MeetingTimeFormatter.isValid(\"23-10-2023 10:53pm\")); // datetime with wrong format","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"garylow2001"},"content":"        assertFalse(MeetingTimeFormatter.isValid(\"23/10/2023 10.53\")); // datetime with wrong format","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"garylow2001"},"content":"        // valid meeting time strings","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"garylow2001"},"content":"        assertTrue(MeetingTimeFormatter.isValid(\"23/10/2023 15:30\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"garylow2001"},"content":"        assertTrue(MeetingTimeFormatter.isValid(\"31/12/2020 12:00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"garylow2001"},"content":"        assertTrue(MeetingTimeFormatter.isValid(\"01/01/2021 00:00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"garylow2001":74}},{"path":"src/test/java/seedu/address/model/person/MeetingTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"public class MeetingTimeTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MeetingTime(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"    public void constructor_invalidMeetingTime_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"        String invalidMeetingTime \u003d \"32/13/2020 25:00\";","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new MeetingTime(invalidMeetingTime));","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"    public void isValidMeetingTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"        // null meeting time string","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e MeetingTime.isValidMeetingTime(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"        // invalid meeting time strings","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"        assertFalse(MeetingTime.isValidMeetingTime(\"\")); // empty string","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"        assertFalse(MeetingTime.isValidMeetingTime(\" \")); // spaces only","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"        assertFalse(MeetingTime.isValidMeetingTime(\"meeting\")); // non-numeric","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"        assertFalse(MeetingTime.isValidMeetingTime(\"23/10/2023\")); // only date and no time","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"        assertFalse(MeetingTime.isValidMeetingTime(\"2/1/2023\")); // date not enough numbers","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"        assertFalse(MeetingTime.isValidMeetingTime(\"23-10-2023 10:53pm\")); // datetime with wrong format","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"        assertFalse(MeetingTime.isValidMeetingTime(\"23/10/2023 10.53\")); // datetime with wrong format","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"        // valid meeting time strings","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"        assertTrue(MeetingTime.isValidMeetingTime(\"23/10/2023 15:30\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"        assertTrue(MeetingTime.isValidMeetingTime(\"31/12/2020 12:00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"        assertTrue(MeetingTime.isValidMeetingTime(\"01/01/2021 00:00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"        MeetingTime meetingTime \u003d new MeetingTime(\"23/10/2023 15:30\");","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"        assertTrue(meetingTime.equals(new MeetingTime(\"23/10/2023 15:30\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"        assertTrue(meetingTime.equals(meetingTime));","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"        assertFalse(meetingTime.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"        assertFalse(meetingTime.equals(5.0f));","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"        assertFalse(meetingTime.equals(new MeetingTime(\"12/10/2025 10:20\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"garylow2001":61}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"jx124"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").buildClient()));","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"jx124"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").buildClient()));","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"jx124"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").buildClient()));","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"jx124"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").buildClient()));","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"jx124"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").buildClient()));","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"jx124"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").buildClient()));","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"jx124"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").buildClient()));","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jx124":7,"-":78}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"jx124"},"content":"        Person person \u003d new PersonBuilder().buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"jx124"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"jx124"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"jx124"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"jx124"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"jx124"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"jx124"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"jx124"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"jx124"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"jx124"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"jx124"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"jx124"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"jx124"},"content":"        Person bobCopy \u003d new PersonBuilder(BOB).buildLead();","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"jx124"},"content":"        assertTrue(BOB.equals(bobCopy));","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"jx124"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"jx124"},"content":"        assertTrue(BOB.equals(BOB));","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"jx124"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"jx124"},"content":"        assertFalse(BOB.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"jx124"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"jx124"},"content":"        assertFalse(BOB.equals(5));","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"jx124"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"jx124"},"content":"        assertFalse(BOB.equals(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"jx124"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"jx124"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_AMY).buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"jx124"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"jx124"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"jx124"},"content":"        editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY).buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"jx124"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"jx124"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"jx124"},"content":"        editedBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY).buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"jx124"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"jx124"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"jx124"},"content":"        editedBob \u003d new PersonBuilder(BOB).withAddress(VALID_ADDRESS_AMY).buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"jx124"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"jx124"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"jx124"},"content":"        editedBob \u003d new PersonBuilder(BOB).withTags(VALID_TAG_HUSBAND).buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"jx124"},"content":"        assertFalse(BOB.equals(editedBob));","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"garylow2001"},"content":"        String expected \u003d Client.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName()","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"garylow2001"},"content":"                + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"garylow2001"},"content":"                + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"garylow2001"},"content":"                + \", type\u003d\" + ALICE.getType()","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"garylow2001"},"content":"                + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"garylow2001"},"content":"                + \", meetingTime\u003d\" + ALICE.getMeetingTime()","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"garylow2001"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":147,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":148,"author":{"gitId":"garylow2001"},"content":"    public void getMeetingTimeStringForUserInterface() {","lastModifiedDate":"2023-10-29"},{"lineNumber":149,"author":{"gitId":"garylow2001"},"content":"        // non-empty meeting time","lastModifiedDate":"2023-10-29"},{"lineNumber":150,"author":{"gitId":"garylow2001"},"content":"        String expected \u003d \"Meeting on: \" + BENSON.getMeetingTime().get();","lastModifiedDate":"2023-10-29"},{"lineNumber":151,"author":{"gitId":"garylow2001"},"content":"        assertEquals(expected, BENSON.getMeetingTimeStringForUserInterface());","lastModifiedDate":"2023-10-29"},{"lineNumber":152,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":153,"author":{"gitId":"garylow2001"},"content":"        // empty meeting time","lastModifiedDate":"2023-10-29"},{"lineNumber":154,"author":{"gitId":"garylow2001"},"content":"        Person person \u003d new PersonBuilder(ALICE).withMeetingTime(null).buildClient();","lastModifiedDate":"2023-10-29"},{"lineNumber":155,"author":{"gitId":"garylow2001"},"content":"        assertNull(person.getMeetingTimeStringForUserInterface());","lastModifiedDate":"2023-10-29"},{"lineNumber":156,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jx124":51,"garylow2001":20,"-":86}},{"path":"src/test/java/seedu/address/model/person/TypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"public class TypeTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Type(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"    public void constructor_null_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"        String invalidType \u003d \"\";","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Type(invalidType));","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"    public void isValidType() {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"        // null type","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"        assertThrows(NullPointerException.class, () -\u003e Type.isValidType(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"        // blank type","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"jx124"},"content":"        assertFalse(Type.isValidType(\"\")); // empty string","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"jx124"},"content":"        assertFalse(Type.isValidType(\" \")); // spaces only","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"jx124"},"content":"        // invalid types","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"jx124"},"content":"        assertFalse(Type.isValidType(\"friend\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"jx124"},"content":"        assertFalse(Type.isValidType(\"classmate\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"jx124"},"content":"        // valid types","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"jx124"},"content":"        assertTrue(Type.isValidType(\"client\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"jx124"},"content":"        assertTrue(Type.isValidType(\"lead\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"jx124"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"jx124"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"jx124"},"content":"        Type type \u003d new Type(\"client\");","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"jx124"},"content":"        assertEquals(type.toString(), \"client\");","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"jx124"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"jx124"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"jx124"},"content":"        Type type \u003d new Type(\"client\");","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"jx124"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"jx124"},"content":"        assertTrue(type.equals(new Type(\"client\")));","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"jx124"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"jx124"},"content":"        assertTrue(type.equals(type));","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"jx124"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"jx124"},"content":"        assertFalse(type.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"jx124"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"jx124"},"content":"        assertFalse(type.equals(5.0f));","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"jx124"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"jx124"},"content":"        assertFalse(type.equals(new Type(\"lead\")));","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"jx124":65}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"jx124"},"content":"                .buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"jx124"},"content":"                .buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jx124":2,"-":173}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON_NO_MEETING_TIME;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.MeetingTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"    private static final String INVALID_TYPE \u003d \"friend\";","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"    private static final String INVALID_MEETING_TIME \u003d \"1x/dd/2023 14:303\";","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"jx124"},"content":"    private static final String VALID_TYPE \u003d BENSON.getType().toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"    private static final String VALID_MEETING_TIME \u003d BENSON.getMeetingTime().toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"    public void toModelType_nullMeetingTimeWithOtherPersonDetailsValid_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TYPE,","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"                        VALID_ADDRESS, null, VALID_TAGS);","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"        assertEquals(BENSON_NO_MEETING_TIME, person.toModelType());","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TYPE,","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"                        VALID_ADDRESS, VALID_MEETING_TIME, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"jx124"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_TYPE,","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"garylow2001"},"content":"                VALID_ADDRESS, VALID_MEETING_TIME, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"garylow2001"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_TYPE,","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"garylow2001"},"content":"                        VALID_ADDRESS, VALID_MEETING_TIME, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"jx124"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_TYPE,","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"garylow2001"},"content":"                VALID_ADDRESS, VALID_MEETING_TIME, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"garylow2001"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_TYPE,","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"garylow2001"},"content":"                        VALID_ADDRESS, VALID_MEETING_TIME, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"jx124"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_TYPE,","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"garylow2001"},"content":"                VALID_ADDRESS, VALID_MEETING_TIME, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"garylow2001"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TYPE,","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"garylow2001"},"content":"                        INVALID_ADDRESS, VALID_MEETING_TIME, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"garylow2001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TYPE,","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"garylow2001"},"content":"                null, VALID_MEETING_TIME, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"jx124"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"jx124"},"content":"    public void toModelType_invalidType_throwsIllegalValueException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"jx124"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"garylow2001"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_TYPE,","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"garylow2001"},"content":"                        VALID_ADDRESS, VALID_MEETING_TIME, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"jx124"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"jx124"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"jx124"},"content":"    public void toModelType_nullType_throwsIllegalValueException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"jx124"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"garylow2001"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"garylow2001"},"content":"                        VALID_ADDRESS, VALID_MEETING_TIME, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"jx124"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"garylow2001"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TYPE,","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"garylow2001"},"content":"                        VALID_ADDRESS, VALID_MEETING_TIME, invalidTags);","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"garylow2001"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"garylow2001"},"content":"    public void toModelType_invalidMeetingTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"garylow2001"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"garylow2001"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TYPE,","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"garylow2001"},"content":"                        VALID_ADDRESS, INVALID_MEETING_TIME, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"garylow2001"},"content":"        String expectedMessage \u003d MeetingTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"garylow2001"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jx124":17,"garylow2001":39,"-":101}},{"path":"src/test/java/seedu/address/testutil/ClientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.commands.AddClientCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":" * A utility class for Client.","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"public class ClientUtil {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"     * Returns an AddClient command string for adding the {@code client}.","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"    public static String getAddClientCommand(Client client) {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"        return AddClientCommand.COMMAND_WORD + \" \" + getClientDetails(client);","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"     * Returns the part of command string for the given {@code client}\u0027s details.","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"    private static String getClientDetails(Client client) {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"        sb.append(PREFIX_NAME + client.getName().fullName + \" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"        sb.append(PREFIX_PHONE + client.getPhone().value + \" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"        sb.append(PREFIX_EMAIL + client.getEmail().value + \" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"        sb.append(PREFIX_ADDRESS + client.getAddress().value + \" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"        client.getMeetingTime().ifPresent(meetingTime -\u003e sb.append(PREFIX_MEETING_TIME","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"                + meetingTime.toString() + \" \"));","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"        client.getTags().stream().forEach(","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"        );","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"garylow2001":41}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.MeetingTime;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"        descriptor.setMeetingTime(person.getMeetingTime());","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"garylow2001"},"content":"     * Sets the {@code MeetingTime} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"garylow2001"},"content":"    public EditPersonDescriptorBuilder withMeetingTime(String meetingTime) {","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"garylow2001"},"content":"        descriptor.setMeetingTime(Optional.of(new MeetingTime(meetingTime)));","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"garylow2001"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"garylow2001":11,"-":87}},{"path":"src/test/java/seedu/address/testutil/LeadUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"import seedu.address.logic.commands.AddLeadCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":" * A utility class for Lead.","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"public class LeadUtil {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"     * Returns an AddClient command string for adding the {@code lead}.","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"    public static String getAddLeadCommand(Lead lead) {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"        return AddLeadCommand.COMMAND_WORD + \" \" + getLeadDetails(lead);","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"     * Returns the part of command string for the given {@code lead}\u0027s details.","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"    private static String getLeadDetails(Lead lead) {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"        sb.append(PREFIX_NAME + lead.getName().fullName + \" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"        sb.append(PREFIX_PHONE + lead.getPhone().value + \" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"        sb.append(PREFIX_EMAIL + lead.getEmail().value + \" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"        sb.append(PREFIX_ADDRESS + lead.getAddress().value + \" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"        lead.getMeetingTime().ifPresent(meetingTime -\u003e sb.append(PREFIX_MEETING_TIME","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"                + meetingTime.toString() + \" \"));","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"        lead.getTags().stream().forEach(","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"        );","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"garylow2001":41}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.MeetingTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"    private Optional\u003cMeetingTime\u003e meetingTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"        meetingTime \u003d Optional.empty();","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"        meetingTime \u003d personToCopy.getMeetingTime();","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"garylow2001"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"garylow2001"},"content":"     * Sets the {@code MeetingTime} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"garylow2001"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"garylow2001"},"content":"    public PersonBuilder withMeetingTime(String meetingTime) {","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"garylow2001"},"content":"        if (meetingTime \u003d\u003d null) {","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"garylow2001"},"content":"            this.meetingTime \u003d Optional.empty();","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"garylow2001"},"content":"            return this;","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"garylow2001"},"content":"        this.meetingTime \u003d Optional.of(new MeetingTime(meetingTime));","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"garylow2001"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"garylow2001"},"content":"    public Client buildClient() {","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"garylow2001"},"content":"        return new Client(name, phone, email, address, meetingTime, tags);","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"garylow2001"},"content":"    public Lead buildLead() {","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"garylow2001"},"content":"        return new Lead(name, phone, email, address, meetingTime, tags);","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"jx124":1,"garylow2001":21,"-":96}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"        descriptor.getMeetingTime().ifPresent(meetingTime -\u003e sb.append(PREFIX_MEETING_TIME)","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"                .append(meetingTime).append(\" \"));","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"garylow2001":3,"-":38}},{"path":"src/test/java/seedu/address/testutil/TypicalClients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tiif"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_TIME_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_TIME_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"tiif"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"tiif"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"tiif"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"tiif"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"tiif"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"tiif"},"content":" * A utility class containing a list of {@code Client} objects to be used in tests.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"tiif"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"tiif"},"content":"public class TypicalClients {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"    public static final Client ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"tiif"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"tiif"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"            .withTags(\"friends\").withMeetingTime(\"24/10/2023 12:30\").buildClient();","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"    public static final Client BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"tiif"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"tiif"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"            .withTags(\"owesMoney\", \"friends\").withMeetingTime(\"24/10/2023 12:30\").buildClient();","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"    public static final Client CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"            .withMeetingTime(\"24/10/2023 12:30\").buildClient();","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"    public static final Client DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"            .withTags(\"friends\").withMeetingTime(\"24/10/2023 12:30\").buildClient();","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"    public static final Client ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"            .withMeetingTime(\"24/10/2023 12:30\").buildClient();","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"    public static final Client FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"            .withMeetingTime(\"24/10/2023 12:30\").buildClient();","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"    public static final Client GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withMeetingTime(\"24/10/2023 12:30\").buildClient();","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"tiif"},"content":"    // Manually added","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"    public static final Client HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"            .withMeetingTime(\"24/10/2023 12:30\").buildClient();","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"    public static final Client IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withMeetingTime(\"24/10/2023 12:30\").buildClient();","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"    // Manually added - Client\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"    public static final Client AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"garylow2001"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"garylow2001"},"content":"            .withMeetingTime(VALID_MEETING_TIME_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"garylow2001"},"content":"            .buildClient();","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"garylow2001"},"content":"    public static final Client BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"garylow2001"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"garylow2001"},"content":"            .withMeetingTime(VALID_MEETING_TIME_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"tiif"},"content":"            .buildClient();","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"tiif"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"tiif"},"content":"    private TypicalClients() {} // prevents instantiation","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"tiif"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"tiif"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"tiif"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"tiif"},"content":"    public static AddressBook getTypicalClientsAddressBook() {","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"tiif"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"garylow2001"},"content":"        for (Client person : getTypicalClients()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"garylow2001"},"content":"            ab.addClient(person);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"tiif"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"tiif"},"content":"        return ab;","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"garylow2001"},"content":"    public static List\u003cClient\u003e getTypicalClients() {","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"tiif"},"content":"        //todo: change here","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"tiif"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"tiif"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"tiif":39,"garylow2001":48}},{"path":"src/test/java/seedu/address/testutil/TypicalLeads.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tiif"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_TIME_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_TIME_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"tiif"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"tiif"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"tiif"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"tiif"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"tiif"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"tiif"},"content":" * A utility class containing a list of {@code Lead} objects to be used in tests.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"tiif"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"tiif"},"content":"public class TypicalLeads {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"    public static final Lead ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"tiif"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"tiif"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"            .withTags(\"friends\").withMeetingTime(\"24/10/2023 12:30\").buildLead();","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"    public static final Lead BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"tiif"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"tiif"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"            .withTags(\"owesMoney\", \"friends\").withMeetingTime(\"24/10/2023 12:30\").buildLead();","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"    public static final Lead CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"            .withMeetingTime(\"24/10/2023 12:30\").buildLead();","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"    public static final Lead DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"            .withMeetingTime(\"24/10/2023 12:30\").buildLead();","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"    public static final Lead ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"            .withMeetingTime(\"24/10/2023 12:30\").buildLead();","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"    public static final Lead FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"            .withMeetingTime(\"24/10/2023 12:30\").buildLead();","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"    public static final Lead GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"            .withMeetingTime(\"24/10/2023 12:30\").buildLead();","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"tiif"},"content":"    // Manually added","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"    public static final Lead HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"            .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).buildLead();","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"    public static final Lead IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withMeetingTime(\"24/10/2023 12:30\").buildLead();","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"    // Manually added - Lead\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"    public static final Lead AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"garylow2001"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"garylow2001"},"content":"            .withTags(VALID_TAG_FRIEND).withMeetingTime(VALID_MEETING_TIME_AMY).buildLead();","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"garylow2001"},"content":"    public static final Lead BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"garylow2001"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"garylow2001"},"content":"            .withMeetingTime(VALID_MEETING_TIME_BOB)","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"garylow2001"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).buildLead();","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"tiif"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"tiif"},"content":"    private TypicalLeads() {} // prevents instantiation","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"tiif"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"tiif"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"tiif"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"tiif"},"content":"    public static AddressBook getTypicalLeadsAddressBook() {","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"tiif"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"garylow2001"},"content":"        for (Lead person : getTypicalLeads()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"garylow2001"},"content":"            ab.addLead(person);","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"tiif"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"tiif"},"content":"        return ab;","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"tiif"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"garylow2001"},"content":"    public static List\u003cLead\u003e getTypicalLeads() {","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"tiif"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"tiif"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"tiif"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"tiif":36,"garylow2001":49}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_TIME_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_TIME_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Client;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"import seedu.address.model.person.Lead;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"    public static final Client ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"            .withPhone(\"94351253\").withTags(\"friends\").buildClient();","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"    public static final Client BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"            .withMeetingTime(\"12/12/2020 12:00\")","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"            .withTags(\"owesMoney\", \"friends\").buildClient();","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"    public static final Client BENSON_NO_MEETING_TIME \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"jx124"},"content":"            .withTags(\"owesMoney\", \"friends\").buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"    public static final Client CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jx124"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"    public static final Client DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jx124"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"    public static final Lead ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jx124"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").buildLead();","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"    public static final Lead FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"jx124"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").buildLead();","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"    public static final Lead GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"jx124"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").buildLead();","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"    public static final Client HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"jx124"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"    public static final Client IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jx124"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").buildClient();","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"    public static final Client AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"garylow2001"},"content":"            .withMeetingTime(VALID_MEETING_TIME_AMY).buildClient();","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"garylow2001"},"content":"    public static final Lead BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"garylow2001"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"garylow2001"},"content":"            .withMeetingTime(VALID_MEETING_TIME_BOB).buildLead();","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"jx124":8,"garylow2001":23,"-":52}}]

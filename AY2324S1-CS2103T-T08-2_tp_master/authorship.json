[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"# NetworkBook","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/ay2324s1-cs2103t-t08-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T08-2/tp/actions)","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T08-2/tp/graph/badge.svg?token\u003dEJ0Y5D4SRQ)](https://codecov.io/gh/AY2324S1-CS2103T-T08-2/tp)","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"- This is **NetworkBook, developed for the team project component of CS2103T AY2324-S1**.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"- The project is based on the [_AddressBook-Level3_](https://se-education.org/addressbook-level3) software project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"- Networking is crucial to the career development of computing students and computing professionals. However, it can be hard to keep track of the many people we network with in university.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"- NetworkBook aims to be an **easy-to-use** tool which helps current and future computing professionals from NUS **manage contact information of their network**.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Project direction","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"1. **Product name:** NetworkBook","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"2. **Target user profile:** Computing Professionals from NUS/studying in NUS who are looking to network with each other.","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"3. **Value proposition:** As computing students and professionals network with alumni to expand their career prospects, our app keeps a list of contacts of people that each user networks with.","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"- Users can sort contacts by priority, courses taken/taking, specialisation(s) taken/intending to take.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"- This project is offline, and has a static online page that contains user manual and download link.","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Contributors","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"[[About Us](docs/AboutUs.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"- Nguyen Khoi Nguyen","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"- Luo Jiale","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"- Edwin Zheng Yuanyi","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"xenosf"},"content":"- Aw Hang Bin","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"- Xenos Fiorenzo Anong","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"xenosf":21,"-":9}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"mainClassName \u003d \u0027networkbook.Main\u0027","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"    var testFxVersion \u003d \"4.0.16-alpha\"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"    testImplementation(\"org.testfx:testfx-core:${testFxVersion}\")","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"    testImplementation(\"org.testfx:testfx-junit5:${testFxVersion}\")","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"    testImplementation(\"org.testfx:openjfx-monocle:jdk-12.0.1+2\")","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"    testImplementation group: \u0027org.hamcrest\u0027, name: \u0027hamcrest\u0027, version: \u00272.2\u0027","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"xenosf"},"content":"    archiveFileName \u003d \u0027networkbook.jar\u0027","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"run {","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nknguyenhc":3,"xenosf":1,"Singa-pirate":6,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"We are a team of students from the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"### Nguyen Khoi Nguyen","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"\u003cimg src\u003d\"images/nknguyenhc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"[[homepage](https://nknguyenhc.github.io/)]","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"[[github](https://github.com/nknguyenhc)]","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"[[portfolio](team/nknguyenhc.md)]","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"* Role: Team Lead","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"* Responsibilities:","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"  * Scheduling and tracking","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"  * Deliverables and deadlines","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"  * Integration","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"### Luo Jiale","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"\u003cimg src\u003d\"images/singa-pirate.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"[[github](https://github.com/singa-pirate)]","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"[[portfolio](team/singa-pirate.md)]","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"* Role: Developer","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"### Edwin Zheng Yuanyi","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"\u003cimg src\u003d\"images/eola-z.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"[[github](https://github.com/eola-z)]","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"[[portfolio](team/eola-z.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"* Role: Developer, Mockup artist","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"* Responsibilities: UI mockups and diagrams","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"### Aw Hang Bin","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"\u003cimg src\u003d\"images/awhb.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"[[github](http://github.com/awhb)]","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"[[portfolio](team/awhb.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"* Responsibilities:","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"  * Code Quality","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"  * Troubleshooting","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"### Xenos Fiorenzo Anong","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"xenosf"},"content":"\u003cimg src\u003d\"images/xenosf.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"xenosf"},"content":"[[homepage](https://xenosf.io/)]","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"xenosf"},"content":"[[github](http://github.com/xenosf)]","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"xenosf"},"content":"[[portfolio](team/xenosf.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"* Responsibilities:","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"xenosf"},"content":"  * Code Quality","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"xenosf"},"content":"  * Documentation","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Eola-Z":6,"nknguyenhc":10,"xenosf":9,"Singa-pirate":6,"-":29,"awhb":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"xenosf"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-T08-2/tp/blob/master/src/main/java/networkbook/ui/Ui.java)","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"xenosf"},"content":"These parts may use custom component classes such as `FieldHyperlink` that","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"xenosf"},"content":"inherit from default JavaFX components. These subclasses can provide","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"xenosf"},"content":"reasonable defaults or part-specific behavior to simplify code.","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"xenosf"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-T08-2/tp/blob/master/src/main/java/networkbook/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-T08-2/tp/blob/master/src/main/resources/view/MainWindow.fxml).","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"Singa-pirate"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `NetworkBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"Singa-pirate"},"content":"* When called upon to parse a user command, the `NetworkBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `NetworkBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"Eola-Z"},"content":"Here is an overview of what the other classes in `Logic` do:","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"Eola-Z"},"content":"* `ArgumentMultiMap` and `ArgumentTokeniser` are used to map the parameters of ","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"Eola-Z"},"content":"the user\u0027s input into key-value pairs, where the keys are specified using `ArgumentTokeniser`","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"Eola-Z"},"content":"* `CliSyntax` is where command-specific keywords are stored. It is used as the arguments for `ArgumentTokeniser`","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"Eola-Z"},"content":"to process the user input into: `{keyword : parameter}` pairs.","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"Eola-Z"},"content":"  * Example usage: The text `1 /name John Doe /phone 98765432` when","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"Eola-Z"},"content":"    mapped using `ArgumentTokeniser` with the keywords `/name`","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"Eola-Z"},"content":"    and `/phone` produces:","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"Eola-Z"},"content":"    * `{1}, {/name : John Doe}, {/phone : 98765432}`","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"Eola-Z"},"content":"    * Any text that appears before the first possible keyword is stored","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"Eola-Z"},"content":"      in its own entry.","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"Eola-Z"},"content":"  * `ArgumentMultiMap` can then perform specific operations, including","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"Eola-Z"},"content":"    but not limited to:","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"Eola-Z"},"content":"    * Retrieve all values/only a specific value from the set.","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"Eola-Z"},"content":"    * Check that a certain key only appears once, or exactly once.","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"Eola-Z"},"content":"* `ParserUtil` contains useful commands for parsing text such as removing","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"Eola-Z"},"content":"  leading/trailing whitespace from text, verifying that there are no ","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"Eola-Z"},"content":"  duplicate entries in the text, and so on.","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"Eola-Z"},"content":"The activity diagram below describes the workflow of `AddressBookParser`","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"Eola-Z"},"content":"when determining which `Parser` to use:","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"Eola-Z"},"content":"* `TO BE IMPLEMENTED IN 1.4`","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"Eola-Z"},"content":"The sequence diagram below illustrates the interactions within the","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"Eola-Z"},"content":"`FilterCommand` class to generate a `FilterCommand` object, using","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"Eola-Z"},"content":"`ArgumentMultiMap` and `ArgumentTokeniser`:","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"Eola-Z"},"content":"* `TO BE IMPLEMENTED IN 1.4`","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniqueList\u003cPerson\u003e` object).","lastModifiedDate":"2023-10-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"Singa-pirate"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `NetworkBook`, which `Person` references. This allows `NetworkBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":177,"author":{"gitId":"Singa-pirate"},"content":"* inherits from both `NetworkBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"Singa-pirate"},"content":"Classes used by multiple components are in the `seedu.networkbook.commons` package.","lastModifiedDate":"2023-10-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"awhb"},"content":"### Create new contact","lastModifiedDate":"2023-10-27"},{"lineNumber":191,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":192,"author":{"gitId":"awhb"},"content":"The implementation of the create command follows the convention of a normal command,","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"awhb"},"content":"where `CreateCommandParser` is responsible for parsing the user input string","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"awhb"},"content":"into an executable command.","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"awhb"},"content":"![create_contact](images/create/CreateDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"awhb"},"content":"`CreateCommandParser` first obtains the values corresponding to the flags","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"awhb"},"content":"`/name`, `/phone`, `/email`, `/link`, `/grad`, `/course`, `/spec`, `/priority`, `/tag` and `/index`.","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"awhb"},"content":"`CreateCommandParser` ensures that:","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"awhb"},"content":"* There is no preamble text between the `create` keyword and the flags.","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"awhb"},"content":"* One and only one of the flag`/name` is present.","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"awhb"},"content":"* At most one of the flags `/grad` or `/priority` is present.","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"awhb"},"content":"* All values corresponding to the flags `/name`, `/phone`, `/email`, `/link`, `/grad`, `/course`, `/spec`, `/priority`, `/tag` and `/index` are valid.","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"awhb"},"content":"If any of the above constraints are violated, `CreateCommandParser` throws a `ParseException`.","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"awhb"},"content":"Otherwise, it creates a new instance of `CreateCommand` that corresponds to the user input.","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"awhb"},"content":"`CreateCommand` comprises of the person to be added, which is an instance of `Person`.","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"awhb"},"content":"Upon execution, `CreateCommand` first queries the supplied model if it contains a person with an identical name.","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"awhb"},"content":"If no such person exists, `CreateCommand` then calls on `model::addPerson` to add the person into the networkBook data.","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"awhb"},"content":"We have considered the following alternative implementations:","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"awhb"},"content":"* Implement `CreateCommandParser` to parse the arguments using regular expressions.","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"awhb"},"content":"  This is not optimal for our use case as having a regex expression to parse the field values would be more complicated to scale and debug.","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"nknguyenhc"},"content":"### Edit details","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"nknguyenhc"},"content":"The implementation of the edit command follows the convention of a normal command,","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"nknguyenhc"},"content":"where `EditCommandParser` is responsible for parsing the user input string","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"nknguyenhc"},"content":"into an executable command.","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"nknguyenhc"},"content":"![edit sequence](images/edit/EditDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"nknguyenhc"},"content":"`EditCommandParser` first obtains the values corresponding to the flags ","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"nknguyenhc"},"content":"`/name`, `/phone`, `/email`, `/link`, `/grad`, `/course`, `/spec`, `/priority`, `/tag` and `/index`.","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"nknguyenhc"},"content":"`EditCommandParser` ensures that:","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"nknguyenhc"},"content":"* One and only one of `/name`, `/phone`, `/email`, `/link`, `/grad`, `/course`, `/spec`, `/priority`, `/tag` is present.","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"nknguyenhc"},"content":"* If `/name`, `/priority` or `/grad` is present, then `/index` is not present.","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"nknguyenhc"},"content":"* If `/phone`, `/email`, `/link`, `/course`, `/spec` or `/tag` is present, then one and only one tag `/index` is present.","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"nknguyenhc"},"content":"If any of the above constraints are violated, `EditCommandParser` throws a `ParseException`. ","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"nknguyenhc"},"content":"Otherwise, it creates a new instance of `EditCommand` that corresponds to the user input.","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"nknguyenhc"},"content":"`EditCommand` makes use of `EditPersonDescriptor`, which is an editable version of `Person` class.","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"nknguyenhc"},"content":"Most importantly, ","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"nknguyenhc"},"content":"* `EditPersonDescriptor` constructor copies the details of the person.","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"nknguyenhc"},"content":"* `EditPersonDescriptor` has setter methods to allow changing the details.","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"nknguyenhc"},"content":"* `EditPersonDescriptor` has a `toPerson` method that returns a new instance of `Person` that matches the current details.","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"nknguyenhc"},"content":"`EditCommand` comprises of the `index` of the person to edit, and `editAction` as an instance of `EditAction`. ","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"nknguyenhc"},"content":"Each `EditAction` implements `edit(EditPersonDescriptor)`,","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"nknguyenhc"},"content":"which mutates the input instance of `EditPersonDescriptor`.","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"nknguyenhc"},"content":"`EditAction` is an interface that has implementing concrete classes corresponding to each type of action","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"nknguyenhc"},"content":"(i.e. `EditPhoneAction` for editing phone, `EditEmailAction` for editing email, etc).","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"nknguyenhc"},"content":"Upon execution, `EditCommand` first obtains the `Person` at the index `index` in the model.","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"nknguyenhc"},"content":"`EditCommand` then creates a new instance of `EditPersonDescriptor` that matches the details of the `Person`.","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"nknguyenhc"},"content":"`EditCommand` then calls on `editAction::edit` to mutate the created `EditPersonDescriptor`.","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"nknguyenhc"},"content":"`EditCommand` then converts the current `EditPersonDescriptor` into a new `Person`.","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"nknguyenhc"},"content":"`EditCommand` then asks the `model` to update the original `Person` with the edited `Person`.","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"nknguyenhc"},"content":"We have considered the following alternative implementations:","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"nknguyenhc"},"content":"* Implement `EditCommand` with only `EditPersonDescriptor` and without `EditAction`,","lastModifiedDate":"2023-10-26"},{"lineNumber":258,"author":{"gitId":"nknguyenhc"},"content":"and `EditCommandParser` generates the instance of `EditPersonDescriptor` directly.","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"nknguyenhc"},"content":"`EditCommandParser` then must know the details of the person editing","lastModifiedDate":"2023-10-26"},{"lineNumber":260,"author":{"gitId":"nknguyenhc"},"content":"in order to generate the correct instance of `EditPersonDescriptor`.","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"nknguyenhc"},"content":"This is not optimal for object-oriented programming,","lastModifiedDate":"2023-10-26"},{"lineNumber":262,"author":{"gitId":"nknguyenhc"},"content":"as the parser should not need to know how the current model looks like.","lastModifiedDate":"2023-10-26"},{"lineNumber":263,"author":{"gitId":"nknguyenhc"},"content":"* Use a different class for each type of edit command ","lastModifiedDate":"2023-10-26"},{"lineNumber":264,"author":{"gitId":"nknguyenhc"},"content":"(i.e. editing phone with `EditPhoneCommand`, editing email with `EditEmailCommand`, etc).","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"nknguyenhc"},"content":"This design has the advantage that the parser does not need to know how the current model looks like.","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"nknguyenhc"},"content":"However, to keep `Command` classes consistent in design, ","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"nknguyenhc"},"content":"we decide to only have one `EditCommand` class and practice inheritance with `EditAction`.","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"Singa-pirate"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedNetworkBook`. It extends `NetworkBook` with an undo/redo history, stored internally as an `networkBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-10-20"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"Singa-pirate"},"content":"* `VersionedNetworkBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-10-20"},{"lineNumber":277,"author":{"gitId":"Singa-pirate"},"content":"* `VersionedNetworkBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-10-20"},{"lineNumber":278,"author":{"gitId":"Singa-pirate"},"content":"* `VersionedNetworkBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-10-20"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"Singa-pirate"},"content":"These operations are exposed in the `Model` interface as `Model#commitNetworkBook()`, `Model#undoNetworkBook()` and `Model#redoNetworkBook()` respectively.","lastModifiedDate":"2023-10-20"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"Singa-pirate"},"content":"Step 1. The user launches the application for the first time. The `VersionedNetworkBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-10-20"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"Singa-pirate"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitNetworkBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `networkBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-10-20"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"Singa-pirate"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitNetworkBook()`, causing another modified address book state to be saved into the `networkBookStateList`.","lastModifiedDate":"2023-10-20"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"Singa-pirate"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitNetworkBook()`, so the address book state will not be saved into the `networkBookStateList`.","lastModifiedDate":"2023-10-20"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"Singa-pirate"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoNetworkBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-10-20"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"Singa-pirate"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial NetworkBook state, then there are no previous NetworkBook states to restore. The `undo` command uses `Model#canUndoNetworkBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-10-20"},{"lineNumber":305,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"Singa-pirate"},"content":"The `redo` command does the opposite — it calls `Model#redoNetworkBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2023-10-20"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"Singa-pirate"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `networkBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone NetworkBook states to restore. The `redo` command uses `Model#canRedoNetworkBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-10-20"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"Singa-pirate"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitNetworkBook()`, `Model#undoNetworkBook()` or `Model#redoNetworkBook()`. Thus, the `networkBookStateList` remains unchanged.","lastModifiedDate":"2023-10-20"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"Singa-pirate"},"content":"Step 6. The user executes `clear`, which calls `Model#commitNetworkBook()`. Since the `currentStatePointer` is not pointing at the end of the `networkBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-10-20"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"xenosf"},"content":"### Sorting feature","lastModifiedDate":"2023-10-27"},{"lineNumber":355,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":356,"author":{"gitId":"xenosf"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":357,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":358,"author":{"gitId":"xenosf"},"content":"The sorting feature builds on the existing filter feature present in `Model`. `Model` has a getter method `Model#getFilteredPersonList()` which returns an `ObservableList\u003cPerson\u003e`. `Model#getFilteredPersonList()` is called by `LogicManager#getFilteredPersonList()`, which is then called in `MainWindow` to render a filtered list of contacts. The implementation of the filter feature in `ModelManager` uses JavaFX\u0027s `FilteredList`, an implementation of the `SortedList` interface.","lastModifiedDate":"2023-10-27"},{"lineNumber":359,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":360,"author":{"gitId":"xenosf"},"content":"The new sort feature makes use of JavaFX\u0027s `SortedList`, another implementation of the `ObservableList` interface. `SortedList` takes a predicate which it then uses to sort the list.","lastModifiedDate":"2023-10-27"},{"lineNumber":361,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":362,"author":{"gitId":"xenosf"},"content":"To implement the sort feature, the method `Model#updateSortedPersonList()` was exposed via the `Model` interface. A `SortedList` was then added to the implementation in `ModelManager` as a wrapper of the existing `FilteredList`. `ModelManager`\u0027s implementation of `updateSortedPersonList()` method updates the predicate of the `SortedList`. Finally, the implementation of `getFilteredPersonList()` was updated to return the sorted list.","lastModifiedDate":"2023-10-27"},{"lineNumber":363,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":364,"author":{"gitId":"xenosf"},"content":"The sort command updates the predicate of the model\u0027s `SortedList` to a `PersonSortComparator`. `PersonSortComparator` extends `Comparator\u003cPerson\u003e`, adding in a few extra methods specific to sorting persons:","lastModifiedDate":"2023-10-27"},{"lineNumber":365,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":366,"author":{"gitId":"xenosf"},"content":"* `parseSortField()` parses a given string into a value of the `SortField` enumeration. This value is then used later to determine the predicate implementation.","lastModifiedDate":"2023-10-27"},{"lineNumber":367,"author":{"gitId":"xenosf"},"content":"* `parseSortOrder()` parses a given string into a value of the `SortOrder` enumeration. This value is then used later to determine the predicate implementation.","lastModifiedDate":"2023-10-27"},{"lineNumber":368,"author":{"gitId":"xenosf"},"content":"* `generateXXComparator()` methods. These methods return comparators which compare based on XX field of Person in either ascending or descending order.","lastModifiedDate":"2023-10-27"},{"lineNumber":369,"author":{"gitId":"xenosf"},"content":"* `generateComparator()` takes in a `SortField` and `SortOrder` and calls the relevant `generateXXComparator()` based on the given sort order and field.","lastModifiedDate":"2023-10-27"},{"lineNumber":370,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":371,"author":{"gitId":"xenosf"},"content":"Given below is an example usage scenario and how the sorting mechanism behaves at each step.","lastModifiedDate":"2023-10-27"},{"lineNumber":372,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":373,"author":{"gitId":"xenosf"},"content":"Step 1. The user launches the app. The rendered list is unsorted and unfiltered.","lastModifiedDate":"2023-10-27"},{"lineNumber":374,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":375,"author":{"gitId":"xenosf"},"content":"\u003c!-- todo insert diagram --\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":376,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":377,"author":{"gitId":"xenosf"},"content":"Step 2. The user executes `find al` command to filter contacts by name. This updates the predicate of the `FilteredList` to only show contacts with names matching \"al\". The `SortedList` predicate remains unchanged (i.e. `null`).","lastModifiedDate":"2023-10-27"},{"lineNumber":378,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":379,"author":{"gitId":"xenosf"},"content":"\u003c!-- todo insert diagram --\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":380,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":381,"author":{"gitId":"xenosf"},"content":"Step 3. The user executes `sort /by name /order desc​` to sort the filtered list by name in descending order. The `sort` command parser calls `PersonSortComparator#generateComparator()` to generate the appropriate comparator. The sort command then calls `Model#updateSortedPersonList()`, updating the predicate of the `SortedList`. This newly sorted list is then rendered in the main UI.","lastModifiedDate":"2023-10-27"},{"lineNumber":382,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":383,"author":{"gitId":"xenosf"},"content":"\u003c!-- todo insert diagram --\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":384,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":385,"author":{"gitId":"xenosf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `find` command is called again, the sorting will persist.","lastModifiedDate":"2023-10-27"},{"lineNumber":386,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":387,"author":{"gitId":"xenosf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":388,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":389,"author":{"gitId":"xenosf"},"content":"The following sequence diagram shows how the sort operation works:","lastModifiedDate":"2023-10-27"},{"lineNumber":390,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":391,"author":{"gitId":"xenosf"},"content":"_{insert diagram here}_","lastModifiedDate":"2023-10-27"},{"lineNumber":392,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":393,"author":{"gitId":"xenosf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-27"},{"lineNumber":394,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":395,"author":{"gitId":"xenosf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":396,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":397,"author":{"gitId":"xenosf"},"content":"Step 4. The user executes `sort /by none`, which updates the `SortedList` predicate and resets the sorting.","lastModifiedDate":"2023-10-27"},{"lineNumber":398,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":399,"author":{"gitId":"xenosf"},"content":"\u003c!-- todo insert diagram--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":400,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":401,"author":{"gitId":"xenosf"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-10-27"},{"lineNumber":402,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":403,"author":{"gitId":"xenosf"},"content":"_{insert diagram here}_","lastModifiedDate":"2023-10-27"},{"lineNumber":404,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":405,"author":{"gitId":"xenosf"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-27"},{"lineNumber":406,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":407,"author":{"gitId":"xenosf"},"content":"**Aspect: How sort executes:**","lastModifiedDate":"2023-10-27"},{"lineNumber":408,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":409,"author":{"gitId":"xenosf"},"content":"* **Alternative 1 (current choice):** _{to be added}_","lastModifiedDate":"2023-10-27"},{"lineNumber":410,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":411,"author":{"gitId":"xenosf"},"content":"* **Alternative 2:** _{to be added}_","lastModifiedDate":"2023-10-27"},{"lineNumber":412,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":413,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":420,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":421,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":422,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":423,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"xenosf"},"content":"* is an NUS computing student or computing professional","lastModifiedDate":"2023-10-05"},{"lineNumber":434,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"nknguyenhc"},"content":"* has a need to manage a lot of details for each contact","lastModifiedDate":"2023-10-03"},{"lineNumber":436,"author":{"gitId":"xenosf"},"content":"* is looking into networking with other computing students and professionals","lastModifiedDate":"2023-10-05"},{"lineNumber":437,"author":{"gitId":"xenosf"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2023-10-05"},{"lineNumber":438,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":440,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":443,"author":{"gitId":"xenosf"},"content":"**Value proposition**: As computing students and professionals network with alumni to expand their career prospects, our app keeps a list of contacts of people that each user networks with.","lastModifiedDate":"2023-10-06"},{"lineNumber":444,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":445,"author":{"gitId":"xenosf"},"content":"* Sort users by priority, courses taken/taking, specialization(s) taken/intending to take, graduation year","lastModifiedDate":"2023-10-06"},{"lineNumber":446,"author":{"gitId":"awhb"},"content":"* Offline, with a static online page that contains user manual and download link","lastModifiedDate":"2023-10-14"},{"lineNumber":447,"author":{"gitId":"Singa-pirate"},"content":"* Search by any details, i.e. phone number, email, specialisations, courses taken, graduation year.","lastModifiedDate":"2023-10-06"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"| Priority | As a …​                 | I want to …​                                                                               | So that I can…​                                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"awhb"},"content":"|---------|-------------------------|--------------------------------------------------------------------------------------------|-------------------------------------------------------------------------|","lastModifiedDate":"2023-10-14"},{"lineNumber":456,"author":{"gitId":"Singa-pirate"},"content":"| `* * *` | new user                | see usage instructions in the app                                                          | refer to instructions when I forget how to use the app                |","lastModifiedDate":"2023-10-20"},{"lineNumber":457,"author":{"gitId":"Singa-pirate"},"content":"| `* * *` | user                    | create a new contact                                                                       | keep a record of individuals in my network                              |","lastModifiedDate":"2023-10-03"},{"lineNumber":458,"author":{"gitId":"Singa-pirate"},"content":"| `* * *` | user                    | add more details about an existing contact                                                 | store information about my contacts for future reference                |","lastModifiedDate":"2023-10-03"},{"lineNumber":459,"author":{"gitId":"Singa-pirate"},"content":"| `* * *` | user                    | edit details of a contact                                                                  | replace outdated details with more accurate information                 |","lastModifiedDate":"2023-10-20"},{"lineNumber":460,"author":{"gitId":"Singa-pirate"},"content":"| `* * *` | user                    | delete a contact                                                                           | remove individuals I no longer keep contact with |","lastModifiedDate":"2023-10-20"},{"lineNumber":461,"author":{"gitId":"Singa-pirate"},"content":"| `* *`   | user                    | find a contact by name                                                                     | locate details of contacts without having to go through the entire list |","lastModifiedDate":"2023-10-03"},{"lineNumber":462,"author":{"gitId":"xenosf"},"content":"| `* *`   | user with many contacts | sort contacts by their details                                                             | locate contacts with special characteristics that I am looking for      |","lastModifiedDate":"2023-10-05"},{"lineNumber":463,"author":{"gitId":"Singa-pirate"},"content":"| `*`     | user with many contacts | filter contacts based on their details                                                     | locate contacts who fulfil certain conditions that I am looking for     |","lastModifiedDate":"2023-10-03"},{"lineNumber":464,"author":{"gitId":"Singa-pirate"},"content":"| `* *`   | new user                | use commonly-available keyboard shortcuts (e.g. ctrl-c for copy, ctrl-v for paste)         | provide input more efficiently with shortcuts I am accustomed to |","lastModifiedDate":"2023-10-20"},{"lineNumber":465,"author":{"gitId":"Singa-pirate"},"content":"| `* *`   | user                    | use simple and easy-to-press shortcuts                                                     | remember and execute the shortcuts more easily |","lastModifiedDate":"2023-10-20"},{"lineNumber":466,"author":{"gitId":"Singa-pirate"},"content":"| `* *`   | user                    | open my email app by clicking on my contact\u0027s email                                        | send emails to my contacts more efficiently |","lastModifiedDate":"2023-10-20"},{"lineNumber":467,"author":{"gitId":"Singa-pirate"},"content":"| `* *`   | user                    | open the relevant website by clicking on my contact\u0027s social link                          | conveniently access their social links when needed |","lastModifiedDate":"2023-10-20"},{"lineNumber":468,"author":{"gitId":"awhb"},"content":"| `* *`   | user                    | an easily accessible and static online page containing a download link to the mobile app   | quickly download the app on my device when needed                       |","lastModifiedDate":"2023-10-14"},{"lineNumber":469,"author":{"gitId":"Singa-pirate"},"content":"| `* *`   | new user                | have a quick-start guide                                                                   | start using the basic functionality of the app as soon as possible |","lastModifiedDate":"2023-10-20"},{"lineNumber":470,"author":{"gitId":"Singa-pirate"},"content":"| `* *`   | user                    | visit an online page containing the complete user manual                                   | refer to the full set of instructions when needed            |","lastModifiedDate":"2023-10-20"},{"lineNumber":471,"author":{"gitId":"awhb"},"content":"| `*`     | user                    | navigate to the relevant section of the online manual directly from the catalogue | quickly find instructions on the feature I want to use       |","lastModifiedDate":"2023-10-06"},{"lineNumber":472,"author":{"gitId":"Singa-pirate"},"content":"| `*`     | user                    | export my contacts in the form of readable text                                            | easily share my contacts with others                                    |","lastModifiedDate":"2023-10-20"},{"lineNumber":473,"author":{"gitId":"Singa-pirate"},"content":"| `*`     | user with many devices  | import data from my exported contacts                                                      | sync my contact details across different devices |","lastModifiedDate":"2023-10-20"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"xenosf"},"content":"(For all use cases below, the **System** is the `NetworkBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-05"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"Singa-pirate"},"content":"**Use case: Create a new contact**","lastModifiedDate":"2023-10-06"},{"lineNumber":480,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":481,"author":{"gitId":"Eola-Z"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":482,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":483,"author":{"gitId":"Singa-pirate"},"content":"1. User requests to create a new contact with a name.","lastModifiedDate":"2023-10-06"},{"lineNumber":484,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":485,"author":{"gitId":"Singa-pirate"},"content":"2. NetworkBook creates a new contact with the name.","lastModifiedDate":"2023-10-06"},{"lineNumber":486,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":487,"author":{"gitId":"Eola-Z"},"content":"   Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":488,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":489,"author":{"gitId":"Eola-Z"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":490,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":491,"author":{"gitId":"Singa-pirate"},"content":"- 1a. User does not include the contact\u0027s name in the request.","lastModifiedDate":"2023-10-06"},{"lineNumber":492,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":493,"author":{"gitId":"Singa-pirate"},"content":"  - 1a1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":494,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":495,"author":{"gitId":"Singa-pirate"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":496,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":497,"author":{"gitId":"Singa-pirate"},"content":"- 1b. User includes more details about the contact in the request.","lastModifiedDate":"2023-10-06"},{"lineNumber":498,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":499,"author":{"gitId":"Singa-pirate"},"content":"  - 1ba. All the details provided are in the correct format.","lastModifiedDate":"2023-10-06"},{"lineNumber":500,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":501,"author":{"gitId":"Singa-pirate"},"content":"    - 1ba1. NetworkBook creates a contact with all included details.","lastModifiedDate":"2023-10-20"},{"lineNumber":502,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":503,"author":{"gitId":"Singa-pirate"},"content":"      Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":504,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":505,"author":{"gitId":"Singa-pirate"},"content":"  - 1bb. Some of the details provided are not correctly formatted.","lastModifiedDate":"2023-10-06"},{"lineNumber":506,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":507,"author":{"gitId":"Singa-pirate"},"content":"    - 1bb1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":508,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":509,"author":{"gitId":"Singa-pirate"},"content":"      Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":510,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":511,"author":{"gitId":"Singa-pirate"},"content":"- 1c. The name is not unique.","lastModifiedDate":"2023-10-06"},{"lineNumber":512,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":513,"author":{"gitId":"Singa-pirate"},"content":"  - 1c1. NetworkBook requests user to select from one of three options: create a new contact, delete the old contact and add the new one, or abort the current create operation.","lastModifiedDate":"2023-10-20"},{"lineNumber":514,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":515,"author":{"gitId":"Singa-pirate"},"content":"    - 1c1a. User selects option to create a new contact.","lastModifiedDate":"2023-10-06"},{"lineNumber":516,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":517,"author":{"gitId":"Singa-pirate"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":518,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":519,"author":{"gitId":"Singa-pirate"},"content":"    - 1c1b. User selects option to delete the old contact and add the new one.","lastModifiedDate":"2023-10-06"},{"lineNumber":520,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":521,"author":{"gitId":"Singa-pirate"},"content":"      - 1c1b1. NetworkBook deletes the old contact.","lastModifiedDate":"2023-10-06"},{"lineNumber":522,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":523,"author":{"gitId":"Singa-pirate"},"content":"      - 1c1b2. NetworkBook adds the new contact with all included details.","lastModifiedDate":"2023-10-06"},{"lineNumber":524,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":525,"author":{"gitId":"Singa-pirate"},"content":"        Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":526,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":527,"author":{"gitId":"Singa-pirate"},"content":"    - 1c1c. User selects option to abort the current add operation.","lastModifiedDate":"2023-10-06"},{"lineNumber":528,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":529,"author":{"gitId":"Singa-pirate"},"content":"      Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":530,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":531,"author":{"gitId":"Singa-pirate"},"content":"**Use case: Add phone number to contact**","lastModifiedDate":"2023-10-06"},{"lineNumber":532,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":533,"author":{"gitId":"Singa-pirate"},"content":"(This use case is also applicable to adding **email, specialisation, tag** to a contact. For each contact, each of these fields is recorded by a list, and new entries added to a field will be appended to the field\u0027s list.)","lastModifiedDate":"2023-10-06"},{"lineNumber":534,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":535,"author":{"gitId":"Singa-pirate"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":536,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":537,"author":{"gitId":"Singa-pirate"},"content":"1. User requests to list contacts.","lastModifiedDate":"2023-10-06"},{"lineNumber":538,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":539,"author":{"gitId":"Singa-pirate"},"content":"2. NetworkBook shows a list of contacts.","lastModifiedDate":"2023-10-06"},{"lineNumber":540,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":541,"author":{"gitId":"Singa-pirate"},"content":"3. User requests to add a phone number to a specific contact in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":542,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":543,"author":{"gitId":"Singa-pirate"},"content":"4. NetworkBook adds the new phone number to the contact\u0027s list of phone numbers.","lastModifiedDate":"2023-10-06"},{"lineNumber":544,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":545,"author":{"gitId":"Singa-pirate"},"content":"5. NetworkBook informs user of the contact\u0027s new list of phone numbers.","lastModifiedDate":"2023-10-06"},{"lineNumber":546,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":547,"author":{"gitId":"Singa-pirate"},"content":"   Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":548,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":549,"author":{"gitId":"Singa-pirate"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":550,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":551,"author":{"gitId":"Singa-pirate"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-10-06"},{"lineNumber":552,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":553,"author":{"gitId":"Singa-pirate"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":554,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":555,"author":{"gitId":"Singa-pirate"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2023-10-06"},{"lineNumber":556,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":557,"author":{"gitId":"Singa-pirate"},"content":"  - 3a1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":558,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":559,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":560,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":561,"author":{"gitId":"Singa-pirate"},"content":"- 3b. User does not give a phone number.","lastModifiedDate":"2023-10-06"},{"lineNumber":562,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":563,"author":{"gitId":"Singa-pirate"},"content":"  - 3b1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":564,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":565,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":566,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":567,"author":{"gitId":"Singa-pirate"},"content":"- 3c. The given phone number is in an invalid format.","lastModifiedDate":"2023-10-06"},{"lineNumber":568,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":569,"author":{"gitId":"Singa-pirate"},"content":"  - 3c1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":570,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":571,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":572,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":573,"author":{"gitId":"Singa-pirate"},"content":"- 3c. The given phone number is already present in the contact\u0027s list of phone numbers.","lastModifiedDate":"2023-10-20"},{"lineNumber":574,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":575,"author":{"gitId":"Singa-pirate"},"content":"  - Use case resumes at step 5.","lastModifiedDate":"2023-10-20"},{"lineNumber":576,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":577,"author":{"gitId":"Singa-pirate"},"content":"**Use case: Add graduation year to a contact**","lastModifiedDate":"2023-10-06"},{"lineNumber":578,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":579,"author":{"gitId":"Singa-pirate"},"content":"(This use case is also applicable to adding **priority** to a contact. For each contact, each of these fields is a single value instead of a list. They cannot be added if the value is already present.)","lastModifiedDate":"2023-10-20"},{"lineNumber":580,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":581,"author":{"gitId":"Singa-pirate"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":582,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":583,"author":{"gitId":"Singa-pirate"},"content":"1. User requests to list contacts.","lastModifiedDate":"2023-10-06"},{"lineNumber":584,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":585,"author":{"gitId":"Singa-pirate"},"content":"2. NetworkBook shows a list of contacts.","lastModifiedDate":"2023-10-06"},{"lineNumber":586,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":587,"author":{"gitId":"Singa-pirate"},"content":"3. User requests to add graduation year to a specific contact in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":588,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":589,"author":{"gitId":"Singa-pirate"},"content":"4. NetworkBook adds the graduation year to the contact.","lastModifiedDate":"2023-10-20"},{"lineNumber":590,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":591,"author":{"gitId":"Singa-pirate"},"content":"5. NetworkBook informs user of the contact\u0027s new graduation year.","lastModifiedDate":"2023-10-06"},{"lineNumber":592,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":593,"author":{"gitId":"Singa-pirate"},"content":"   Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":594,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":595,"author":{"gitId":"Singa-pirate"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":596,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":597,"author":{"gitId":"Singa-pirate"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-10-06"},{"lineNumber":598,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":599,"author":{"gitId":"Singa-pirate"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":600,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":601,"author":{"gitId":"Singa-pirate"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2023-10-06"},{"lineNumber":602,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":603,"author":{"gitId":"Singa-pirate"},"content":"  - 3a1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":604,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":605,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":606,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":607,"author":{"gitId":"Singa-pirate"},"content":"- 3b. User does not give a graduation year.","lastModifiedDate":"2023-10-06"},{"lineNumber":608,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":609,"author":{"gitId":"Singa-pirate"},"content":"  - 3b1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":610,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":611,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":612,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":613,"author":{"gitId":"Singa-pirate"},"content":"- 3c. The given graduation year is in an invalid format.","lastModifiedDate":"2023-10-06"},{"lineNumber":614,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":615,"author":{"gitId":"Singa-pirate"},"content":"  - 3c1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":616,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":617,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":618,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":619,"author":{"gitId":"Singa-pirate"},"content":"- 3d. The contact already has a graduation year.","lastModifiedDate":"2023-10-20"},{"lineNumber":620,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":621,"author":{"gitId":"Singa-pirate"},"content":"  - 3d1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-20"},{"lineNumber":622,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":623,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-20"},{"lineNumber":624,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":625,"author":{"gitId":"Singa-pirate"},"content":"**Use case: Add course to a contact**","lastModifiedDate":"2023-10-06"},{"lineNumber":626,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":627,"author":{"gitId":"Singa-pirate"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":628,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":629,"author":{"gitId":"Singa-pirate"},"content":"1. User requests to list contacts.","lastModifiedDate":"2023-10-06"},{"lineNumber":630,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":631,"author":{"gitId":"Singa-pirate"},"content":"2. NetworkBook shows a list of contacts.","lastModifiedDate":"2023-10-06"},{"lineNumber":632,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":633,"author":{"gitId":"Singa-pirate"},"content":"3. User requests to add course to a specific contact in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":634,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":635,"author":{"gitId":"Singa-pirate"},"content":"4. NetworkBook adds the course to the contact\u0027s list of courses.","lastModifiedDate":"2023-10-06"},{"lineNumber":636,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":637,"author":{"gitId":"Singa-pirate"},"content":"5. NetworkBook informs user of the contact\u0027s new list of courses.","lastModifiedDate":"2023-10-06"},{"lineNumber":638,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":639,"author":{"gitId":"Singa-pirate"},"content":"   Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":640,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":641,"author":{"gitId":"Singa-pirate"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":642,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":643,"author":{"gitId":"Singa-pirate"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-10-06"},{"lineNumber":644,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":645,"author":{"gitId":"Singa-pirate"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":646,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":647,"author":{"gitId":"Singa-pirate"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2023-10-06"},{"lineNumber":648,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":649,"author":{"gitId":"Singa-pirate"},"content":"  - 3a1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":650,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":651,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":652,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":653,"author":{"gitId":"Singa-pirate"},"content":"- 3b. User does not give a course code.","lastModifiedDate":"2023-10-06"},{"lineNumber":654,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":655,"author":{"gitId":"Singa-pirate"},"content":"  - 3b1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":656,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":657,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":658,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":659,"author":{"gitId":"Singa-pirate"},"content":"- 3c. The given course code is in an invalid format.","lastModifiedDate":"2023-10-06"},{"lineNumber":660,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":661,"author":{"gitId":"Singa-pirate"},"content":"  - 3c1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":662,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":663,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":664,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":665,"author":{"gitId":"Singa-pirate"},"content":"- 3d. User does not give a start date.","lastModifiedDate":"2023-10-06"},{"lineNumber":666,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":667,"author":{"gitId":"Singa-pirate"},"content":"  - 3d1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":668,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":669,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":670,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":671,"author":{"gitId":"Singa-pirate"},"content":"- 3e. The given start/end date is in an invalid format.","lastModifiedDate":"2023-10-06"},{"lineNumber":672,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":673,"author":{"gitId":"Singa-pirate"},"content":"  - 3e1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":674,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":675,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":676,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":677,"author":{"gitId":"Singa-pirate"},"content":"- 3f. User gives an end date in the correct format.","lastModifiedDate":"2023-10-06"},{"lineNumber":678,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":679,"author":{"gitId":"Singa-pirate"},"content":"  - 3f1. NetworkBook includes end date in the new course\u0027s details.","lastModifiedDate":"2023-10-06"},{"lineNumber":680,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":681,"author":{"gitId":"Singa-pirate"},"content":"  - 3f2. NetworkBook adds the new course to the contact\u0027s list of courses.","lastModifiedDate":"2023-10-06"},{"lineNumber":682,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":683,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 5.","lastModifiedDate":"2023-10-06"},{"lineNumber":684,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":685,"author":{"gitId":"Singa-pirate"},"content":"- 3g. The given course code is already present in the contact\u0027s list of courses.","lastModifiedDate":"2023-10-06"},{"lineNumber":686,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":687,"author":{"gitId":"Singa-pirate"},"content":"  - 3g1. NetworkBook updates the given course with the new course details provided.","lastModifiedDate":"2023-10-06"},{"lineNumber":688,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":689,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 5.","lastModifiedDate":"2023-10-06"},{"lineNumber":690,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":691,"author":{"gitId":"awhb"},"content":"**Use case: Add social link to a contact**","lastModifiedDate":"2023-10-14"},{"lineNumber":692,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":693,"author":{"gitId":"Singa-pirate"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":694,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":695,"author":{"gitId":"Singa-pirate"},"content":"1. User requests to list contacts.","lastModifiedDate":"2023-10-06"},{"lineNumber":696,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":697,"author":{"gitId":"Singa-pirate"},"content":"2. NetworkBook shows a list of contacts.","lastModifiedDate":"2023-10-06"},{"lineNumber":698,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":699,"author":{"gitId":"awhb"},"content":"3. User requests to add social link a specific contact in the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":700,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":701,"author":{"gitId":"Singa-pirate"},"content":"4. NetworkBook adds the social link to the contact\u0027s list of links.","lastModifiedDate":"2023-10-20"},{"lineNumber":702,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":703,"author":{"gitId":"Singa-pirate"},"content":"5. NetworkBook informs user of the contact\u0027s new list of links.","lastModifiedDate":"2023-10-06"},{"lineNumber":704,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":705,"author":{"gitId":"Singa-pirate"},"content":"   Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":706,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":707,"author":{"gitId":"Singa-pirate"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":708,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":709,"author":{"gitId":"Singa-pirate"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-10-06"},{"lineNumber":710,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":711,"author":{"gitId":"Singa-pirate"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":712,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":713,"author":{"gitId":"Singa-pirate"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2023-10-06"},{"lineNumber":714,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":715,"author":{"gitId":"Singa-pirate"},"content":"  - 3a1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":717,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":718,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":719,"author":{"gitId":"awhb"},"content":"- 3b. User does not give a social link.","lastModifiedDate":"2023-10-14"},{"lineNumber":720,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":721,"author":{"gitId":"Singa-pirate"},"content":"  - 3b1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":722,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":723,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":724,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":725,"author":{"gitId":"awhb"},"content":"- 3c. The given social link is in an invalid format.","lastModifiedDate":"2023-10-14"},{"lineNumber":726,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":727,"author":{"gitId":"Singa-pirate"},"content":"  - 3c1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":728,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":729,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":730,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":731,"author":{"gitId":"awhb"},"content":"- 3d. User provides additional note after the social link.","lastModifiedDate":"2023-10-14"},{"lineNumber":732,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":733,"author":{"gitId":"awhb"},"content":"  - 3d1. NetworkBook includes the note in the link\u0027s details.","lastModifiedDate":"2023-10-14"},{"lineNumber":734,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":735,"author":{"gitId":"awhb"},"content":"  - 3d2. NetworkBook adds the new social link to the contact\u0027s list of links.","lastModifiedDate":"2023-10-14"},{"lineNumber":736,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":737,"author":{"gitId":"Singa-pirate"},"content":"    Use case resumes at step 5.","lastModifiedDate":"2023-10-06"},{"lineNumber":738,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":739,"author":{"gitId":"Singa-pirate"},"content":"**Use case: Edit a contact**","lastModifiedDate":"2023-10-06"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"Singa-pirate"},"content":"1.  User requests to list contacts.","lastModifiedDate":"2023-10-06"},{"lineNumber":744,"author":{"gitId":"Singa-pirate"},"content":"2.  NetworkBook shows a list of contacts.","lastModifiedDate":"2023-10-20"},{"lineNumber":745,"author":{"gitId":"Singa-pirate"},"content":"3.  User requests to edit some field of a specific contact in the list.","lastModifiedDate":"2023-10-20"},{"lineNumber":746,"author":{"gitId":"Singa-pirate"},"content":"4.  NetworkBook updates the contact.","lastModifiedDate":"2023-10-20"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"Singa-pirate"},"content":"    * 3a1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-20"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"Singa-pirate"},"content":"* 3b. Some of the fields provided are not correctly formatted.","lastModifiedDate":"2023-10-20"},{"lineNumber":763,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":764,"author":{"gitId":"Singa-pirate"},"content":"    * 3b1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-20"},{"lineNumber":765,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":766,"author":{"gitId":"Eola-Z"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":767,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":768,"author":{"gitId":"Singa-pirate"},"content":"**Use case: Delete a contact**","lastModifiedDate":"2023-10-06"},{"lineNumber":769,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":770,"author":{"gitId":"xenosf"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":771,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":772,"author":{"gitId":"Singa-pirate"},"content":"1.  User requests to list contacts.","lastModifiedDate":"2023-10-20"},{"lineNumber":773,"author":{"gitId":"Singa-pirate"},"content":"2.  NetworkBook shows a list of contacts.","lastModifiedDate":"2023-10-20"},{"lineNumber":774,"author":{"gitId":"Singa-pirate"},"content":"3.  User requests to delete a specific contact in the list.","lastModifiedDate":"2023-10-20"},{"lineNumber":775,"author":{"gitId":"Singa-pirate"},"content":"4.  NetworkBook deletes the contact.","lastModifiedDate":"2023-10-20"},{"lineNumber":776,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":777,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":783,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":785,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"Singa-pirate"},"content":"    * 3a1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":792,"author":{"gitId":"xenosf"},"content":"**Use case: Sort contacts**","lastModifiedDate":"2023-10-06"},{"lineNumber":793,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":794,"author":{"gitId":"xenosf"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":795,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":796,"author":{"gitId":"Singa-pirate"},"content":"1.  User chooses to sort based on a field (e.g. name, graduation year, priority) and an order (ascending or descending).","lastModifiedDate":"2023-10-20"},{"lineNumber":797,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":798,"author":{"gitId":"Singa-pirate"},"content":"2.  NetworkBook shows list of user’s contacts, sorted by the specified field and in the specified order.","lastModifiedDate":"2023-10-20"},{"lineNumber":799,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":800,"author":{"gitId":"xenosf"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":801,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":802,"author":{"gitId":"Singa-pirate"},"content":"* 1a. User has no contacts to sort.","lastModifiedDate":"2023-10-20"},{"lineNumber":803,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":804,"author":{"gitId":"Singa-pirate"},"content":"    * 1a1. NetworkBook shows an empty contact list.","lastModifiedDate":"2023-10-20"},{"lineNumber":805,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":806,"author":{"gitId":"xenosf"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":807,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":808,"author":{"gitId":"Singa-pirate"},"content":"* 1b. User does not specify a field.","lastModifiedDate":"2023-10-20"},{"lineNumber":809,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":810,"author":{"gitId":"Singa-pirate"},"content":"    * 1b1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-20"},{"lineNumber":811,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":812,"author":{"gitId":"xenosf"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":813,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":814,"author":{"gitId":"Singa-pirate"},"content":"* 1c. The specified field is invalid.","lastModifiedDate":"2023-10-20"},{"lineNumber":815,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":816,"author":{"gitId":"Singa-pirate"},"content":"    * 1c1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-20"},{"lineNumber":817,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":818,"author":{"gitId":"xenosf"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":819,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":820,"author":{"gitId":"Singa-pirate"},"content":"* 1d. User does not specify an order.","lastModifiedDate":"2023-10-20"},{"lineNumber":821,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":822,"author":{"gitId":"Singa-pirate"},"content":"    * 1d1. Networkbook shows list of user\u0027s contacts, sorted by the specified field and ascending order by default.","lastModifiedDate":"2023-10-20"},{"lineNumber":823,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":824,"author":{"gitId":"xenosf"},"content":"        Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":825,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":826,"author":{"gitId":"Singa-pirate"},"content":"* 1e. The specified sorting order is invalid.","lastModifiedDate":"2023-10-20"},{"lineNumber":827,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":828,"author":{"gitId":"Singa-pirate"},"content":"    * 1e1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-20"},{"lineNumber":829,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":830,"author":{"gitId":"Singa-pirate"},"content":"      Use case ends.","lastModifiedDate":"2023-10-20"},{"lineNumber":831,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":832,"author":{"gitId":"Singa-pirate"},"content":"* 1f. Certain contacts do not have any data in the specified field (e.g. no email address stored)","lastModifiedDate":"2023-10-20"},{"lineNumber":833,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":834,"author":{"gitId":"Singa-pirate"},"content":"    * 1f1. NetworkBook shows sorted list of user\u0027s contacts who have data in the specified field. Any contacts without that field specified are put at the end of the list.","lastModifiedDate":"2023-10-20"},{"lineNumber":835,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":836,"author":{"gitId":"xenosf"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":837,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":838,"author":{"gitId":"xenosf"},"content":"**Use case: Search contacts by name**","lastModifiedDate":"2023-10-05"},{"lineNumber":839,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":840,"author":{"gitId":"xenosf"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":841,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":842,"author":{"gitId":"xenosf"},"content":"1.  User specifies the text they would like to search.","lastModifiedDate":"2023-10-05"},{"lineNumber":843,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":844,"author":{"gitId":"Singa-pirate"},"content":"2.  NetworkBook shows list of user’s contacts with names containing the searched text.","lastModifiedDate":"2023-10-20"},{"lineNumber":845,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":846,"author":{"gitId":"xenosf"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":847,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":848,"author":{"gitId":"xenosf"},"content":"* 1a. The user has no contacts to search.","lastModifiedDate":"2023-10-05"},{"lineNumber":849,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":850,"author":{"gitId":"Singa-pirate"},"content":"    * 1a1. NetworkBook shows an empty contact list.","lastModifiedDate":"2023-10-20"},{"lineNumber":851,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":852,"author":{"gitId":"xenosf"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":853,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":854,"author":{"gitId":"Singa-pirate"},"content":"* 1b. The search text is not specified.","lastModifiedDate":"2023-10-20"},{"lineNumber":855,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":856,"author":{"gitId":"Singa-pirate"},"content":"    * 1b1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-20"},{"lineNumber":857,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":858,"author":{"gitId":"xenosf"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":859,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":860,"author":{"gitId":"Singa-pirate"},"content":" * 1c. There are no contacts with names containing the searched text.","lastModifiedDate":"2023-10-20"},{"lineNumber":861,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":862,"author":{"gitId":"Singa-pirate"},"content":"    * 1c1. NetworkBook shows a message saying that there are no matches.","lastModifiedDate":"2023-10-20"},{"lineNumber":863,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":864,"author":{"gitId":"xenosf"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":865,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"awhb"},"content":"**Use case: Open email app from NetworkBook**","lastModifiedDate":"2023-10-06"},{"lineNumber":868,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":869,"author":{"gitId":"awhb"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":870,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":871,"author":{"gitId":"awhb"},"content":"1. User requests to list contacts.","lastModifiedDate":"2023-10-06"},{"lineNumber":872,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":873,"author":{"gitId":"Singa-pirate"},"content":"2. NetworkBook shows a list of contacts.","lastModifiedDate":"2023-10-06"},{"lineNumber":874,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":875,"author":{"gitId":"awhb"},"content":"3. User requests to email a specific contact in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":876,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":877,"author":{"gitId":"Singa-pirate"},"content":"4.  NetworkBook loads the default email app of the user.","lastModifiedDate":"2023-10-20"},{"lineNumber":878,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":879,"author":{"gitId":"Singa-pirate"},"content":"5.  NetworkBook pre-fills the contact\u0027s email in the recipient field.","lastModifiedDate":"2023-10-20"},{"lineNumber":880,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":881,"author":{"gitId":"awhb"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":882,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":883,"author":{"gitId":"awhb"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":884,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":885,"author":{"gitId":"awhb"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-06"},{"lineNumber":886,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":887,"author":{"gitId":"awhb"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":888,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":889,"author":{"gitId":"Singa-pirate"},"content":"* 4a. The user has not logged in to his default email app.","lastModifiedDate":"2023-10-20"},{"lineNumber":890,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":891,"author":{"gitId":"Singa-pirate"},"content":"    * 4a1. User will be taken to the sign-in page of his default email app.","lastModifiedDate":"2023-10-20"},{"lineNumber":892,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":893,"author":{"gitId":"awhb"},"content":"      Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":894,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":895,"author":{"gitId":"Singa-pirate"},"content":"**Use case: Open social link from NetworkBook**","lastModifiedDate":"2023-10-20"},{"lineNumber":896,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":897,"author":{"gitId":"awhb"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":898,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":899,"author":{"gitId":"awhb"},"content":"1. User requests to list contacts.","lastModifiedDate":"2023-10-06"},{"lineNumber":900,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":901,"author":{"gitId":"Singa-pirate"},"content":"2. NetworkBook shows a list of contacts.","lastModifiedDate":"2023-10-06"},{"lineNumber":902,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":903,"author":{"gitId":"Singa-pirate"},"content":"3. User requests to open a social link of a contact stored in the app.","lastModifiedDate":"2023-10-20"},{"lineNumber":904,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":905,"author":{"gitId":"Singa-pirate"},"content":"4.  NetworkBook loads the default browser app of the user.","lastModifiedDate":"2023-10-20"},{"lineNumber":906,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":907,"author":{"gitId":"Singa-pirate"},"content":"5.  NetworkBook visits the requested social link in the browser.","lastModifiedDate":"2023-10-20"},{"lineNumber":908,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":909,"author":{"gitId":"awhb"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":910,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":911,"author":{"gitId":"awhb"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":912,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":913,"author":{"gitId":"awhb"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-06"},{"lineNumber":914,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":915,"author":{"gitId":"awhb"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":916,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":917,"author":{"gitId":"Singa-pirate"},"content":"* 4a. The social link is invalid.","lastModifiedDate":"2023-10-20"},{"lineNumber":918,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":919,"author":{"gitId":"Singa-pirate"},"content":"    * 4a1. The user will see the error page displayed by the browser used to load the page link.","lastModifiedDate":"2023-10-20"},{"lineNumber":920,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":921,"author":{"gitId":"awhb"},"content":"      Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":922,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":923,"author":{"gitId":"Singa-pirate"},"content":"* 4b. The page is valid but fails to load.","lastModifiedDate":"2023-10-20"},{"lineNumber":924,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":925,"author":{"gitId":"Singa-pirate"},"content":"    * 4b1. The user will see the error page displayed by the browser used to load the page link.","lastModifiedDate":"2023-10-20"},{"lineNumber":926,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":927,"author":{"gitId":"awhb"},"content":"      Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":928,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":929,"author":{"gitId":"Singa-pirate"},"content":"* 4c. The social link directs to a social media app which the user has not logged in.","lastModifiedDate":"2023-10-20"},{"lineNumber":930,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":931,"author":{"gitId":"Singa-pirate"},"content":"    * 4c1. The user will be taken to the sign-in page of the social media app.","lastModifiedDate":"2023-10-20"},{"lineNumber":932,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":933,"author":{"gitId":"awhb"},"content":"      Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":934,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":935,"author":{"gitId":"Singa-pirate"},"content":"**Use case: Download mobile app from online page**","lastModifiedDate":"2023-10-20"},{"lineNumber":936,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":937,"author":{"gitId":"awhb"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":938,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":939,"author":{"gitId":"awhb"},"content":"1. User requests to visit the online page. ","lastModifiedDate":"2023-10-06"},{"lineNumber":940,"author":{"gitId":"awhb"},"content":"2. The online page renders.","lastModifiedDate":"2023-10-06"},{"lineNumber":941,"author":{"gitId":"Singa-pirate"},"content":"3. User selects link to download the mobile app.","lastModifiedDate":"2023-10-20"},{"lineNumber":942,"author":{"gitId":"awhb"},"content":"4. Mobile app starts downloading on the user\u0027s device.","lastModifiedDate":"2023-10-06"},{"lineNumber":943,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":944,"author":{"gitId":"awhb"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":945,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":946,"author":{"gitId":"awhb"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":947,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":948,"author":{"gitId":"awhb"},"content":"* 1a. The online page fails to load.","lastModifiedDate":"2023-10-06"},{"lineNumber":949,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":950,"author":{"gitId":"awhb"},"content":"    * 1a1. The user will see the error page displayed by the browser used to load the page link.","lastModifiedDate":"2023-10-14"},{"lineNumber":951,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":952,"author":{"gitId":"awhb"},"content":"      Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":953,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":954,"author":{"gitId":"awhb"},"content":"**Use case: Access user manual on online page**","lastModifiedDate":"2023-10-06"},{"lineNumber":955,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":956,"author":{"gitId":"awhb"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":957,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":958,"author":{"gitId":"awhb"},"content":"1.  User requests to visit the online page.","lastModifiedDate":"2023-10-06"},{"lineNumber":959,"author":{"gitId":"awhb"},"content":"2. The online page renders.","lastModifiedDate":"2023-10-06"},{"lineNumber":960,"author":{"gitId":"awhb"},"content":"3. User selects link to visit the user manual.","lastModifiedDate":"2023-10-14"},{"lineNumber":961,"author":{"gitId":"awhb"},"content":"4. The user manual page renders.","lastModifiedDate":"2023-10-06"},{"lineNumber":962,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":963,"author":{"gitId":"awhb"},"content":"   Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":964,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":965,"author":{"gitId":"awhb"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":966,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":967,"author":{"gitId":"awhb"},"content":"* 1a. The online page fails to load.","lastModifiedDate":"2023-10-06"},{"lineNumber":968,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":969,"author":{"gitId":"awhb"},"content":"    * 1a1. The user will see the error page displayed by the browser used to load the page link.","lastModifiedDate":"2023-10-14"},{"lineNumber":970,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":971,"author":{"gitId":"awhb"},"content":"      Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":972,"author":{"gitId":"awhb"},"content":"  ","lastModifiedDate":"2023-10-06"},{"lineNumber":973,"author":{"gitId":"awhb"},"content":"* 3a. The user manual page fails to load.","lastModifiedDate":"2023-10-06"},{"lineNumber":974,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":975,"author":{"gitId":"awhb"},"content":"    * 3a1. The user will see the error page displayed by the browser used to load the page link.","lastModifiedDate":"2023-10-14"},{"lineNumber":976,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":977,"author":{"gitId":"awhb"},"content":"      Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":978,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":979,"author":{"gitId":"awhb"},"content":"**Use case: Navigate from catalogue to relevant section of online manual**","lastModifiedDate":"2023-10-06"},{"lineNumber":980,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":981,"author":{"gitId":"awhb"},"content":"**Preconditions:** User is on user manual page.","lastModifiedDate":"2023-10-06"},{"lineNumber":982,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":983,"author":{"gitId":"awhb"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":984,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":985,"author":{"gitId":"Singa-pirate"},"content":"1. User chooses a manual section title within the catalogue.","lastModifiedDate":"2023-10-20"},{"lineNumber":986,"author":{"gitId":"awhb"},"content":"2. Browser navigates to display relevant section of online manual. ","lastModifiedDate":"2023-10-06"},{"lineNumber":987,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":988,"author":{"gitId":"awhb"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":989,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":990,"author":{"gitId":"awhb"},"content":"**Use case: Export contact in readable text**","lastModifiedDate":"2023-10-06"},{"lineNumber":991,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":992,"author":{"gitId":"awhb"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":993,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":994,"author":{"gitId":"awhb"},"content":"1.  User requests to list contacts.","lastModifiedDate":"2023-10-06"},{"lineNumber":995,"author":{"gitId":"Singa-pirate"},"content":"2.  NetworkBook shows a list of contacts.","lastModifiedDate":"2023-10-06"},{"lineNumber":996,"author":{"gitId":"awhb"},"content":"3.  User requests to export a specific contact in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":997,"author":{"gitId":"Singa-pirate"},"content":"4.  NetworkBook exports a text file storing user details in a readable format.","lastModifiedDate":"2023-10-06"},{"lineNumber":998,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":999,"author":{"gitId":"awhb"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":1000,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":1001,"author":{"gitId":"awhb"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":1002,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":1003,"author":{"gitId":"awhb"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-06"},{"lineNumber":1004,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":1005,"author":{"gitId":"awhb"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":1006,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":1007,"author":{"gitId":"Singa-pirate"},"content":"**Use case: Import data from exported contacts**","lastModifiedDate":"2023-10-20"},{"lineNumber":1008,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1009,"author":{"gitId":"Singa-pirate"},"content":"**MSS**","lastModifiedDate":"2023-10-20"},{"lineNumber":1010,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1011,"author":{"gitId":"Singa-pirate"},"content":"1. User requests to import contacts data.","lastModifiedDate":"2023-10-20"},{"lineNumber":1012,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1013,"author":{"gitId":"Singa-pirate"},"content":"2. NetworkBook loads the user\u0027s file explorer.","lastModifiedDate":"2023-10-20"},{"lineNumber":1014,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1015,"author":{"gitId":"Singa-pirate"},"content":"3. User selects a file containing exported contacts.","lastModifiedDate":"2023-10-20"},{"lineNumber":1016,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1017,"author":{"gitId":"Singa-pirate"},"content":"4. NetworkBook creates new contacts with details specified in the export file.","lastModifiedDate":"2023-10-20"},{"lineNumber":1018,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1019,"author":{"gitId":"Singa-pirate"},"content":"   Use case ends.","lastModifiedDate":"2023-10-20"},{"lineNumber":1020,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1021,"author":{"gitId":"Singa-pirate"},"content":"**Extensions**","lastModifiedDate":"2023-10-20"},{"lineNumber":1022,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1023,"author":{"gitId":"Singa-pirate"},"content":"* 2a. User exits the file explorer without selecting any file.","lastModifiedDate":"2023-10-20"},{"lineNumber":1024,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1025,"author":{"gitId":"Singa-pirate"},"content":"  * 2a1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-20"},{"lineNumber":1026,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1027,"author":{"gitId":"Singa-pirate"},"content":"    Use case ends.","lastModifiedDate":"2023-10-20"},{"lineNumber":1028,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1029,"author":{"gitId":"Singa-pirate"},"content":"* 3a. The file chosen is not in the correct format.","lastModifiedDate":"2023-10-20"},{"lineNumber":1030,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1031,"author":{"gitId":"Singa-pirate"},"content":"  * 3a1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-20"},{"lineNumber":1032,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1033,"author":{"gitId":"Singa-pirate"},"content":"    Use case ends.","lastModifiedDate":"2023-10-20"},{"lineNumber":1034,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1035,"author":{"gitId":"Singa-pirate"},"content":"* 3b. NetworkBook does not have permission to read the file.","lastModifiedDate":"2023-10-20"},{"lineNumber":1036,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1037,"author":{"gitId":"Singa-pirate"},"content":"  * 3b1. NetworkBook shows an error message.","lastModifiedDate":"2023-10-20"},{"lineNumber":1038,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1039,"author":{"gitId":"Singa-pirate"},"content":"    Use case ends.","lastModifiedDate":"2023-10-20"},{"lineNumber":1040,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1041,"author":{"gitId":"Singa-pirate"},"content":"- 3c. The file contains contacts with same names as some existing contacts.","lastModifiedDate":"2023-10-20"},{"lineNumber":1042,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1043,"author":{"gitId":"Singa-pirate"},"content":"  - 3c1. NetworkBook skips these contacts and only creates new contacts whose names are not present yet.","lastModifiedDate":"2023-10-20"},{"lineNumber":1044,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1045,"author":{"gitId":"Singa-pirate"},"content":"  - 3c2. NetworkBook shows the skipped contacts.","lastModifiedDate":"2023-10-20"},{"lineNumber":1046,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1047,"author":{"gitId":"Singa-pirate"},"content":"    Use case ends.","lastModifiedDate":"2023-10-20"},{"lineNumber":1048,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":1053,"author":{"gitId":"Singa-pirate"},"content":"1. Should be able to hold up to 1000 contacts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-06"},{"lineNumber":1054,"author":{"gitId":"nknguyenhc"},"content":"1. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-03"},{"lineNumber":1055,"author":{"gitId":"Singa-pirate"},"content":"1. A new user should be able to familiarise him/herself with most of the basic features of the app upon finishing going through the quick-start guide.","lastModifiedDate":"2023-10-20"},{"lineNumber":1056,"author":{"gitId":"nknguyenhc"},"content":"1. A user should be able to use commonly available and easy-to-remember keyboard shorcuts","lastModifiedDate":"2023-10-03"},{"lineNumber":1057,"author":{"gitId":"nknguyenhc"},"content":"   * Ctrl+C: copy text","lastModifiedDate":"2023-10-03"},{"lineNumber":1058,"author":{"gitId":"nknguyenhc"},"content":"   * Ctrl+V: paste text","lastModifiedDate":"2023-10-03"},{"lineNumber":1059,"author":{"gitId":"nknguyenhc"},"content":"   * Ctrl+N: new contact detail","lastModifiedDate":"2023-10-03"},{"lineNumber":1060,"author":{"gitId":"nknguyenhc"},"content":"   * Ctrl+W: exit the app","lastModifiedDate":"2023-10-03"},{"lineNumber":1061,"author":{"gitId":"nknguyenhc"},"content":"   * Ctrl+F: find a contact","lastModifiedDate":"2023-10-03"},{"lineNumber":1062,"author":{"gitId":"nknguyenhc"},"content":"   * Ctrl+H/Ctrl+R/Ctrl+G: edit a contact","lastModifiedDate":"2023-10-03"},{"lineNumber":1063,"author":{"gitId":"Singa-pirate"},"content":"   * Up/down arrow keys: access previous commands","lastModifiedDate":"2023-10-03"},{"lineNumber":1064,"author":{"gitId":"Singa-pirate"},"content":"1. A new user should be able to understand the meaning of a command just by looking at the keywords used in the command.","lastModifiedDate":"2023-10-20"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1069,"author":{"gitId":"nknguyenhc"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X.","lastModifiedDate":"2023-10-03"},{"lineNumber":1070,"author":{"gitId":"Singa-pirate"},"content":"* **Command**: a string keyed in by the user in the GUI text input that signifies an action to be done by the app.","lastModifiedDate":"2023-10-20"},{"lineNumber":1071,"author":{"gitId":"Singa-pirate"},"content":"* **Contact**: a contact of the user whose information is stored in the app, which includes name, phone numbers, emails, links, graduation year, courses taken, specialisations, priority level and tags of/associated with the person.","lastModifiedDate":"2023-10-20"},{"lineNumber":1072,"author":{"gitId":"Singa-pirate"},"content":"* **Field**: an attribute of a contact that describes information about the contact and can take different values. Possible fields of a contact are elaborated in the **contact** term above.","lastModifiedDate":"2023-10-20"},{"lineNumber":1073,"author":{"gitId":"Singa-pirate"},"content":"* **Course taken**: a module that a person has taken in university or outside (for e.g. CS2103T module in NUS).","lastModifiedDate":"2023-10-20"},{"lineNumber":1074,"author":{"gitId":"Singa-pirate"},"content":"* **Specialisation**: the specialisation a person can take in their computing degree in NUS (e.g. Software Engineering, Artificial Intelligence).","lastModifiedDate":"2023-10-20"},{"lineNumber":1075,"author":{"gitId":"Singa-pirate"},"content":"* **Graduation year**: the year and semester that a person will graduate / has graduated from NUS (e.g. AY2526-S2, meaning the second semester of the academic year spanning from 2025 to 2026).","lastModifiedDate":"2023-10-20"},{"lineNumber":1076,"author":{"gitId":"awhb"},"content":"* **Link**: a web link which directs to a contact\u0027s profile page on a social platform (e.g. LinkedIn, GitHub).","lastModifiedDate":"2023-10-14"},{"lineNumber":1077,"author":{"gitId":"nknguyenhc"},"content":"* **Tag**: an annotation to a person. This can be anything memorable of the person.","lastModifiedDate":"2023-10-03"},{"lineNumber":1078,"author":{"gitId":"Singa-pirate"},"content":"* **Priority**: the priority level of a contact set by the user. Its value can be either high, medium or low.","lastModifiedDate":"2023-10-06"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1094,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1108,"author":{"gitId":"Eola-Z"},"content":"### Editing a person","lastModifiedDate":"2023-10-06"},{"lineNumber":1109,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":1110,"author":{"gitId":"Eola-Z"},"content":"1. Editing a person\u0027s name while all persons are being shown","lastModifiedDate":"2023-10-06"},{"lineNumber":1111,"author":{"gitId":"Eola-Z"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":1112,"author":{"gitId":"Eola-Z"},"content":"   ","lastModifiedDate":"2023-10-06"},{"lineNumber":1113,"author":{"gitId":"Eola-Z"},"content":"   2. Test case: `update /name Test 1`","lastModifiedDate":"2023-10-06"},{"lineNumber":1114,"author":{"gitId":"Eola-Z"},"content":"      ","lastModifiedDate":"2023-10-06"},{"lineNumber":1115,"author":{"gitId":"Singa-pirate"},"content":"      Expected: Name of the first contact should change to `Test`. NetworkBook should show details of the old and new name of the contact.","lastModifiedDate":"2023-10-20"},{"lineNumber":1116,"author":{"gitId":"Eola-Z"},"content":"   ","lastModifiedDate":"2023-10-06"},{"lineNumber":1117,"author":{"gitId":"Eola-Z"},"content":"   3. Test case: `update /name Test 0`","lastModifiedDate":"2023-10-06"},{"lineNumber":1118,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":1119,"author":{"gitId":"Eola-Z"},"content":"      Expected: No person is updated. Error details shown in the status message.","lastModifiedDate":"2023-10-06"},{"lineNumber":1120,"author":{"gitId":"Eola-Z"},"content":"2. Editing other attributes of a person","lastModifiedDate":"2023-10-06"},{"lineNumber":1121,"author":{"gitId":"Eola-Z"},"content":"   1. Prerequisites: List all persons using the \u0027list\u0027 command. Multiple persons in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":1122,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":1123,"author":{"gitId":"Eola-Z"},"content":"   2. Test case: `update /phone 12345678 1`","lastModifiedDate":"2023-10-06"},{"lineNumber":1124,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":1125,"author":{"gitId":"Singa-pirate"},"content":"      Expected: Phone number of first contact should change to `12345678`. NetworkBook should show details of old and new phone number.","lastModifiedDate":"2023-10-20"},{"lineNumber":1126,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":1127,"author":{"gitId":"Eola-Z"},"content":"   3. Test case: `update /email test@email.com 1`","lastModifiedDate":"2023-10-06"},{"lineNumber":1128,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":1129,"author":{"gitId":"Singa-pirate"},"content":"      Expected: Email of first contact should change to `test@email.com`. NetworkBook should show details of the old and new email of the contact.","lastModifiedDate":"2023-10-20"},{"lineNumber":1130,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":1131,"author":{"gitId":"awhb"},"content":"   4. _{ Likewise for `course`, `specialisation`, `link`, `grad`, `priority`, `tag` }_","lastModifiedDate":"2023-10-14"},{"lineNumber":1132,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1139,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1140,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1142,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1143,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1152,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1154,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":1155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Eola-Z":59,"nknguyenhc":60,"xenosf":129,"Singa-pirate":406,"-":347,"awhb":155}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"   1. Run the `networkbook.Main` and try a few commands.","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"nknguyenhc":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.commons.StringUtilTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"   e.g. `storage.networkbook.StorageManagerTest`","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"   e.g. `logic.networkbook.LogicManagerTest`","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"nknguyenhc":2,"-":34}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"## Product Overview","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"**Land the dream internship or job opportunity you\u0027ve always wanted by networking more effectively using our application!**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"NetworkBook is a desktop contact book application built for NUS Computing students and professionals to manage information about the people they network with more efficiently than ever before.","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"Here\u0027s an overview of how NetworkBook can help you manage your network of contacts better than existing alternatives:","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"- You can search for and sort contacts by multiple networking-relevant fields (e.g. priority, courses taken/taking, specialization(s) taken/intending to take, graduation year)","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"- You can access this application offline, with a static online page that contains user manual and download link","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"- You can record only the information you find relevant on our application (e.g. you can assign one contact only their email and specialisation, and another contact nothing but their course)","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"On top of these advantages, we believe that contact management must be efficient. Therefore, NetworkBook is optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you type fast, NetworkBook can get your contact managing done faster than existing alternatives performing a similar role.","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"If you are new here, visit our [getting started guide](#getting-started) to start getting connected on NetworkBook!","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"## Table of Contents","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"* TOC","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"{:toc}","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"## About This User Guide","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"This user guide provides in-depth documentation on the various commands that are available in NetworkBook.","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"If you are familiar with the software, this user guide gives an overview on how to use specific commands.","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"Additionally, if you are a new user, this user guide provides a quick start guide to aid you with installing the application and getting started.","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"### What\u0027s new in NetworkBook 1.3","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"NetworkBook 1.3 includes several new features and improvements for ease of use.","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"* Filter command for more control with finding contacts","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"* Error messages are now more specific to give useful information","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"* NetworkBook is able to connect with and open other apps","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"* Keyboard shortcuts added for easy access to common commands","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"* Undo/redo command to fix mistakes","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"* Refinement of GUI to make it more aesthetically pleasing","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"## Getting Started","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"1. Make sure you have Java 11 installed on your computer.","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"    * You can check that it is installed by running the command `java --version` in the command prompt/terminal.","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"1. Download the latest version of NetworkBook (`networkbook.jar`) from the top of the [NetworkBook GitHub releases page](https://github.com/AY2324S1-CS2103T-T08-2/tp/releases).","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"1. Create a new folder on your computer (e.g. on your computer desktop). You can name this folder however you want.","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"1. Move the `networkbook.jar` file into the folder you just created.","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"xenosf"},"content":"1. Open NetworkBook:","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"xenosf"},"content":"    * If you are using Windows:","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"        1. Double-click the `networkbook.jar` file to open it.","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"    * If you are using MacOS:","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"        1. Open Terminal.app.","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"        1. Navigate to the folder you have created using the `cd` command:","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"            1. Type `cd`, then space, into the Terminal window.","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"            1. Drag the folder icon from Finder into the Terminal window.","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"            1. Press enter.","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"xenosf"},"content":"        1. Type in `java -jar networkbook.jar`, then press enter to open the app.","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"xenosf"},"content":"    * If you are using Linux:","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"xenosf"},"content":"        1. Open your terminal emulator app.","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"xenosf"},"content":"        1. Navigate to the folder you have created using `cd`.","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"xenosf"},"content":"        1. Type in `java -jar networkbook.jar`, then press enter to open the app.","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"xenosf"},"content":"1. You should now see the NetworkBook window on your screen. This is what NetworkBook looks like:","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"xenosf"},"content":"    ![Annotated diagram of the NetworkBook window](./images/gui-annotated.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"1. You can now start using NetworkBook!","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"xenosf"},"content":"    * Learn more about the commands in the [features](#features) section.","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"### \u003cu\u003eCategory 1 - Add contact information\u003c/u\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"#### Create new contact: `create /name [name] [/optional fields]`","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"You can use the create command to create a new contact. When creating a contact, you must provide the name field, and it\u0027s optional to provide other fields which will be added to the new contact.","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"Format: `create /name [name] /phone [phone] /email [email] /link [link] /grad [semester of graduation] /course [course] /spec [specialisation] /priority [high/medium/low] /tag [tag]`","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"Parameters:","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"awhb"},"content":"* `[name]`  is the name of the contact you wish to add.","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"awhb"},"content":"* `[optional fields]` are the non-mandatory fields you can associate with the contact at the point of creation. The fields can also be added using the add command.","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"When adding a contact, if there is already another contact with the same name, you would be informed that another contact with the same name already exists (not case sensitive)","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"Eola-Z"},"content":"Example usage:","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"* `create /name Jiale`","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"* `create /name Jiale /phone 12345678 /grad AY2526-S2`","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"![create command](images/create/create.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"awhb"},"content":"[Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"#### Add details to contact: `add [index] /phone`","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"You can add a contact detail to an existing contact. No new contact will be created.","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"Format: ","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"* Add phone: `add [index] /phone [phone]`","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"* Add email: `add [index] /email [email]`","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"* Add link: `add [index] /link [link]`","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"* Add graduation time: `add [index] /grad [semester of graduation]`","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"* Add course: `add [index] /course [course]`","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"* Add specialisation: `add [index] /spec [specialisation]`","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"* Assign priority: `add [index] /priority [priority level]`","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"* Add tag: `add [index] /tag [tag name]`","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"awhb"},"content":"Parameters:","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"awhb"},"content":"* `[index]` is the index of the contact in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"awhb"},"content":"* `[phone]` is a valid phone number (should be all numeric characters).","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"* `[email]` is a valid email (`@` (at sign) must be present, ","lastModifiedDate":"2023-09-27"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"and `.` (period) must be present after `@` (at sign)).","lastModifiedDate":"2023-09-27"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"* `[link]` is a valid URL linking to a contact’s social media page.","lastModifiedDate":"2023-09-27"},{"lineNumber":112,"author":{"gitId":"xenosf"},"content":"* `[grad]` is a valid graduation date, in the format `AYxxxx-Sy`.","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"xenosf"},"content":"    * `xxxx` is the 4-digit representation of the 2 calendar years, in the academic year e.g. `2223` for Academic Year 20`22`/20`23`. Academic year must be between AY1970/1971 to AY2069/2070 (inclusive).","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"xenosf"},"content":"    * `y` is either `1` for Semester 1, or `2` for Semester 2.","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"* `[course]` is a course that the contact is taking/has taken.","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"* `[spec]` is the specialisation that contact is taking/has taken.","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"* `[priority level]` either **high**, **medium** or **low**, or the initial alphabet to represent the respective priority level.","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"* `[tag name]` is the name of the tag to associate the contact with","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"Example usage:","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"* `add 1 /phone 91234567`","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"* `add 3 /email nknguyentdn@gmail.com`","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"* `add 1 /link https://nknguyenhc.github.io/`","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"* `add 3 /grad AY2223-S1`","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"* `add 2 /course CS1101S`","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"* `add 3 /spec Robotics \u0026 AI`","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"* `add 1 /priority high`","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"* `add 1 /tag data analyst`","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"![add phone](images/add-remark/add-phone.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"awhb"},"content":"[Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"Singa-pirate"},"content":"### \u003cu\u003eCategory 2 - Edit contact details\u003c/u\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"#### Edit contact detail : `edit [index] [options]`","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":138,"author":{"gitId":"awhb"},"content":"You can edit contact details of existing contacts in your book.","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"Format:","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"* Edit name: `edit [index of contact] /name [name]`","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"* Edit phone: `edit [index of contact] /phone [phone] /index [index of phone]`","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"nknguyenhc"},"content":"* Edit email: `edit [index of contact] /email [email] /index [index of email]`","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"* Edit link: `edit [index of contact] /link [link] /index [index of link]`","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"* Edit graduation: `edit [index of contact] /grad [semester of graduation]`","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"* Edit course: `edit [index of contact] /course [course] /index [index of course]`","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"* Edit specialisation: `edit [index of contact] /spec [specialisation] /index [index of specialisation]`","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"* Edit priority: `edit [index of contact] /priority [priority level]`","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"* Edit tag: `edit [index of contact] /tag [tag name]`","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"Parameters:","lastModifiedDate":"2023-09-27"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"* `[index of contact]` is the index of the contact in the list.","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"* `[phone]` is a valid phone number (should be all numeric characters).","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"* `[index of phone]` is the index of the phone number in the phone list of the contact.","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"* `[email]` is a valid email (`@` (at sign) must be present, ","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"and `.` (period) must be present after `@` (at sign)).","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"* `[index of email]` is the index of the email in the email list of the contact.","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"* `[link]` is a valid URL linking to a contact’s social media page.","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"* `[index of link]` is the index of the link in the link list of the contact.","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"* `[grad]` is a valid graduation date, in the format `AYxxxx-Sy`.","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"    * `xxxx` is the 4-digit representation of the 2 calendar years, in the academic year e.g. `2223` for Academic Year 20`22`/20`23`. Academic year must be between AY1970/1971 to AY2069/2070 (inclusive).","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"    * `y` is either `1` for Semester 1, or `2` for Semester 2.","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"* `[course]` is a course that the contact is taking/has taken.","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"* `[index of course]` is the index of the course in the course list of the contact.","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"* `[spec]` is the specialisation that contact is taking/has taken.","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"* `[index of specialisation]` is the index of the specialisation in the specialisation list of the contact.","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"nknguyenhc"},"content":"* `[priority level]` either **high**, **medium** or **low**, or the initial alphabet to represent the respective priority level.","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"* `[tag name]` is the name of the tag to associate the contact with.","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"* `[index of tag]` is the index of the tag in the tag list of the contact.","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"Example usage:","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"awhb"},"content":"* `edit 1 /name nkn`","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"* `edit 2 /phone 10938472 /index 1`","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"nknguyenhc"},"content":"* `edit 3 /email nkn@gmail.com /index 3`","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"nknguyenhc"},"content":"* `edit 1 /link https://nknguyenhc.github.io/ /index 1`","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"nknguyenhc"},"content":"* `edit 3 /grad AY2324-S1`","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"nknguyenhc"},"content":"* `edit 2 /course CS2101 /index 2`","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"nknguyenhc"},"content":"* `edit 1 /spec algorithms /index 3`","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"* `edit 3 /priority high`","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"* `edit 1 /tag working in Meta /index 2`","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"![update success](images/edit/edit.png)","lastModifiedDate":"2023-09-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":184,"author":{"gitId":"awhb"},"content":"[Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"awhb"},"content":"#### Delete a contact: `delete` ","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"Singa-pirate"},"content":"You can remove a contact from your NetworkBook using the `delete` command, ","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"Singa-pirate"},"content":"so that your book only contains contact details of those relevant.","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"Singa-pirate"},"content":"Format: `delete [index]`","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"Singa-pirate"},"content":"Parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"nknguyenhc"},"content":"* `[index]` is the index of the contact in the list","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"nknguyenhc"},"content":"Example usage:","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"nknguyenhc"},"content":"* `delete 1`","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"nknguyenhc"},"content":"* `delete 16`","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"nknguyenhc"},"content":"![delete](images/delete/delete.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"awhb"},"content":"[Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"Singa-pirate"},"content":"### \u003cu\u003eCategory 3 - Find contacts\u003c/u\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"awhb"},"content":"#### Find a contact: `find [name]`","lastModifiedDate":"2023-10-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":211,"author":{"gitId":"awhb"},"content":"You can use the `find` command to search for contacts by their name if you wish to quickly reference a particular contact’s details.","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":213,"author":{"gitId":"awhb"},"content":"Format: `find [name]`","lastModifiedDate":"2023-10-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":215,"author":{"gitId":"awhb"},"content":"Parameters:","lastModifiedDate":"2023-10-04"},{"lineNumber":216,"author":{"gitId":"awhb"},"content":"* `[name]` is a term found in the names of the contacts you wish to find.","lastModifiedDate":"2023-10-20"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":218,"author":{"gitId":"nknguyenhc"},"content":"Example usage:","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"awhb"},"content":"* `find Jack`","lastModifiedDate":"2023-10-19"},{"lineNumber":220,"author":{"gitId":"nknguyenhc"},"content":"* `find Kai Jie`","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":222,"author":{"gitId":"nknguyenhc"},"content":"![search](images/find/search-success.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":224,"author":{"gitId":"awhb"},"content":"[Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":226,"author":{"gitId":"awhb"},"content":"#### Sort contacts list: `sort /by /order`","lastModifiedDate":"2023-10-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":228,"author":{"gitId":"xenosf"},"content":"You can use the `sort` command to sort your list of contacts.","lastModifiedDate":"2023-10-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":230,"author":{"gitId":"xenosf"},"content":"Format: `sort /by [field] /order [order]`","lastModifiedDate":"2023-10-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":232,"author":{"gitId":"xenosf"},"content":"Parameters","lastModifiedDate":"2023-10-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":234,"author":{"gitId":"xenosf"},"content":"* `[field]` is the information to sort by.","lastModifiedDate":"2023-10-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":236,"author":{"gitId":"xenosf"},"content":"    List of options:","lastModifiedDate":"2023-10-05"},{"lineNumber":237,"author":{"gitId":"xenosf"},"content":"    * `name` - Sort alphabetically by contact name","lastModifiedDate":"2023-10-05"},{"lineNumber":238,"author":{"gitId":"xenosf"},"content":"    * `grad` - Sort chronologically by graduation year","lastModifiedDate":"2023-10-05"},{"lineNumber":239,"author":{"gitId":"xenosf"},"content":"    * `priority` - Sort by priority","lastModifiedDate":"2023-10-05"},{"lineNumber":240,"author":{"gitId":"xenosf"},"content":"    * `none` - Return to default sorting","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":242,"author":{"gitId":"xenosf"},"content":"* `[order]` (optional) is the order to sort in. If not specified, defaults to ascending.","lastModifiedDate":"2023-10-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":244,"author":{"gitId":"xenosf"},"content":"    List of options:","lastModifiedDate":"2023-10-05"},{"lineNumber":245,"author":{"gitId":"xenosf"},"content":"    * `asc`/`ascending` - Sort in ascending order","lastModifiedDate":"2023-10-05"},{"lineNumber":246,"author":{"gitId":"xenosf"},"content":"    * `desc`/`descending` - Sort in descending order","lastModifiedDate":"2023-10-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":248,"author":{"gitId":"nknguyenhc"},"content":"Example usage:","lastModifiedDate":"2023-10-25"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":250,"author":{"gitId":"nknguyenhc"},"content":"* `sort /by grad /order asc`","lastModifiedDate":"2023-10-25"},{"lineNumber":251,"author":{"gitId":"nknguyenhc"},"content":"* `sort /by name /order descending`","lastModifiedDate":"2023-10-25"},{"lineNumber":252,"author":{"gitId":"nknguyenhc"},"content":"* `sort /by name`","lastModifiedDate":"2023-10-25"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":254,"author":{"gitId":"nknguyenhc"},"content":"![sort](images/sort/sort.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":256,"author":{"gitId":"awhb"},"content":"[Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-25"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"Singa-pirate"},"content":"| Command |   Prefixes   |      Format and examples      | What it does                       |","lastModifiedDate":"2023-10-25"},{"lineNumber":261,"author":{"gitId":"Singa-pirate"},"content":"|---------|------------|-------------------|------------------------------------|","lastModifiedDate":"2023-10-25"},{"lineNumber":262,"author":{"gitId":"Singa-pirate"},"content":"| **create** | `/name` \u003cbr\u003e `[/phone]` \u003cbr/\u003e `[/email] `\u003cbr/\u003e `[/link]` \u003cbr/\u003e  `[/course]` \u003cbr/\u003e `[/spec]` \u003cbr/\u003e`[/grad]` \u003cbr/\u003e `[/priority]` \u003cbr/\u003e `[/tag]` | `create /name [name] [/optional fields]` \u003cbr\u003e\u003cbr\u003e e.g., `create /name Oreki` \u003cbr\u003e `create /name Ness /phone +6598765432 /grad AY2526-S2` | Creates a new contact in NetworkBook. \u003cbr\u003e\u003cbr\u003e If optional fields are provided, their values will be added to the contact. |","lastModifiedDate":"2023-10-25"},{"lineNumber":263,"author":{"gitId":"Singa-pirate"},"content":"| **add** | `[/phone]`  \u003cbr\u003e`[/email]` \u003cbr\u003e `[/link]` \u003cbr\u003e `[/course]` \u003cbr\u003e `[/spec]` \u003cbr\u003e `[/grad]` \u003cbr\u003e`[/priority]` \u003cbr\u003e `[/tag]` | `add [index] /phone [phone]` \u003cbr\u003e`add [index] /email [email]`\u003cbr/\u003e`add [index] /link [link]`\u003cbr/\u003e`add [index] /course [course]`\u003cbr/\u003e`add [index] /spec [specialisation]`\u003cbr/\u003e`add [index] /grad [semester of graduation]`\u003cbr\u003e`add [index] /priority [priority]`\u003cbr\u003e`add [index] /tag [tag]`\u003cbr\u003e\u003cbr\u003e e.g., `add 2 /email test@example.com` \u003cbr/\u003e`add 1 /link https://nknguyenhc.github.io/`\u003cbr/\u003e`add 1 /grad AY2223-S1` \u003cbr\u003e`add 1 /priority high` | Adds information to a contact.                             |","lastModifiedDate":"2023-10-25"},{"lineNumber":264,"author":{"gitId":"Singa-pirate"},"content":"| **edit**   | Single-valued fields: \u003cbr\u003e`[/name]` \u003cbr/\u003e `[/grad]` \u003cbr/\u003e`[/priority]`\u003cbr\u003e\u003cbr\u003eMulti-valued fields which require `[/index]`: \u003cbr\u003e `[/phone]`  \u003cbr/\u003e`[/email]` \u003cbr/\u003e `[/link]` \u003cbr/\u003e `[/course]` \u003cbr/\u003e `[/spec]`  \u003cbr/\u003e `[/tag]` | Single-valued fields: \u003cbr\u003e `edit [index of contact] /field [new value]` \u003cbr/\u003e\u003cbr/\u003e e.g., `edit 1 /name Nguyen` \u003cbr/\u003e `edit 1 /grad AY2627-S1` \u003cbr\u003e\u003cbr\u003e Multi-valued fields: \u003cbr\u003e `edit [index of contact] /field [new value] /index [index of old value]`\u003cbr/\u003e \u003cbr/\u003ee.g., `edit 1 /email aaa@gmail.com /index 1` \u003cbr\u003e `edit 1 /course CS2109S /index 1` | Edits information about a contact. |","lastModifiedDate":"2023-10-25"},{"lineNumber":265,"author":{"gitId":"Singa-pirate"},"content":"| **delete** | N/A                                                          | `delete [index]`\u003cbr/\u003e\u003cbr\u003ee.g., `delete 1`                    | Deletes a contact from NetworkBook.                          |","lastModifiedDate":"2023-10-25"},{"lineNumber":266,"author":{"gitId":"Singa-pirate"},"content":"| **find**   | N/A                                                          | `find [name]` \u003cbr/\u003e\u003cbr\u003e e.g., `find Ness`                    | Searches for contacts by name.                          |","lastModifiedDate":"2023-10-25"},{"lineNumber":267,"author":{"gitId":"Singa-pirate"},"content":"| **sort**   | `/by` \u003cbr\u003e `[/order]` | `sort /by [field] /order [order]`\u003cbr/\u003e\u003cbr\u003ee.g., `sort /by priority /order desc` | Sorts contacts by a field. |","lastModifiedDate":"2023-10-25"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":269,"author":{"gitId":"Singa-pirate"},"content":"[Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-25"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":271,"author":{"gitId":"Singa-pirate"},"content":"## FAQ","lastModifiedDate":"2023-10-25"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":273,"author":{"gitId":"Singa-pirate"},"content":"#### Launching NetworkBook ","lastModifiedDate":"2023-10-25"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":275,"author":{"gitId":"Singa-pirate"},"content":"**Q:** How can I launch NetworkBook if the clicking on the JAR file does not work on my Windows computer? \u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":276,"author":{"gitId":"Singa-pirate"},"content":"**A:** If you are familiar with the command prompt, you can follow the steps below:","lastModifiedDate":"2023-10-25"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":278,"author":{"gitId":"Singa-pirate"},"content":"1. Open command prompt on your computer","lastModifiedDate":"2023-10-25"},{"lineNumber":279,"author":{"gitId":"Singa-pirate"},"content":"2. Navigate to the directory where the JAR file is located using `cd [JAR file location]`","lastModifiedDate":"2023-10-25"},{"lineNumber":280,"author":{"gitId":"Singa-pirate"},"content":"3. Type `java -jar networkbook.jar` and press enter","lastModifiedDate":"2023-10-25"},{"lineNumber":281,"author":{"gitId":"Singa-pirate"},"content":"4. NetworkBook should launch","lastModifiedDate":"2023-10-25"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":283,"author":{"gitId":"Singa-pirate"},"content":"If you have any further issues, please raise an issue on our [GitHub page](https://github.com/AY2324S1-CS2103T-T08-2/tp). We will attend to you as soon as we can.","lastModifiedDate":"2023-10-25"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":285,"author":{"gitId":"Singa-pirate"},"content":"#### Checking Java version","lastModifiedDate":"2023-10-25"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":287,"author":{"gitId":"Singa-pirate"},"content":"**Q:** How can I check my Java version? \u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":288,"author":{"gitId":"Singa-pirate"},"content":"**A:** Open command prompt (Windows) or terminal (MacOS or Linux) on your computer, and type `java -version` . If you do not have Java installed, you can download it [here](https://www.oracle.com/java/technologies/downloads/#java11).","lastModifiedDate":"2023-10-25"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":290,"author":{"gitId":"Singa-pirate"},"content":"#### Loading data from another device","lastModifiedDate":"2023-10-25"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":292,"author":{"gitId":"Singa-pirate"},"content":"**Q:** How can I load my contacts stored in NetworkBook used in another device? \u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":293,"author":{"gitId":"Singa-pirate"},"content":"**A:** Locate the data file stored at `[JAR file location]/data/networkbook.json`. Copy over the data file to the corresponding location on your current device. After that, launch NetworkBook to check whether your contact details have been loaded properly.","lastModifiedDate":"2023-10-25"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":295,"author":{"gitId":"Singa-pirate"},"content":"[Table of Contents](#table-of-contents)","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Eola-Z":22,"nknguyenhc":87,"xenosf":41,"Singa-pirate":34,"-":72,"awhb":39}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"xenosf"},"content":"    content: \"NetworkBook\";","lastModifiedDate":"2023-10-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"xenosf":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(networkBook)","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nknguyenhc":1,"-":38}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"AddressBook *-right-\u003e \"1\" UniqueList\u003cPerson\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"UniqueTagList -[hidden]down- UniqueList\u003cPerson\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"UniqueTagList -[hidden]down- UniqueList\u003cPerson\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"UniqueList\u003cPerson\u003e -right-\u003e Person","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nknguyenhc":4,"-":17}},{"path":"docs/diagrams/CreateDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"Participant \":NetworkBookParser\" as networkBookParser LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"Participant \":CreateCommandParser\" as createCommandParser LOGIC_COLOR_T2","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"Participant \":ArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR_T3","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"Participant \":ArgumentMultimap\" as argMultimap LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"Participant \":Person\" as person MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"Participant \":CreateCommand\" as createCommand MODEL_COLOR_T3","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"Participant \":Model\" as model MODEL_COLOR_T2","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"Participant \":NetworkBook\" as networkBook MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"-\u003e logic : execute(\"create\" + arguments)","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"activate logic","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"logic -\u003e networkBookParser : \"create\" + arguments","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"activate networkBookParser LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"create createCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"networkBookParser -\u003e createCommandParser : new CreateCommandParser()","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"activate createCommandParser LOGIC_COLOR_T2","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"createCommandParser --\u003e networkBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"deactivate createCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"networkBookParser -\u003e createCommandParser : parse(arguments)","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"activate createCommandParser LOGIC_COLOR_T2","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"createCommandParser -\u003e ArgumentTokenizer : tokenize","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"activate ArgumentTokenizer LOGIC_COLOR_T3","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"create argMultimap","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"ArgumentTokenizer -\u003e argMultimap : new ArgumentMultimap()","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"activate argMultimap LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"argMultimap --\u003e ArgumentTokenizer : argMultimap","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"deactivate argMultimap","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"ArgumentTokenizer --\u003e createCommandParser : argMultimap","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"deactivate ArgumentTokenizer","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"createCommandParser -\u003e argMultimap : parseName, ...","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"activate argMultimap LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"argMultimap --\u003e createCommandParser : name, ...","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"deactivate argMultimap","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"create person","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"createCommandParser -\u003e person : new Person(name, ...)","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"activate person MODEL_COLOR_T2","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"person --\u003e createCommandParser : person","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"deactivate person","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"create createCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"createCommandParser -\u003e createCommand : new CreateCommand(person)","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"activate createCommand MODEL_COLOR_T3","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"createCommand --\u003e createCommandParser : createCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"deactivate createCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"createCommandParser --\u003e networkBookParser : createCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"deactivate createCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"networkBookParser --\u003e logic : createCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"deactivate networkBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"logic -\u003e createCommand: execute(model)","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"activate createCommand MODEL_COLOR_T3","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"awhb"},"content":"createCommand -\u003e model : hasPerson(person)","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"activate model MODEL_COLOR_T2","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"model --\u003e createCommand : false","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"deactivate model","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"createCommand -\u003e model : addPerson(person)","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"activate model MODEL_COLOR_T2","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"awhb"},"content":"model -\u003e networkBook : addPerson(person)","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"deactivate model","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"awhb"},"content":"createCommand --\u003e logic : command success","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"awhb"},"content":"deactivate model","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"awhb"},"content":"deactivate createCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"awhb"},"content":"\u003c-- logic : command success","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"awhb"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"awhb":86}},{"path":"docs/diagrams/EditDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"Participant \":NetworkBookParser\" as networkBookParser LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"Participant \":EditCommandParser\" as editCommandParser LOGIC_COLOR_T2","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"Participant \":EditAction\" as editAction MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"Participant \":EditCommand\" as editCommand MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"Participant \":Model\" as model MODEL_COLOR_T2","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"Participant \":EditPersonDescriptor\" as editPersonDescriptor MODEL_COLOR_T3","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"-\u003e logic : execute(\"edit\" + details)","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"activate logic","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"logic -\u003e networkBookParser : \"edit\" + details","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"activate networkBookParser LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"create editCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"networkBookParser -\u003e editCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"activate editCommandParser LOGIC_COLOR_T2","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"editCommandParser --\u003e networkBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"deactivate editCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"networkBookParser -\u003e editCommandParser : parse(details)","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"activate editCommandParser LOGIC_COLOR_T2","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"create editAction","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"editCommandParser -\u003e editAction : generateAction","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"activate editAction MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"editAction --\u003e editCommandParser : action","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"deactivate editAction","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"create editCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"editCommandParser -\u003e editCommand : new EditCommand(index, action)","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"activate editCommand MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"editCommand --\u003e editCommandParser : editCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"deactivate editCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"editCommandParser --\u003e networkBookParser : editCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"deactivate editCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"networkBookParser --\u003e logic : editCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"deactivate networkBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"logic -\u003e editCommand: execute(model)","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"activate editCommand MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"editCommand -\u003e model : get p at index","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"activate model MODEL_COLOR_T2","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"model --\u003e editCommand : p at index","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"deactivate model","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"create editPersonDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"editCommand -\u003e editPersonDescriptor: person","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"activate editPersonDescriptor MODEL_COLOR_T3","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"editPersonDescriptor --\u003e editCommand : editPersonDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"deactivate editPersonDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"editCommand -\u003e editAction : edit(editPersonDescriptor)","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"activate editAction MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"editAction -\u003e editPersonDescriptor : modify field","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"editAction --\u003e editCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"deactivate editAction","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"editCommand -\u003e editPersonDescriptor : toPerson()","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"activate editPersonDescriptor MODEL_COLOR_T3","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"editPersonDescriptor --\u003e editCommand : new person","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"deactivate editPersonDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"editCommand -\u003e model : old p -\u003e new p","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"editCommand -\u003e model : update list","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"editCommand --\u003e logic : command success","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"deactivate editCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"\u003c-- logic : command success","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"nknguyenhc":87}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"Class UniqueList\u003cPerson\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"AddressBook *--\u003e \"1\" UniqueList\u003cPerson\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"UniqueList\u003cPerson\u003e --\u003e \"~* all\" Person","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"UniqueList\u003cPerson\u003e -[hidden]right-\u003e I","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nknguyenhc":4,"-":50}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"ecp -\u003e ec ++: index, addPersonDescriptor","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"nknguyenhc":1,"-":21}},{"path":"docs/team/awhb.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"title: Hang Bin\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"NetworkBook is a desktop contact book application that aims to help computing students and professionals from NUS to network with each other. The user interacts with it using a command-line-interface (CLI), and it has a graphical user interface (GUI) created with JavaFX.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"- **New Feature**: _To be added soon_","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dawhb\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"- **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    - _To be added soon_","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"    - _To be added soon_","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"- **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"    - User Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"        - _To be added soon_","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"    - Developer Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"        - _To be added soon_","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"- **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"    - PRs reviewed (with non-trivial review comments): _To be added soon_","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"- **Tools**:","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"    - _To be added soon_","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"awhb":36}},{"path":"docs/team/eola-z.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"title: Eola-Z\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"### Project: NetworkBook","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"NetworkBook is a desktop address book application ","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"that School of Computing students can use to track and","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"network with peers. The user interacts with it using","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"a CLI, and has a GUI created with JavaFX. It is written","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"Here are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"* **New Feature**: Added checks for duplicate contact names.","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"* **New Feature**: Added specialisations and courses to contact details.","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"* **New Feature**: Added filter commands for courses","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"* **Engancement**: Improve command result messages to give better feed back to the user.","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"* **Code contributed**: [tP Dashboard Link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003deola-z\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dEola-Z\u0026tabRepo\u003dAY2324S1-CS2103T-T08-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"    * User Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"        * Added documentation for the features `remove duplicates`,","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"        `course` and `specialisation`","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"        * Added an `About` section and documented new features per version.","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"    * Developer Guide","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"        * Added documentation for the `Logic` component of the DG   ","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"Here are some extracts from my contributions to the ","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"user guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"* Description of `specialisation`:","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"  * \u003e You can add a specialisation to an existing contact.  ","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"  A new specialisation will be added to the contact\u0027s list ","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"  of specialisations, and no new contact will be created.","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"  Specialisations are displayed in the order they are added.","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"* Format:","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"  * `add /spec [specialisation] /index [index]`","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"* UI mockups:","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"  * Created the UI mockups in the user guide to emulate","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"  the application\u0027s behavior.","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"Eola-Z":41}},{"path":"docs/team/nknguyenhc.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"title: Nguyen\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"### Project: NetworkBook","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"NetworkBook is a desktop contact book application. It aims to help computing students and professionals from NUS to network with each other. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"* **New Feature**: Add an email to a person.","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"The command adds the new email to the target person\u0027s current list of emails.","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"* **New Feature**: Attach a link to a person.","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"The link can be the person\u0027s social page or personal website.","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"The command adds the new link to the target person\u0027s current list of emails.","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"  * Managed releases `v1.1` on GitHub","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"  * Enhanced the command to edit the details of a person.","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"  The new command uses more self-explanatory tags such as `/name` and `/email`,","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"  to indicate that the name or the email of the contact is being changed,","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"  respectively.","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"  * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    * Added documentation for the following features:","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"      * Add an email to a person","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"      * Attach a link to a person","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"      * Edit details of a person","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    * Add user stories, use cases and non-functional requirements","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    for features related to accessibility.","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    * Add a glossary to define relevant terms used in the Developer Guide.","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"  * Conducted team weekly meetings.","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"  * Did task division to ensure equal share of workload and team\u0027s progress.","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"  * Set up project repository for the team.","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"  This includes milestones and labels.","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"  * Added JavaCI and Codecov for pull request checks.","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"nknguyenhc":48}},{"path":"docs/team/singa-pirate.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"title: Luo Jiale\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"### Project: NetworkBook","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"NetworkBook is a desktop contact book application. It aims to help computing students and professionals from NUS to network with each other. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"* **New Feature**: feature details","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"* **Code contributed**: [link]()","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"  * Managed releases `v...`on GitHub","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"  - enhancement details (Pull requests [\\#..]())","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"    *  [\\#..]()","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"  - Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"    - [\\#..]()","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"  * Contributed to forum discussions (examples: [...]())","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [...]())","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([...]())","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"  * Integrated a third party library / Github plugin ([\\#...]())","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Singa-pirate":42}},{"path":"docs/team/xenosf.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"title: Xenos\u0027 Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"### Project: NetworkBook Level 3","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"NetworkBook is a desktop contact book application that aims to help computing students and professionals from NUS network with each other. The user can interact with the application using a command-line-interface (CLI), as well as a graphical user interface (GUI) created with JavaFX.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"- **New Feature**: Sorting of contacts","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dxenosf\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"- **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"    - _To be added soon_","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"    - _To be added soon_","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"- **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"- User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"    - Added initial documentation for [sorting command](../UserGuide.md#sort-contacts-list-sort-by-order).","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"    - Wrote [Getting Started section](../UserGuide.md#getting-started).","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"- Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"xenosf"},"content":"    - _To be added soon_","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"- **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"    - PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"        - [PR #93](https://github.com/AY2324S1-CS2103T-T08-2/tp/pull/93)","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"        - [PR #101](https://github.com/AY2324S1-CS2103T-T08-2/tp/pull/101)","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"xenosf"},"content":"- **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"    - _To be added soon_","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"xenosf":37}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"import model.networkbook.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"import static util.commons.networkbook.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"nknguyenhc"},"content":"Simply add the following to [`ui.networkbook.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-10-06"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"nknguyenhc"},"content":"save it with `Model#setItem()`.","lastModifiedDate":"2023-10-11"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"nknguyenhc"},"content":"        model.setItem(personToEdit, editedPerson);","lastModifiedDate":"2023-10-11"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"nknguyenhc":5,"-":394}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"The `address` field in `Person` is actually an instance of the `person.model.networkbook.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"    \"emails\": [ \"hans@example.com\" ],","lastModifiedDate":"2023-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nknguyenhc":2,"-":110}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `logic.networkbook.Logic`.","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"A quick look at the `logic.networkbook.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"nknguyenhc"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, addPersonDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":194,"author":{"gitId":"nknguyenhc"},"content":"       if (!personToEdit.isSame(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"nknguyenhc"},"content":"       model.setItem(personToEdit, editedPerson);","lastModifiedDate":"2023-10-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"nknguyenhc"},"content":"   * it uses the `setItem()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2023-10-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nknguyenhc":6,"-":295}},{"path":"src/main/java/networkbook/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.LogsCenter;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.FileUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"nknguyenhc":4,"-":69}},{"path":"src/main/java/networkbook/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.LogsCenter;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"nknguyenhc":2,"-":39}},{"path":"src/main/java/networkbook/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.Config;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.LogsCenter;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.Version;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ConfigUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.StringUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Logic;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.LogicManager;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ModelManager;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyNetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.storage.JsonNetworkBookStorage;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.storage.NetworkBookStorage;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.storage.Storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.storage.StorageManager;","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.storage.UserPrefsStorage;","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.ui.Ui;","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.ui.UiManager;","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing NetworkBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"        NetworkBookStorage networkBookStorage \u003d new JsonNetworkBookStorage(userPrefs.getNetworkBookFilePath());","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"        storage \u003d new StorageManager(networkBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s network book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"     * The data from the sample network book will be used instead if {@code storage}\u0027s network book is not found,","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"     * or an empty network book will be used instead if errors occur when reading {@code storage}\u0027s network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        logger.info(\"Using data file : \" + storage.getNetworkBookFilePath());","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"        Optional\u003cReadOnlyNetworkBook\u003e networkBookOptional;","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"        ReadOnlyNetworkBook initialData;","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"            networkBookOptional \u003d storage.readNetworkBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"            if (!networkBookOptional.isPresent()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"                logger.info(\"Creating a new data file \" + storage.getNetworkBookFilePath()","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"                        + \" populated with a sample NetworkBook.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"            initialData \u003d networkBookOptional.orElseGet(SampleDataUtil::getSampleNetworkBook);","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"            logger.warning(\"Data file at \" + storage.getNetworkBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"                    + \" Will be starting with an empty NetworkBook.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"            initialData \u003d new NetworkBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"        logger.info(\"Starting NetworkBook \" + MainApp.VERSION);","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":42,"-":144}},{"path":"src/main/java/networkbook/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.core;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":2,"-":64}},{"path":"src/main/java/networkbook/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.core;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":2,"-":80}},{"path":"src/main/java/networkbook/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.core;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    private static final String LOG_FILE \u003d \"networkbook.log\";","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":2,"-":104}},{"path":"src/main/java/networkbook/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.core;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":1,"-":120}},{"path":"src/main/java/networkbook/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.core.index;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"nknguyenhc":2,"-":67}},{"path":"src/main/java/networkbook/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.exceptions;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"nknguyenhc":1,"-":10}},{"path":"src/main/java/networkbook/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.exceptions;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nknguyenhc":1,"-":20}},{"path":"src/main/java/networkbook/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.util;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.MainApp;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nknguyenhc":2,"-":40}},{"path":"src/main/java/networkbook/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.util;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"        assert items !\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"        Stream.of(items).forEach(item -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"            assert item !\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"        });","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        assert items !\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"        items.forEach(item -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"            assert item !\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        });","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nknguyenhc":9,"-":28}},{"path":"src/main/java/networkbook/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.util;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.Config;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"nknguyenhc":3,"-":20}},{"path":"src/main/java/networkbook/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.util;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":1,"-":82}},{"path":"src/main/java/networkbook/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.util;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.LogsCenter;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":3,"-":141}},{"path":"src/main/java/networkbook/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.util;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1,","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"                \"Word parameter should be a single word\");","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"     * Returns true if the {@code sentence} contains the {@code term}.","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"     *   Ignores case, a full word match is not required.","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"ab\") \u003d\u003d true","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"EF\") \u003d\u003d true","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"cd\") \u003d\u003d false //term not contained in a single word","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"     * @param term cannot be null, cannot be empty, must be a single term/word","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"    public static boolean containsTermIgnoreCase(String sentence, String term) {","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"        requireNonNull(term);","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"        String preppedTerm \u003d term.trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"        checkArgument(!preppedTerm.isEmpty(), \"Term parameter cannot be empty\");","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"        checkArgument(preppedTerm.split(\"\\\\s+\").length \u003d\u003d 1,","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"                \"Term parameter should be a single term\");","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"                .anyMatch((word) -\u003e word.toLowerCase().contains(preppedTerm.toLowerCase()));","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":2,"-":65,"awhb":29}},{"path":"src/main/java/networkbook/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.util;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"nknguyenhc":1,"-":52}},{"path":"src/main/java/networkbook/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.GuiSettings;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.CommandResult;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyNetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"     * Returns the NetworkBook.","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"     * @see Model#getNetworkBook()","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    ReadOnlyNetworkBook getNetworkBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"     * Returns the user prefs\u0027 network book file path.","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    Path getNetworkBookFilePath();","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nknguyenhc":13,"-":38}},{"path":"src/main/java/networkbook/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.GuiSettings;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.LogsCenter;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.Command;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.CommandResult;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.NetworkBookParser;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyNetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.storage.Storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    private final NetworkBookParser networkBookParser;","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        networkBookParser \u003d new NetworkBookParser();","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        Command command \u003d networkBookParser.parseCommand(commandText);","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"            storage.saveNetworkBook(model.getNetworkBook());","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"    public ReadOnlyNetworkBook getNetworkBook() {","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        return model.getNetworkBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"    public Path getNetworkBookFilePath() {","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        return model.getNetworkBookFilePath();","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"nknguyenhc":20,"-":68}},{"path":"src/main/java/networkbook/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.Prefix;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_EXACTLY_ONE_FIELD \u003d \"One and only one field must be specified here.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_DUPLICATE_PREFIX \u003d \"The same field cannot be specified twice here.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_INDEX_MUST_BE_PRESENT \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"            \"Since %s is present, one and only one /index prefix must be present.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_INDEX_CANNOT_BE_PRESENT \u003d \"/index prefix should not be indicated here.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_VALUE_CANNOT_BE_PRESENT \u003d \"No value should be specified after the %s prefix.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"    public static final String MESSAGE_INVALID_CONTACT_NAME \u003d \"Invalid name provided for contact to create!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_PERSONS_SORTED_OVERVIEW \u003d \"Here is your sorted list of contacts:\"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"            + \"\\n(%1$d persons listed)\";","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_DUPLICATE_SINGLE_VALUED_FIELDS \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"        return MESSAGE_DUPLICATE_SINGLE_VALUED_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"        builder.append(person.getName())","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"                .append(\"; Phones: \").append(person.getPhones())","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"                .append(\"; Emails: \").append(person.getEmails())","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"                .append(\"; Links: \").append(person.getLinks());","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"        person.getGraduation().ifPresent((Graduation g) -\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"            builder.append(\"; Graduation: \");","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"            builder.append(g.getFullString());","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"        });","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        builder.append(\"; Courses: \").append(person.getCourses());","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"Eola-Z"},"content":"        builder.append(\"; Specialisations \").append(person.getSpecialisations());","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"        builder.append(\"; Tags: \");","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"        person.getPriority().ifPresent((Priority p) -\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"            builder.append(\"; Priority: \");","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"            builder.append(p);","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"        });","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Eola-Z":3,"nknguyenhc":4,"xenosf":4,"Singa-pirate":13,"-":36,"awhb":7}},{"path":"src/main/java/networkbook/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static networkbook.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.parser.CliSyntax;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":" * Adds new information about a contact.","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds new information about a contact. \"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"            + \"Parameters: [LIST INDEX OF CONTACT]\"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"            + \"[\" + CliSyntax.PREFIX_PHONE + \" PHONE] \"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"            + \"[\" + CliSyntax.PREFIX_EMAIL + \" EMAIL] \"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"            + \"[\" + CliSyntax.PREFIX_LINK + \"LINK] \"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"            + \"[\" + CliSyntax.PREFIX_GRADUATION + \" GRADUATION DATE] \"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"            + \"[\" + CliSyntax.PREFIX_COURSE + \"COURSE OF STUDY] \"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"            + \"[\" + CliSyntax.PREFIX_SPECIALISATION + \"SPECIALISATION] \"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"            + \"[\" + CliSyntax.PREFIX_TAG + \" TAG] \"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"            + \"[\" + CliSyntax.PREFIX_PRIORITY + \" PRIORITY]...\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"            + CliSyntax.PREFIX_PHONE + \" 98765432 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"            + CliSyntax.PREFIX_EMAIL + \" johnd@example.com \"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"            + CliSyntax.PREFIX_TAG + \" friends \"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"            + CliSyntax.PREFIX_TAG + \" owesMoney\";","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_NO_INFO \u003d \"At least one field to add must be provided.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_MULTIPLE_UNIQUE_FIELD \u003d \"Some fields provided cannot have multiple values.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"            + \"Please use the \u0027update\u0027 command instead.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_ADD_INFO_SUCCESS \u003d \"Added information to this contact: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"    private final Index index;","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"    private final AddPersonDescriptor addPersonDescriptor;","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"     * Creates an AddCommand to add information about the contact at {@code Index}","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"     * @param index of the contact to add information about","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"     * @param addPersonDescriptor details to add to the contact","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"    public AddCommand(Index index, AddPersonDescriptor addPersonDescriptor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(addPersonDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"        this.addPersonDescriptor \u003d addPersonDescriptor;","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        assert model !\u003d null : \"Model should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"Singa-pirate"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"        Person personToAddInfo \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"        Person personAfterAddingInfo \u003d addInfoToPerson(personToAddInfo, addPersonDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"        model.setItem(personToAddInfo, personAfterAddingInfo);","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"Singa-pirate"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_INFO_SUCCESS, Messages.format(personAfterAddingInfo)));","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"     * Adds details from {@code addPersonDescriptor} and returns the {@code Person} after adding details.","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"    private Person addInfoToPerson(Person personToAddInfo, AddPersonDescriptor addPersonDescriptor)","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"            throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"Singa-pirate"},"content":"        assert personToAddInfo !\u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"awhb"},"content":"        Name currentName \u003d personToAddInfo.getName(); // name cannot be added","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cPhone\u003e updatedPhones \u003d addPhones(personToAddInfo, addPersonDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cEmail\u003e updatedEmails \u003d addEmails(personToAddInfo, addPersonDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cLink\u003e updatedLinks \u003d addLinks(personToAddInfo, addPersonDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"        Graduation updatedGraduatingYear \u003d addGraduation(personToAddInfo, addPersonDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cCourse\u003e updatedCourses \u003d addCourses(personToAddInfo, addPersonDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cSpecialisation\u003e updatedSpecialisations \u003d addSpecialisations(personToAddInfo, addPersonDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cTag\u003e updatedTags \u003d addTags(personToAddInfo, addPersonDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"        Priority updatedPriority \u003d addPriority(personToAddInfo, addPersonDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"awhb"},"content":"        return new Person(currentName, updatedPhones, updatedEmails, updatedLinks, updatedGraduatingYear,","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"                updatedCourses, updatedSpecialisations, updatedTags, updatedPriority);","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"    private UniqueList\u003cPhone\u003e addPhones(Person personToAddInfo, AddPersonDescriptor addPersonDescriptor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"awhb"},"content":"        UniqueList\u003cPhone\u003e phones \u003d personToAddInfo.getPhones();","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"        addPersonDescriptor.getPhones().ifPresent(phones::addAllFromList);","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"awhb"},"content":"        return phones;","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"    private UniqueList\u003cEmail\u003e addEmails(Person personToAddInfo, AddPersonDescriptor addPersonDescriptor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cEmail\u003e emails \u003d personToAddInfo.getEmails();","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"        addPersonDescriptor.getEmails().ifPresent(emails::addAllFromList);","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"        return emails;","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"    private UniqueList\u003cLink\u003e addLinks(Person personToAddInfo, AddPersonDescriptor addPersonDescriptor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cLink\u003e links \u003d personToAddInfo.getLinks();","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"        addPersonDescriptor.getLinks().ifPresent(links::addAllFromList);","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"        return links;","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"    private Graduation addGraduation(Person personToAddInfo, AddPersonDescriptor addPersonDescriptor)","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"awhb"},"content":"            throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"xenosf"},"content":"        Optional\u003cGraduation\u003e oldGraduation \u003d personToAddInfo.getGraduation();","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"        Optional\u003cGraduation\u003e newGraduation \u003d addPersonDescriptor.getGraduation();","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"xenosf"},"content":"        if (oldGraduation.isPresent() \u0026\u0026 newGraduation.isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"awhb"},"content":"            throw new CommandException(MESSAGE_MULTIPLE_UNIQUE_FIELD);","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"xenosf"},"content":"        return newGraduation.orElse(oldGraduation.orElse(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"    private UniqueList\u003cCourse\u003e addCourses(Person personToAddInfo, AddPersonDescriptor addPersonDescriptor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cCourse\u003e courses \u003d personToAddInfo.getCourses();","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"        addPersonDescriptor.getCourses().ifPresent(courses::addAllFromList);","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"        return courses;","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"Eola-Z"},"content":"    private UniqueList\u003cSpecialisation\u003e addSpecialisations(Person personToAddInfo,","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"                                                           AddPersonDescriptor addPersonDescriptor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"Eola-Z"},"content":"        UniqueList\u003cSpecialisation\u003e specs \u003d personToAddInfo.getSpecialisations();","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"        addPersonDescriptor.getSpecialisations().ifPresent(specs::addAllFromList);","lastModifiedDate":"2023-10-22"},{"lineNumber":141,"author":{"gitId":"Eola-Z"},"content":"        return specs;","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"    private UniqueList\u003cTag\u003e addTags(Person personToAddInfo, AddPersonDescriptor addPersonDescriptor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":145,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cTag\u003e tags \u003d personToAddInfo.getTags();","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"        addPersonDescriptor.getTags().ifPresent(tags::addAllFromList);","lastModifiedDate":"2023-10-22"},{"lineNumber":147,"author":{"gitId":"Singa-pirate"},"content":"        return tags;","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"    private Priority addPriority(Person personToAddInfo, AddPersonDescriptor addPersonDescriptor)","lastModifiedDate":"2023-10-22"},{"lineNumber":151,"author":{"gitId":"Singa-pirate"},"content":"            throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"Singa-pirate"},"content":"        Optional\u003cPriority\u003e oldPriority \u003d personToAddInfo.getPriority();","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"        Optional\u003cPriority\u003e newPriority \u003d addPersonDescriptor.getPriority();","lastModifiedDate":"2023-10-22"},{"lineNumber":154,"author":{"gitId":"Singa-pirate"},"content":"        if (oldPriority.isPresent() \u0026\u0026 newPriority.isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"Singa-pirate"},"content":"            throw new CommandException(MESSAGE_MULTIPLE_UNIQUE_FIELD);","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"Singa-pirate"},"content":"        return newPriority.orElse(oldPriority.orElse(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"Singa-pirate"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"Singa-pirate"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"Singa-pirate"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"Singa-pirate"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"Singa-pirate"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"Singa-pirate"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"Singa-pirate"},"content":"        AddCommand otherCreateCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"Singa-pirate"},"content":"        return index.equals(otherCreateCommand.index)","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 addPersonDescriptor.equals(otherCreateCommand.addPersonDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":173,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"Singa-pirate"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"Singa-pirate"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"Singa-pirate"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"                .add(\"addPersonDescriptor\", addPersonDescriptor)","lastModifiedDate":"2023-10-22"},{"lineNumber":180,"author":{"gitId":"Singa-pirate"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":183,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":184,"author":{"gitId":"nknguyenhc"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-22"},{"lineNumber":185,"author":{"gitId":"nknguyenhc"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-10-22"},{"lineNumber":186,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":187,"author":{"gitId":"nknguyenhc"},"content":"    public static class AddPersonDescriptor {","lastModifiedDate":"2023-10-22"},{"lineNumber":188,"author":{"gitId":"nknguyenhc"},"content":"        private UniqueList\u003cPhone\u003e phones;","lastModifiedDate":"2023-10-22"},{"lineNumber":189,"author":{"gitId":"nknguyenhc"},"content":"        private UniqueList\u003cEmail\u003e emails;","lastModifiedDate":"2023-10-22"},{"lineNumber":190,"author":{"gitId":"nknguyenhc"},"content":"        private UniqueList\u003cLink\u003e links;","lastModifiedDate":"2023-10-22"},{"lineNumber":191,"author":{"gitId":"nknguyenhc"},"content":"        private Graduation graduation;","lastModifiedDate":"2023-10-22"},{"lineNumber":192,"author":{"gitId":"nknguyenhc"},"content":"        private UniqueList\u003cCourse\u003e courses;","lastModifiedDate":"2023-10-22"},{"lineNumber":193,"author":{"gitId":"nknguyenhc"},"content":"        private UniqueList\u003cSpecialisation\u003e specialisations;","lastModifiedDate":"2023-10-22"},{"lineNumber":194,"author":{"gitId":"nknguyenhc"},"content":"        private UniqueList\u003cTag\u003e tags;","lastModifiedDate":"2023-10-22"},{"lineNumber":195,"author":{"gitId":"nknguyenhc"},"content":"        private Priority priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":196,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":197,"author":{"gitId":"nknguyenhc"},"content":"        public AddPersonDescriptor() {}","lastModifiedDate":"2023-10-22"},{"lineNumber":198,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":199,"author":{"gitId":"nknguyenhc"},"content":"        /**","lastModifiedDate":"2023-10-22"},{"lineNumber":200,"author":{"gitId":"nknguyenhc"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-22"},{"lineNumber":201,"author":{"gitId":"nknguyenhc"},"content":"         */","lastModifiedDate":"2023-10-22"},{"lineNumber":202,"author":{"gitId":"nknguyenhc"},"content":"        public AddPersonDescriptor(AddPersonDescriptor toCopy) {","lastModifiedDate":"2023-10-22"},{"lineNumber":203,"author":{"gitId":"nknguyenhc"},"content":"            setPhones(toCopy.getPhones().map(UniqueList::copy).orElse(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":204,"author":{"gitId":"nknguyenhc"},"content":"            setEmails(toCopy.getEmails().map(UniqueList::copy).orElse(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":205,"author":{"gitId":"nknguyenhc"},"content":"            setLinks(toCopy.getLinks().map(UniqueList::copy).orElse(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"nknguyenhc"},"content":"            setGraduation(toCopy.graduation);","lastModifiedDate":"2023-10-22"},{"lineNumber":207,"author":{"gitId":"nknguyenhc"},"content":"            setCourses(toCopy.getCourses().map(UniqueList::copy).orElse(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"nknguyenhc"},"content":"            setSpecialisations(toCopy.getSpecialisations().map(UniqueList::copy).orElse(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"nknguyenhc"},"content":"            setTags(toCopy.getTags().map(UniqueList::copy).orElse(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":210,"author":{"gitId":"nknguyenhc"},"content":"            setPriority(toCopy.priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":211,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":212,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":213,"author":{"gitId":"nknguyenhc"},"content":"        /**","lastModifiedDate":"2023-10-22"},{"lineNumber":214,"author":{"gitId":"nknguyenhc"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-22"},{"lineNumber":215,"author":{"gitId":"nknguyenhc"},"content":"         */","lastModifiedDate":"2023-10-22"},{"lineNumber":216,"author":{"gitId":"nknguyenhc"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-22"},{"lineNumber":217,"author":{"gitId":"nknguyenhc"},"content":"            return CollectionUtil.isAnyNonNull(graduation, tags, priority)","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"nknguyenhc"},"content":"                    || (phones !\u003d null \u0026\u0026 !phones.isEmpty())","lastModifiedDate":"2023-10-22"},{"lineNumber":219,"author":{"gitId":"nknguyenhc"},"content":"                    || (emails !\u003d null \u0026\u0026 !emails.isEmpty())","lastModifiedDate":"2023-10-22"},{"lineNumber":220,"author":{"gitId":"nknguyenhc"},"content":"                    || (links !\u003d null \u0026\u0026 !links.isEmpty())","lastModifiedDate":"2023-10-22"},{"lineNumber":221,"author":{"gitId":"nknguyenhc"},"content":"                    || (courses !\u003d null \u0026\u0026 !courses.isEmpty())","lastModifiedDate":"2023-10-22"},{"lineNumber":222,"author":{"gitId":"nknguyenhc"},"content":"                    || (specialisations !\u003d null \u0026\u0026 !specialisations.isEmpty());","lastModifiedDate":"2023-10-22"},{"lineNumber":223,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":224,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":225,"author":{"gitId":"nknguyenhc"},"content":"        public void setPhones(UniqueList\u003cPhone\u003e phones) {","lastModifiedDate":"2023-10-22"},{"lineNumber":226,"author":{"gitId":"nknguyenhc"},"content":"            this.phones \u003d phones;","lastModifiedDate":"2023-10-22"},{"lineNumber":227,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":228,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":229,"author":{"gitId":"nknguyenhc"},"content":"        /**","lastModifiedDate":"2023-10-22"},{"lineNumber":230,"author":{"gitId":"nknguyenhc"},"content":"         * Adds {@code phone} to the list of {@code Phone}s.","lastModifiedDate":"2023-10-22"},{"lineNumber":231,"author":{"gitId":"nknguyenhc"},"content":"         */","lastModifiedDate":"2023-10-22"},{"lineNumber":232,"author":{"gitId":"nknguyenhc"},"content":"        public void addPhone(Phone phone) {","lastModifiedDate":"2023-10-22"},{"lineNumber":233,"author":{"gitId":"nknguyenhc"},"content":"            this.phones \u003d Optional.ofNullable(this.phones).map(phones -\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":234,"author":{"gitId":"nknguyenhc"},"content":"                phones.add(phone);","lastModifiedDate":"2023-10-22"},{"lineNumber":235,"author":{"gitId":"nknguyenhc"},"content":"                return phones;","lastModifiedDate":"2023-10-22"},{"lineNumber":236,"author":{"gitId":"nknguyenhc"},"content":"            }).or(() -\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":237,"author":{"gitId":"nknguyenhc"},"content":"                UniqueList\u003cPhone\u003e uniqueList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":238,"author":{"gitId":"nknguyenhc"},"content":"                uniqueList.add(phone);","lastModifiedDate":"2023-10-22"},{"lineNumber":239,"author":{"gitId":"nknguyenhc"},"content":"                return Optional.of(uniqueList);","lastModifiedDate":"2023-10-22"},{"lineNumber":240,"author":{"gitId":"nknguyenhc"},"content":"            }).get();","lastModifiedDate":"2023-10-22"},{"lineNumber":241,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":242,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":243,"author":{"gitId":"nknguyenhc"},"content":"        public Optional\u003cUniqueList\u003cPhone\u003e\u003e getPhones() {","lastModifiedDate":"2023-10-22"},{"lineNumber":244,"author":{"gitId":"nknguyenhc"},"content":"            return Optional.ofNullable(phones);","lastModifiedDate":"2023-10-22"},{"lineNumber":245,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":246,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":247,"author":{"gitId":"nknguyenhc"},"content":"        public void setEmails(UniqueList\u003cEmail\u003e emails) {","lastModifiedDate":"2023-10-22"},{"lineNumber":248,"author":{"gitId":"nknguyenhc"},"content":"            this.emails \u003d emails;","lastModifiedDate":"2023-10-22"},{"lineNumber":249,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":250,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":251,"author":{"gitId":"nknguyenhc"},"content":"        /**","lastModifiedDate":"2023-10-22"},{"lineNumber":252,"author":{"gitId":"nknguyenhc"},"content":"         * Adds {@code email} to the list of {@code emails}","lastModifiedDate":"2023-10-22"},{"lineNumber":253,"author":{"gitId":"nknguyenhc"},"content":"         */","lastModifiedDate":"2023-10-22"},{"lineNumber":254,"author":{"gitId":"nknguyenhc"},"content":"        public void addEmail(Email email) {","lastModifiedDate":"2023-10-22"},{"lineNumber":255,"author":{"gitId":"nknguyenhc"},"content":"            this.emails \u003d Optional.ofNullable(this.emails).map(emails -\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":256,"author":{"gitId":"nknguyenhc"},"content":"                emails.add(email);","lastModifiedDate":"2023-10-22"},{"lineNumber":257,"author":{"gitId":"nknguyenhc"},"content":"                return emails;","lastModifiedDate":"2023-10-22"},{"lineNumber":258,"author":{"gitId":"nknguyenhc"},"content":"            }).or(() -\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":259,"author":{"gitId":"nknguyenhc"},"content":"                UniqueList\u003cEmail\u003e uniqueList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":260,"author":{"gitId":"nknguyenhc"},"content":"                uniqueList.add(email);","lastModifiedDate":"2023-10-22"},{"lineNumber":261,"author":{"gitId":"nknguyenhc"},"content":"                return Optional.of(uniqueList);","lastModifiedDate":"2023-10-22"},{"lineNumber":262,"author":{"gitId":"nknguyenhc"},"content":"            }).get();","lastModifiedDate":"2023-10-22"},{"lineNumber":263,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":264,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":265,"author":{"gitId":"nknguyenhc"},"content":"        public Optional\u003cUniqueList\u003cEmail\u003e\u003e getEmails() {","lastModifiedDate":"2023-10-22"},{"lineNumber":266,"author":{"gitId":"nknguyenhc"},"content":"            return Optional.ofNullable(emails);","lastModifiedDate":"2023-10-22"},{"lineNumber":267,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":268,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":269,"author":{"gitId":"nknguyenhc"},"content":"        public void setLinks(UniqueList\u003cLink\u003e links) {","lastModifiedDate":"2023-10-22"},{"lineNumber":270,"author":{"gitId":"nknguyenhc"},"content":"            this.links \u003d links;","lastModifiedDate":"2023-10-22"},{"lineNumber":271,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":272,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":273,"author":{"gitId":"nknguyenhc"},"content":"        /**","lastModifiedDate":"2023-10-22"},{"lineNumber":274,"author":{"gitId":"nknguyenhc"},"content":"         * Adds {@code link} to the list of {@code links}.","lastModifiedDate":"2023-10-22"},{"lineNumber":275,"author":{"gitId":"nknguyenhc"},"content":"         */","lastModifiedDate":"2023-10-22"},{"lineNumber":276,"author":{"gitId":"nknguyenhc"},"content":"        public void addLink(Link link) {","lastModifiedDate":"2023-10-22"},{"lineNumber":277,"author":{"gitId":"nknguyenhc"},"content":"            this.links \u003d Optional.ofNullable(this.links).map(links -\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":278,"author":{"gitId":"nknguyenhc"},"content":"                links.add(link);","lastModifiedDate":"2023-10-22"},{"lineNumber":279,"author":{"gitId":"nknguyenhc"},"content":"                return links;","lastModifiedDate":"2023-10-22"},{"lineNumber":280,"author":{"gitId":"nknguyenhc"},"content":"            }).or(() -\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":281,"author":{"gitId":"nknguyenhc"},"content":"                UniqueList\u003cLink\u003e uniqueList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":282,"author":{"gitId":"nknguyenhc"},"content":"                uniqueList.add(link);","lastModifiedDate":"2023-10-22"},{"lineNumber":283,"author":{"gitId":"nknguyenhc"},"content":"                return Optional.of(uniqueList);","lastModifiedDate":"2023-10-22"},{"lineNumber":284,"author":{"gitId":"nknguyenhc"},"content":"            }).get();","lastModifiedDate":"2023-10-22"},{"lineNumber":285,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":286,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":287,"author":{"gitId":"nknguyenhc"},"content":"        public Optional\u003cUniqueList\u003cLink\u003e\u003e getLinks() {","lastModifiedDate":"2023-10-22"},{"lineNumber":288,"author":{"gitId":"nknguyenhc"},"content":"            return Optional.ofNullable(links);","lastModifiedDate":"2023-10-22"},{"lineNumber":289,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":290,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":291,"author":{"gitId":"nknguyenhc"},"content":"        public void setGraduation(Graduation graduation) {","lastModifiedDate":"2023-10-22"},{"lineNumber":292,"author":{"gitId":"nknguyenhc"},"content":"            this.graduation \u003d graduation;","lastModifiedDate":"2023-10-22"},{"lineNumber":293,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":294,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":295,"author":{"gitId":"nknguyenhc"},"content":"        public Optional\u003cGraduation\u003e getGraduation() {","lastModifiedDate":"2023-10-22"},{"lineNumber":296,"author":{"gitId":"nknguyenhc"},"content":"            return Optional.ofNullable(graduation);","lastModifiedDate":"2023-10-22"},{"lineNumber":297,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":298,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":299,"author":{"gitId":"nknguyenhc"},"content":"        public void setCourses(UniqueList\u003cCourse\u003e courses) {","lastModifiedDate":"2023-10-22"},{"lineNumber":300,"author":{"gitId":"nknguyenhc"},"content":"            this.courses \u003d courses;","lastModifiedDate":"2023-10-22"},{"lineNumber":301,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":302,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":303,"author":{"gitId":"nknguyenhc"},"content":"        /**","lastModifiedDate":"2023-10-22"},{"lineNumber":304,"author":{"gitId":"nknguyenhc"},"content":"         * Adds {@code specialisations} to the list of {@code specialisations}.","lastModifiedDate":"2023-10-22"},{"lineNumber":305,"author":{"gitId":"nknguyenhc"},"content":"         */","lastModifiedDate":"2023-10-22"},{"lineNumber":306,"author":{"gitId":"nknguyenhc"},"content":"        public void addCourse(Course course) {","lastModifiedDate":"2023-10-22"},{"lineNumber":307,"author":{"gitId":"nknguyenhc"},"content":"            this.courses \u003d Optional.ofNullable(this.courses).map(courses -\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":308,"author":{"gitId":"nknguyenhc"},"content":"                courses.add(course);","lastModifiedDate":"2023-10-22"},{"lineNumber":309,"author":{"gitId":"nknguyenhc"},"content":"                return courses;","lastModifiedDate":"2023-10-22"},{"lineNumber":310,"author":{"gitId":"nknguyenhc"},"content":"            }).or(() -\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":311,"author":{"gitId":"nknguyenhc"},"content":"                UniqueList\u003cCourse\u003e uniqueList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":312,"author":{"gitId":"nknguyenhc"},"content":"                uniqueList.add(course);","lastModifiedDate":"2023-10-22"},{"lineNumber":313,"author":{"gitId":"nknguyenhc"},"content":"                return Optional.of(uniqueList);","lastModifiedDate":"2023-10-22"},{"lineNumber":314,"author":{"gitId":"nknguyenhc"},"content":"            }).get();","lastModifiedDate":"2023-10-22"},{"lineNumber":315,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":316,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":317,"author":{"gitId":"nknguyenhc"},"content":"        public Optional\u003cUniqueList\u003cCourse\u003e\u003e getCourses() {","lastModifiedDate":"2023-10-22"},{"lineNumber":318,"author":{"gitId":"nknguyenhc"},"content":"            return Optional.ofNullable(courses);","lastModifiedDate":"2023-10-22"},{"lineNumber":319,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":320,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":321,"author":{"gitId":"nknguyenhc"},"content":"        public void setSpecialisations(UniqueList\u003cSpecialisation\u003e specialisations) {","lastModifiedDate":"2023-10-22"},{"lineNumber":322,"author":{"gitId":"nknguyenhc"},"content":"            this.specialisations \u003d specialisations;","lastModifiedDate":"2023-10-22"},{"lineNumber":323,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":324,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":325,"author":{"gitId":"nknguyenhc"},"content":"        /**","lastModifiedDate":"2023-10-22"},{"lineNumber":326,"author":{"gitId":"nknguyenhc"},"content":"         * Adds {@code specialisations} to the list of {@code specialisations}.","lastModifiedDate":"2023-10-22"},{"lineNumber":327,"author":{"gitId":"nknguyenhc"},"content":"         */","lastModifiedDate":"2023-10-22"},{"lineNumber":328,"author":{"gitId":"nknguyenhc"},"content":"        public void addSpecialisation(Specialisation specialisation) {","lastModifiedDate":"2023-10-22"},{"lineNumber":329,"author":{"gitId":"nknguyenhc"},"content":"            this.specialisations \u003d Optional.ofNullable(this.specialisations).map(specialisations -\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":330,"author":{"gitId":"nknguyenhc"},"content":"                specialisations.add(specialisation);","lastModifiedDate":"2023-10-22"},{"lineNumber":331,"author":{"gitId":"nknguyenhc"},"content":"                return specialisations;","lastModifiedDate":"2023-10-22"},{"lineNumber":332,"author":{"gitId":"nknguyenhc"},"content":"            }).or(() -\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":333,"author":{"gitId":"nknguyenhc"},"content":"                UniqueList\u003cSpecialisation\u003e uniqueList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":334,"author":{"gitId":"nknguyenhc"},"content":"                uniqueList.add(specialisation);","lastModifiedDate":"2023-10-22"},{"lineNumber":335,"author":{"gitId":"nknguyenhc"},"content":"                return Optional.of(uniqueList);","lastModifiedDate":"2023-10-22"},{"lineNumber":336,"author":{"gitId":"nknguyenhc"},"content":"            }).get();","lastModifiedDate":"2023-10-22"},{"lineNumber":337,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":338,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":339,"author":{"gitId":"nknguyenhc"},"content":"        public Optional\u003cUniqueList\u003cSpecialisation\u003e\u003e getSpecialisations() {","lastModifiedDate":"2023-10-22"},{"lineNumber":340,"author":{"gitId":"nknguyenhc"},"content":"            return Optional.ofNullable(specialisations);","lastModifiedDate":"2023-10-22"},{"lineNumber":341,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":342,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":343,"author":{"gitId":"nknguyenhc"},"content":"        /**","lastModifiedDate":"2023-10-22"},{"lineNumber":344,"author":{"gitId":"nknguyenhc"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-10-22"},{"lineNumber":345,"author":{"gitId":"nknguyenhc"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-22"},{"lineNumber":346,"author":{"gitId":"nknguyenhc"},"content":"         */","lastModifiedDate":"2023-10-22"},{"lineNumber":347,"author":{"gitId":"nknguyenhc"},"content":"        public void setTags(UniqueList\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-22"},{"lineNumber":348,"author":{"gitId":"nknguyenhc"},"content":"            this.tags \u003d tags;","lastModifiedDate":"2023-10-22"},{"lineNumber":349,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":350,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":351,"author":{"gitId":"nknguyenhc"},"content":"        /**","lastModifiedDate":"2023-10-22"},{"lineNumber":352,"author":{"gitId":"nknguyenhc"},"content":"         * Adds {@code tag} to the {@code UniqueList\u003ctag\u003e} of the descriptor.","lastModifiedDate":"2023-10-22"},{"lineNumber":353,"author":{"gitId":"nknguyenhc"},"content":"         * If the tags field is null, initialize it with an empty {@code UniqueList}.","lastModifiedDate":"2023-10-22"},{"lineNumber":354,"author":{"gitId":"nknguyenhc"},"content":"         *","lastModifiedDate":"2023-10-22"},{"lineNumber":355,"author":{"gitId":"nknguyenhc"},"content":"         * @param tag is the new tag to be added.","lastModifiedDate":"2023-10-22"},{"lineNumber":356,"author":{"gitId":"nknguyenhc"},"content":"         */","lastModifiedDate":"2023-10-22"},{"lineNumber":357,"author":{"gitId":"nknguyenhc"},"content":"        public void addTag(Tag tag) {","lastModifiedDate":"2023-10-22"},{"lineNumber":358,"author":{"gitId":"nknguyenhc"},"content":"            if (this.tags \u003d\u003d null) {","lastModifiedDate":"2023-10-22"},{"lineNumber":359,"author":{"gitId":"nknguyenhc"},"content":"                this.tags \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":360,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":361,"author":{"gitId":"nknguyenhc"},"content":"            this.tags.add(tag);","lastModifiedDate":"2023-10-22"},{"lineNumber":362,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":363,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":364,"author":{"gitId":"nknguyenhc"},"content":"        public Optional\u003cUniqueList\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-10-22"},{"lineNumber":365,"author":{"gitId":"nknguyenhc"},"content":"            return Optional.ofNullable(tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":366,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":367,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":368,"author":{"gitId":"nknguyenhc"},"content":"        public void setPriority(Priority priority) {","lastModifiedDate":"2023-10-22"},{"lineNumber":369,"author":{"gitId":"nknguyenhc"},"content":"            this.priority \u003d priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":370,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":371,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":372,"author":{"gitId":"nknguyenhc"},"content":"        public Optional\u003cPriority\u003e getPriority() {","lastModifiedDate":"2023-10-22"},{"lineNumber":373,"author":{"gitId":"nknguyenhc"},"content":"            return Optional.ofNullable(this.priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":374,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":375,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":376,"author":{"gitId":"nknguyenhc"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":377,"author":{"gitId":"nknguyenhc"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":378,"author":{"gitId":"nknguyenhc"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":379,"author":{"gitId":"nknguyenhc"},"content":"                return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":380,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":381,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":382,"author":{"gitId":"nknguyenhc"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":383,"author":{"gitId":"nknguyenhc"},"content":"            if (!(other instanceof AddPersonDescriptor)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":384,"author":{"gitId":"nknguyenhc"},"content":"                return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":385,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":386,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":387,"author":{"gitId":"nknguyenhc"},"content":"            AddPersonDescriptor otherAddPersonDescriptor \u003d (AddPersonDescriptor) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":388,"author":{"gitId":"nknguyenhc"},"content":"            return Objects.equals(phones, otherAddPersonDescriptor.phones)","lastModifiedDate":"2023-10-25"},{"lineNumber":389,"author":{"gitId":"nknguyenhc"},"content":"                    \u0026\u0026 Objects.equals(emails, otherAddPersonDescriptor.emails)","lastModifiedDate":"2023-10-22"},{"lineNumber":390,"author":{"gitId":"nknguyenhc"},"content":"                    \u0026\u0026 Objects.equals(links, otherAddPersonDescriptor.links)","lastModifiedDate":"2023-10-22"},{"lineNumber":391,"author":{"gitId":"nknguyenhc"},"content":"                    \u0026\u0026 Objects.equals(graduation, otherAddPersonDescriptor.graduation)","lastModifiedDate":"2023-10-22"},{"lineNumber":392,"author":{"gitId":"nknguyenhc"},"content":"                    \u0026\u0026 Objects.equals(courses, otherAddPersonDescriptor.courses)","lastModifiedDate":"2023-10-22"},{"lineNumber":393,"author":{"gitId":"nknguyenhc"},"content":"                    \u0026\u0026 Objects.equals(specialisations, otherAddPersonDescriptor.specialisations)","lastModifiedDate":"2023-10-22"},{"lineNumber":394,"author":{"gitId":"nknguyenhc"},"content":"                    \u0026\u0026 Objects.equals(tags, otherAddPersonDescriptor.tags)","lastModifiedDate":"2023-10-22"},{"lineNumber":395,"author":{"gitId":"nknguyenhc"},"content":"                    \u0026\u0026 Objects.equals(priority, otherAddPersonDescriptor.priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":396,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":397,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":398,"author":{"gitId":"nknguyenhc"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":399,"author":{"gitId":"nknguyenhc"},"content":"        public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":400,"author":{"gitId":"nknguyenhc"},"content":"            ToStringBuilder tsb \u003d new ToStringBuilder(this)","lastModifiedDate":"2023-10-22"},{"lineNumber":401,"author":{"gitId":"nknguyenhc"},"content":"                    .add(\"phones\", phones)","lastModifiedDate":"2023-10-22"},{"lineNumber":402,"author":{"gitId":"nknguyenhc"},"content":"                    .add(\"emails\", emails)","lastModifiedDate":"2023-10-22"},{"lineNumber":403,"author":{"gitId":"nknguyenhc"},"content":"                    .add(\"links\", links)","lastModifiedDate":"2023-10-22"},{"lineNumber":404,"author":{"gitId":"nknguyenhc"},"content":"                    .add(\"graduation\", graduation)","lastModifiedDate":"2023-10-22"},{"lineNumber":405,"author":{"gitId":"nknguyenhc"},"content":"                    .add(\"courses\", courses)","lastModifiedDate":"2023-10-22"},{"lineNumber":406,"author":{"gitId":"nknguyenhc"},"content":"                    .add(\"specialisations\", specialisations)","lastModifiedDate":"2023-10-22"},{"lineNumber":407,"author":{"gitId":"nknguyenhc"},"content":"                    .add(\"priority\", priority)","lastModifiedDate":"2023-10-25"},{"lineNumber":408,"author":{"gitId":"nknguyenhc"},"content":"                    .add(\"tags\", tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":409,"author":{"gitId":"nknguyenhc"},"content":"            return tsb.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":410,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":411,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":412,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Eola-Z":4,"nknguyenhc":273,"xenosf":5,"Singa-pirate":111,"awhb":19}},{"path":"src/main/java/networkbook/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" * Clears the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Noted, cleared all contacts!\";","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"        model.setNetworkBook(new NetworkBook());","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Eola-Z":1,"nknguyenhc":5,"-":17}},{"path":"src/main/java/networkbook/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nknguyenhc":3,"-":17}},{"path":"src/main/java/networkbook/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nknguyenhc":2,"-":80}},{"path":"src/main/java/networkbook/logic/commands/CreateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.CliSyntax;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":" * Creates a new contact in the network book.","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"public class CreateCommand extends Command {","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"    public static final String COMMAND_WORD \u003d \"create\";","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates a new contact in the network book. \"","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"            + \"[\" + CliSyntax.PREFIX_NAME + \" NAME] \"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"            + \"[\" + CliSyntax.PREFIX_PHONE + \" PHONE] \"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"            + \"[\" + CliSyntax.PREFIX_EMAIL + \" EMAIL] \"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"            + \"[\" + CliSyntax.PREFIX_LINK + \"LINK] \"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"            + \"[\" + CliSyntax.PREFIX_GRADUATION + \" GRADUATION DATE] \"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"            + \"[\" + CliSyntax.PREFIX_COURSE + \"COURSE OF STUDY] \"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"            + \"[\" + CliSyntax.PREFIX_SPECIALISATION + \"SPECIALISATION] \"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"            + \"[\" + CliSyntax.PREFIX_TAG + \" TAG] \"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"            + \"[\" + CliSyntax.PREFIX_PRIORITY + \" PRIORITY]...\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"            + CliSyntax.PREFIX_NAME + \" John Doe \"","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"            + CliSyntax.PREFIX_PHONE + \" 98765432 \"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"            + CliSyntax.PREFIX_EMAIL + \" johnd@example.com \"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"            + CliSyntax.PREFIX_TAG + \" friends \"","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"            + CliSyntax.PREFIX_TAG + \" owesMoney\";","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Noted, created new contact: \\n%1$s\";","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_SUCCESS_INDEX \u003d \"\\nAt index %1$s\";","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This contact already exists in the network book\";","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"     * Creates a CreateCommand to create the specified {@code Person}","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"    public CreateCommand(Person person) {","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"Eola-Z"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd))","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"Eola-Z"},"content":"            + String.format(MESSAGE_SUCCESS_INDEX, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"        if (!(other instanceof CreateCommand)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"        CreateCommand otherCreateCommand \u003d (CreateCommand) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"Singa-pirate"},"content":"        return toAdd.equals(otherCreateCommand.toAdd);","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Eola-Z":4,"nknguyenhc":13,"xenosf":1,"Singa-pirate":12,"-":49,"awhb":6}},{"path":"src/main/java/networkbook/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"nknguyenhc":2,"-":17}},{"path":"src/main/java/networkbook/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.NameContainsKeyTermsPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":" * Finds and lists all persons in network book whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here is the list of contacts that contain %1$s:\";","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_PERSONS_FOUND_OVERVIEW \u003d \"\\n(%1$s contacts found)\";","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"    private final NameContainsKeyTermsPredicate predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"    public FindCommand(NameContainsKeyTermsPredicate predicate) {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"                String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"                        predicate.getKeyTerms()","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"                                .stream()","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"                                .reduce(\"\", (acc, term) -\u003e acc + \" \\\"\" + term + \"\\\"\")","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"                                .trim()","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"                                .replace(\" \", \", \"))","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"                        + String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Eola-Z":9,"nknguyenhc":4,"-":50,"awhb":3}},{"path":"src/main/java/networkbook/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nknguyenhc":2,"-":19}},{"path":"src/main/java/networkbook/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" * Lists all persons in the network book to the user.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"Here is your complete list of contacts:\"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"            + \"\\n(%1$d persons listed)\";","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"        return new CommandResult(String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"                model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Eola-Z":4,"nknguyenhc":4,"-":17}},{"path":"src/main/java/networkbook/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"import networkbook.logic.parser.CliSyntax;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":" * Finds and lists all persons in network book whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts your list of contacts.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"            + CliSyntax.PREFIX_SORT_FIELD + \" FIELD \"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"            + \"[\" + CliSyntax.PREFIX_SORT_ORDER + \" ORDER]\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"            + CliSyntax.PREFIX_SORT_FIELD + \" grad \"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"            + CliSyntax.PREFIX_SORT_ORDER + \" descending\";","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"    private final PersonSortComparator comparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"xenosf"},"content":"    public SortCommand(PersonSortComparator comparator) {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"xenosf"},"content":"        model.updateSortedPersonList(comparator);","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"                String.format(Messages.MESSAGE_PERSONS_SORTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"        if (!(other instanceof SortCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"xenosf"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"        SortCommand otherSortCommand \u003d (SortCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"        return comparator.equals(otherSortCommand.comparator);","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"xenosf"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"xenosf"},"content":"                .add(\"comparator\", comparator)","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"xenosf"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Eola-Z":1,"xenosf":62}},{"path":"src/main/java/networkbook/logic/commands/delete/DeleteCourseAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":" * Class that represents an action to delete one entry from a person\u0027s {@code courses}.","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"public class DeleteCourseAction implements DeleteFieldAction {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"    private Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"    public DeleteCourseAction(Index index) {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"     * Deletes the course from the descriptor.","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"     * @param descriptor","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"    public void delete(DeletePersonDescriptor descriptor) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"        descriptor.deleteCourse(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"        if (!(object instanceof DeleteCourseAction)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"        DeleteCourseAction otherAction \u003d (DeleteCourseAction) object;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"        return Objects.equals(this.index, otherAction.index);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Singa-pirate":40}},{"path":"src/main/java/networkbook/logic/commands/delete/DeleteEmailAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":" * Class that represents an action to delete one entry from a person\u0027s {@code emails}.","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"public class DeleteEmailAction implements DeleteFieldAction {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"    private Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"    public DeleteEmailAction(Index index) {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"     * Deletes the email from the descriptor.","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"     * @param descriptor","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"    public void delete(DeletePersonDescriptor descriptor) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"        descriptor.deleteEmail(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"        if (!(object instanceof DeleteEmailAction)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"        DeleteEmailAction otherAction \u003d (DeleteEmailAction) object;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"        return Objects.equals(this.index, otherAction.index);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Singa-pirate":40}},{"path":"src/main/java/networkbook/logic/commands/delete/DeleteFieldAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":" * Interface that represents an abstract action to delete a field of a contact.","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"public interface DeleteFieldAction {","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"    void delete(DeletePersonDescriptor descriptor) throws CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Singa-pirate":10}},{"path":"src/main/java/networkbook/logic/commands/delete/DeleteFieldCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static networkbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import static networkbook.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.Command;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.CommandResult;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":" * Class that represents a user command to delete a field of a person.","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"public class DeleteFieldCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_DELETE_PERSON_FIELD_SUCCESS \u003d \"Deleted some information of person: %1$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"    private Index indexOfPerson;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"    private DeleteFieldAction action;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"     * Constructor that creates a new DeleteFieldCommand instance.","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"     * @param indexOfPerson","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"     * @param action","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"    public DeleteFieldCommand(Index indexOfPerson, DeleteFieldAction action) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"        requireAllNonNull(indexOfPerson, action);","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"        this.indexOfPerson \u003d indexOfPerson;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"        this.action \u003d action;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"        if (this.indexOfPerson.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"        Person personToDeleteField \u003d lastShownList.get(this.indexOfPerson.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptor \u003d new DeletePersonDescriptor(personToDeleteField);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"        Person personWithFieldDeleted \u003d descriptor.toPerson();","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"        model.setItem(personToDeleteField, personWithFieldDeleted);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_FIELD_SUCCESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"                Messages.format(personWithFieldDeleted)));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"        if (!(object instanceof DeleteFieldCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand otherCommand \u003d (DeleteFieldCommand) object;","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"        return this.indexOfPerson.equals(otherCommand.indexOfPerson)","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"                \u0026\u0026 this.action.equals(otherCommand.action);","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Singa-pirate":70}},{"path":"src/main/java/networkbook/logic/commands/delete/DeleteGraduationAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":" * Class that represents an action to delete the {@code graduation} field of a person.","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"public class DeleteGraduationAction implements DeleteFieldAction {","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"     * Deletes the graduation field from the descriptor.","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"     * @param descriptor","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"    public void delete(DeletePersonDescriptor descriptor) {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"        descriptor.deleteGraduation();","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"        return object instanceof DeleteGraduationAction;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Singa-pirate":22}},{"path":"src/main/java/networkbook/logic/commands/delete/DeleteLinkAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":" * Class that represents an action to delete one entry from a person\u0027s {@code links}.","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"public class DeleteLinkAction implements DeleteFieldAction {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"    private Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"    public DeleteLinkAction(Index index) {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"     * Deletes the link from the descriptor.","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"     * @param descriptor","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"    public void delete(DeletePersonDescriptor descriptor) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"        descriptor.deleteLink(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"        if (!(object instanceof DeleteLinkAction)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"        DeleteLinkAction otherAction \u003d (DeleteLinkAction) object;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"        return Objects.equals(this.index, otherAction.index);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Singa-pirate":40}},{"path":"src/main/java/networkbook/logic/commands/delete/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.Command;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.CommandResult;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":" * Deletes a person identified using it\u0027s displayed index from the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"public class DeletePersonCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"            + \": Deletes a person or a piece of information about a person.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"            + \"Usage 1: \" + COMMAND_WORD + \" [LIST INDEX OF CONTACT]\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"            + \"This deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"            + \"Usage 2: \" + COMMAND_WORD + \" [LIST INDEX OF CONTACT] [FIELD PREFIX]\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 /priority\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"            + \"If the field can have multiple values, /index must be used to specify index of the entry to delete.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 /email /index 1\";","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Noted, deleted contact:\\n%1$s\";","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_DELETE_PERSON_INDEX \u003d \"\\nAt index %1$s\";","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"Eola-Z"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"Eola-Z"},"content":"                Messages.format(personToDelete))","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"Eola-Z"},"content":"                + String.format(MESSAGE_DELETE_PERSON_INDEX, targetIndex.getOneBased()));","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"        if (!(other instanceof DeletePersonCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonCommand otherDeletePersonCommand \u003d (DeletePersonCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"        return Objects.equals(this.targetIndex, otherDeletePersonCommand.targetIndex);","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Eola-Z":5,"nknguyenhc":7,"Singa-pirate":17,"-":51}},{"path":"src/main/java/networkbook/logic/commands/delete/DeletePersonDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":" * Class that contains temporary information about a person whose field is being deleted.","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"public class DeletePersonDescriptor {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_INVALID_PHONE_INDEX \u003d \"The phone index provided is invalid.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_INVALID_EMAIL_INDEX \u003d \"The email index provided is invalid.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_INVALID_LINK_INDEX \u003d \"The link index provided is invalid.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_INVALID_COURSE_INDEX \u003d \"The course index provided is invalid.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_INVALID_SPECIALISATION_INDEX \u003d \"The specialisation index provided is invalid.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_INVALID_TAG_INDEX \u003d \"The tag index provided is invalid.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"    private Name name;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"    private UniqueList\u003cPhone\u003e phones;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"    private UniqueList\u003cEmail\u003e emails;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"    private UniqueList\u003cLink\u003e links;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"    private Graduation graduation;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"    private UniqueList\u003cCourse\u003e courses;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"    private UniqueList\u003cSpecialisation\u003e specialisations;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"    private UniqueList\u003cTag\u003e tags;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"    private Priority priority;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"     * Constructs a new person editor from the original {@code person}.","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"    public DeletePersonDescriptor(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"        this.name \u003d person.getName();","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"        this.phones \u003d person.getPhones();","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"        this.emails \u003d person.getEmails();","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"        this.links \u003d person.getLinks();","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        this.graduation \u003d person.getGraduation().orElse(null);","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"        this.courses \u003d person.getCourses();","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"        this.specialisations \u003d person.getSpecialisations();","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"        this.tags \u003d person.getTags();","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"        this.priority \u003d person.getPriority().orElse(null);","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"     * Deletes the phone entry at {@code index} in the descriptor\u0027s list of phones.","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"     * @param index is the zero-based index of the entry to delete.","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"     * @throws CommandException when the index is invalid in the list.","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"    public void deletePhone(Index index) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"        if (index.getZeroBased() \u003e\u003d this.phones.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"            throw new CommandException(MESSAGE_INVALID_PHONE_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"        this.phones.removeAtIndex(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"     * Deletes the email entry at {@code index} in the descriptor\u0027s list of emails.","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"     * @param index is the zero-based index of the entry to delete.","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"Singa-pirate"},"content":"     * @throws CommandException when the index is invalid in the list.","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"Singa-pirate"},"content":"    public void deleteEmail(Index index) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"Singa-pirate"},"content":"        if (index.getZeroBased() \u003e\u003d this.emails.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"            throw new CommandException(MESSAGE_INVALID_EMAIL_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"        this.emails.removeAtIndex(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"     * Deletes the link entry at {@code index} in the descriptor\u0027s list of links.","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"Singa-pirate"},"content":"     * @param index is the zero-based index of the entry to delete.","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"     * @throws CommandException when the index is invalid in the list.","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"Singa-pirate"},"content":"    public void deleteLink(Index index) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"Singa-pirate"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"Singa-pirate"},"content":"        if (index.getZeroBased() \u003e\u003d this.links.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"            throw new CommandException(MESSAGE_INVALID_LINK_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"        this.links.removeAtIndex(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"Singa-pirate"},"content":"     * Deletes the course entry at {@code index} in the descriptor\u0027s list of courses.","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"Singa-pirate"},"content":"     * @param index is the zero-based index of the entry to delete.","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"Singa-pirate"},"content":"     * @throws CommandException when the index is invalid in the list.","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"Singa-pirate"},"content":"    public void deleteCourse(Index index) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"Singa-pirate"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"Singa-pirate"},"content":"        if (index.getZeroBased() \u003e\u003d this.courses.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"Singa-pirate"},"content":"            throw new CommandException(MESSAGE_INVALID_COURSE_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"Singa-pirate"},"content":"        this.courses.removeAtIndex(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"Singa-pirate"},"content":"     * Deletes the specialisation entry at {@code index} in the descriptor\u0027s list of specialisations.","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"Singa-pirate"},"content":"     * @param index is the zero-based index of the entry to delete.","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"Singa-pirate"},"content":"     * @throws CommandException when the index is invalid in the list.","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"Singa-pirate"},"content":"    public void deleteSpecialisation(Index index) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"Singa-pirate"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"Singa-pirate"},"content":"        if (index.getZeroBased() \u003e\u003d this.specialisations.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"Singa-pirate"},"content":"            throw new CommandException(MESSAGE_INVALID_SPECIALISATION_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"Singa-pirate"},"content":"        this.specialisations.removeAtIndex(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"Singa-pirate"},"content":"     * Deletes the tag entry at {@code index} in the descriptor\u0027s list of tags.","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"Singa-pirate"},"content":"     * @param index is the zero-based index of the entry to delete.","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"Singa-pirate"},"content":"     * @throws CommandException when the index is invalid in the list.","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"Singa-pirate"},"content":"    public void deleteTag(Index index) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"Singa-pirate"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"Singa-pirate"},"content":"        if (index.getZeroBased() \u003e\u003d this.tags.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"Singa-pirate"},"content":"            throw new CommandException(MESSAGE_INVALID_TAG_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"Singa-pirate"},"content":"        this.tags.removeAtIndex(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"Singa-pirate"},"content":"    public void deleteGraduation() {","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"Singa-pirate"},"content":"        this.graduation \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"Singa-pirate"},"content":"    public void deletePriority() {","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"Singa-pirate"},"content":"        this.priority \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"Singa-pirate"},"content":"    public Person toPerson() {","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"Singa-pirate"},"content":"        return new Person(name, phones, emails, links, graduation, courses, specialisations, tags, priority);","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"Singa-pirate"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"Singa-pirate"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"Singa-pirate"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"Singa-pirate"},"content":"        if (!(object instanceof DeletePersonDescriptor)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"Singa-pirate"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor otherDescriptor \u003d (DeletePersonDescriptor) object;","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"Singa-pirate"},"content":"        return this.name.equals(otherDescriptor.name)","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"Singa-pirate"},"content":"                \u0026\u0026 this.phones.equals(otherDescriptor.phones)","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"Singa-pirate"},"content":"                \u0026\u0026 this.emails.equals(otherDescriptor.emails)","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"Singa-pirate"},"content":"                \u0026\u0026 this.links.equals(otherDescriptor.links)","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"Singa-pirate"},"content":"                \u0026\u0026 Objects.equals(this.graduation, otherDescriptor.graduation)","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"Singa-pirate"},"content":"                \u0026\u0026 this.courses.equals(otherDescriptor.courses)","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"Singa-pirate"},"content":"                \u0026\u0026 this.specialisations.equals(otherDescriptor.specialisations)","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"Singa-pirate"},"content":"                \u0026\u0026 this.tags.equals(otherDescriptor.tags)","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"Singa-pirate"},"content":"                \u0026\u0026 Objects.equals(this.priority, otherDescriptor.priority);","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Singa-pirate":167}},{"path":"src/main/java/networkbook/logic/commands/delete/DeletePhoneAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":" * Class that represents an action to delete one entry from a person\u0027s {@code phones}.","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"public class DeletePhoneAction implements DeleteFieldAction {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"    private Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"    public DeletePhoneAction(Index index) {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"     * Deletes the phone from the descriptor.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"     * @param descriptor","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"    public void delete(DeletePersonDescriptor descriptor) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"        descriptor.deletePhone(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"        if (!(object instanceof DeletePhoneAction)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"        DeletePhoneAction otherAction \u003d (DeletePhoneAction) object;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"        return Objects.equals(this.index, otherAction.index);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Singa-pirate":41}},{"path":"src/main/java/networkbook/logic/commands/delete/DeletePriorityAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":" * Class that represents an action to delete the {@code priority} field of a person.","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"public class DeletePriorityAction implements DeleteFieldAction {","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"     * Deletes the priority field from the descriptor.","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"     * @param descriptor","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"    public void delete(DeletePersonDescriptor descriptor) {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"        descriptor.deletePriority();","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"        return object instanceof DeletePriorityAction;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Singa-pirate":22}},{"path":"src/main/java/networkbook/logic/commands/delete/DeleteSpecialisationAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":" * Class that represents an action to delete one entry from a person\u0027s {@code specialisations}.","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"public class DeleteSpecialisationAction implements DeleteFieldAction {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"    private Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"    public DeleteSpecialisationAction(Index index) {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"     * Deletes the specialisation from the descriptor.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"     * @param descriptor","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"    public void delete(DeletePersonDescriptor descriptor) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"        descriptor.deleteSpecialisation(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"        if (!(object instanceof DeleteSpecialisationAction)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"        DeleteSpecialisationAction otherAction \u003d (DeleteSpecialisationAction) object;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"        return Objects.equals(this.index, otherAction.index);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Singa-pirate":41}},{"path":"src/main/java/networkbook/logic/commands/delete/DeleteTagAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":" * Class that represents an action to delete one entry from a person\u0027s {@code tags}.","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"public class DeleteTagAction implements DeleteFieldAction {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"    private Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"    public DeleteTagAction(Index index) {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"     * Deletes the tag from the descriptor.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"     * @param descriptor","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"    public void delete(DeletePersonDescriptor descriptor) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"        descriptor.deleteTag(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"        if (!(object instanceof DeleteTagAction)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"        DeleteTagAction otherAction \u003d (DeleteTagAction) object;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"        return Objects.equals(this.index, otherAction.index);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Singa-pirate":41}},{"path":"src/main/java/networkbook/logic/commands/edit/EditAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":" * Represents an action to edit a person.","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"public interface EditAction {","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"     * Mutates the {@code editPersonDescriptor}, which is then used by `EditCommand` to edit the person the model.","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    void edit(EditPersonDescriptor editPersonDescriptor) throws CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":13}},{"path":"src/main/java/networkbook/logic/commands/edit/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.Command;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.CommandResult;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.CliSyntax;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":" * Edits the details of an existing person in the network book.","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"            + \"Parameters: [LIST INDEX OF CONTACT] \"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"            + \"[\" + CliSyntax.PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"            + \"[\" + CliSyntax.PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"            + \"[\" + CliSyntax.PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"            + \"[\" + CliSyntax.PREFIX_LINK + \"LINK] \"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"            + \"[\" + CliSyntax.PREFIX_GRADUATION + \" GRADUATION DATE] \"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"            + \"[\" + CliSyntax.PREFIX_COURSE + \"COURSE OF STUDY] \"","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"            + \"[\" + CliSyntax.PREFIX_SPECIALISATION + \"SPECIALISATION] \"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"            + \"[\" + CliSyntax.PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"            + \"[\" + CliSyntax.PREFIX_PRIORITY + \"PRIORITY]...\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"            + CliSyntax.PREFIX_PHONE + \" 91234567 \"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"            + CliSyntax.PREFIX_EMAIL + \" johndoe@example.com\";","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the network book.\";","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    private final Index index;","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    private final EditAction editAction;","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"     * @param index of the person in the filtered person list to edit.","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"     * @param editAction the action to edit the person.","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"    public EditCommand(Index index, EditAction editAction) {","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"        requireAllNonNull(index, editAction);","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        this.editAction \u003d editAction;","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"        assert model !\u003d null : \"Model should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor(personToEdit);","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"        this.editAction.edit(editPersonDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"        Person editedPerson \u003d editPersonDescriptor.toPerson();","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"        assert editedPerson !\u003d null : \"Edited person should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"        if (!personToEdit.isSame(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"        model.setItem(personToEdit, editedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 editAction.equals(otherEditCommand.editAction);","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"                .add(\"editAction\", editAction)","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"                .toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":106}},{"path":"src/main/java/networkbook/logic/commands/edit/EditCourseAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" * Represents an action to edit a course of a person.","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"public class EditCourseAction implements EditAction {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    private final Course course;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"    private final Index index;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"     * Constructs a new action to edit course.","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"     * @param index The index of the course in the course list of the person.","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"     * @param course The new value of the course.","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    public EditCourseAction(Index index, Course course) {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        this.course \u003d course;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public void edit(EditPersonDescriptor editPersonDescriptor) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        assert editPersonDescriptor !\u003d null : \"editPersonDescriptor should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        editPersonDescriptor.setCourse(index, course);","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        if (!(object instanceof EditCourseAction)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        EditCourseAction otherAction \u003d (EditCourseAction) object;","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        return this.course.equals(otherAction.course)","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 this.index.equals(otherAction.index);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        ToStringBuilder toStringBuilder \u003d new ToStringBuilder(this);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        toStringBuilder.add(\"course\", this.course);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        toStringBuilder.add(\"index\", this.index.getOneBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        return toStringBuilder.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":53}},{"path":"src/main/java/networkbook/logic/commands/edit/EditEmailAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" * Represents an action to edit an email of a person.","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"public class EditEmailAction implements EditAction {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    private final Email email;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"    private final Index index;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"     * Constructs a new action to edit email.","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"     * @param index The index of the email in the email list of the person.","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"     * @param email The new value of the email.","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    public EditEmailAction(Index index, Email email) {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public void edit(EditPersonDescriptor editPersonDescriptor) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        assert editPersonDescriptor !\u003d null : \"editPersonDescriptor should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        editPersonDescriptor.setEmail(index, email);","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        if (!(object instanceof EditEmailAction)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        EditEmailAction otherAction \u003d (EditEmailAction) object;","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        return this.email.equals(otherAction.email)","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 this.index.equals(otherAction.index);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        ToStringBuilder toStringBuilder \u003d new ToStringBuilder(this);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        toStringBuilder.add(\"email\", this.email);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        toStringBuilder.add(\"index\", this.index.getOneBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        return toStringBuilder.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":53}},{"path":"src/main/java/networkbook/logic/commands/edit/EditGraduationAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" * Represents an action to edit graduation of a person.","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"public class EditGraduationAction implements EditAction {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"    private final Graduation graduation;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"     * Constructs a new action to edit graduation.","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"     * @param graduation The new value of graduation.","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"    public EditGraduationAction(Graduation graduation) {","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"        this.graduation \u003d graduation;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    public void edit(EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        assert editPersonDescriptor !\u003d null : \"editPersonDescriptor should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"        editPersonDescriptor.setGraduation(graduation);","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"        if (!(object instanceof EditGraduationAction)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        EditGraduationAction otherAction \u003d (EditGraduationAction) object;","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        return this.graduation.equals(otherAction.graduation);","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        ToStringBuilder toStringBuilder \u003d new ToStringBuilder(this);","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        toStringBuilder.add(\"graduation\", graduation);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        return toStringBuilder.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":46}},{"path":"src/main/java/networkbook/logic/commands/edit/EditLinkAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" * Represents an action to edit a link of a person.","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"public class EditLinkAction implements EditAction {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    private final Link link;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"    private final Index index;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"     * Constructs a new action to edit link.","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"     * @param index The index of the link in the link list of the person.","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"     * @param link The new value of the link.","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    public EditLinkAction(Index index, Link link) {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        this.link \u003d link;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public void edit(EditPersonDescriptor editPersonDescriptor) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        assert editPersonDescriptor !\u003d null : \"editPersonDescriptor should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        editPersonDescriptor.setLink(index, link);","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        if (!(object instanceof EditLinkAction)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        EditLinkAction otherAction \u003d (EditLinkAction) object;","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        return this.link.equals(otherAction.link)","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 this.index.equals(otherAction.index);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        ToStringBuilder toStringBuilder \u003d new ToStringBuilder(this);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        toStringBuilder.add(\"link\", this.link);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        toStringBuilder.add(\"index\", this.index.getOneBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        return toStringBuilder.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":53}},{"path":"src/main/java/networkbook/logic/commands/edit/EditNameAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" * Represents an action to edit the name of a person.","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"public class EditNameAction implements EditAction {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"    private final Name name;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"     * Constructs a new action to edit name.","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"     * @param name The new value of name.","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"    public EditNameAction(Name name) {","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    public void edit(EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        assert editPersonDescriptor !\u003d null : \"editPersonDescriptor should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"        editPersonDescriptor.setName(name);","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"        if (!(object instanceof EditNameAction)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        EditNameAction otherAction \u003d (EditNameAction) object;","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        return this.name.equals(otherAction.name);","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        ToStringBuilder toStringBuilder \u003d new ToStringBuilder(this);","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        toStringBuilder.add(\"name\", this.name);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        return toStringBuilder.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":46}},{"path":"src/main/java/networkbook/logic/commands/edit/EditPersonDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":" * Constructs a new person from an original person based on the edit actions.","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"public class EditPersonDescriptor {","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    public static final String MESSAGE_INVALID_PHONE_INDEX \u003d \"The phone index provided is invalid.\";","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    public static final String MESSAGE_INVALID_EMAIL_INDEX \u003d \"The email index provided is invalid.\";","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    public static final String MESSAGE_INVALID_LINK_INDEX \u003d \"The link index provided is invalid.\";","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public static final String MESSAGE_INVALID_COURSE_INDEX \u003d \"The course index provided is invalid.\";","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"    public static final String MESSAGE_INVALID_SPECIALISATION_INDEX \u003d \"The specialisation index provided is invalid.\";","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    public static final String MESSAGE_INVALID_TAG_INDEX \u003d \"The tag index provided is invalid.\";","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    public static final String MESSAGE_DUPLICATE_EXISTS \u003d \"The contact already has the new %s provided.\";","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    private Name name;","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    private UniqueList\u003cPhone\u003e phones;","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    private UniqueList\u003cEmail\u003e emails;","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"    private UniqueList\u003cLink\u003e links;","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    private Graduation graduation;","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    private UniqueList\u003cCourse\u003e courses;","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"    private UniqueList\u003cSpecialisation\u003e specialisations;","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    private UniqueList\u003cTag\u003e tags;","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    private Priority priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"     * Constructs a new person editor from the original {@code person}.","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"    public EditPersonDescriptor(Person person) {","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        this.name \u003d person.getName();","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"        this.phones \u003d person.getPhones();","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"        this.emails \u003d person.getEmails();","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"        this.links \u003d person.getLinks();","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        this.graduation \u003d person.getGraduation().orElse(null);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        this.courses \u003d person.getCourses();","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        this.specialisations \u003d person.getSpecialisations();","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        this.tags \u003d person.getTags();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        this.priority \u003d person.getPriority().orElse(null);","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"    public void setName(Name name) {","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        assert name !\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"    public void setPhone(Index index, Phone phone) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"        requireAllNonNull(index, phone);","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"        if (index.getZeroBased() \u003e\u003d this.phones.size()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"            throw new CommandException(MESSAGE_INVALID_PHONE_INDEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        if (this.phones.containsNotAtIndex(phone, index.getZeroBased())) {","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_EXISTS, \"phone\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"        this.phones.setItem(index.getZeroBased(), phone);","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"    public void setEmail(Index index, Email email) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"        requireAllNonNull(index, email);","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"        if (index.getZeroBased() \u003e\u003d this.emails.size()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"            throw new CommandException(MESSAGE_INVALID_EMAIL_INDEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"        if (this.emails.containsNotAtIndex(email, index.getZeroBased())) {","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_EXISTS, \"email\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"        this.emails.setItem(index.getZeroBased(), email);","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"    public void setLink(Index index, Link link) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"        requireAllNonNull(index, link);","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"        if (index.getZeroBased() \u003e\u003d this.links.size()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"            throw new CommandException(MESSAGE_INVALID_LINK_INDEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"        if (this.links.containsNotAtIndex(link, index.getZeroBased())) {","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_EXISTS, \"link\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"        this.links.setItem(index.getZeroBased(), link);","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"    public void setGraduation(Graduation graduation) {","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"        assert graduation !\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"        this.graduation \u003d graduation;","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"    public void setCourse(Index index, Course course) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"        requireAllNonNull(index, course);","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"        if (index.getZeroBased() \u003e\u003d this.courses.size()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"            throw new CommandException(MESSAGE_INVALID_COURSE_INDEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"        if (this.courses.containsNotAtIndex(course, index.getZeroBased())) {","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_EXISTS, \"course\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"        this.courses.setItem(index.getZeroBased(), course);","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"    public void setSpecialisation(Index index, Specialisation specialisation) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"        requireAllNonNull(index, specialisation);","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"        if (index.getZeroBased() \u003e\u003d this.specialisations.size()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"            throw new CommandException(MESSAGE_INVALID_SPECIALISATION_INDEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"        if (this.specialisations.containsNotAtIndex(specialisation, index.getZeroBased())) {","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_EXISTS, \"specialisation\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"        this.specialisations.setItem(index.getZeroBased(), specialisation);","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"    public void setTag(Index index, Tag tag) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"        requireAllNonNull(index, tag);","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"        if (index.getZeroBased() \u003e\u003d this.tags.size()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"            throw new CommandException(MESSAGE_INVALID_TAG_INDEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"        if (this.tags.containsNotAtIndex(tag, index.getZeroBased())) {","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_EXISTS, \"tag\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"        this.tags.setItem(index.getZeroBased(), tag);","lastModifiedDate":"2023-10-22"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":143,"author":{"gitId":"nknguyenhc"},"content":"    public void setPriority(Priority priority) {","lastModifiedDate":"2023-10-22"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"        assert priority !\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"    public Person toPerson() {","lastModifiedDate":"2023-10-22"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"        return new Person(name, phones, emails, links, graduation, courses, specialisations, tags, priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"        if (!(object instanceof EditPersonDescriptor)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor otherDescriptor \u003d (EditPersonDescriptor) object;","lastModifiedDate":"2023-10-22"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"        return this.name.equals(otherDescriptor.name)","lastModifiedDate":"2023-10-22"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 this.phones.equals(otherDescriptor.phones)","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 this.emails.equals(otherDescriptor.emails)","lastModifiedDate":"2023-10-22"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 this.links.equals(otherDescriptor.links)","lastModifiedDate":"2023-10-22"},{"lineNumber":167,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 this.graduation.equals(otherDescriptor.graduation)","lastModifiedDate":"2023-10-22"},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 this.courses.equals(otherDescriptor.courses)","lastModifiedDate":"2023-10-22"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 this.specialisations.equals(otherDescriptor.specialisations)","lastModifiedDate":"2023-10-22"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 this.tags.equals(otherDescriptor.tags)","lastModifiedDate":"2023-10-22"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 this.priority.equals(otherDescriptor.priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":172,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":172,"Singa-pirate":1}},{"path":"src/main/java/networkbook/logic/commands/edit/EditPhoneAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" * Represents an action to edit a phone number of person.","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"public class EditPhoneAction implements EditAction {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    private final Phone phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"    private final Index index;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"     * Constructs a new action to edit phone number.","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"     * @param index The index of the phone number in the phone number list of the person.","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"     * @param phone The new value of phone number.","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    public EditPhoneAction(Index index, Phone phone) {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public void edit(EditPersonDescriptor editPersonDescriptor) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        assert editPersonDescriptor !\u003d null : \"editPersonDescriptor should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        editPersonDescriptor.setPhone(index, phone);","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        if (!(object instanceof EditPhoneAction)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        EditPhoneAction otherAction \u003d (EditPhoneAction) object;","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        return this.phone.equals(otherAction.phone)","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 this.index.equals(otherAction.index);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        ToStringBuilder toStringBuilder \u003d new ToStringBuilder(this);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        toStringBuilder.add(\"phone\", this.phone);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        toStringBuilder.add(\"index\", this.index.getOneBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        return toStringBuilder.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":53}},{"path":"src/main/java/networkbook/logic/commands/edit/EditPriorityAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" * Represents an action to edit priority of a person.","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"public class EditPriorityAction implements EditAction {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"    private final Priority priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"     * Constructs a new action to edit priority.","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"     * @param priority The new value of priority.","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"    public EditPriorityAction(Priority priority) {","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    public void edit(EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        assert editPersonDescriptor !\u003d null : \"editPersonDescriptor should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"        editPersonDescriptor.setPriority(priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"        if (!(object instanceof EditPriorityAction)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        EditPriorityAction otherAction \u003d (EditPriorityAction) object;","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        return this.priority.equals(otherAction.priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        ToStringBuilder toStringBuilder \u003d new ToStringBuilder(this);","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        toStringBuilder.add(\"priority\", this.priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        return toStringBuilder.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":46}},{"path":"src/main/java/networkbook/logic/commands/edit/EditSpecialisationAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" * Represents an action to edit a specialisation of a person.","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"public class EditSpecialisationAction implements EditAction {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    private final Specialisation specialisation;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"    private final Index index;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"     * Constructs a new action to edit specialisation.","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"     * @param index The index of specialisation in the specialisation of the person.","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"     * @param specialisation The new value of specialisation.","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    public EditSpecialisationAction(Index index , Specialisation specialisation) {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        this.specialisation \u003d specialisation;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public void edit(EditPersonDescriptor editPersonDescriptor) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        assert editPersonDescriptor !\u003d null : \"editPersonDescriptor should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        editPersonDescriptor.setSpecialisation(index, specialisation);","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        if (!(object instanceof EditSpecialisationAction)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        EditSpecialisationAction otherAction \u003d (EditSpecialisationAction) object;","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        return this.specialisation.equals(otherAction.specialisation)","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 this.index.equals(otherAction.index);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        ToStringBuilder toStringBuilder \u003d new ToStringBuilder(this);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        toStringBuilder.add(\"specialisation\", this.specialisation);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        toStringBuilder.add(\"index\", this.index.getOneBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        return toStringBuilder.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":53}},{"path":"src/main/java/networkbook/logic/commands/edit/EditTagAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" * Represents an action to edit tag of a person.","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"public class EditTagAction implements EditAction {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    private final Tag tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"    private final Index index;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"     * Constructs a new action to edit tag.","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"     * @param index The index of the tag in the tag list of the person.","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"     * @param tag The new value of the tag.","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    public EditTagAction(Index index, Tag tag) {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public void edit(EditPersonDescriptor editPersonDescriptor) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        assert editPersonDescriptor !\u003d null : \"editPersonDescriptor should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        editPersonDescriptor.setTag(index, tag);","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        if (!(object instanceof EditTagAction)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        EditTagAction otherAction \u003d (EditTagAction) object;","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        return this.tag.equals(otherAction.tag)","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 this.index.equals(otherAction.index);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        ToStringBuilder toStringBuilder \u003d new ToStringBuilder(this);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        toStringBuilder.add(\"tag\", this.tag);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        toStringBuilder.add(\"index\", this.index.getOneBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        return toStringBuilder.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":52,"Singa-pirate":1}},{"path":"src/main/java/networkbook/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.exceptions;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"nknguyenhc":1,"-":16}},{"path":"src/main/java/networkbook/logic/commands/filter/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package networkbook.logic.commands.filter;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"import networkbook.logic.commands.Command;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"import networkbook.logic.commands.CommandResult;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"import networkbook.logic.parser.CliSyntax;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.filter.CourseContainsKeyTermsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.filter.CourseIsStillBeingTakenPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":" * Filters the list of contacts to contacts that have courses that contain","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":" * at least one course that contains some specified key terms.","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":" *","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":" * Additionally, we can further specify whether all courses should be counted,","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":" * or only contacts that are currently taking the courses are counted.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":" *","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":" * TODO: Implement filter","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":" * TODO: Extend functionality to grad year and specialisation","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"            + \": Filters all persons by a specified field (course, specialisation, or grad year)\"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"            + \" and returns a list of contacts that contain the specified keywords.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"            + \"Course and grad year can be additionally filtered to exclude contacts\"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"            + \" who have finished the course or graduated.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"            + CliSyntax.PREFIX_FILTER_FIELD + \" FIELD \"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"            + \"[\" + CliSyntax.PREFIX_FILTER_FIN + \" true/false (false by default)]\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"            + \"Example: \" + COMMAND_WORD + \" /with a b c /taken false\";","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here is the list of contacts whose courses contain %1$s:\";","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_EXCL_FIN \u003d \"\\n(excluding contacts who have finished taking)\";","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_PERSONS_FOUND_OVERVIEW \u003d \"\\n(%1$s contacts found)\";","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"    private final CourseContainsKeyTermsPredicate keyTermsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"    private final CourseIsStillBeingTakenPredicate takenPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"    private final boolean checkFin;","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"     * Creates a FilterCommand object that searches using a list of key terms,","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"     * a specified date to check whether a course is being taken, and a","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"     * boolean that specifies whether the date check needs to be done.","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Eola-Z"},"content":"    public FilterCommand(CourseContainsKeyTermsPredicate keyTermsPredicate,","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Eola-Z"},"content":"                         CourseIsStillBeingTakenPredicate takenPredicate,","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Eola-Z"},"content":"                         boolean checkFin) {","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Eola-Z"},"content":"        this.keyTermsPredicate \u003d keyTermsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Eola-Z"},"content":"        this.takenPredicate \u003d takenPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Eola-Z"},"content":"        this.checkFin \u003d checkFin;","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Eola-Z"},"content":"     * Executes the FilterCommand object and returns a message to the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Eola-Z"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Eola-Z"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Eola-Z"},"content":"        assert model !\u003d null : \"Model should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Eola-Z"},"content":"        model.updateFilteredPersonList(keyTermsPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Eola-Z"},"content":"        String feedback \u003d String.format(MESSAGE_SUCCESS, keyTermsPredicate.getKeyTerms()","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Eola-Z"},"content":"                .stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Eola-Z"},"content":"                .reduce(\"\", (acc, term) -\u003e acc + \" \\\"\" + term + \"\\\"\")","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Eola-Z"},"content":"                .trim()","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Eola-Z"},"content":"                .replace(\" \", \", \"));","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Eola-Z"},"content":"        if (checkFin) {","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Eola-Z"},"content":"            model.updateFilteredPersonList(person -\u003e keyTermsPredicate.getCourses(person)","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Eola-Z"},"content":"                    .stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Eola-Z"},"content":"                    .anyMatch(course -\u003e takenPredicate.test(course)));","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Eola-Z"},"content":"            feedback +\u003d MESSAGE_EXCL_FIN;","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Eola-Z"},"content":"        return new CommandResult(feedback","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Eola-Z"},"content":"                + String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Eola-Z"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Eola-Z"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Eola-Z"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Eola-Z"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Eola-Z"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Eola-Z"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Eola-Z"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Eola-Z"},"content":"        FilterCommand otherFilterCommand \u003d (FilterCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Eola-Z"},"content":"        return takenPredicate.equals(otherFilterCommand.takenPredicate)","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Eola-Z"},"content":"                \u0026\u0026 keyTermsPredicate.equals(otherFilterCommand.keyTermsPredicate)","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Eola-Z"},"content":"                \u0026\u0026 checkFin \u003d\u003d otherFilterCommand.checkFin;","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Eola-Z"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Eola-Z"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Eola-Z"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Eola-Z"},"content":"                .add(\"predicate\", keyTermsPredicate)","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Eola-Z"},"content":"                .add(\"time\", takenPredicate)","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Eola-Z"},"content":"                .add(\"taken\", checkFin)","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Eola-Z"},"content":"                .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Eola-Z":104}},{"path":"src/main/java/networkbook/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.AddCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.AddCommand.AddPersonDescriptor;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public static final String MESSAGE_MULTIPLE_NAMES \u003d \"Contact cannot have multiple names.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"            + \"Please use the \u0027edit\u0027 command instead.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"                        args,","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_NAME,","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"                        CliSyntax.PREFIX_LINK,","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"                        CliSyntax.PREFIX_GRADUATION,","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"                        CliSyntax.PREFIX_COURSE,","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"                        CliSyntax.PREFIX_SPECIALISATION,","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_TAG,","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_PRIORITY","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"                );","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        Index index;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"                    String.format(","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"                            Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"                            AddCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"                    ),","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"                    pe","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"            );","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"                CliSyntax.PREFIX_NAME,","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"                CliSyntax.PREFIX_GRADUATION,","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"                CliSyntax.PREFIX_PRIORITY","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"        );","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"        AddPersonDescriptor addPersonDescriptor \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"                AddCommandParser.generateAddPersonDescriptor(argMultimap);","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"        if (!addPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"Singa-pirate"},"content":"            throw new ParseException(AddCommand.MESSAGE_NO_INFO);","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        return new AddCommand(index, addPersonDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"     * Creates an {@code AddPersonDescriptor} based on the arguments provided in an edit or add command.","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"    private static AddPersonDescriptor generateAddPersonDescriptor(ArgumentMultimap argMultimap)","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"        AddPersonDescriptor addPersonDescriptor \u003d new AddCommand.AddPersonDescriptor();","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"            throw new ParseException(MESSAGE_MULTIPLE_NAMES);","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"        parsePhonesForEdit(argMultimap.getAllValues(CliSyntax.PREFIX_PHONE))","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"                .ifPresent(addPersonDescriptor::setPhones);","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"        parseEmailsForEdit(argMultimap.getAllValues(CliSyntax.PREFIX_EMAIL))","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"                .ifPresent(addPersonDescriptor::setEmails);","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"        parseLinksForEdit(argMultimap.getAllValues(CliSyntax.PREFIX_LINK))","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"                .ifPresent(addPersonDescriptor::setLinks);","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_GRADUATION).isPresent()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"            addPersonDescriptor.setGraduation(","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"                    ParserUtil.parseGraduation(argMultimap.getValue(CliSyntax.PREFIX_GRADUATION).get()));","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"        parseCoursesForEdit(argMultimap.getAllValues(CliSyntax.PREFIX_COURSE))","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"                .ifPresent(addPersonDescriptor::setCourses);","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"        parseSpecialisationsForEdit(argMultimap.getAllValues(CliSyntax.PREFIX_SPECIALISATION))","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"                .ifPresent(addPersonDescriptor::setSpecialisations);","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"        parseTagsForEdit(argMultimap.getAllValues(CliSyntax.PREFIX_TAG))","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"                .ifPresent(addPersonDescriptor::setTags);","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_PRIORITY).isPresent()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"            addPersonDescriptor.setPriority(","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"                    ParserUtil.parsePriority(argMultimap.getValue(CliSyntax.PREFIX_PRIORITY).get()));","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"        return addPersonDescriptor;","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"     * Parses {@code Collection\u003cString\u003e phones} into a {@code UniqueList\u003cPhone\u003e} wrapped in an {@code Optional}.","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"    private static Optional\u003cUniqueList\u003cPhone\u003e\u003e parsePhonesForEdit(Collection\u003cString\u003e phones) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(phones);","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"        if (phones.isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"        return Optional.of(ParserUtil.parsePhones(phones));","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"     * Parses {@code Collection\u003cString\u003e emails} into a {@code UniqueList\u003cEmail\u003e} wrapped in an {@code Optional}.","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"    private static Optional\u003cUniqueList\u003cEmail\u003e\u003e parseEmailsForEdit(Collection\u003cString\u003e emails) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(emails);","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"        if (emails.isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"        return Optional.of(ParserUtil.parseEmails(emails));","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"     * Parses {@code Collection\u003cString\u003e links} into a {@code UniqueList\u003cLink\u003e} wrapped in an {@code Optional}.","lastModifiedDate":"2023-10-22"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"    private static Optional\u003cUniqueList\u003cLink\u003e\u003e parseLinksForEdit(Collection\u003cString\u003e links) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(links);","lastModifiedDate":"2023-10-22"},{"lineNumber":143,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"        if (links.isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-22"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"        return Optional.of(ParserUtil.parseLinks(links));","lastModifiedDate":"2023-10-22"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"     * Parses {@code Collection\u003cString\u003e courses} into a {@code UniqueList\u003cCourse\u003e} wrapped in an {@code Optional}.","lastModifiedDate":"2023-10-22"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"    private static Optional\u003cUniqueList\u003cCourse\u003e\u003e parseCoursesForEdit(Collection\u003cString\u003e courses) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(courses);","lastModifiedDate":"2023-10-22"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"        if (courses.isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-22"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"        return Optional.of(ParserUtil.parseCourses(courses));","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code UniqueList\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-10-22"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"     * {@code UniqueList\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-10-22"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":167,"author":{"gitId":"nknguyenhc"},"content":"    private static Optional\u003cUniqueList\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-22"},{"lineNumber":172,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-10-22"},{"lineNumber":174,"author":{"gitId":"nknguyenhc"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-10-22"},{"lineNumber":175,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":176,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":177,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":178,"author":{"gitId":"nknguyenhc"},"content":"     * Parses {@code Coolection\u003cString\u003e specialisations} into a {@code UniqueList\u003cSpecialisation\u003e} wrapped in an","lastModifiedDate":"2023-10-22"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"     * {@code Optional}.","lastModifiedDate":"2023-10-22"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":181,"author":{"gitId":"nknguyenhc"},"content":"    private static Optional\u003cUniqueList\u003cSpecialisation\u003e\u003e parseSpecialisationsForEdit(Collection\u003cString\u003e specisalisations)","lastModifiedDate":"2023-10-22"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":183,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(specisalisations);","lastModifiedDate":"2023-10-22"},{"lineNumber":184,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":185,"author":{"gitId":"nknguyenhc"},"content":"        if (specisalisations.isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":186,"author":{"gitId":"nknguyenhc"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-22"},{"lineNumber":187,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":188,"author":{"gitId":"nknguyenhc"},"content":"        return Optional.of(ParserUtil.parseSpecialisations(specisalisations));","lastModifiedDate":"2023-10-22"},{"lineNumber":189,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":190,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"nknguyenhc":131,"xenosf":2,"Singa-pirate":54,"awhb":3}},{"path":"src/main/java/networkbook/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"     * Verifies that zero or one of the {@code prefixes} is present.","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"     * @param prefixes","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"     * @return null if no prefix is present, and the {@code Prefix} if exactly one is present.","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"     * @throws ParseException when there are more than one prefix present.","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"    public Prefix verifyAtMostOneIsPresent(Prefix ... prefixes) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"        assert prefixes.length \u003e 0;","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"        Prefix result \u003d null;","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"        for (Prefix prefix: prefixes) {","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"            if (argMultimap.containsKey(prefix)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Singa-pirate"},"content":"                if (argMultimap.get(prefix).size() \u003e 1) {","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"                    throw new ParseException(Messages.MESSAGE_DUPLICATE_PREFIX);","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Singa-pirate"},"content":"                }","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"                if (result !\u003d null) {","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"                    throw new ParseException(Messages.MESSAGE_EXACTLY_ONE_FIELD);","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"                }","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"                result \u003d prefix;","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Singa-pirate"},"content":"        return result;","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"Singa-pirate"},"content":"     * Verifies that one and only one of the {@code prefixes} is present.","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"Singa-pirate"},"content":"    public Prefix verifyExactlyOneIsPresent(Prefix ... prefixes) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"Singa-pirate"},"content":"        assert prefixes.length \u003e 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"Singa-pirate"},"content":"        Prefix result \u003d verifyAtMostOneIsPresent(prefixes);","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"            throw new ParseException(Messages.MESSAGE_EXACTLY_ONE_FIELD);","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"        return result;","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"     * Verifies that if one of the {@code prefixesIfPresent} is present,","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"     * then the {@code prefixThenPresent} must also be present with only one corresponding value.","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"     * Otherwise, {@code prefixThenPresent} must be absent.","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"    public void verifyIfPresentThenOnlyOne(Prefix[] prefixesIfPresent, Prefix prefixThenPresent) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"        Prefix firstPresentPrefix \u003d this.firstPresentPrefix(prefixesIfPresent);","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"        if (firstPresentPrefix !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"            if (!argMultimap.containsKey(prefixThenPresent) || argMultimap.get(prefixThenPresent).size() \u003e 1) {","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"Singa-pirate"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_INDEX_MUST_BE_PRESENT, firstPresentPrefix));","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"            if (argMultimap.containsKey(prefixThenPresent)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"                throw new ParseException(Messages.MESSAGE_INDEX_CANNOT_BE_PRESENT);","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"Singa-pirate"},"content":"     * Verifies that the {@code prefix} as no value specified in the command.","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"Singa-pirate"},"content":"     * Pre-condition: the prefix has one and only one value.","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"Singa-pirate"},"content":"     * @param prefix","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"Singa-pirate"},"content":"     * @throws ParseException when the prefix has a non-empty value.","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"Singa-pirate"},"content":"    public void verifyPrefixHasEmptyValue(Prefix prefix) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"Singa-pirate"},"content":"        assert(argMultimap.get(prefix).size() \u003d\u003d 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"Singa-pirate"},"content":"        if (!getValue(prefix).get().isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"Singa-pirate"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_VALUE_CANNOT_BE_PRESENT, prefix));","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"    private Prefix firstPresentPrefix(Prefix[] prefixes) {","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"        for (Prefix prefix: prefixes) {","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"            if (argMultimap.containsKey(prefix)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"                return prefix;","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"        return null;","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"nknguyenhc":49,"Singa-pirate":33,"-":75}},{"path":"src/main/java/networkbook/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":" *     e.g. {@code some preamble text /tag a /name /tag b /index 1}  where prefixes are {@code /tag /name /index}.\u003cbr\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code /name} in the above example.\u003cbr\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code /tag}","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"        String argsStringWithPadding \u003d argsString + \" \"; // to prevent last word being a prefix","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsStringWithPadding, prefixes);","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"        return extractArguments(argsStringWithPadding, positions);","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003e value \u003cprefix\u003e value ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"     * is valid if there is a whitespace before and after {@code prefix}.","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"     * Returns -1 if no such occurrence can be found.","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"     * E.g if {@code argsString} \u003d \"/tag friend /index1\", {@code prefix} \u003d \"/index\" and","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"     * occurrences of \"/index\" with whitespace before and after it. However, if","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"     * {@code argsString} \u003d \"/tag friend /index 1\", {@code prefix} \u003d \"/index\" and","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"     * {@code fromIndex} \u003d 0, this method returns 12.","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"Singa-pirate"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix + \" \", fromIndex);","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003e value \u003cprefix\u003e value ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"Singa-pirate"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), -1);","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"Singa-pirate"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition()","lastModifiedDate":"2023-10-11"},{"lineNumber":123,"author":{"gitId":"Singa-pirate"},"content":"                                + prefix.getPrefix().length() + 1; // +1  as offset for whitespace","lastModifiedDate":"2023-10-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"nknguyenhc":1,"Singa-pirate":16,"-":133}},{"path":"src/main/java/networkbook/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"/name\");","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"/phone\");","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"/email\");","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    public static final Prefix PREFIX_LINK \u003d new Prefix(\"/link\");","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"    public static final Prefix PREFIX_GRADUATION \u003d new Prefix(\"/grad\");","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    public static final Prefix PREFIX_COURSE \u003d new Prefix(\"/course\");","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"    public static final Prefix PREFIX_SPECIALISATION \u003d new Prefix(\"/spec\");","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"/tag\");","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"    public static final Prefix PREFIX_PRIORITY \u003d new Prefix(\"/priority\");","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"/index\");","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"    public static final Prefix PREFIX_SORT_FIELD \u003d new Prefix(\"/by\");","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"    public static final Prefix PREFIX_SORT_ORDER \u003d new Prefix(\"/order\");","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"    public static final Prefix PREFIX_FILTER_FIELD \u003d new Prefix(\"/with\");","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"    public static final Prefix PREFIX_FILTER_FIN \u003d new Prefix(\"/taken\");","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Eola-Z":2,"nknguyenhc":2,"xenosf":3,"Singa-pirate":5,"-":8,"awhb":3}},{"path":"src/main/java/networkbook/logic/parser/CreateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.CreateCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":" * Parses input arguments and creates a new CreateCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"public class CreateCommandParser implements Parser\u003cCreateCommand\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"     * and returns an CreateCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"    public CreateCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"                        args,","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"                        CliSyntax.PREFIX_NAME,","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"                        CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"                        CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"                        CliSyntax.PREFIX_LINK,","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"xenosf"},"content":"                        CliSyntax.PREFIX_GRADUATION,","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"                        CliSyntax.PREFIX_COURSE,","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"                        CliSyntax.PREFIX_SPECIALISATION,","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_TAG,","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_PRIORITY","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"                );","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"        if (!arePrefixesPresent(","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"                argMultimap,","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"                CliSyntax.PREFIX_NAME","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        ) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"                                                    CreateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"                CliSyntax.PREFIX_NAME,","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"                CliSyntax.PREFIX_GRADUATION,","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"                CliSyntax.PREFIX_PRIORITY","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(CliSyntax.PREFIX_NAME)","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"                    .orElseThrow(() -\u003e new ParseException(String.format(Messages.MESSAGE_INVALID_CONTACT_NAME))));","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"        UniqueList\u003cPhone\u003e phones \u003d ParserUtil.parsePhones(argMultimap.getAllValues(CliSyntax.PREFIX_PHONE));","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cEmail\u003e emails \u003d ParserUtil.parseEmails(argMultimap.getAllValues(CliSyntax.PREFIX_EMAIL));","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cLink\u003e links \u003d ParserUtil.parseLinks(argMultimap.getAllValues(CliSyntax.PREFIX_LINK));","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"xenosf"},"content":"        Graduation graduation \u003d ParserUtil.parseGraduation(","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"                    argMultimap.getValue(CliSyntax.PREFIX_GRADUATION).orElse(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cCourse\u003e courses \u003d ParserUtil.parseCourses(argMultimap.getAllValues(CliSyntax.PREFIX_COURSE));","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"Eola-Z"},"content":"        UniqueList\u003cSpecialisation\u003e specialisations \u003d ParserUtil","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"Eola-Z"},"content":"                .parseSpecialisations(argMultimap.getAllValues(CliSyntax.PREFIX_SPECIALISATION));","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"        Priority priority \u003d ParserUtil.parsePriority(argMultimap.getValue(CliSyntax.PREFIX_PRIORITY).orElse(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"        Person person \u003d new Person(name, phones, emails, links, graduation, courses, specialisations,","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"                    tagList, priority);","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"        return new CreateCommand(person);","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Eola-Z":2,"nknguyenhc":47,"xenosf":5,"Singa-pirate":20,"awhb":12}},{"path":"src/main/java/networkbook/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.Command;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeleteCourseAction;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeleteEmailAction;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeleteFieldAction;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeleteFieldCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeleteGraduationAction;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeleteLinkAction;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeletePersonCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeletePhoneAction;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeletePriorityAction;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeleteSpecialisationAction;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeleteTagAction;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":" * Parses input arguments and creates a new DeleteCommand object.","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"public class DeleteCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_DELETE_NAME \u003d \"Name of a contact cannot be deleted.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"                        args,","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_NAME,","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_LINK,","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_GRADUATION,","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_COURSE,","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_SPECIALISATION,","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_TAG,","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_PRIORITY,","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_INDEX","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"                );","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"            throw new ParseException(MESSAGE_DELETE_NAME);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"        Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"        Prefix prefix \u003d argMultimap.verifyAtMostOneIsPresent(","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"            CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"            CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"            CliSyntax.PREFIX_LINK,","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"            CliSyntax.PREFIX_GRADUATION,","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"            CliSyntax.PREFIX_COURSE,","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"            CliSyntax.PREFIX_SPECIALISATION,","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"            CliSyntax.PREFIX_TAG,","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"            CliSyntax.PREFIX_PRIORITY","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"        );","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"Singa-pirate"},"content":"        if (prefix \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"Singa-pirate"},"content":"            if (argMultimap.getValue(CliSyntax.PREFIX_INDEX).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"                throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Singa-pirate"},"content":"                        String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Singa-pirate"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"        argMultimap.verifyIfPresentThenOnlyOne(new Prefix[] {","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"            CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"            CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"Singa-pirate"},"content":"            CliSyntax.PREFIX_LINK,","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"            CliSyntax.PREFIX_COURSE,","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"            CliSyntax.PREFIX_SPECIALISATION,","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"Singa-pirate"},"content":"            CliSyntax.PREFIX_TAG","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"Singa-pirate"},"content":"        }, CliSyntax.PREFIX_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldAction action \u003d generateAction(argMultimap, prefix);","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"        return new DeleteFieldCommand(index, action);","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"Singa-pirate"},"content":"    private DeleteFieldAction generateAction(ArgumentMultimap argMultimap, Prefix prefix)","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"Singa-pirate"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"Singa-pirate"},"content":"        if (prefix.equals(CliSyntax.PREFIX_PHONE)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"Singa-pirate"},"content":"            return generatePhoneAction(argMultimap);","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"Singa-pirate"},"content":"        } else if (prefix.equals(CliSyntax.PREFIX_EMAIL)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"Singa-pirate"},"content":"            return generateEmailAction(argMultimap);","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"Singa-pirate"},"content":"        } else if (prefix.equals(CliSyntax.PREFIX_LINK)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"Singa-pirate"},"content":"            return generateLinkAction(argMultimap);","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"Singa-pirate"},"content":"        } else if (prefix.equals(CliSyntax.PREFIX_GRADUATION)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"Singa-pirate"},"content":"            return generateGraduationAction(argMultimap);","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"Singa-pirate"},"content":"        } else if (prefix.equals(CliSyntax.PREFIX_COURSE)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"Singa-pirate"},"content":"            return generateCourseAction(argMultimap);","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"Singa-pirate"},"content":"        } else if (prefix.equals(CliSyntax.PREFIX_SPECIALISATION)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"Singa-pirate"},"content":"            return generateSpecialisationAction(argMultimap);","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"Singa-pirate"},"content":"        } else if (prefix.equals(CliSyntax.PREFIX_TAG)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"Singa-pirate"},"content":"            return generateTagAction(argMultimap);","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"Singa-pirate"},"content":"        } else if (prefix.equals(CliSyntax.PREFIX_PRIORITY)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"Singa-pirate"},"content":"            return generatePriorityAction(argMultimap);","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"Singa-pirate"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"Singa-pirate"},"content":"            assert false : \"Prefix passed to generateAction is not supported\";","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"Singa-pirate"},"content":"            return null;","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"Singa-pirate"},"content":"    private DeletePhoneAction generatePhoneAction(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"Singa-pirate"},"content":"        argMultimap.verifyPrefixHasEmptyValue(CliSyntax.PREFIX_PHONE);","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"Singa-pirate"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_INDEX).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"Singa-pirate"},"content":"        return new DeletePhoneAction(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"Singa-pirate"},"content":"    private DeleteEmailAction generateEmailAction(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"Singa-pirate"},"content":"        argMultimap.verifyPrefixHasEmptyValue(CliSyntax.PREFIX_EMAIL);","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Singa-pirate"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_INDEX).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"Singa-pirate"},"content":"        return new DeleteEmailAction(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"Singa-pirate"},"content":"    private DeleteLinkAction generateLinkAction(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"Singa-pirate"},"content":"        argMultimap.verifyPrefixHasEmptyValue(CliSyntax.PREFIX_LINK);","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"Singa-pirate"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_INDEX).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"Singa-pirate"},"content":"        return new DeleteLinkAction(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"Singa-pirate"},"content":"    private DeleteCourseAction generateCourseAction(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"Singa-pirate"},"content":"        argMultimap.verifyPrefixHasEmptyValue(CliSyntax.PREFIX_COURSE);","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"Singa-pirate"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_INDEX).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"Singa-pirate"},"content":"        return new DeleteCourseAction(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"Singa-pirate"},"content":"    private DeleteSpecialisationAction generateSpecialisationAction(ArgumentMultimap argMultimap)","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"Singa-pirate"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"Singa-pirate"},"content":"        argMultimap.verifyPrefixHasEmptyValue(CliSyntax.PREFIX_SPECIALISATION);","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"Singa-pirate"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_INDEX).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"Singa-pirate"},"content":"        return new DeleteSpecialisationAction(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"Singa-pirate"},"content":"    private DeleteTagAction generateTagAction(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"Singa-pirate"},"content":"        argMultimap.verifyPrefixHasEmptyValue(CliSyntax.PREFIX_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"Singa-pirate"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_INDEX).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"Singa-pirate"},"content":"        return new DeleteTagAction(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"Singa-pirate"},"content":"    private DeleteGraduationAction generateGraduationAction(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"Singa-pirate"},"content":"        argMultimap.verifyPrefixHasEmptyValue(CliSyntax.PREFIX_GRADUATION);","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"Singa-pirate"},"content":"        return new DeleteGraduationAction();","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"Singa-pirate"},"content":"    private DeletePriorityAction generatePriorityAction(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"Singa-pirate"},"content":"        argMultimap.verifyPrefixHasEmptyValue(CliSyntax.PREFIX_PRIORITY);","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"Singa-pirate"},"content":"        return new DeletePriorityAction();","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"nknguyenhc":4,"Singa-pirate":145,"-":17}},{"path":"src/main/java/networkbook/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditAction;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditCourseAction;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditEmailAction;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditGraduationAction;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditLinkAction;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditNameAction;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditPhoneAction;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditPriorityAction;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditSpecialisationAction;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditTagAction;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"                        args,","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"                        CliSyntax.PREFIX_NAME,","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"                        CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"                        CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"                        CliSyntax.PREFIX_LINK,","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"                        CliSyntax.PREFIX_GRADUATION,","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"                        CliSyntax.PREFIX_COURSE,","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"                        CliSyntax.PREFIX_SPECIALISATION,","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"                        CliSyntax.PREFIX_TAG,","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"                        CliSyntax.PREFIX_PRIORITY,","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"                        CliSyntax.PREFIX_INDEX","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"                );","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        Index index;","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"                    String.format(","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"                            Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"                            EditCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"                    ),","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"                    pe","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"        Prefix prefix \u003d argMultimap.verifyExactlyOneIsPresent(","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"                CliSyntax.PREFIX_NAME,","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"                CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"                CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"                CliSyntax.PREFIX_LINK,","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"xenosf"},"content":"                CliSyntax.PREFIX_GRADUATION,","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"                CliSyntax.PREFIX_COURSE,","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"                CliSyntax.PREFIX_SPECIALISATION,","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"                CliSyntax.PREFIX_TAG,","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"                CliSyntax.PREFIX_PRIORITY","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"        argMultimap.verifyIfPresentThenOnlyOne(new Prefix[] {","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"            CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"            CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"            CliSyntax.PREFIX_LINK,","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"            CliSyntax.PREFIX_COURSE,","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"            CliSyntax.PREFIX_SPECIALISATION,","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"            CliSyntax.PREFIX_TAG","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"        }, CliSyntax.PREFIX_INDEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"        EditAction action \u003d generateAction(argMultimap, prefix);","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"        return new EditCommand(index, action);","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"    private static EditAction generateAction(ArgumentMultimap argMultimap, Prefix prefix) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"        EditAction result \u003d null;","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"        if (prefix.equals(CliSyntax.PREFIX_NAME)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"            result \u003d generateNameAction(argMultimap);","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"        } else if (prefix.equals(CliSyntax.PREFIX_PHONE)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"            result \u003d generatePhoneAction(argMultimap);","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"        } else if (prefix.equals(CliSyntax.PREFIX_EMAIL)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"            result \u003d generateEmailAction(argMultimap);","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"        } else if (prefix.equals(CliSyntax.PREFIX_LINK)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"            result \u003d generateLinkAction(argMultimap);","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"        } else if (prefix.equals(CliSyntax.PREFIX_GRADUATION)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"            result \u003d generateGraduationAction(argMultimap);","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"        } else if (prefix.equals(CliSyntax.PREFIX_COURSE)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"            result \u003d generateCourseAction(argMultimap);","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"        } else if (prefix.equals(CliSyntax.PREFIX_SPECIALISATION)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"            result \u003d generateSpecialisationAction(argMultimap);","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"        } else if (prefix.equals(CliSyntax.PREFIX_TAG)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"            result \u003d generateTagAction(argMultimap);","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"        } else if (prefix.equals(CliSyntax.PREFIX_PRIORITY)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"            result \u003d generatePriorityAction(argMultimap);","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"        assert result !\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"        return result;","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"    private static EditAction generateNameAction(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"        return new EditNameAction(name);","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"    private static EditAction generatePhoneAction(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(CliSyntax.PREFIX_PHONE).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_INDEX).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"        return new EditPhoneAction(index, phone);","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"    private static EditAction generateEmailAction(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(CliSyntax.PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_INDEX).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"        return new EditEmailAction(index, email);","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"    private static EditAction generateLinkAction(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"        Link link \u003d ParserUtil.parseLink(argMultimap.getValue(CliSyntax.PREFIX_LINK).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_INDEX).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"        return new EditLinkAction(index, link);","lastModifiedDate":"2023-10-22"},{"lineNumber":143,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"    private static EditAction generateGraduationAction(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"        Graduation graduation \u003d ParserUtil.parseGraduation(argMultimap.getValue(CliSyntax.PREFIX_GRADUATION).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"        return new EditGraduationAction(graduation);","lastModifiedDate":"2023-10-22"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"    private static EditAction generateCourseAction(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"        Course course \u003d ParserUtil.parseCourse(argMultimap.getValue(CliSyntax.PREFIX_COURSE).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_INDEX).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"        return new EditCourseAction(index, course);","lastModifiedDate":"2023-10-22"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"    private static EditAction generateSpecialisationAction(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"        Specialisation specialisation \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"                ParserUtil.parseSpecialisation(argMultimap.getValue(CliSyntax.PREFIX_SPECIALISATION).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_INDEX).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"        return new EditSpecialisationAction(index, specialisation);","lastModifiedDate":"2023-10-22"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":162,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"    private static EditAction generateTagAction(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"        Tag tag \u003d ParserUtil.parseTag(argMultimap.getValue(CliSyntax.PREFIX_TAG).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_INDEX).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"        return new EditTagAction(index, tag);","lastModifiedDate":"2023-10-22"},{"lineNumber":167,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"    private static EditAction generatePriorityAction(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"        Priority priority \u003d ParserUtil.parsePriority(argMultimap.getValue(CliSyntax.PREFIX_PRIORITY).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"        return new EditPriorityAction(priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":172,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Eola-Z":4,"nknguyenhc":154,"xenosf":2,"Singa-pirate":5,"awhb":8}},{"path":"src/main/java/networkbook/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"import networkbook.logic.commands.filter.FilterCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.filter.CourseContainsKeyTermsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.filter.CourseIsStillBeingTakenPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":" * Parses input arguments and creates a new FilterCommand object.","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"     * Parses the given string of arguments","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"     * @param args","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"     * @return a FilterCommand object for execution","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"                        args,","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"                        CliSyntax.PREFIX_FILTER_FIELD,","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"                        CliSyntax.PREFIX_FILTER_FIN","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"                );","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"                CliSyntax.PREFIX_FILTER_FIELD,","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"                CliSyntax.PREFIX_FILTER_FIN","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"        );","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"        Optional\u003cString\u003e fieldString \u003d argMultimap.getValue(CliSyntax.PREFIX_FILTER_FIELD);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"        if (fieldString.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Eola-Z"},"content":"                    String.format(","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"                            Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"                            FilterCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"                    )","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"            );","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Eola-Z"},"content":"        String[] predicateTerms \u003d fieldString.get().trim().split(\"\\\\s+\");","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Eola-Z"},"content":"        if (Arrays.stream(predicateTerms).anyMatch(s -\u003e s.equals(\"\"))) {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Eola-Z"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Eola-Z"},"content":"                    String.format(","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Eola-Z"},"content":"                            Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Eola-Z"},"content":"                            FilterCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Eola-Z"},"content":"                    )","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Eola-Z"},"content":"            );","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Eola-Z"},"content":"        Optional\u003cString\u003e booleanToCheck \u003d argMultimap.getValue(CliSyntax.PREFIX_FILTER_FIN);","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Eola-Z"},"content":"        String booleanToCheckString \u003d booleanToCheck.orElse(\"false\").trim().toLowerCase();","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Eola-Z"},"content":"        if (!(booleanToCheckString.equals(\"true\") || booleanToCheckString.equals(\"false\"))) {","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Eola-Z"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Eola-Z"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Eola-Z"},"content":"        return new FilterCommand(","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Eola-Z"},"content":"                new CourseContainsKeyTermsPredicate(List.of(predicateTerms)),","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.now()),","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Eola-Z"},"content":"                Boolean.parseBoolean(booleanToCheck.orElse(\"false\")));","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Eola-Z":73}},{"path":"src/main/java/networkbook/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.FindCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.NameContainsKeyTermsPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"        String[] nameKeyTerms \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"        return new FindCommand(new NameContainsKeyTermsPredicate(Arrays.asList(nameKeyTerms)));","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"nknguyenhc":5,"-":24,"awhb":3}},{"path":"src/main/java/networkbook/logic/parser/NetworkBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.LogsCenter;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.AddCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.Command;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.CreateCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.FindCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.ListCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"import networkbook.logic.commands.SortCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeletePersonCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"import networkbook.logic.commands.filter.FilterCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"public class NetworkBookParser {","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(NetworkBookParser.class);","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"        case CreateCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"            return new CreateCommandParser().parse(arguments);","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"        case DeletePersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"xenosf"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"xenosf"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":87,"author":{"gitId":"Eola-Z"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Eola-Z"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Eola-Z":4,"nknguyenhc":15,"xenosf":4,"Singa-pirate":6,"-":67}},{"path":"src/main/java/networkbook/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.Command;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"nknguyenhc":3,"-":13}},{"path":"src/main/java/networkbook/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.StringUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator.SortField;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator.SortOrder;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"    // TODO: avoid returning null for optional fields","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"    public static final String MESSAGE_PHONE_DUPLICATE \u003d \"Your list of phones contains duplicates.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"            + \"Please ensure that you do not input the same phone more than once.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"    public static final String MESSAGE_EMAIL_DUPLICATE \u003d \"Your list of emails contains duplicates.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"            + \"Please ensure that you do not input the same email more than once.\";","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    public static final String MESSAGE_LINK_DUPLICATE \u003d \"Your list of links contains duplicates.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"            + \"Please ensure that you do not input the same link more than once.\";","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_TAG_DUPLICATE \u003d \"Your list of tags contains duplicates. \\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"            + \"Please ensure that you do not input the same tag more than once.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_SPEC_DUPLICATE \u003d \"Your list of specialisations contains duplicates. \\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"            + \"Please ensure that you do not input the same specialisation more than once.\";","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_COURSE_DUPLICATE \u003d \"Your list of courses contains duplicates. \\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"            + \"Please ensure that you do not input the same course more than once.\";","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"     * Parses a {@code String phone} into an {@code Phone}.","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"awhb"},"content":"        requireNonNull(phone);","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"awhb"},"content":"     * Parses a {@code Collection\u003cString\u003e} of phones into {@code UniqueList\u003cPhone\u003e}.","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"awhb"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"awhb"},"content":"     * @throws ParseException if at least one phone in {@code Collection\u003cString\u003e} is invalid.","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"awhb"},"content":"    public static UniqueList\u003cPhone\u003e parsePhones(Collection\u003cString\u003e phones) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"awhb"},"content":"        requireNonNull(phones);","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"awhb"},"content":"        if (!verifyNoDuplicates(phones)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"awhb"},"content":"            throw new ParseException(MESSAGE_PHONE_DUPLICATE);","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"awhb"},"content":"        UniqueList\u003cPhone\u003e result \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"awhb"},"content":"        for (String phone: phones) {","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"awhb"},"content":"            result.add(parsePhone(phone));","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"awhb"},"content":"        return result;","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"awhb"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"awhb"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"awhb"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"awhb"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"awhb"},"content":"        requireNonNull(email);","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"awhb"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"awhb"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"awhb"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"awhb"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"awhb"},"content":"     * Parses a {@code Collection\u003cString\u003e} of emails into {@code UniqueList\u003cEmail\u003e}.","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"awhb"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"awhb"},"content":"     * @throws ParseException if at least one email in {@code Collection\u003cString\u003e} is invalid.","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"awhb"},"content":"    public static UniqueList\u003cEmail\u003e parseEmails(Collection\u003cString\u003e emails) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"awhb"},"content":"        requireNonNull(emails);","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"awhb"},"content":"        if (!verifyNoDuplicates(emails)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"awhb"},"content":"            throw new ParseException(MESSAGE_EMAIL_DUPLICATE);","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"awhb"},"content":"        UniqueList\u003cEmail\u003e result \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"awhb"},"content":"        for (String email: emails) {","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"awhb"},"content":"            result.add(parseEmail(email));","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"awhb"},"content":"        return result;","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"awhb"},"content":"     * Parses a {@code String link} into an {@code Link}.","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"awhb"},"content":"     * @throws ParseException if the given {@code link} is invalid.","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"awhb"},"content":"    public static Link parseLink(String link) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"awhb"},"content":"        requireNonNull(link);","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"awhb"},"content":"        String trimmedLink \u003d link.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"awhb"},"content":"        if (!Link.isValidLink(trimmedLink)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"awhb"},"content":"            throw new ParseException(Link.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"awhb"},"content":"        return new Link(trimmedLink);","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"     * Parses a {@code Collection\u003cString\u003e} of links into {@code UniqueList\u003cLink\u003e}.","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"     * @throws ParseException if at least one link in {@code Collection\u003cLink\u003e} is invalid.","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"    public static UniqueList\u003cLink\u003e parseLinks(Collection\u003cString\u003e links) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(links);","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"        if (!verifyNoDuplicates(links)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"            throw new ParseException(MESSAGE_LINK_DUPLICATE);","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cLink\u003e result \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"awhb"},"content":"        for (String link: links) {","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"awhb"},"content":"            result.add(parseLink(link));","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"        return result;","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"xenosf"},"content":"     * Parses a {@code String graduation} into a {@code Graduation}.","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"awhb"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"xenosf"},"content":"     * @throws ParseException if the given {@code graduation} is invalid.","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"xenosf"},"content":"    public static Graduation parseGraduation(String graduation) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"xenosf"},"content":"        if (graduation \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"awhb"},"content":"            return null;","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"xenosf"},"content":"        String normalizedGraduation \u003d graduation.trim().toUpperCase();","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"xenosf"},"content":"        if (!Graduation.isValidGraduation(normalizedGraduation)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"xenosf"},"content":"            throw new ParseException(Graduation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":186,"author":{"gitId":"xenosf"},"content":"        return new Graduation(normalizedGraduation);","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":188,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":189,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":190,"author":{"gitId":"nknguyenhc"},"content":"     * Parses {@code String courses} into {@code UniqueList\u003cCourse\u003e}.","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"awhb"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-14"},{"lineNumber":192,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":193,"author":{"gitId":"awhb"},"content":"     * @throws ParseException if the given {@code course} is invalid.","lastModifiedDate":"2023-10-14"},{"lineNumber":194,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":195,"author":{"gitId":"nknguyenhc"},"content":"    public static UniqueList\u003cCourse\u003e parseCourses(Collection\u003cString\u003e courses) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(courses);","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"nknguyenhc"},"content":"        if (!verifyNoDuplicates(courses)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"Eola-Z"},"content":"            throw new ParseException(MESSAGE_COURSE_DUPLICATE);","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cCourse\u003e result \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"nknguyenhc"},"content":"        for (String link : courses) {","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"nknguyenhc"},"content":"            result.add(parseCourse(link));","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"nknguyenhc"},"content":"        return result;","lastModifiedDate":"2023-10-19"},{"lineNumber":205,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":206,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"nknguyenhc"},"content":"     * Parses a {@code course} from {@code String} into a {@code Course}.","lastModifiedDate":"2023-10-19"},{"lineNumber":209,"author":{"gitId":"nknguyenhc"},"content":"     * @throws ParseException When the {@code course} is invalid.","lastModifiedDate":"2023-10-19"},{"lineNumber":210,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"nknguyenhc"},"content":"    public static Course parseCourse(String course) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(course);","lastModifiedDate":"2023-10-19"},{"lineNumber":213,"author":{"gitId":"awhb"},"content":"        String trimmedCourse \u003d course.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":214,"author":{"gitId":"awhb"},"content":"        if (!Course.isValidCourse(trimmedCourse)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":215,"author":{"gitId":"awhb"},"content":"            throw new ParseException(Course.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":216,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":217,"author":{"gitId":"awhb"},"content":"        return new Course(trimmedCourse);","lastModifiedDate":"2023-10-14"},{"lineNumber":218,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":219,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":220,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":221,"author":{"gitId":"awhb"},"content":"     * Parses a {@code String specialisation} into an {@code Specialisation}.","lastModifiedDate":"2023-10-14"},{"lineNumber":222,"author":{"gitId":"awhb"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-14"},{"lineNumber":223,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":224,"author":{"gitId":"awhb"},"content":"     * @throws ParseException if the given {@code specialisation} is invalid.","lastModifiedDate":"2023-10-14"},{"lineNumber":225,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":226,"author":{"gitId":"awhb"},"content":"    public static Specialisation parseSpecialisation(String specialisation) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":227,"author":{"gitId":"awhb"},"content":"        if (specialisation \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"awhb"},"content":"            return null;","lastModifiedDate":"2023-10-17"},{"lineNumber":229,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":230,"author":{"gitId":"awhb"},"content":"        String trimmedSpecialisation \u003d specialisation.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":231,"author":{"gitId":"awhb"},"content":"        if (!Specialisation.isValidSpecialisation(trimmedSpecialisation)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":232,"author":{"gitId":"awhb"},"content":"            throw new ParseException(Specialisation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":233,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":234,"author":{"gitId":"awhb"},"content":"        return new Specialisation(specialisation);","lastModifiedDate":"2023-10-14"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":237,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":238,"author":{"gitId":"Eola-Z"},"content":"     * Parses a {@code Collection\u003cString\u003e} of specialisations into {@code UniqueList\u003cSpecialisation\u003e}.","lastModifiedDate":"2023-10-19"},{"lineNumber":239,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":240,"author":{"gitId":"Eola-Z"},"content":"     * @throws ParseException if at least one specialisation in {@code Collection\u003cString\u003e} is invalid.","lastModifiedDate":"2023-10-19"},{"lineNumber":241,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":242,"author":{"gitId":"Eola-Z"},"content":"    public static UniqueList\u003cSpecialisation\u003e parseSpecialisations(Collection\u003cString\u003e specialisations)","lastModifiedDate":"2023-10-19"},{"lineNumber":243,"author":{"gitId":"Eola-Z"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":244,"author":{"gitId":"Eola-Z"},"content":"        requireNonNull(specialisations);","lastModifiedDate":"2023-10-19"},{"lineNumber":245,"author":{"gitId":"Eola-Z"},"content":"        if (!verifyNoDuplicates(specialisations)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":246,"author":{"gitId":"Eola-Z"},"content":"            throw new ParseException(MESSAGE_SPEC_DUPLICATE);","lastModifiedDate":"2023-10-19"},{"lineNumber":247,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":248,"author":{"gitId":"Eola-Z"},"content":"        UniqueList\u003cSpecialisation\u003e result \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":249,"author":{"gitId":"Eola-Z"},"content":"        for (String spec : specialisations) {","lastModifiedDate":"2023-10-19"},{"lineNumber":250,"author":{"gitId":"Eola-Z"},"content":"            result.add(parseSpecialisation(spec));","lastModifiedDate":"2023-10-19"},{"lineNumber":251,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":252,"author":{"gitId":"Eola-Z"},"content":"        return result;","lastModifiedDate":"2023-10-19"},{"lineNumber":253,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":254,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":255,"author":{"gitId":"nknguyenhc"},"content":"    private static boolean verifyNoDuplicates(Collection\u003cString\u003e strings) {","lastModifiedDate":"2023-10-13"},{"lineNumber":256,"author":{"gitId":"nknguyenhc"},"content":"        Object[] stringArr \u003d strings.toArray();","lastModifiedDate":"2023-10-13"},{"lineNumber":257,"author":{"gitId":"nknguyenhc"},"content":"        for (int i \u003d 0; i \u003c stringArr.length; i++) {","lastModifiedDate":"2023-10-13"},{"lineNumber":258,"author":{"gitId":"nknguyenhc"},"content":"            for (int j \u003d i + 1; j \u003c stringArr.length; j++) {","lastModifiedDate":"2023-10-13"},{"lineNumber":259,"author":{"gitId":"nknguyenhc"},"content":"                if (stringArr[i].equals(stringArr[j])) {","lastModifiedDate":"2023-10-13"},{"lineNumber":260,"author":{"gitId":"nknguyenhc"},"content":"                    return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":261,"author":{"gitId":"nknguyenhc"},"content":"                }","lastModifiedDate":"2023-10-13"},{"lineNumber":262,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":263,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":264,"author":{"gitId":"nknguyenhc"},"content":"        return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":265,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":266,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":283,"author":{"gitId":"Singa-pirate"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code UniqueList\u003cTag\u003e}.","lastModifiedDate":"2023-10-17"},{"lineNumber":284,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":285,"author":{"gitId":"Singa-pirate"},"content":"    public static UniqueList\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":287,"author":{"gitId":"Singa-pirate"},"content":"        if (!verifyNoDuplicates(tags)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":288,"author":{"gitId":"Singa-pirate"},"content":"            throw new ParseException(MESSAGE_TAG_DUPLICATE);","lastModifiedDate":"2023-10-18"},{"lineNumber":289,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":290,"author":{"gitId":"Singa-pirate"},"content":"        final UniqueList\u003cTag\u003e tagSet \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":296,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":297,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":298,"author":{"gitId":"Singa-pirate"},"content":"     * Parses a {@code String priority} into a {@code Priority}.","lastModifiedDate":"2023-10-12"},{"lineNumber":299,"author":{"gitId":"Singa-pirate"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":300,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":301,"author":{"gitId":"Singa-pirate"},"content":"    public static Priority parsePriority(String priority) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":302,"author":{"gitId":"Singa-pirate"},"content":"        if (priority \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":303,"author":{"gitId":"Singa-pirate"},"content":"            return null;","lastModifiedDate":"2023-10-12"},{"lineNumber":304,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":305,"author":{"gitId":"Singa-pirate"},"content":"        String trimmedPriority \u003d priority.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":306,"author":{"gitId":"Singa-pirate"},"content":"        if (!Priority.isValidPriority(Priority.parsePriorityLevel(trimmedPriority))) {","lastModifiedDate":"2023-10-12"},{"lineNumber":307,"author":{"gitId":"Singa-pirate"},"content":"            throw new ParseException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":308,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":309,"author":{"gitId":"Singa-pirate"},"content":"        return new Priority(trimmedPriority);","lastModifiedDate":"2023-10-12"},{"lineNumber":310,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":311,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":312,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":313,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":314,"author":{"gitId":"xenosf"},"content":"     * Parses a {@code String field} into a {@code SortField}.","lastModifiedDate":"2023-10-18"},{"lineNumber":315,"author":{"gitId":"xenosf"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-18"},{"lineNumber":316,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":317,"author":{"gitId":"xenosf"},"content":"    public static SortField parseSortField(String field) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":318,"author":{"gitId":"xenosf"},"content":"        requireNonNull(field);","lastModifiedDate":"2023-10-19"},{"lineNumber":319,"author":{"gitId":"xenosf"},"content":"        String normalizedField \u003d field.trim().toLowerCase();","lastModifiedDate":"2023-10-18"},{"lineNumber":320,"author":{"gitId":"xenosf"},"content":"        SortField sortField \u003d PersonSortComparator.parseSortField(normalizedField);","lastModifiedDate":"2023-10-18"},{"lineNumber":321,"author":{"gitId":"xenosf"},"content":"        if (!PersonSortComparator.isValidSortField(sortField)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":322,"author":{"gitId":"xenosf"},"content":"            throw new ParseException(PersonSortComparator.MESSAGE_CONSTRAINTS_FIELD);","lastModifiedDate":"2023-10-19"},{"lineNumber":323,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":324,"author":{"gitId":"xenosf"},"content":"        return sortField;","lastModifiedDate":"2023-10-18"},{"lineNumber":325,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":326,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":327,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":328,"author":{"gitId":"xenosf"},"content":"     * Parses a {@code String order} into a {@code SortOrder}.","lastModifiedDate":"2023-10-18"},{"lineNumber":329,"author":{"gitId":"xenosf"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-18"},{"lineNumber":330,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":331,"author":{"gitId":"xenosf"},"content":"    public static SortOrder parseSortOrder(String order) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":332,"author":{"gitId":"xenosf"},"content":"        requireNonNull(order);","lastModifiedDate":"2023-10-19"},{"lineNumber":333,"author":{"gitId":"xenosf"},"content":"        String normalizedOrder \u003d order.trim().toLowerCase();","lastModifiedDate":"2023-10-18"},{"lineNumber":334,"author":{"gitId":"xenosf"},"content":"        SortOrder sortOrder \u003d PersonSortComparator.parseSortOrder(normalizedOrder);","lastModifiedDate":"2023-10-18"},{"lineNumber":335,"author":{"gitId":"xenosf"},"content":"        if (!PersonSortComparator.isValidSortOrder(sortOrder)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":336,"author":{"gitId":"xenosf"},"content":"            throw new ParseException(PersonSortComparator.MESSAGE_CONSTRAINTS_ORDER);","lastModifiedDate":"2023-10-19"},{"lineNumber":337,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":338,"author":{"gitId":"xenosf"},"content":"        return sortOrder;","lastModifiedDate":"2023-10-18"},{"lineNumber":339,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Eola-Z":25,"nknguyenhc":56,"xenosf":41,"Singa-pirate":26,"-":84,"awhb":108}},{"path":"src/main/java/networkbook/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":" * E.g. \u0027/tag\u0027 in \u0027create James /tag friend\u0027.","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"nknguyenhc":1,"Singa-pirate":1,"-":40}},{"path":"src/main/java/networkbook/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"import networkbook.logic.commands.SortCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator.SortField;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator.SortOrder;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"     * and returns an SortCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"                        args,","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"                        CliSyntax.PREFIX_SORT_FIELD,","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"                        CliSyntax.PREFIX_SORT_ORDER","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"                );","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"                CliSyntax.PREFIX_SORT_FIELD,","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"                CliSyntax.PREFIX_SORT_ORDER","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"        );","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"        Optional\u003cString\u003e fieldString \u003d argMultimap.getValue(CliSyntax.PREFIX_SORT_FIELD);","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"xenosf"},"content":"        if (fieldString.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"xenosf"},"content":"                String.format(","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"xenosf"},"content":"                        Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"xenosf"},"content":"                        SortCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"                )","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"            );","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"        SortField field \u003d ParserUtil.parseSortField(fieldString.get());","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"        Optional\u003cString\u003e orderString \u003d argMultimap.getValue(CliSyntax.PREFIX_SORT_ORDER);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"        SortOrder order \u003d ParserUtil.parseSortOrder(orderString.orElse(\"asc\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator comparator \u003d new PersonSortComparator(field, order);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"xenosf"},"content":"        return new SortCommand(comparator);","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"xenosf":53}},{"path":"src/main/java/networkbook/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser.exceptions;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"nknguyenhc":2,"-":15}},{"path":"src/main/java/networkbook/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.GuiSettings;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"     * Returns the user prefs\u0027 network book file path.","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"    Path getNetworkBookFilePath();","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"     * Sets the user prefs\u0027 network book file path.","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    void setNetworkBookFilePath(Path networkBookFilePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"     * Replaces network book data with the data in {@code networkBook}.","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"    void setNetworkBook(ReadOnlyNetworkBook networkBook);","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"    /** Returns the NetworkBook */","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"    ReadOnlyNetworkBook getNetworkBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"     * The person must exist in the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"     * {@code person} must not already exist in the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"     * {@code target} must exist in the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"    void setItem(Person target, Person editedPerson);","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"xenosf"},"content":"     * Updates the sort of the filtered person list to sort by the given {@code comparator}.","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"xenosf"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"xenosf"},"content":"    void updateSortedPersonList(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nknguyenhc":17,"xenosf":7,"-":70}},{"path":"src/main/java/networkbook/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.GuiSettings;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.LogsCenter;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":" * Represents the in-memory model of the network book data.","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    private final NetworkBook networkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"    private final SortedList\u003cPerson\u003e filteredSortedPersons;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"     * Initializes a ModelManager with the given networkBook and userPrefs.","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    public ModelManager(ReadOnlyNetworkBook networkBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"        requireAllNonNull(networkBook, userPrefs);","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        logger.fine(\"Initializing with network book: \" + networkBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        this.networkBook \u003d new NetworkBook(networkBook);","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.networkBook.getPersonList());","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"xenosf"},"content":"        filteredSortedPersons \u003d new SortedList\u003c\u003e(filteredPersons, null);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        this(new NetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"    public Path getNetworkBookFilePath() {","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"        return userPrefs.getNetworkBookFilePath();","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"    public void setNetworkBookFilePath(Path networkBookFilePath) {","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(networkBookFilePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"        userPrefs.setNetworkBookFilePath(networkBookFilePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d NetworkBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"    public void setNetworkBook(ReadOnlyNetworkBook networkBook) {","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"        this.networkBook.resetData(networkBook);","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"    public ReadOnlyNetworkBook getNetworkBook() {","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"        return networkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"        return networkBook.hasPerson(person);","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"        networkBook.removePerson(target);","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"        networkBook.addPerson(person);","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"    public void setItem(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"        networkBook.setItem(target, editedPerson);","lastModifiedDate":"2023-10-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"     * {@code versionedNetworkBook}","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"xenosf"},"content":"        return filteredSortedPersons;","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"xenosf"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"xenosf"},"content":"    public void updateSortedPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"xenosf"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"xenosf"},"content":"        filteredSortedPersons.setComparator(comparator);","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"        return networkBook.equals(otherModelManager.networkBook)","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"xenosf"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"xenosf"},"content":"                \u0026\u0026 filteredSortedPersons.equals(otherModelManager.filteredSortedPersons);","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":31,"xenosf":13,"-":115}},{"path":"src/main/java/networkbook/model/NetworkBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":" * Duplicates are not allowed (by .isSame comparison)","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"public class NetworkBook implements ReadOnlyNetworkBook {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    private final UniqueList\u003cPerson\u003e persons;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"    public NetworkBook() {","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"        this.persons \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"     * Creates an NetworkBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public NetworkBook(ReadOnlyNetworkBook toBeCopied) {","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    public void setItems(List\u003cPerson\u003e persons) {","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        this.persons.setItems(persons);","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"     * Resets the existing data of this {@code NetworkBook} with {@code newData}.","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    public void resetData(ReadOnlyNetworkBook newData) {","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"        setItems(newData.getPersonList());","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"     * Adds a person to the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"     * The person must not already exist in the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"     * {@code target} must exist in the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"    public void setItem(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        persons.setItem(target, editedPerson);","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"     * Removes {@code key} from this {@code NetworkBook}.","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"     * {@code key} must exist in the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"        if (!(other instanceof NetworkBook)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"        NetworkBook otherNetworkBook \u003d (NetworkBook) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"        return persons.equals(otherNetworkBook.persons);","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":26,"-":92,"awhb":2}},{"path":"src/main/java/networkbook/model/ReadOnlyNetworkBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" * Unmodifiable view of an network book","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"public interface ReadOnlyNetworkBook {","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":4,"-":13}},{"path":"src/main/java/networkbook/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.GuiSettings;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"    Path getNetworkBookFilePath();","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"nknguyenhc":3,"-":13}},{"path":"src/main/java/networkbook/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.GuiSettings;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"    private Path networkBookFilePath \u003d Paths.get(\"data\" , \"networkbook.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        setNetworkBookFilePath(newUserPrefs.getNetworkBookFilePath());","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"    public Path getNetworkBookFilePath() {","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        return networkBookFilePath;","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"    public void setNetworkBookFilePath(Path networkBookFilePath) {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(networkBookFilePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        this.networkBookFilePath \u003d networkBookFilePath;","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 networkBookFilePath.equals(otherUserPrefs.networkBookFilePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"        return Objects.hash(guiSettings, networkBookFilePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"        sb.append(\"\\nLocal data file location : \" + networkBookFilePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":12,"-":76}},{"path":"src/main/java/networkbook/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" * Represents a Person\u0027s address in the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nknguyenhc":3,"-":61,"awhb":1}},{"path":"src/main/java/networkbook/model/person/Course.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import static networkbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.Identifiable;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":" * Represents a Person\u0027s course of study in the network book.","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCourse(String)}","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"public class Course implements Identifiable\u003cCourse\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"            \"Courses can take any value, but should not be blank.\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"                    + \"Additionally, multiple spaces is not allowed, and the course may not start with spaces\";","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"    public static final String DATE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"            \"Dates must always follow the DD-MM-YYYY format.\";","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"    public static final String DATE_TIMING_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"            \"End date of the course must occur after the start date of the course!\";","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"    private final String course;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"    private final Optional\u003cString\u003e startDate;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"    private final Optional\u003cString\u003e endDate;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"     * Constructs a {@code Course}.","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"     * @param course A valid course description.","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"    public Course(String course) {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"        requireNonNull(course);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"        checkArgument(isValidCourse(course), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"        this.course \u003d course;","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"        startDate \u003d Optional.empty();","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"        endDate \u003d Optional.empty();","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"     * Constructs a {@code Course} with start date","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Eola-Z"},"content":"     * @param course A valid course description.","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"Eola-Z"},"content":"     * @param startDate The date when the contact started taking the course.","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Eola-Z"},"content":"    public Course(String course, String startDate) {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Eola-Z"},"content":"        requireNonNull(course);","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Eola-Z"},"content":"        requireNonNull(startDate);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Eola-Z"},"content":"        checkArgument(isValidCourse(course), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"Eola-Z"},"content":"        checkArgument(isValidDate(startDate), DATE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"Eola-Z"},"content":"        this.course \u003d course;","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"Eola-Z"},"content":"        this.startDate \u003d Optional.of(startDate);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"Eola-Z"},"content":"        this.endDate \u003d Optional.empty();","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"Eola-Z"},"content":"     * Constructs a {@code Course} with start date and end date","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"Eola-Z"},"content":"     * @param course A valid course description.","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"Eola-Z"},"content":"     * @param startDate The date when the contact started taking the course.","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"Eola-Z"},"content":"     * @param endDate The date after startDate when the contact finished the course.","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"Eola-Z"},"content":"    public Course(String course, String startDate, String endDate) {","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"        requireNonNull(course);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"Eola-Z"},"content":"        requireNonNull(startDate);","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"Eola-Z"},"content":"        requireNonNull(endDate);","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"        checkArgument(isValidCourse(course), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"Eola-Z"},"content":"        checkArgument(isValidDate(startDate), DATE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"Eola-Z"},"content":"        checkArgument(isValidDate(endDate), DATE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"Eola-Z"},"content":"        checkArgument(areChronologicalDates(startDate, endDate), DATE_TIMING_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"Eola-Z"},"content":"        this.course \u003d course;","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"Eola-Z"},"content":"        this.startDate \u003d Optional.of(startDate);","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"Eola-Z"},"content":"        this.endDate \u003d Optional.of(endDate);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"    public boolean isSame(Course another) {","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"        return this.course.equals(another.course);","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"        return this.course;","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"Eola-Z"},"content":"     * Returns true if a given string is a valid course.","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"awhb"},"content":"    public static boolean isValidCourse(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"Eola-Z"},"content":"        if (test.startsWith(\" \")) {","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"Eola-Z"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"Eola-Z"},"content":"        for (String word : test.split(\" \")) {","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"Eola-Z"},"content":"            if ((word.equals(\"\"))) {","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"Eola-Z"},"content":"                return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"Eola-Z"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"Eola-Z"},"content":"        return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"Eola-Z"},"content":"     * Returns true if the given string is a valid date.","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"Eola-Z"},"content":"     * A valid date must follow the DD-MM-YYYY format to avoid ambiguity, and actually exist.","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"Eola-Z"},"content":"     * @param date A given string to be tested for date validity and format.","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"Eola-Z"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"Eola-Z"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"Eola-Z"},"content":"            DateTimeFormatter dtf \u003d DateTimeFormatter","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"Eola-Z"},"content":"                    .ofPattern(\"dd-MM-uuuu\")","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"Eola-Z"},"content":"                    .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"Eola-Z"},"content":"            return dtf.format(dtf.parse(date)).equals(date);","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"Eola-Z"},"content":"        } catch (DateTimeParseException | NullPointerException e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"Eola-Z"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"Eola-Z"},"content":"     * Returns true if the second given string corresponds with a date that is later than the first date.","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"Eola-Z"},"content":"     * @param start A string representing an earlier date.","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"Eola-Z"},"content":"     * @param end A string representing a later date.","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"Eola-Z"},"content":"     * @throws IllegalArgumentException if DD-MM-YYYY format is not followed for either date.","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"Eola-Z"},"content":"    public static boolean areChronologicalDates(String start, String end) throws IllegalArgumentException {","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"Eola-Z"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"Eola-Z"},"content":"            DateTimeFormatter dtf \u003d DateTimeFormatter","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"Eola-Z"},"content":"                    .ofPattern(\"dd-MM-uuuu\")","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"Eola-Z"},"content":"                    .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"Eola-Z"},"content":"            LocalDate startDate \u003d LocalDate.parse(start, dtf);","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"Eola-Z"},"content":"            LocalDate endDate \u003d LocalDate.parse(end, dtf);","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"Eola-Z"},"content":"            return endDate.isAfter(startDate);","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"Eola-Z"},"content":"        } catch (DateTimeParseException | NullPointerException e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"Eola-Z"},"content":"            throw new IllegalArgumentException(\"Both dates must follow DD-MM-YYYY format\");","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"awhb"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"Eola-Z"},"content":"        StringBuilder tsb \u003d new StringBuilder(course);","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"Eola-Z"},"content":"        String start \u003d startDateExists() ? \" (Started: \" + startDate.get() + \")\" : \"\";","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"Eola-Z"},"content":"        String end \u003d endDateExists() ? \" (Ended: \" + endDate.get() + \")\" : \"\";","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"Eola-Z"},"content":"        return tsb.append(start).append(end).toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"Eola-Z"},"content":"     * Returns true if two Courses have the same \u0027course\u0027 field","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"Eola-Z"},"content":"     * @param other The object that is being compared to for equality","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"Eola-Z"},"content":"     * @return True if the other object is a Course with the same \u0027course\u0027 field","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"awhb"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"awhb"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"awhb"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"awhb"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"awhb"},"content":"        if (!(other instanceof Course)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"awhb"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"awhb"},"content":"        Course otherCourse \u003d (Course) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"Eola-Z"},"content":"        return course.equals(otherCourse.course);","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"awhb"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"Eola-Z"},"content":"        return course.hashCode();","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"Eola-Z"},"content":"    public String getCourse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"Eola-Z"},"content":"        return course;","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"Eola-Z"},"content":"    public String getStartDate() {","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"Eola-Z"},"content":"        return startDateExists() ? startDate.get() : \"\";","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"Eola-Z"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"Eola-Z"},"content":"        return endDateExists() ? endDate.get() : \"\";","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"Eola-Z"},"content":"    /*","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"Eola-Z"},"content":"     * Checks the existence of start and end dates.","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"Eola-Z"},"content":"    public boolean startDateExists() {","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"Eola-Z"},"content":"        return startDate.isPresent();","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"Eola-Z"},"content":"    public boolean endDateExists() {","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"Eola-Z"},"content":"        return endDate.isPresent();","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":200,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Eola-Z":138,"nknguyenhc":13,"awhb":49}},{"path":"src/main/java/networkbook/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.Identifiable;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" * Represents a Person\u0027s email in the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"public class Email implements Identifiable\u003cEmail\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"    private final String value;","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"    public boolean isSame(Email another) {","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"        return this.value.equals(another.value);","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"        return this.value;","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nknguyenhc":16,"-":75}},{"path":"src/main/java/networkbook/model/person/Graduation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"import static networkbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":" * Represents a Person\u0027s graduation year and semester in the network book.","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGraduation(gradString)}","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"public class Graduation implements Comparable\u003cGraduation\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Graduation dates should be of the format AYxxxx-Sy where:\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"            + \"1. xxxx is the 4-digit representation of the 2 calendar years in the academic year,\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"            + \"    e.g. 2223 for Academic Year 2022/2023. Years must be between 1970-2069 (inclusive).\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"            + \"2. y is either 1 or 2 for Semester 1 and Semester 2 respectively.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"    private static final String AY_REGEX \u003d \"AY([0-9]{2})([0-9]{2})-S([12])\";","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"    private static final int YEAR_PART_HI \u003d 2000;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"    private static final int YEAR_PART_LO \u003d 1900;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"    private static final int YEAR_THRESHOLD \u003d 70;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"     * First calendar year of the academic year, e.g. 2022 for AY2022/2023.","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"    */","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"xenosf"},"content":"    private final int acadYearStart;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"     * Second calendar year of the academic year, e.g. 2023 for AY2022/2023.","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"    */","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"    private final int acadYearEnd;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"xenosf"},"content":"    /** Semester of graduation */","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"    private final Semester semester;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"xenosf"},"content":"     * Constructs a {@code Graduation}.","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"     * @param gradString A valid String representation of a graduation year and semester,","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"     *     e.g. {@code AY2526-S2}.","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"    public Graduation(String gradString) {","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"        requireNonNull(gradString);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"        checkArgument(isValidGraduation(gradString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"        acadYearStart \u003d parseAcadYearStart(gradString);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"xenosf"},"content":"        acadYearEnd \u003d parseAcadYearEnd(gradString);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"xenosf"},"content":"        semester \u003d parseSemester(gradString);","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"     * Matches input gradString using AY_REGEX and returns specific group within match.","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"     * @param gradString string to match","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"     * @param group number of group to match (1-3)","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"xenosf"},"content":"     * @return matched group","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"xenosf"},"content":"    private static String matchGroup(String gradString, int group) {","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"xenosf"},"content":"        if (group \u003c 1 || group \u003e 3) {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"xenosf"},"content":"            return null;","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"xenosf"},"content":"        String normalizedGradString \u003d gradString.trim().toUpperCase();","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"        Pattern pattern \u003d Pattern.compile(AY_REGEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"xenosf"},"content":"        Matcher matcher \u003d pattern.matcher(normalizedGradString);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"xenosf"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"xenosf"},"content":"            return null;","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"xenosf"},"content":"        String match \u003d matcher.group(group);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"xenosf"},"content":"        return match;","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"xenosf"},"content":"     * Parses user input {@code gradString} into an int representing the first calendar year of the academic year.","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"xenosf"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"xenosf"},"content":"     * @param gradString provided in user command","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"xenosf"},"content":"     * @return corresponding first calendar year","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"xenosf"},"content":"    public static int parseAcadYearStart(String gradString) {","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"xenosf"},"content":"        String ayStart \u003d matchGroup(gradString, 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"xenosf"},"content":"        String ayEnd \u003d matchGroup(gradString, 2);","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"xenosf"},"content":"        int ayStartShortInt \u003d Integer.parseInt(ayStart);","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"xenosf"},"content":"        int ayEndShortInt \u003d Integer.parseInt(ayEnd);","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"        int addedPart \u003d (ayStartShortInt \u003c YEAR_THRESHOLD) ? YEAR_PART_HI : YEAR_PART_LO; // 1970 - 2069","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"xenosf"},"content":"        int ayStartFull \u003d ayStartShortInt + addedPart;","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"xenosf"},"content":"        int ayEndFull \u003d ayEndShortInt + addedPart;","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"xenosf"},"content":"        return ayStartFull;","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"xenosf"},"content":"     * Parses user input {@code gradString} into an int representing the second calendar year of the academic year.","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"xenosf"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"xenosf"},"content":"     * @param gradString provided in user command","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"xenosf"},"content":"     * @return corresponding second calendar year","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"xenosf"},"content":"    public static int parseAcadYearEnd(String gradString) {","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"xenosf"},"content":"        String ayStart \u003d matchGroup(gradString, 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"xenosf"},"content":"        String ayEnd \u003d matchGroup(gradString, 2);","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"xenosf"},"content":"        int ayStartShortInt \u003d Integer.parseInt(ayStart);","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"xenosf"},"content":"        int ayEndShortInt \u003d Integer.parseInt(ayEnd);","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Singa-pirate"},"content":"        int addedPart \u003d (ayEndShortInt \u003c\u003d YEAR_THRESHOLD) ? YEAR_PART_HI : YEAR_PART_LO; // 1971 - 2070","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"xenosf"},"content":"        int ayStartFull \u003d ayStartShortInt + addedPart;","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"xenosf"},"content":"        int ayEndFull \u003d ayEndShortInt + addedPart;","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"xenosf"},"content":"        return ayEndFull;","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"xenosf"},"content":"     * Parses user input {@code gradString} into a {@code Semester}.","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"xenosf"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"xenosf"},"content":"     * @param gradString provided in user command","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"xenosf"},"content":"     * @return corresponding semester","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"xenosf"},"content":"    public static Semester parseSemester(String gradString) {","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"xenosf"},"content":"        String match \u003d matchGroup(gradString, 3);","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"xenosf"},"content":"        if (match \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"xenosf"},"content":"            return Semester.INVALID;","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"xenosf"},"content":"        switch (match) {","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"xenosf"},"content":"        case \"1\":","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"xenosf"},"content":"            return Semester.S1;","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"xenosf"},"content":"        case \"2\":","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"xenosf"},"content":"            return Semester.S2;","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"xenosf"},"content":"        default:","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"xenosf"},"content":"            return Semester.INVALID;","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"xenosf"},"content":"     * Returns true if a given string representation of","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"xenosf"},"content":"     * a graduation year and semester is valid.","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"xenosf"},"content":"    public static boolean isValidGraduation(String gradString) {","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"xenosf"},"content":"        String normalizedGradString \u003d gradString.trim().toUpperCase();","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"xenosf"},"content":"        if (normalizedGradString.matches(AY_REGEX)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"xenosf"},"content":"            int year1 \u003d parseAcadYearStart(gradString);","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"xenosf"},"content":"            int year2 \u003d parseAcadYearEnd(gradString);","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"xenosf"},"content":"            Semester sem \u003d parseSemester(gradString);","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"xenosf"},"content":"            return isValidGraduationYear(year1, year2) \u0026\u0026 isValidGraduationSemester(sem);","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"xenosf"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"xenosf"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"xenosf"},"content":"     * Returns true if a pair of calendar years is valid (consecutive).","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"xenosf"},"content":"    public static boolean isValidGraduationYear(int year1, int year2) {","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"xenosf"},"content":"        return year2 - year1 \u003d\u003d 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"xenosf"},"content":"     * Returns true if a given graduation semester is valid.","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"xenosf"},"content":"    public static boolean isValidGraduationSemester(Semester semester) {","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"xenosf"},"content":"        requireNonNull(semester);","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"xenosf"},"content":"        return semester !\u003d Semester.INVALID;","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"xenosf"},"content":"     * Returns human-readable representation of graduation year, e.g. \"AY2022/2023 Semester 1\".","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"xenosf"},"content":"    public String getFullString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"xenosf"},"content":"        assert isValidGraduationSemester(semester);","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"xenosf"},"content":"        StringBuilder s \u003d new StringBuilder(\"AY\");","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"xenosf"},"content":"        s.append(acadYearStart);","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"xenosf"},"content":"        s.append(\"/\");","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"xenosf"},"content":"        s.append(acadYearEnd);","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"xenosf"},"content":"        s.append(\" Semester \");","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"xenosf"},"content":"        s.append(semester.value);","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"xenosf"},"content":"        return s.toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"xenosf"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"xenosf"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"xenosf"},"content":"        assert isValidGraduationSemester(semester);","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"xenosf"},"content":"        StringBuilder s \u003d new StringBuilder(\"AY\");","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"xenosf"},"content":"        s.append(String.format(\"%02d\", acadYearStart % 100)); // Get last 2 digits","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"xenosf"},"content":"        s.append(String.format(\"%02d\", acadYearEnd % 100));","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"xenosf"},"content":"        s.append(\"-S\");","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"xenosf"},"content":"        s.append(semester.value);","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"xenosf"},"content":"        return s.toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"xenosf"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"xenosf"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"xenosf"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"xenosf"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"xenosf"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"xenosf"},"content":"        if (!(obj instanceof Graduation)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"xenosf"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"xenosf"},"content":"        Graduation other \u003d (Graduation) obj;","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"xenosf"},"content":"        if (!Objects.equals(acadYearStart, other.acadYearStart)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"xenosf"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"xenosf"},"content":"        if (!Objects.equals(acadYearEnd, other.acadYearEnd)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"xenosf"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"xenosf"},"content":"        if (!Objects.equals(semester, other.semester)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"xenosf"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"xenosf"},"content":"        return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"xenosf"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"xenosf"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"xenosf"},"content":"        return Objects.hash(acadYearStart, acadYearEnd, semester);","lastModifiedDate":"2023-10-18"},{"lineNumber":213,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"xenosf"},"content":"     * Enumerates the possible graduation semesters of a contact.","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"xenosf"},"content":"    public enum Semester {","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"xenosf"},"content":"        S1(1),","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"xenosf"},"content":"        S2(2),","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"xenosf"},"content":"        INVALID(0);","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"xenosf"},"content":"        public final int value;","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"xenosf"},"content":"        private Semester(int value) {","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"xenosf"},"content":"            this.value \u003d value;","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"xenosf"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"xenosf"},"content":"    public int compareTo(Graduation o) {","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"xenosf"},"content":"        if (acadYearStart \u003c o.acadYearStart) {","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"xenosf"},"content":"            return -1;","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"xenosf"},"content":"        } else if (acadYearStart \u003e o.acadYearStart) {","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"xenosf"},"content":"            return 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"xenosf"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"xenosf"},"content":"            if (semester.value \u003c o.semester.value) {","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"xenosf"},"content":"                return -1;","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"xenosf"},"content":"            } else if (semester.value \u003e o.semester.value) {","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"xenosf"},"content":"                return 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"xenosf"},"content":"            } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"xenosf"},"content":"                return 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"xenosf"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":245,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"xenosf":243,"Singa-pirate":2}},{"path":"src/main/java/networkbook/model/person/Link.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import static networkbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"import networkbook.model.util.Identifiable;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":" * Represents a Person\u0027s web link in the network book.","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLink(String)}","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"public class Link implements Identifiable\u003cLink\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Links should follow the format: domain/path \"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"            + \"1. The domain may start with protocol http:// or https://\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"            + \"2. Except from the protocol, domain should only contain alphanumeric characters and dots\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"            + \"separated by hyphens if needed.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"            + \"3. The domain must contain at least one dot.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"            + \"4. The path, if included, should be a valid URI path.\";","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    // regex adapted from https://regexr.com/3au3g","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    private static final String DOMAIN_NAME_REGEX \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"            \"^(http://|https://)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]\";","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"    // reference: https://stackoverflow.com/questions/4669692","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    //          /valid-characters-for-directory-part-of-a-url-for-short-links","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    private static final String PATH_REGEX \u003d \"(/[a-zA-Z0-9_\\\\-.~!$\u0026\u0027()*+,;\u003d:@]*)*\"; // Valid URI path","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    // regex reused from https://stackoverflow.com/questions/23959352/validate-url-query-string-with-regex","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    private static final String QUERY_REGEX \u003d \"\\\\?([\\\\w-]+(\u003d[\\\\w-]*)?(\u0026[\\\\w-]+(\u003d[\\\\w-]*)?)*)?\";","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    public static final String VALIDATION_REGEX \u003d DOMAIN_NAME_REGEX","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"            + \"(\" + PATH_REGEX + \")?\" + \"(\" + QUERY_REGEX + \")?$\";","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"    private final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"     * Constructs an {@code Link}.","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"     * @param link A valid web link.","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"    public Link(String link) {","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"        requireNonNull(link);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"        checkArgument(isValidLink(link), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"        value \u003d link;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"     * Returns if a given string is a valid link.","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"    public static boolean isValidLink(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"    public boolean isSame(Link another) {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"        return this.value.equals(another.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"        return this.value;","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"        return value;","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"awhb"},"content":"        if (!(other instanceof Link)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"awhb"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"awhb"},"content":"        Link otherLink \u003d (Link) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"awhb"},"content":"        return value.equals(otherLink.value);","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"awhb"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"awhb"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"nknguyenhc":16,"awhb":76}},{"path":"src/main/java/networkbook/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" * Represents a Person\u0027s name in the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"xenosf"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"xenosf"},"content":"    public int compareTo(Name o) {","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"xenosf"},"content":"        return fullName.compareTo(o.fullName);","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nknguyenhc":3,"xenosf":6,"-":63}},{"path":"src/main/java/networkbook/model/person/NameContainsKeyTermsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"import networkbook.commons.util.StringUtil;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the key terms given.","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"public class NameContainsKeyTermsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"    private final List\u003cString\u003e keyTerms;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"    public NameContainsKeyTermsPredicate(List\u003cString\u003e keyTerms) {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"        this.keyTerms \u003d keyTerms;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"        return keyTerms.stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"                .anyMatch(keyTerm -\u003e StringUtil.containsTermIgnoreCase(person.getName().fullName, keyTerm));","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"        if (!(other instanceof NameContainsKeyTermsPredicate)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate otherNameContainsKeyTermsPredicate \u003d (NameContainsKeyTermsPredicate) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"        return keyTerms.equals(otherNameContainsKeyTermsPredicate.keyTerms);","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"        return new ToStringBuilder(this).add(\"key terms\", keyTerms).toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"    public List\u003cString\u003e getKeyTerms() {","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"        return keyTerms;","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Eola-Z":4,"awhb":44}},{"path":"src/main/java/networkbook/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.StringUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"nknguyenhc":3,"-":41}},{"path":"src/main/java/networkbook/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.Identifiable;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":" * Represents a Person in the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"public class Person implements Identifiable\u003cPerson\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    private final UniqueList\u003cPhone\u003e phones;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    private final UniqueList\u003cEmail\u003e emails;","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    private final UniqueList\u003cLink\u003e links;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"    private final Graduation graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"    private final UniqueList\u003cCourse\u003e courses;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"    private final UniqueList\u003cSpecialisation\u003e specialisations;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"    private final UniqueList\u003cTag\u003e tags;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"    private final Priority priority;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"     * Name must be present and not null.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"     * Other fields are nullable.","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    public Person(Name name,","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"                  UniqueList\u003cPhone\u003e phones,","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"                  UniqueList\u003cEmail\u003e emails,","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"                  UniqueList\u003cLink\u003e links,","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"                  Graduation graduation,","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"                  UniqueList\u003cCourse\u003e courses,","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"                  UniqueList\u003cSpecialisation\u003e specialisations,","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"                  UniqueList\u003cTag\u003e tags,","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"                  Priority priority) {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"        this.phones \u003d phones;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        this.emails \u003d emails.copy();","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        this.links \u003d links.copy();","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"        this.graduation \u003d graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"        this.courses \u003d courses.copy();","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"        this.specialisations \u003d specialisations.copy();","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"        this.tags \u003d tags.copy();","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"    public UniqueList\u003cPhone\u003e getPhones() {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"        return phones.copy();","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"    public UniqueList\u003cEmail\u003e getEmails() {","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"        return emails.copy();","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"    public UniqueList\u003cLink\u003e getLinks() {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"        return links.copy();","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"xenosf"},"content":"    public Optional\u003cGraduation\u003e getGraduation() {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"xenosf"},"content":"        return Optional.ofNullable(graduation);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"    public UniqueList\u003cCourse\u003e getCourses() {","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"        return courses.copy();","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"Eola-Z"},"content":"    public UniqueList\u003cSpecialisation\u003e getSpecialisations() {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"Eola-Z"},"content":"        return specialisations.copy();","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"    public UniqueList\u003cTag\u003e getTags() {","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Singa-pirate"},"content":"        return this.tags.copy();","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"    public Optional\u003cPriority\u003e getPriority() {","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"        return Optional.ofNullable(priority);","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"    public boolean isSame(Person otherPerson) {","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"     * Returns string for Json storage.","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"     * However, a person cannot be converted to a simple string for Json storage.","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"     * Hence, this method is unsupported here.","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"        throw new UnsupportedOperationException(\"Person does not have String representation for Json storage\");","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"awhb"},"content":"                \u0026\u0026 Objects.equals(phones, otherPerson.phones)","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"awhb"},"content":"                \u0026\u0026 Objects.equals(emails, otherPerson.emails)","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 Objects.equals(links, otherPerson.links)","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"xenosf"},"content":"                \u0026\u0026 Objects.equals(graduation, otherPerson.graduation)","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 Objects.equals(courses, otherPerson.courses)","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"Eola-Z"},"content":"                \u0026\u0026 Objects.equals(specialisations, otherPerson.specialisations)","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"Singa-pirate"},"content":"                \u0026\u0026 Objects.equals(tags, otherPerson.tags)","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"Singa-pirate"},"content":"                \u0026\u0026 Objects.equals(priority, otherPerson.priority);","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"        return Objects.hash(name, phones, emails, links, graduation, courses, specialisations, tags, priority);","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"Singa-pirate"},"content":"        ToStringBuilder tsb \u003d new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"awhb"},"content":"                .add(\"name\", name);","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"awhb"},"content":"        if (!Objects.equals(phones, new UniqueList\u003cPhone\u003e())) {","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"awhb"},"content":"            tsb.add(\"phones\", phones);","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"awhb"},"content":"        if (!Objects.equals(emails, new UniqueList\u003cEmail\u003e())) {","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"awhb"},"content":"            tsb.add(\"emails\", emails);","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"awhb"},"content":"        if (!Objects.equals(links, new UniqueList\u003cLink\u003e())) {","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"awhb"},"content":"            tsb.add(\"links\", links);","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"xenosf"},"content":"        if (graduation !\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"xenosf"},"content":"            tsb.add(\"graduation\", graduation);","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"        if (courses !\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"            tsb.add(\"courses\", courses);","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"Eola-Z"},"content":"        if (!Objects.equals(specialisations, new UniqueList\u003cSpecialisation\u003e())) {","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"Eola-Z"},"content":"            tsb.add(\"specialisations\", specialisations);","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"Singa-pirate"},"content":"        if (!Objects.equals(tags, new UniqueList\u003cTag\u003e())) {","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"awhb"},"content":"            tsb.add(\"tags\", tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"Singa-pirate"},"content":"        if (priority !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"Singa-pirate"},"content":"            tsb.add(\"priority\", priority);","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"Singa-pirate"},"content":"        return tsb.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Eola-Z":8,"nknguyenhc":38,"xenosf":8,"Singa-pirate":24,"-":66,"awhb":25}},{"path":"src/main/java/networkbook/model/person/PersonSortComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"import static networkbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":" * Provides an ordering for {@code Person} instances based on the values of a specific field.","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"public class PersonSortComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"    /** Comparator that does nothing. */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"    public static final Comparator\u003cPerson\u003e EMPTY_COMPARATOR \u003d (Person o1, Person o2) -\u003e 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"    /** Comparator that puts empty optionals at the end of the list. */","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"    public static final Comparator\u003cOptional\u003c?\u003e\u003e OPTIONAL_COMPARATOR \u003d (Optional\u003c?\u003e o1, Optional\u003c?\u003e o2) -\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"        if (o1.isPresent() \u0026\u0026 o2.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"            return -1;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"        } else if (o1.isEmpty() \u0026\u0026 o2.isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"            return 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"            return 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"    };","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"xenosf"},"content":"    public static final String MESSAGE_CONSTRAINTS_FIELD \u003d \"Field should be one of the following: \"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"            + \"name, grad, course, spec, priority, none.\";","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"    public static final String MESSAGE_CONSTRAINTS_ORDER \u003d \"Order should be one of the following: asc, desc.\";","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d MESSAGE_CONSTRAINTS_FIELD + \"\\n\" + MESSAGE_CONSTRAINTS_ORDER;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"    private final Comparator\u003cPerson\u003e comparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"    private final SortField field;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"xenosf"},"content":"    private final SortOrder order;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"xenosf"},"content":"     * Constructs a PersonSortComparator with the specified field and sort order.","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"    public PersonSortComparator(SortField field, SortOrder order) {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"        requireNonNull(field);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"        requireNonNull(order);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"        checkArgument(isValidSortParams(field, order), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"        this.field \u003d field;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"        this.order \u003d order;","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"        this.comparator \u003d generateComparator(field, order);","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"     * Generates comparator based on specified field and order.","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"     * Person instances without the specified field are always placed at the end of the sort.","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"     * @param field Field to sort by.","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"     * @param order Order to sort by.","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"     * @return Comparator.","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"    public static Comparator\u003cPerson\u003e generateComparator(SortField field, SortOrder order) {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"xenosf"},"content":"        requireNonNull(field);","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"xenosf"},"content":"        requireNonNull(order);","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"xenosf"},"content":"        assert isValidSortField(field);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"xenosf"},"content":"        assert isValidSortOrder(order);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"xenosf"},"content":"        boolean isAsc \u003d order \u003d\u003d SortOrder.ASCENDING;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"xenosf"},"content":"        switch (field) {","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"        case NAME:","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"xenosf"},"content":"            return generateNameComparator(isAsc);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"xenosf"},"content":"        case GRAD:","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"xenosf"},"content":"            return generateGradComparator(isAsc);","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"xenosf"},"content":"        case PRIORITY:","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"xenosf"},"content":"            return generatePriorityComparator(isAsc);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"xenosf"},"content":"        case NONE: // Fallthrough","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"xenosf"},"content":"        default:","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"xenosf"},"content":"            return EMPTY_COMPARATOR;","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"xenosf"},"content":"     * Generates comparator based on name and specified order.","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"xenosf"},"content":"     * @param isAsc True if order is ascending, false otherwise.","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"xenosf"},"content":"     * @return Comparator.","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"xenosf"},"content":"    public static Comparator\u003cPerson\u003e generateNameComparator(boolean isAsc) {","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"xenosf"},"content":"        return (Person o1, Person o2) -\u003e isAsc","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"xenosf"},"content":"                ? o1.getName().compareTo(o2.getName())","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"xenosf"},"content":"                : o2.getName().compareTo(o1.getName());","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"xenosf"},"content":"     * Generates comparator based on graduation date and specified order.","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"xenosf"},"content":"     * @param isAsc True if order is ascending, false otherwise.","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"xenosf"},"content":"     * @return Comparator.","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"xenosf"},"content":"    public static Comparator\u003cPerson\u003e generateGradComparator(boolean isAsc) {","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"xenosf"},"content":"        return (Person o1, Person o2) -\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"xenosf"},"content":"            Optional\u003cGraduation\u003e g1 \u003d o1.getGraduation();","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"xenosf"},"content":"            Optional\u003cGraduation\u003e g2 \u003d o2.getGraduation();","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"xenosf"},"content":"            if (g1.isPresent() \u0026\u0026 g2.isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"xenosf"},"content":"                return isAsc ? g1.get().compareTo(g2.get()) : g2.get().compareTo(g1.get());","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"xenosf"},"content":"            } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"xenosf"},"content":"                return OPTIONAL_COMPARATOR.compare(g1, g2);","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"xenosf"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"xenosf"},"content":"        };","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"xenosf"},"content":"     * Generates comparator based on priority and specified order.","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"xenosf"},"content":"     * @param isAsc True if order is ascending, false otherwise.","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"xenosf"},"content":"     * @return Comparator.","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"xenosf"},"content":"    public static Comparator\u003cPerson\u003e generatePriorityComparator(boolean isAsc) {","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"xenosf"},"content":"        return (Person o1, Person o2) -\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"xenosf"},"content":"            Optional\u003cPriority\u003e p1 \u003d o1.getPriority();","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"xenosf"},"content":"            Optional\u003cPriority\u003e p2 \u003d o2.getPriority();","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"xenosf"},"content":"            if (p1.isPresent() \u0026\u0026 p2.isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"xenosf"},"content":"                return isAsc ? p1.get().compareTo(p2.get()) : p2.get().compareTo(p1.get());","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"xenosf"},"content":"            } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"xenosf"},"content":"                return OPTIONAL_COMPARATOR.compare(p1, p2);","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"xenosf"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"xenosf"},"content":"        };","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"xenosf"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"xenosf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"xenosf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"xenosf"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"xenosf"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"xenosf"},"content":"        if (!(other instanceof PersonSortComparator)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"xenosf"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator otherPersonSortComparator \u003d (PersonSortComparator) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"xenosf"},"content":"        return field.equals(otherPersonSortComparator.field) \u0026\u0026 order.equals(otherPersonSortComparator.order);","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"xenosf"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"xenosf"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"xenosf"},"content":"        return new ToStringBuilder(this).add(\"comparator\", comparator).toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"xenosf"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"xenosf"},"content":"    public int compare(Person o1, Person o2) {","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"xenosf"},"content":"        return comparator.compare(o1, o2);","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"xenosf"},"content":"     * Parses user input {@code field} into a {@code SortField}","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"xenosf"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"xenosf"},"content":"     * @param field provided in user command","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"xenosf"},"content":"     * @return corresponding SortField","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"xenosf"},"content":"    public static SortField parseSortField(String field) {","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"xenosf"},"content":"        requireNonNull(field);","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"xenosf"},"content":"        String normalizedField \u003d field.trim().toLowerCase();","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"xenosf"},"content":"        switch (normalizedField) {","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"xenosf"},"content":"        case \"name\":","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"xenosf"},"content":"            return SortField.NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"xenosf"},"content":"        case \"graduation\": // Fallthrough","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"xenosf"},"content":"        case \"grad\":","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"xenosf"},"content":"            return SortField.GRAD;","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"xenosf"},"content":"        case \"priority\":","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"xenosf"},"content":"            return SortField.PRIORITY;","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"xenosf"},"content":"        case \"none\":","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"xenosf"},"content":"            return SortField.NONE;","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"xenosf"},"content":"        default:","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"xenosf"},"content":"            return SortField.INVALID;","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"xenosf"},"content":"     * Returns true if a given sort field is valid.","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"xenosf"},"content":"    public static boolean isValidSortField(SortField field) {","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"xenosf"},"content":"        requireNonNull(field);","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"xenosf"},"content":"        return field !\u003d SortField.INVALID;","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"xenosf"},"content":"     * Parses user input {@code order} into a {@code SortOrder}","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"xenosf"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"xenosf"},"content":"     * @param order provided in user command","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"xenosf"},"content":"     * @return corresponding SortOrder","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"xenosf"},"content":"    public static SortOrder parseSortOrder(String order) {","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"xenosf"},"content":"        requireNonNull(order);","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"xenosf"},"content":"        String normalizedOrder \u003d order.trim().toLowerCase();","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"xenosf"},"content":"        switch (normalizedOrder) {","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"xenosf"},"content":"        case \"asc\": // Fallthrough","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"xenosf"},"content":"        case \"ascending\":","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"xenosf"},"content":"            return SortOrder.ASCENDING;","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"xenosf"},"content":"        case \"desc\": // Fallthrough","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"xenosf"},"content":"        case \"descending\":","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"xenosf"},"content":"            return SortOrder.DESCENDING;","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"xenosf"},"content":"        default:","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"xenosf"},"content":"            return SortOrder.INVALID;","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"xenosf"},"content":"     * Returns true if a given sort order is valid.","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"xenosf"},"content":"    public static boolean isValidSortOrder(SortOrder order) {","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"xenosf"},"content":"        requireNonNull(order);","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"xenosf"},"content":"        return order !\u003d SortOrder.INVALID;","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":210,"author":{"gitId":"xenosf"},"content":"     * Returns true if the given sort field and order are both valid.","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"xenosf"},"content":"    public static boolean isValidSortParams(SortField field, SortOrder order) {","lastModifiedDate":"2023-10-19"},{"lineNumber":213,"author":{"gitId":"xenosf"},"content":"        return isValidSortField(field) \u0026\u0026 isValidSortOrder(order);","lastModifiedDate":"2023-10-19"},{"lineNumber":214,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":215,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":216,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"xenosf"},"content":"     * Fields to sort by.","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"xenosf"},"content":"    public enum SortField {","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"xenosf"},"content":"        NAME,","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"xenosf"},"content":"        GRAD,","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"xenosf"},"content":"        PRIORITY,","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"xenosf"},"content":"        NONE,","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"xenosf"},"content":"        INVALID","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"xenosf"},"content":"     * Orders to sort by.","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"xenosf"},"content":"    public enum SortOrder {","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"xenosf"},"content":"        ASCENDING,","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"xenosf"},"content":"        DESCENDING,","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"xenosf"},"content":"        INVALID","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"xenosf":235}},{"path":"src/main/java/networkbook/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"import networkbook.model.util.Identifiable;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" * Represents a Person\u0027s phone number in the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"public class Phone implements Identifiable\u003cPhone\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"    public boolean isSame(Phone another) {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"        return this.value.equals(another.value);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"        return this.value;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nknguyenhc":3,"-":58,"awhb":10}},{"path":"src/main/java/networkbook/model/person/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static networkbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":" * Represents a Person\u0027s priority level in the network book.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPriority(PriorityLevel)}","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"public class Priority implements Comparable\u003cPriority\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"            \"Priority is among {high, medium, low}, either the word or the first letter, and is not case-sensitive\";","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"    private final PriorityLevel value;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"     * Constructs a {@code Priority}.","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"     * @param priorityString A valid String representation of a priority level.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"    public Priority(String priorityString) {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"        requireNonNull(priorityString);","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"        PriorityLevel priorityLevel \u003d parsePriorityLevel(priorityString);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"        checkArgument(isValidPriority(priorityLevel), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"        value \u003d priorityLevel;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"     * Parses user input {@code priorityString} into a {@code PriorityLevel}","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"     * @param priorityString provided in user command","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"     * @return corresponding PriorityLevel","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"    public static PriorityLevel parsePriorityLevel(String priorityString) {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"        priorityString \u003d priorityString.toLowerCase();","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"        switch (priorityString) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"        case \"high\":","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"        case \"h\":","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"            return Priority.PriorityLevel.HIGH;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"        case \"medium\":","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"        case \"m\":","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"            return Priority.PriorityLevel.MEDIUM;","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"        case \"low\":","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"        case \"l\":","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"            return Priority.PriorityLevel.LOW;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"        default:","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"            return Priority.PriorityLevel.INVALID;","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"     * Returns true if a given priority level is valid.","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"    public static boolean isValidPriority(PriorityLevel priorityLevel) {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"        requireNonNull(priorityLevel);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"        return priorityLevel !\u003d PriorityLevel.INVALID;","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"        assert isValidPriority(value) : \"Valid priority level should fall within the three categories\";","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"        switch (value) {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"        case HIGH:","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"            return \"High\";","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"        case MEDIUM:","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"            return \"Medium\";","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"        default:","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"            return \"Low\";","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"Singa-pirate"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"Singa-pirate"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"        if (!(other instanceof Priority)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"Singa-pirate"},"content":"        Priority otherPriority \u003d (Priority) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"        return value.equals(otherPriority.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"Singa-pirate"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"Singa-pirate"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"Singa-pirate"},"content":"     * Enumerates the possible priority levels of a contact.","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"Singa-pirate"},"content":"    public enum PriorityLevel {","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"xenosf"},"content":"        HIGH(3),","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"xenosf"},"content":"        MEDIUM(2),","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"xenosf"},"content":"        LOW(1),","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"xenosf"},"content":"        INVALID(0);","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"xenosf"},"content":"        public final int value;","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"xenosf"},"content":"        private PriorityLevel(int value) {","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"xenosf"},"content":"            this.value \u003d value;","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"xenosf"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"xenosf"},"content":"    public int compareTo(Priority o) {","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"xenosf"},"content":"        if (value.value \u003e o.value.value) {","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"xenosf"},"content":"            return 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"xenosf"},"content":"        } else if (value.value \u003c o.value.value) {","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"xenosf"},"content":"            return -1;","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"xenosf"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"xenosf"},"content":"            return 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"xenosf":21,"Singa-pirate":98}},{"path":"src/main/java/networkbook/model/person/Specialisation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import static networkbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.util.Identifiable;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":" * Represents a Person\u0027s specialisation in the network book.","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSpecialisation(String)}","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"public class Specialisation implements Identifiable\u003cSpecialisation\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"            \"Specialisations can take any value, but should not be blank.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"            + \"Additionally, the specialisation cannot have more than 1 space between words.\";","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"    private final String specialisation;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"     * Constructs an {@code Specialisation}.","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"     * @param specialisation A valid specialisation.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"    public Specialisation(String specialisation) {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"        specialisation \u003d specialisation.trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"        requireNonNull(specialisation);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"        checkArgument(isValidSpecialisation(specialisation), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"        this.specialisation \u003d specialisation;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"     * Returns true if a given string is a valid course.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"    public static boolean isValidSpecialisation(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"        // This if statement doesn\u0027t matter in actual execution but will be kept for testing/validation purposes.","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"        // i.e A Specialisation with text \"  Computer Science \" should not be allowed to exist.","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"        if (test.startsWith(\" \")) {","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"        // Ensure there is not more than 1 trailing space between words","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"        for (String word : test.split(\" \")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Eola-Z"},"content":"            if ((word.equals(\"\"))) {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"                return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"        return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Eola-Z"},"content":"        return specialisation;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"        if (!(other instanceof Specialisation)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"        Specialisation otherSpecialisation \u003d (Specialisation) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"Eola-Z"},"content":"        return specialisation.equals(otherSpecialisation.specialisation);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"Eola-Z"},"content":"        return specialisation.hashCode();","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"Eola-Z"},"content":"    public String getSpecialisation() {","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Eola-Z"},"content":"        return specialisation;","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"Eola-Z"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"Eola-Z"},"content":"    public boolean isSame(Specialisation otherSpec) {","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"Eola-Z"},"content":"        return this.equals(otherSpec);","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"Eola-Z"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"Eola-Z"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"Eola-Z"},"content":"        return getSpecialisation();","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Eola-Z":38,"awhb":50}},{"path":"src/main/java/networkbook/model/person/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.Identifiable;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" * Represents a Tag in the network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"public class Tag implements Identifiable\u003cTag\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should only contain alphanumeric characters, \"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"            + \"white space, hyphen or underscore.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9\\\\-_ ]+$+\";","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"    private final String tagName;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"        return this.tagName;","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"    public boolean isSame(Tag toCheck) {","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"        // handle null case","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"        if (toCheck \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"        return this.tagName.equals(toCheck.tagName);","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nknguyenhc":17,"Singa-pirate":7,"-":56}},{"path":"src/main/java/networkbook/model/person/filter/CourseContainsKeyTermsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package networkbook.model.person.filter;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"import networkbook.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"import networkbook.commons.util.StringUtil;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"import networkbook.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":" * Tests that at least one of a Person\u0027s courses contains one of the given key terms.","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"public class CourseContainsKeyTermsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"    private final List\u003cString\u003e keyTerms;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"     * Creates a predicate that returns true for any Person object that has at least one that","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"     * partially matches any of the key terms given.","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"    public CourseContainsKeyTermsPredicate(List\u003cString\u003e keyTerms) {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"        assert keyTerms !\u003d null : \"List should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"        CollectionUtil.requireAllNonNull(keyTerms);","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"        this.keyTerms \u003d keyTerms;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"        assert person !\u003d null : \"Person should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"        return keyTerms.stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"                .anyMatch(keyTerm -\u003e person.getCourses().stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"                        .anyMatch(course -\u003e StringUtil.containsTermIgnoreCase(course.getCourse(), keyTerm)));","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Eola-Z"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"        if (!(other instanceof CourseContainsKeyTermsPredicate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate otherCourseContainsKeyTermsPredicate \u003d (CourseContainsKeyTermsPredicate) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Eola-Z"},"content":"        return keyTerms.equals(otherCourseContainsKeyTermsPredicate.keyTerms);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Eola-Z"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Eola-Z"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Eola-Z"},"content":"        return new ToStringBuilder(this).add(\"key terms\", keyTerms).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Eola-Z"},"content":"    public List\u003cString\u003e getKeyTerms() {","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Eola-Z"},"content":"        return keyTerms;","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Eola-Z"},"content":"     * Gets all courses that match any of the key terms.","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Eola-Z"},"content":"    public List\u003cCourse\u003e getCourses(Person person) {","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Eola-Z"},"content":"        assert person !\u003d null : \"Person should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Eola-Z"},"content":"        return person.getCourses()","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Eola-Z"},"content":"                .stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Eola-Z"},"content":"                .filter(course -\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Eola-Z"},"content":"                        keyTerms.stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Eola-Z"},"content":"                                .anyMatch(keyTerm -\u003e StringUtil.containsTermIgnoreCase(course.getCourse(), keyTerm)))","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Eola-Z"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Eola-Z":73}},{"path":"src/main/java/networkbook/model/person/filter/CourseIsStillBeingTakenPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package networkbook.model.person.filter;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":" * Checks that a course is still being taken by the given date.","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":" *","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":" * Assumption: No start date -\u003e Course is still being taken.","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":" * Otherwise returns true when the given date is between the","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"public class CourseIsStillBeingTakenPredicate implements Predicate\u003cCourse\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"    private final LocalDate dateOfFinish;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"    private final DateTimeFormatter dtf \u003d DateTimeFormatter","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"            .ofPattern(\"dd-MM-uuuu\")","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"     * Creates a predicate that returns true for a course whenever the given date lies in the range","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"     * between the course\u0027s start and end date.","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"    public CourseIsStillBeingTakenPredicate(LocalDate dateOfFinish) {","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"        assert dateOfFinish !\u003d null : \"Date should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"        this.dateOfFinish \u003d dateOfFinish;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"     * Returns true if the first date is after or the same date as the second date.","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"    public static boolean dateEqualOrAfter(LocalDate date1, LocalDate date2) {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"        assert date1 !\u003d null || date2 !\u003d null : \"Dates should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"        return date1.isAfter(date2) || date1.isEqual(date2);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"     * Returns true if the first date is before or the same date as the second date.","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"    public static boolean dateEqualOrBefore(LocalDate date1, LocalDate date2) {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Eola-Z"},"content":"        assert date1 !\u003d null || date2 !\u003d null : \"Dates should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"        return date1.isBefore(date2) || date1.isEqual(date2);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Eola-Z"},"content":"     * Tests given course\u0027s start and end date and returns true if the","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Eola-Z"},"content":"     * specified date of this predicate is between the start and end date.","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Eola-Z"},"content":"     * If there is no start and end date, the function always returns true.","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Eola-Z"},"content":"    public boolean test(Course course) {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Eola-Z"},"content":"        assert course !\u003d null : \"Course should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Eola-Z"},"content":"        if (!course.startDateExists()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Eola-Z"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Eola-Z"},"content":"        if (!course.endDateExists()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Eola-Z"},"content":"            return dateEqualOrAfter(dateOfFinish, LocalDate.parse(course.getStartDate(), dtf));","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Eola-Z"},"content":"        return dateEqualOrAfter(dateOfFinish, LocalDate.parse(course.getStartDate(), dtf))","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Eola-Z"},"content":"                \u0026\u0026 dateEqualOrBefore(dateOfFinish, LocalDate.parse(course.getEndDate(), dtf));","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Eola-Z"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Eola-Z"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Eola-Z"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Eola-Z"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Eola-Z"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Eola-Z"},"content":"        if (!(other instanceof CourseIsStillBeingTakenPredicate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Eola-Z"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate otherPredicate \u003d (CourseIsStillBeingTakenPredicate) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Eola-Z"},"content":"        return dateOfFinish.isEqual(otherPredicate.dateOfFinish);","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Eola-Z":79}},{"path":"src/main/java/networkbook/model/util/Identifiable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.util;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":" * Represents a type of object that has an identity.","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":" * @param \u003cT\u003e The type of object.","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"public interface Identifiable\u003cT\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"     * Checks if another object is the same as this.","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"     * @param toCheck The other object to check.","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    boolean isSame(T toCheck);","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"     * Get the value for Json storage.","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"    String getValue();","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"nknguyenhc":18}},{"path":"src/main/java/networkbook/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.util;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyNetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":" * Contains utility methods for populating {@code NetworkBook} with sample data.","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"            new Person(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"                    new UniqueList\u003cPhone\u003e().setItems(List.of(new Phone(\"87438807\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cEmail\u003e().setItems(List.of(new Email(\"alexyeoh@example.com\"))),","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cLink\u003e().setItems(List.of(new Link(\"www.alexyeoh.net\"))),","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"                    new Graduation(\"AY1617-S1\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cCourse\u003e().setItems(List.of(new Course(\"Information Systems\"))),","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"                    new UniqueList\u003cSpecialisation\u003e()","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"                            .setItems(List.of(","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"                                    new Specialisation(\"Financial Technology\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"                                    new Specialisation(\"Quantitative Finance\"))),","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"                    getTagList(\"friends\"), new Priority(\"low\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"            new Person(new Name(\"Bernice Yu\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"                    new UniqueList\u003cPhone\u003e().setItems(List.of(new Phone(\"99272758\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cEmail\u003e().setItems(List.of(new Email(\"berniceyu@example.com\"))),","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cLink\u003e().setItems(List.of(new Link(\"github.com/bernfish\"))),","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"xenosf"},"content":"                    new Graduation(\"AY2021-S1\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cCourse\u003e().setItems(List.of(new Course(\"Computer Science\"))),","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"                    new UniqueList\u003cSpecialisation\u003e()","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"                            .setItems(List.of(new Specialisation(\"Artificial Intelligence\"))),","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"                    getTagList(\"colleagues\", \"friends\"), new Priority(\"high\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"                    new UniqueList\u003cPhone\u003e().setItems(List.of(new Phone(\"93210283\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cEmail\u003e().setItems(List.of(new Email(\"charlotte@example.com\"))),","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cLink\u003e().setItems(List.of(new Link(\"facebook.com/Charlotte-Oliveiro\"))),","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"                    new Graduation(\"AY9900-S2\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cCourse\u003e().setItems(List.of(new Course(\"Computer Science\"))),","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Eola-Z"},"content":"                    new UniqueList\u003cSpecialisation\u003e()","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Eola-Z"},"content":"                            .setItems(List.of(new Specialisation(\"Computer Security\"))),","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"                    getTagList(\"neighbours\"), new Priority(\"M\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"            new Person(new Name(\"David Li\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"                    new UniqueList\u003cPhone\u003e().setItems(List.of(new Phone(\"91031282\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cEmail\u003e().setItems(List.of(new Email(\"lidavid@example.com\"))),","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cLink\u003e().setItems(List.of(new Link(\"wordpress.com/specialli-mine\"))),","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"                    new Graduation(\"AY2425-S1\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cCourse\u003e().setItems(List.of(new Course(\"Computer Science\"))),","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"Eola-Z"},"content":"                    new UniqueList\u003cSpecialisation\u003e()","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Eola-Z"},"content":"                            .setItems(List.of(new Specialisation(\"Database Systems\"))),","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"                    getTagList(\"family\"), new Priority(\"High\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"            new Person(new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"                    new UniqueList\u003cPhone\u003e().setItems(List.of(new Phone(\"92492021\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cEmail\u003e().setItems(List.of(new Email(\"irfan@example.com\"))),","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cLink\u003e().setItems(List.of(new Link(\"instagram.com/irfanny\"))),","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"xenosf"},"content":"                    new Graduation(\"AY2425-S2\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cCourse\u003e().setItems(List.of(new Course(\"Computer Science\"))),","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"Eola-Z"},"content":"                    new UniqueList\u003cSpecialisation\u003e()","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Eola-Z"},"content":"                            .setItems(List.of(new Specialisation(\"Parallel Computing\"))),","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"                    getTagList(\"classmates\"), new Priority(\"low\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"            new Person(new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"                    new UniqueList\u003cPhone\u003e().setItems(List.of(new Phone(\"92624417\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cEmail\u003e().setItems(List.of(new Email(\"royb@example.com\"))),","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cLink\u003e().setItems(List.of(new Link(\"incognito.com\"))),","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"xenosf"},"content":"                    new Graduation(\"AY2627-S1\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"                    new UniqueList\u003cCourse\u003e().setItems(List.of(new Course(\"Computer Science\"))),","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"Eola-Z"},"content":"                    new UniqueList\u003cSpecialisation\u003e()","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"Eola-Z"},"content":"                            .setItems(List.of(new Specialisation(\"Computer Graphics\"))),","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"                    getTagList(\"colleagues\"), null)","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"    public static ReadOnlyNetworkBook getSampleNetworkBook() {","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"        NetworkBook sampleAb \u003d new NetworkBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"     * Returns a {@code UniqueList} of tags containing the list of strings given.","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":94,"author":{"gitId":"Singa-pirate"},"content":"    public static UniqueList\u003cTag\u003e getTagList(String... strings) {","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cTag\u003e tagList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"Singa-pirate"},"content":"        for (String s : strings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"Singa-pirate"},"content":"            tagList.add(new Tag(s));","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"Singa-pirate"},"content":"        return tagList;","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Eola-Z":14,"nknguyenhc":25,"xenosf":7,"Singa-pirate":19,"-":22,"awhb":15}},{"path":"src/main/java/networkbook/model/util/UniqueList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.util;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":" * Represents a list of items that need to be unique.","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":" * @param \u003cT\u003e The class representing the item.","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"public class UniqueList\u003cT extends Identifiable\u003cT\u003e\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"    private final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether the list contains the element.","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"     * This makes use of {@code T::isSame}.","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"     * @param toCheck The element to check.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        assert toCheck !\u003d null : \"T toCheck should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        return internalList.stream().anyMatch(toCheck::isSame);","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether the list contains the element {@code toCheck} not at the specified {@code index}.","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"     * Meaning that element at the specified {@code index} is ignored.","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    public boolean containsNotAtIndex(T toCheck, int index) {","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        assert toCheck !\u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        assert index \u003c this.size();","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"            if (i !\u003d index \u0026\u0026 internalList.get(i).isSame(toCheck)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"                return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"        return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"     * Adds a new element to the list.","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"     * The element must not already exist in the list.","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"     * @param toAdd The element to add.","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"        assert toAdd !\u003d null : \"T toAdd should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"        assert !contains(toAdd) : \"toAdd should not exist in UniqueList beforehand.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"     * Adds all elements from the specified list to this list.","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"     * If there are items in the specified list that are already in this list, they are simply ignored.","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"    public void addAllFromList(UniqueList\u003cT\u003e listToAddFrom) {","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"        assert listToAddFrom !\u003d null : \"listToAddFrom should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"        listToAddFrom.internalList.forEach(toAdd -\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"            if (!contains(toAdd)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"                internalList.add(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"        });","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"     * Replaces the element {@code target} in the list with {@code edited}.","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"     * @param target The target to replace.","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"Singa-pirate"},"content":"     * @param edited The new value of the element.","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"    public void setItem(T target, T edited) {","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"        requireAllNonNull(target, edited);","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"        assert index !\u003d -1 : \"Target item should be in list.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"        assert target.isSame(edited) || !contains(edited) : \"Edited item is already in the list.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"        internalList.set(index, edited);","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"     * Replaces the element of zero-based {@code index} with the new element.","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"    public void setItem(int index, T edited) {","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"        assert edited !\u003d null : \"edited item should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"        assert index \u003e\u003d 0 : \"index should be non-negative\";","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"        assert index \u003c this.internalList.size() : \"index should not be out of bound\";","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"            assert i \u003d\u003d index || !edited.isSame(internalList.get(i))","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"                    : \"edited item should not already exist in UniqueList\";","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"        this.internalList.set(index, edited);","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"     * Removes the equivalent element from the list.","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"     * The element must exist in the list.","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"     * @param toRemove The element to remove.","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"        assert toRemove !\u003d null : \"T toRemove should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"        boolean isRemoved \u003d internalList.remove(toRemove);","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"        assert isRemoved : \"T toRemove should exists in UniqueList\";","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":116,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"Singa-pirate"},"content":"     * Removes the element at the index in the list.","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"Singa-pirate"},"content":"     * @param index The zero-based index of the element to remove.","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"Singa-pirate"},"content":"    public void removeAtIndex(int index) {","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"Singa-pirate"},"content":"        assert(index \u003c this.internalList.size());","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"Singa-pirate"},"content":"        this.internalList.remove(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"     * Checks if this list is empty.","lastModifiedDate":"2023-10-10"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-10-10"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"        return this.internalList.size() \u003d\u003d 0;","lastModifiedDate":"2023-10-10"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"     * Returns the size of this list.","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"    public int size() {","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"        return this.internalList.size();","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"     * Replaces the contents of this list with {@code items}.","lastModifiedDate":"2023-10-10"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2023-10-10"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"     * @param items Items to replace.","lastModifiedDate":"2023-10-10"},{"lineNumber":143,"author":{"gitId":"nknguyenhc"},"content":"     * @return This list itself.","lastModifiedDate":"2023-10-10"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"    public UniqueList\u003cT\u003e setItems(List\u003cT\u003e items) {","lastModifiedDate":"2023-10-11"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2023-10-10"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"        assert itemsAreUnique(items) : \"All items in the list should be unique.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"        internalList.setAll(items);","lastModifiedDate":"2023-10-10"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"    public UniqueList\u003cT\u003e setItems(UniqueList\u003cT\u003e items) {","lastModifiedDate":"2023-10-11"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"        assert items !\u003d null : \"items should not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"        internalList.setAll(items.internalList);","lastModifiedDate":"2023-10-10"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"    private boolean itemsAreUnique(List\u003cT\u003e items) {","lastModifiedDate":"2023-10-10"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2023-10-10"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2023-10-10"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"                if (items.get(i).isSame(items.get(j))) {","lastModifiedDate":"2023-10-10"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"                    return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"                }","lastModifiedDate":"2023-10-10"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-10-10"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"        return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":167,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-10"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-10"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":172,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"    public Stream\u003cT\u003e stream() {","lastModifiedDate":"2023-10-10"},{"lineNumber":174,"author":{"gitId":"nknguyenhc"},"content":"        return this.internalList.stream();","lastModifiedDate":"2023-10-10"},{"lineNumber":175,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":176,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":177,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":178,"author":{"gitId":"nknguyenhc"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2023-10-10"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-10"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":181,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"nknguyenhc"},"content":"     * Creates a copy of this list.","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"nknguyenhc"},"content":"     * This copy can be used to avoid modifying this list.","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":186,"author":{"gitId":"nknguyenhc"},"content":"    public UniqueList\u003cT\u003e copy() {","lastModifiedDate":"2023-10-15"},{"lineNumber":187,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cT\u003e newUniqueList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"awhb"},"content":"        newUniqueList.addAllFromList(this);","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"nknguyenhc"},"content":"        return newUniqueList;","lastModifiedDate":"2023-10-15"},{"lineNumber":190,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":193,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2023-10-10"},{"lineNumber":194,"author":{"gitId":"nknguyenhc"},"content":"        if (another \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":195,"author":{"gitId":"nknguyenhc"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":196,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":197,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":198,"author":{"gitId":"nknguyenhc"},"content":"        if (!(another instanceof UniqueList\u003c?\u003e)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":199,"author":{"gitId":"nknguyenhc"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":200,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":201,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":202,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003c?\u003e anotherList \u003d (UniqueList\u003c?\u003e) another;","lastModifiedDate":"2023-10-11"},{"lineNumber":203,"author":{"gitId":"nknguyenhc"},"content":"        return internalList.equals(anotherList.internalList);","lastModifiedDate":"2023-10-10"},{"lineNumber":204,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":205,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":206,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":207,"author":{"gitId":"nknguyenhc"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-10"},{"lineNumber":208,"author":{"gitId":"nknguyenhc"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-10"},{"lineNumber":209,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":210,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":211,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":212,"author":{"gitId":"nknguyenhc"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":213,"author":{"gitId":"nknguyenhc"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":214,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":215,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"nknguyenhc":202,"Singa-pirate":10,"awhb":3}},{"path":"src/main/java/networkbook/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"    private final List\u003cJsonAdaptedProperty\u003cPhone\u003e\u003e phones \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    private final List\u003cJsonAdaptedProperty\u003cEmail\u003e\u003e emails \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"    private final List\u003cJsonAdaptedProperty\u003cLink\u003e\u003e links \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"    private final String graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    private final List\u003cJsonAdaptedProperty\u003cCourse\u003e\u003e courses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"    private final List\u003cJsonAdaptedProperty\u003cSpecialisation\u003e\u003e specialisations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    private final List\u003cJsonAdaptedProperty\u003cTag\u003e\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"    private final String priority;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"                             @JsonProperty(\"phones\") List\u003cJsonAdaptedProperty\u003cPhone\u003e\u003e phones,","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"                             @JsonProperty(\"emails\") List\u003cJsonAdaptedProperty\u003cEmail\u003e\u003e emails,","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"                             @JsonProperty(\"links\") List\u003cJsonAdaptedProperty\u003cLink\u003e\u003e links,","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"                             @JsonProperty(\"graduation\") String graduation,","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"                             @JsonProperty(\"courses\") List\u003cJsonAdaptedProperty\u003cCourse\u003e\u003e courses,","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Eola-Z"},"content":"                             @JsonProperty(\"specialisations\") List\u003cJsonAdaptedProperty\u003cSpecialisation\u003e\u003e specialisations,","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedProperty\u003cTag\u003e\u003e tags,","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"                             @JsonProperty(\"priority\") String priority) {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"        if (phones !\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"            this.phones.addAll(phones);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"        if (emails !\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"            this.emails.addAll(emails);","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"        if (links !\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"            this.links.addAll(links);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"xenosf"},"content":"        this.graduation \u003d graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"        if (courses !\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"            this.courses.addAll(courses);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"Eola-Z"},"content":"        if (specialisations !\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"Eola-Z"},"content":"            this.specialisations.addAll(specialisations);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"Singa-pirate"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"awhb"},"content":"        phones.addAll(source.getPhones().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"awhb"},"content":"                .map(JsonAdaptedProperty::new)","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"awhb"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"        emails.addAll(source.getEmails().stream()","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"                .map(JsonAdaptedProperty::new)","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"        links.addAll(source.getLinks().stream()","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"                .map(JsonAdaptedProperty::new)","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"xenosf"},"content":"        graduation \u003d source.getGraduation().map(Graduation::toString).orElse(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"        courses.addAll(source.getCourses().stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"                .map(JsonAdaptedProperty::new)","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"Eola-Z"},"content":"        specialisations.addAll(source.getSpecialisations().stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"Eola-Z"},"content":"                .map(JsonAdaptedProperty::new)","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"Eola-Z"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"                .map(JsonAdaptedProperty::new)","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"Singa-pirate"},"content":"        priority \u003d source.getPriority().map(Priority::toString).orElse(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"awhb"},"content":"        if (!phones.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"awhb"},"content":"                .map(JsonAdaptedProperty::getName)","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"awhb"},"content":"                .allMatch(Phone::isValidPhone)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"awhb"},"content":"        final UniqueList\u003cPhone\u003e modelPhones \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"awhb"},"content":"        phones.forEach(phone -\u003e modelPhones.add(new Phone(phone.getName())));","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"        if (!emails.stream()","lastModifiedDate":"2023-10-10"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"                .map(JsonAdaptedProperty::getName)","lastModifiedDate":"2023-10-10"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"                .allMatch(Email::isValidEmail)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"        final UniqueList\u003cEmail\u003e modelEmails \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"        emails.forEach(email -\u003e modelEmails.add(new Email(email.getName())));","lastModifiedDate":"2023-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"        if (!links.stream()","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"                .map(JsonAdaptedProperty::getName)","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"                .allMatch(Link::isValidLink)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"awhb"},"content":"            throw new IllegalValueException(Link.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"        final UniqueList\u003cLink\u003e modelLinks \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"        links.forEach(link -\u003e modelLinks.add(new Link(link.getName())));","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"xenosf"},"content":"        Graduation modelGraduation \u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"xenosf"},"content":"        if (graduation !\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"xenosf"},"content":"            if (!Graduation.isValidGraduation(graduation)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"xenosf"},"content":"                throw new IllegalValueException(Graduation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"xenosf"},"content":"            modelGraduation \u003d new Graduation(graduation);","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"awhb"},"content":"        Course modelCourse \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"        if (!courses.stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"                .map(JsonAdaptedProperty::getName)","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"                .allMatch(Course::isValidCourse)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"awhb"},"content":"            throw new IllegalValueException(Course.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"        final UniqueList\u003cCourse\u003e modelCourses \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"        courses.forEach(course -\u003e modelCourses.add(new Course(course.getName())));","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"Eola-Z"},"content":"        if (!specialisations.stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"Eola-Z"},"content":"                .map(JsonAdaptedProperty::getName)","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"Eola-Z"},"content":"                .allMatch(Specialisation::isValidSpecialisation)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"awhb"},"content":"            throw new IllegalValueException(Specialisation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"Eola-Z"},"content":"        final UniqueList\u003cSpecialisation\u003e modelSpecs \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"Eola-Z"},"content":"        specialisations.forEach(spec -\u003e modelSpecs.add(new Specialisation(spec.getName())));","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"Singa-pirate"},"content":"        final UniqueList\u003cTag\u003e modelTags \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"Singa-pirate"},"content":"        for (JsonAdaptedProperty\u003cTag\u003e tag : tags) {","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"Singa-pirate"},"content":"            modelTags.add(tag.toModelType(Tag::isValidTagName, Tag.MESSAGE_CONSTRAINTS, Tag::new));","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"Singa-pirate"},"content":"        Priority modelPriority \u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"Singa-pirate"},"content":"        if (priority !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"Singa-pirate"},"content":"            if (!Priority.isValidPriority(Priority.parsePriorityLevel(priority))) {","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"Singa-pirate"},"content":"                throw new IllegalValueException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"Singa-pirate"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"Singa-pirate"},"content":"            modelPriority \u003d new Priority(priority);","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"        return new Person(modelName, modelPhones, modelEmails, modelLinks, modelGraduation, modelCourses,","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"Eola-Z"},"content":"                modelSpecs, modelTags, modelPriority);","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Eola-Z":14,"nknguyenhc":52,"xenosf":10,"Singa-pirate":18,"-":62,"awhb":27}},{"path":"src/main/java/networkbook/storage/JsonAdaptedProperty.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.Identifiable;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"class JsonAdaptedProperty\u003cT extends Identifiable\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"    private final String name;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"     * Constructs a {@code JsonAdaptedProperty} with the given {@code name}.","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    public JsonAdaptedProperty(String name) {","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"     * Converts a given item into this class for Jackson use.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public JsonAdaptedProperty(T source) {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        this.name \u003d source.getValue();","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    @JsonValue","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    public String getName() {","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"        return this.name;","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    public T toModelType(","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"            Predicate\u003cString\u003e predicate, String failMessage, Function\u003cString, T\u003e supplier)","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"            throws IllegalValueException {","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        if (!predicate.test(this.name)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"            throw new IllegalValueException(failMessage);","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        return supplier.apply(this.name);","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"nknguyenhc":43}},{"path":"src/main/java/networkbook/storage/JsonNetworkBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.LogsCenter;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.FileUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.JsonUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyNetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":" * A class to access NetworkBook data stored as a json file on the hard disk.","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"public class JsonNetworkBookStorage implements NetworkBookStorage {","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonNetworkBookStorage.class);","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public JsonNetworkBookStorage(Path filePath) {","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    public Path getNetworkBookFilePath() {","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        return filePath;","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    public Optional\u003cReadOnlyNetworkBook\u003e readNetworkBook() throws DataLoadingException {","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        return readNetworkBook(filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"     * Similar to {@link #readNetworkBook()}.","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    public Optional\u003cReadOnlyNetworkBook\u003e readNetworkBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        Optional\u003cJsonSerializableNetworkBook\u003e jsonNetworkBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"                filePath, JsonSerializableNetworkBook.class);","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        if (!jsonNetworkBook.isPresent()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"            return Optional.of(jsonNetworkBook.get().toModelType());","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"    public void saveNetworkBook(ReadOnlyNetworkBook networkBook) throws IOException {","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"        saveNetworkBook(networkBook, filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"     * Similar to {@link #saveNetworkBook(ReadOnlyNetworkBook)}.","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"    public void saveNetworkBook(ReadOnlyNetworkBook networkBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(networkBook);","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableNetworkBook(networkBook), filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"nknguyenhc":80}},{"path":"src/main/java/networkbook/storage/JsonSerializableNetworkBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyNetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":" * An Immutable NetworkBook that is serializable to JSON format.","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"@JsonRootName(value \u003d \"networkbook\")","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"class JsonSerializableNetworkBook {","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"     * Constructs a {@code JsonSerializableNetworkBook} with the given persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    public JsonSerializableNetworkBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"     * Converts a given {@code ReadOnlyNetworkBook} into this class for Jackson use.","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableNetworkBook}.","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    public JsonSerializableNetworkBook(ReadOnlyNetworkBook source) {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"     * Converts this network book into the model\u0027s {@code NetworkBook} object.","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    public NetworkBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        NetworkBook networkBook \u003d new NetworkBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"            if (networkBook.hasPerson(person)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"            networkBook.addPerson(person);","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"        return networkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nknguyenhc":19,"-":41}},{"path":"src/main/java/networkbook/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.JsonUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"nknguyenhc":5,"-":42}},{"path":"src/main/java/networkbook/storage/NetworkBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyNetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":" * Represents a storage for {@link NetworkBook}.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"public interface NetworkBookStorage {","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    Path getNetworkBookFilePath();","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"     * Returns NetworkBook data as a {@link ReadOnlyNetworkBook}.","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"    Optional\u003cReadOnlyNetworkBook\u003e readNetworkBook() throws DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"     * @see #getNetworkBookFilePath()","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    Optional\u003cReadOnlyNetworkBook\u003e readNetworkBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"     * Saves the given {@link ReadOnlyNetworkBook} to the storage.","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"     * @param networkBook cannot be null.","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    void saveNetworkBook(ReadOnlyNetworkBook networkBook) throws IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"     * @see #saveNetworkBook(ReadOnlyNetworkBook)","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    void saveNetworkBook(ReadOnlyNetworkBook networkBook, Path filePath) throws IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"nknguyenhc":46}},{"path":"src/main/java/networkbook/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyNetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":" * API of the Storage component","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"public interface Storage extends NetworkBookStorage, UserPrefsStorage {","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    Path getNetworkBookFilePath();","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"    Optional\u003cReadOnlyNetworkBook\u003e readNetworkBook() throws DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    void saveNetworkBook(ReadOnlyNetworkBook networkBook) throws IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"nknguyenhc":32}},{"path":"src/main/java/networkbook/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.LogsCenter;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyNetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":" * Manages storage of NetworkBook data in local storage.","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    private NetworkBookStorage networkBookStorage;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"     * Creates a {@code StorageManager} with the given {@code NetworkBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public StorageManager(NetworkBookStorage networkBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        this.networkBookStorage \u003d networkBookStorage;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d NetworkBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"    public Path getNetworkBookFilePath() {","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"        return networkBookStorage.getNetworkBookFilePath();","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"    public Optional\u003cReadOnlyNetworkBook\u003e readNetworkBook() throws DataLoadingException {","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"        return readNetworkBook(networkBookStorage.getNetworkBookFilePath());","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"    public Optional\u003cReadOnlyNetworkBook\u003e readNetworkBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"        return networkBookStorage.readNetworkBook(filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"    public void saveNetworkBook(ReadOnlyNetworkBook networkBook) throws IOException {","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"        saveNetworkBook(networkBook, networkBookStorage.getNetworkBookFilePath());","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"    public void saveNetworkBook(ReadOnlyNetworkBook networkBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"        networkBookStorage.saveNetworkBook(networkBook, filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":22,"-":56}},{"path":"src/main/java/networkbook/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"nknguyenhc":6,"-":30}},{"path":"src/main/java/networkbook/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.ui;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Logic;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.CommandResult;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"nknguyenhc":6,"-":80}},{"path":"src/main/java/networkbook/ui/FieldHyperlink.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"package networkbook.ui;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"import static networkbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"import javafx.scene.control.Hyperlink;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":" * An UI component that displays text with an action performed on click.","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"public class FieldHyperlink extends Hyperlink {","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"     * Creates a {@code FieldHyperlink} with the given label and action.","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"    public FieldHyperlink(String labelText, Runnable action) {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"        requireAllNonNull(labelText, action);","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"        this.setText(labelText);","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"        this.setOnAction(e -\u003e action.run());","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"xenosf":21}},{"path":"src/main/java/networkbook/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.ui;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.LogsCenter;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-t08-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nknguyenhc":2,"xenosf":1,"-":99}},{"path":"src/main/java/networkbook/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.ui;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.GuiSettings;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.LogsCenter;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Logic;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.CommandResult;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getNetworkBookFilePath());","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nknguyenhc":9,"-":187}},{"path":"src/main/java/networkbook/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.ui;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"    private static final String PHONES_HEADER \u003d \"Phone: \";","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"    private static final String EMAILS_HEADER \u003d \"Emails: \";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"    private static final String LINKS_HEADER \u003d \"Links: \";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"    private static final String GRADUATION_HEADER \u003d \"Graduation: \";","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"    private static final String COURSE_HEADER \u003d \"Courses: \";","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"    private static final String SPECIALISATION_HEADER \u003d \"Specialisations: \";","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"    private static final String PRIORITY_HEADER \u003d \"Priority: \";","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"    private static final String EMPTY_FIELD \u003d \"-\";","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(\"PersonCard\");","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"xenosf"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"    private Label phones;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"    private Label linksHeader;","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"    private FlowPane links;","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"    private Label graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"    private Label courses;","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"Eola-Z"},"content":"    private Label specialisations;","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"xenosf"},"content":"    private Label emailsHeader;","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"xenosf"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"    private FlowPane emails;","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"    private Label priority;","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"xenosf"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"xenosf"},"content":"        // Name and ID","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"xenosf"},"content":"        // Phone numbers","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"awhb"},"content":"        phones.setText(PHONES_HEADER + person.getPhones().toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"xenosf"},"content":"        // Email addresses","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"xenosf"},"content":"        emailsHeader.setText(EMAILS_HEADER);","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"xenosf"},"content":"        // TODO: implement actual link opening","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"xenosf"},"content":"        person.getEmails().stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"xenosf"},"content":"                .forEach(email -\u003e emails.getChildren().add(new FieldHyperlink(email.getValue(), () -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"xenosf"},"content":"                    LOGGER.log(Level.INFO, \"Opening email: \" + email.getValue());","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"xenosf"},"content":"                })));","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"xenosf"},"content":"        // Website links","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"xenosf"},"content":"        linksHeader.setText(LINKS_HEADER);","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"xenosf"},"content":"        // TODO: implement actual link opening","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"xenosf"},"content":"        person.getLinks().stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"xenosf"},"content":"                .forEach(link -\u003e links.getChildren().add(new FieldHyperlink(link.getValue(), () -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"xenosf"},"content":"                    LOGGER.log(Level.INFO, \"Opening link: \" + link.getValue());","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"xenosf"},"content":"                })));","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"xenosf"},"content":"        // Graduation","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"xenosf"},"content":"        person.getGraduation().ifPresentOrElse((Graduation g) -\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"xenosf"},"content":"                graduation.setText(GRADUATION_HEADER + g.getFullString()), () -\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"xenosf"},"content":"                graduation.setText(GRADUATION_HEADER + EMPTY_FIELD));","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"xenosf"},"content":"        // Courses","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"        courses.setText(COURSE_HEADER + person.getCourses().toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"xenosf"},"content":"        // Specialisations","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Eola-Z"},"content":"        specialisations.setText(SPECIALISATION_HEADER + person.getSpecialisations().toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"xenosf"},"content":"        // Tags","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":115,"author":{"gitId":"Singa-pirate"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.getValue())));","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"Singa-pirate"},"content":"        person.getPriority().ifPresentOrElse((Priority p) -\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"xenosf"},"content":"                        priority.setText(PRIORITY_HEADER + p), () -\u003e priority.setText(PRIORITY_HEADER + EMPTY_FIELD));","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"awhb"},"content":"    public Label getPhones() {","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"awhb"},"content":"        return phones;","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"xenosf"},"content":"    public Label getGraduation() {","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"xenosf"},"content":"        return graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"awhb"},"content":"    public Label getCourse() {","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"        return courses;","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"Eola-Z"},"content":"    public Label getSpecialisations() {","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"Eola-Z"},"content":"        return specialisations;","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"Singa-pirate"},"content":"    public Label getPriority() {","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"Singa-pirate"},"content":"        return priority; // getter method for testing","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Eola-Z":5,"nknguyenhc":9,"xenosf":51,"Singa-pirate":10,"-":45,"awhb":15}},{"path":"src/main/java/networkbook/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.ui;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.LogsCenter;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nknguyenhc":3,"-":46}},{"path":"src/main/java/networkbook/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.ui;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nknguyenhc":1,"-":27}},{"path":"src/main/java/networkbook/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.ui;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":1,"-":27}},{"path":"src/main/java/networkbook/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.ui;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nknguyenhc":1,"-":12}},{"path":"src/main/java/networkbook/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.ui;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.MainApp;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.LogsCenter;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.StringUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Logic;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nknguyenhc":5,"-":83}},{"path":"src/main/java/networkbook/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.ui;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.MainApp;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nknguyenhc":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":354,"author":{"gitId":"xenosf"},"content":".hyperlink_list {","lastModifiedDate":"2023-10-26"},{"lineNumber":355,"author":{"gitId":"xenosf"},"content":"    -fx-hgap: 5;","lastModifiedDate":"2023-10-26"},{"lineNumber":356,"author":{"gitId":"xenosf"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-26"},{"lineNumber":357,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":358,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":359,"author":{"gitId":"xenosf"},"content":".hyperlink_list .hyperlink {","lastModifiedDate":"2023-10-26"},{"lineNumber":360,"author":{"gitId":"xenosf"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-26"},{"lineNumber":361,"author":{"gitId":"xenosf"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-26"},{"lineNumber":362,"author":{"gitId":"xenosf"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-26"},{"lineNumber":363,"author":{"gitId":"xenosf"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-26"},{"lineNumber":364,"author":{"gitId":"xenosf"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-26"},{"lineNumber":365,"author":{"gitId":"xenosf"},"content":"    -fx-background-color: #6c90a8;","lastModifiedDate":"2023-10-26"},{"lineNumber":366,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":367,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":368,"author":{"gitId":"xenosf"},"content":".hyperlink_list .hyperlink:hover {","lastModifiedDate":"2023-10-26"},{"lineNumber":369,"author":{"gitId":"xenosf"},"content":"    -fx-background-color: #6da5ca;","lastModifiedDate":"2023-10-26"},{"lineNumber":370,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":371,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":372,"author":{"gitId":"xenosf"},"content":".hyperlink_list .hyperlink:visited {","lastModifiedDate":"2023-10-26"},{"lineNumber":373,"author":{"gitId":"xenosf"},"content":"    -fx-background-color: #6c90a8;","lastModifiedDate":"2023-10-26"},{"lineNumber":374,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"xenosf":22,"-":352}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"         title\u003d\"NetworkBook\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"xenosf":1,"-":59}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"                  \u003cFont name\u003d\"System Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"               \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"      \u003cLabel fx:id\u003d\"phones\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phones\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"xenosf"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"xenosf"},"content":"               \u003cLabel fx:id\u003d\"emailsHeader\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$emailsHeader\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"xenosf"},"content":"                  \u003cminWidth\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"                     \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"                  \u003c/minWidth\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"               \u003cFlowPane fx:id\u003d\"emails\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"hyperlink_list\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"xenosf"},"content":"               \u003cLabel fx:id\u003d\"linksHeader\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$linksHeader\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"xenosf"},"content":"                  \u003cminWidth\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"                     \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"                  \u003c/minWidth\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"               \u003cFlowPane fx:id\u003d\"links\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"hyperlink_list\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"      \u003cLabel fx:id\u003d\"graduation\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$graduation\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"      \u003cLabel fx:id\u003d\"courses\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$course\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"      \u003cLabel fx:id\u003d\"specialisations\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$specialisation\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"      \u003cLabel fx:id\u003d\"priority\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$priority\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"xenosf"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"xenosf"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"xenosf"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":2,"xenosf":32,"Singa-pirate":1,"-":30,"awhb":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"         \u003cFont size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"      \u003c/font\u003e\u003c/TextArea\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"xenosf":6,"-":6}},{"path":"src/test/java/networkbook/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"nknguyenhc":1,"-":88}},{"path":"src/test/java/networkbook/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.core;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"nknguyenhc":1,"-":26}},{"path":"src/test/java/networkbook/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.core;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"nknguyenhc":1,"-":15}},{"path":"src/test/java/networkbook/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.core;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":2,"-":133}},{"path":"src/test/java/networkbook/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.core.index;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"nknguyenhc":2,"-":65}},{"path":"src/test/java/networkbook/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.util;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"nknguyenhc":2,"-":34}},{"path":"src/test/java/networkbook/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.util;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrowsAssertionError;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorNotThrown();","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorNotThrown(new Object(), new Object());","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorNotThrown(\"test\");","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorNotThrown(\"\");","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorThrown((Object) null);","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorThrown(null, \"\", new Object());","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorThrown(null, new Object(), new Object());","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorThrown(\"\", null, new Object());","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorThrown(\"\", new Object(), null);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorThrown(new Object(), new Object(), null);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorThrown((Object[]) null);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorNotThrown(containingNull, new Object());","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorThrown(Arrays.asList((Object) null));","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorNotThrown(Collections.emptyList());","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"        assertAssertionErrorNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"    private void assertAssertionErrorThrown(Object... objects) {","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e requireAllNonNull(objects));","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"    private void assertAssertionErrorThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e requireAllNonNull(collection));","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"    private void assertAssertionErrorNotThrown(Object... objects) {","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"    private void assertAssertionErrorNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"nknguyenhc":33,"-":75}},{"path":"src/test/java/networkbook/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.util;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.Config;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"nknguyenhc":4,"-":112}},{"path":"src/test/java/networkbook/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.util;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":3,"-":21}},{"path":"src/test/java/networkbook/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.util;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.SerializableTestClass;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TestUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":3,"-":42}},{"path":"src/test/java/networkbook/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.commons.util;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"                -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"awhb"},"content":"    //---------------- Tests for containsTermIgnoreCase --------------------------------------","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"awhb"},"content":"    /*","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"awhb"},"content":"     * Invalid equivalence partitions for term: null, empty, multiple terms","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"awhb"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"awhb"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"awhb"},"content":"    public void containsTermIgnoreCase_nullTerm_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"awhb"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"awhb"},"content":"                -\u003e StringUtil.containsTermIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"awhb"},"content":"    public void containsTermIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"awhb"},"content":"        assertThrows(IllegalArgumentException.class, \"Term parameter cannot be empty\", ()","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"awhb"},"content":"                -\u003e StringUtil.containsTermIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"awhb"},"content":"    public void containsTermIgnoreCase_multipleTerms_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"awhb"},"content":"        assertThrows(IllegalArgumentException.class, \"Term parameter should be a single term\", ()","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"awhb"},"content":"                -\u003e StringUtil.containsTermIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"awhb"},"content":"    public void containsTermIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"awhb"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsTermIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"awhb"},"content":"    /*","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"awhb"},"content":"     * Valid equivalence partitions for term:","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"awhb"},"content":"     *   - any term","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"awhb"},"content":"     *   - term containing symbols/numbers","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"awhb"},"content":"     *   - term with leading/trailing spaces","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"awhb"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"awhb"},"content":"     *   - empty string","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"awhb"},"content":"     *   - one word","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"awhb"},"content":"     *   - multiple words","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"awhb"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"awhb"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"awhb"},"content":"     *   - matches any word in sentence","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"awhb"},"content":"     *   - matches multiple words","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"awhb"},"content":"     *   - query term matches part of a sentence word","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"awhb"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"awhb"},"content":"     *   - sentence word matches part of the query term","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"awhb"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"awhb"},"content":"    public void containsTermIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"awhb"},"content":"        // Empty sentence","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"awhb"},"content":"        assertFalse(StringUtil.containsTermIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"awhb"},"content":"        assertFalse(StringUtil.containsTermIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"awhb"},"content":"        // Query word bigger than sentence word","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"awhb"},"content":"        assertFalse(StringUtil.containsTermIgnoreCase(\"aaa bbb ccc\", \"bbbb\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"awhb"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"awhb"},"content":"        assertTrue(StringUtil.containsTermIgnoreCase(\"aaa bBb ccc\", \"Aaa\")); // First word (boundary case)","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"awhb"},"content":"        assertTrue(StringUtil.containsTermIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"awhb"},"content":"        assertTrue(StringUtil.containsTermIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"awhb"},"content":"        assertTrue(StringUtil.containsTermIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"awhb"},"content":"        assertTrue(StringUtil.containsTermIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"awhb"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"awhb"},"content":"        assertTrue(StringUtil.containsTermIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"awhb"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"awhb"},"content":"        assertTrue(StringUtil.containsTermIgnoreCase(\"aaa bBb ccc\", \"Aa\")); // First word (boundary case)","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"awhb"},"content":"        assertTrue(StringUtil.containsTermIgnoreCase(\"aaa bBb ccc@1\", \"cc@1\")); // Last word (boundary case)","lastModifiedDate":"2023-10-19"},{"lineNumber":204,"author":{"gitId":"awhb"},"content":"        assertTrue(StringUtil.containsTermIgnoreCase(\"  AAA   bBb   ccc  \", \"aa\")); // Sentence has extra spaces","lastModifiedDate":"2023-10-19"},{"lineNumber":205,"author":{"gitId":"awhb"},"content":"        assertTrue(StringUtil.containsTermIgnoreCase(\"Aab\", \"aa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2023-10-19"},{"lineNumber":206,"author":{"gitId":"awhb"},"content":"        assertTrue(StringUtil.containsTermIgnoreCase(\"aaa bbb ccc\", \"  cc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"nknguyenhc":2,"-":140,"awhb":83}},{"path":"src/test/java/networkbook/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.CommandResult;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.CreateCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.ListCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ModelManager;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyNetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.storage.JsonNetworkBookStorage;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.storage.StorageManager;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.PersonBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        JsonNetworkBookStorage networkBookStorage \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"                new JsonNetworkBookStorage(temporaryFolder.resolve(\"networkBook.json\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"        StorageManager storage \u003d new StorageManager(networkBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"        assertParseException(invalidCommand, Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandException(deleteCommand, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":65,"author":{"gitId":"Eola-Z"},"content":"        assertCommandSuccess(listCommand, String.format(ListCommand.MESSAGE_PERSONS_LISTED_OVERVIEW, 0), model);","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"        Model expectedModel \u003d new ModelManager(model.getNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"        // Inject LogicManager with an NetworkBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"        JsonNetworkBookStorage networkBookStorage \u003d new JsonNetworkBookStorage(prefPath) {","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"            public void saveNetworkBook(ReadOnlyNetworkBook networkBook, Path filePath)","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"        StorageManager storage \u003d new StorageManager(networkBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"        // Triggers the saveNetworkBook method by executing an add command","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"Singa-pirate"},"content":"        String addCommand \u003d CreateCommand.COMMAND_WORD + CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2023-10-11"},{"lineNumber":164,"author":{"gitId":"awhb"},"content":"                + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.LINK_DESC_AMY","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"xenosf"},"content":"                + CommandTestUtil.GRADUATION_DESC_AMY + CommandTestUtil.COURSE_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"awhb"},"content":"                + CommandTestUtil.SPECIALISATION_DESC_AMY + CommandTestUtil.PRIORITY_DESC_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new PersonBuilder(TypicalPersons.AMY).withTags().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Eola-Z":1,"nknguyenhc":29,"xenosf":1,"Singa-pirate":2,"-":137,"awhb":2}},{"path":"src/test/java/networkbook/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.ModelManager;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.AddPersonDescriptorBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.testutil.PersonBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"    private Model model \u003d new ModelManager(TypicalPersons.getTypicalNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_doNothing_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"        AddCommand addCommand \u003d new AddCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"                new AddPersonDescriptorBuilder().build());","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"        Person person \u003d model.getFilteredPersonList()","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d String.format(AddCommand.MESSAGE_ADD_INFO_SUCCESS, Messages.format(person));","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        Model expectedModel \u003d new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        CommandTestUtil.assertCommandSuccess(addCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"    public void execute_callAddPhoneOnFilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList()","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList)","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"                .addPhone(CommandTestUtil.VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"        AddCommand addCommand \u003d new AddCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"                new AddPersonDescriptorBuilder().withPhone(CommandTestUtil.VALID_PHONE_BOB).build());","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"        String expectedMessage \u003d String.format(AddCommand.MESSAGE_ADD_INFO_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"        Model expectedModel \u003d new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"        expectedModel.setItem(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"        CommandTestUtil.assertCommandSuccess(addCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"    public void execute_callAddEmailOnFilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList()","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList)","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"                .addEmail(CommandTestUtil.VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"        AddCommand addCommand \u003d new AddCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"                new AddPersonDescriptorBuilder().withEmail(CommandTestUtil.VALID_EMAIL_BOB).build());","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"awhb"},"content":"        String expectedMessage \u003d String.format(AddCommand.MESSAGE_ADD_INFO_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"        Model expectedModel \u003d new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"        expectedModel.setItem(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"        CommandTestUtil.assertCommandSuccess(addCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"    public void execute_callAddLinkOnFilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"awhb"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"awhb"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList()","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"awhb"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"awhb"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList)","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"awhb"},"content":"                .addLink(CommandTestUtil.VALID_LINK_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"awhb"},"content":"        AddCommand addCommand \u003d new AddCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"                new AddPersonDescriptorBuilder().withLink(CommandTestUtil.VALID_LINK_BOB).build());","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"awhb"},"content":"        String expectedMessage \u003d String.format(AddCommand.MESSAGE_ADD_INFO_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"awhb"},"content":"        Model expectedModel \u003d new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"awhb"},"content":"        expectedModel.setItem(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"awhb"},"content":"        CommandTestUtil.assertCommandSuccess(addCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"xenosf"},"content":"    public void execute_multipleGradsBeingAdded_assertionError() {","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"awhb"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"        AddCommand.AddPersonDescriptor descriptor \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"                new AddPersonDescriptorBuilder().withGraduation(CommandTestUtil.VALID_GRADUATION_AMY).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"awhb"},"content":"        AddCommand addCommand \u003d new AddCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"awhb"},"content":"        String expectedMessage \u003d AddCommand.MESSAGE_MULTIPLE_UNIQUE_FIELD;","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"awhb"},"content":"        CommandTestUtil.assertCommandFailure(addCommand, model, expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"awhb"},"content":"    // TODO: Update the two tests below when multiple","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"awhb"},"content":"    //  courses and specialisations can be added. See addLinkOnFilteredList for inspiration; will be similar.","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_addAnotherCourseToPerson_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList()","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList)","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"                .addCourse(CommandTestUtil.VALID_COURSE_BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"        AddCommand addCommand \u003d new AddCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"                new AddPersonDescriptorBuilder().withCourse(CommandTestUtil.VALID_COURSE_BOB).build());","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d String.format(AddCommand.MESSAGE_ADD_INFO_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"        Model expectedModel \u003d new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"        expectedModel.setItem(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"        CommandTestUtil.assertCommandSuccess(addCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"Eola-Z"},"content":"    public void execute_addAnotherSpecialisationToPerson_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"Eola-Z"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"Eola-Z"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList()","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"Eola-Z"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"Eola-Z"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList)","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"Eola-Z"},"content":"                .addSpecialisation(CommandTestUtil.VALID_SPECIALISATION_BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"Eola-Z"},"content":"        AddCommand addCommand \u003d new AddCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"                new AddPersonDescriptorBuilder().withSpecialisation(CommandTestUtil.VALID_SPECIALISATION_BOB).build());","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"Eola-Z"},"content":"        String expectedMessage \u003d String.format(AddCommand.MESSAGE_ADD_INFO_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"Eola-Z"},"content":"        Model expectedModel \u003d new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"Eola-Z"},"content":"        expectedModel.setItem(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"Eola-Z"},"content":"        CommandTestUtil.assertCommandSuccess(addCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"awhb"},"content":"    public void execute_addPriorityTwiceToPersonWithoutPriority_succeedsOnlyOnce() {","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"Singa-pirate"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"Singa-pirate"},"content":"        AddCommand addCommand \u003d new AddCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"                new AddPersonDescriptorBuilder().withPriority(CommandTestUtil.VALID_PRIORITY_AMY).build());","lastModifiedDate":"2023-10-22"},{"lineNumber":152,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"Singa-pirate"},"content":"        String expectedMessage \u003d AddCommand.MESSAGE_MULTIPLE_UNIQUE_FIELD;","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"Singa-pirate"},"content":"        CommandTestUtil.assertCommandThrowsNothing(addCommand, model); // person would have priority","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"Singa-pirate"},"content":"        CommandTestUtil.assertCommandFailure(addCommand, model, expectedMessage); // add priority to the person again","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"awhb"},"content":"    public void execute_invalidPersonIndexUnfilteredList_commandFailure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"Singa-pirate"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"        AddCommand.AddPersonDescriptor descriptor \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"                new AddPersonDescriptorBuilder().build();","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"Singa-pirate"},"content":"        AddCommand addCommand \u003d new AddCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"Singa-pirate"},"content":"        CommandTestUtil.assertCommandFailure(addCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"Singa-pirate"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"Singa-pirate"},"content":"     * but smaller than size of network book","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"Singa-pirate"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"Singa-pirate"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"Singa-pirate"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"Singa-pirate"},"content":"        // ensures that outOfBoundIndex is still in bounds of network book list","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getNetworkBook().getPersonList().size());","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"Singa-pirate"},"content":"        AddCommand addCommand \u003d new AddCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"nknguyenhc"},"content":"                new AddPersonDescriptorBuilder().build());","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"Singa-pirate"},"content":"        CommandTestUtil.assertCommandFailure(addCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"Singa-pirate"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"Singa-pirate"},"content":"        final AddCommand standardCommand \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":189,"author":{"gitId":"Singa-pirate"},"content":"                new AddCommand(TypicalIndexes.INDEX_FIRST_PERSON, CommandTestUtil.DESC_AMY);","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"Singa-pirate"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"nknguyenhc"},"content":"        AddCommand.AddPersonDescriptor copyDescriptor \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":193,"author":{"gitId":"nknguyenhc"},"content":"                new AddCommand.AddPersonDescriptor(CommandTestUtil.DESC_AMY);","lastModifiedDate":"2023-10-22"},{"lineNumber":194,"author":{"gitId":"Singa-pirate"},"content":"        AddCommand commandWithSameValues \u003d new AddCommand(TypicalIndexes.INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"Singa-pirate"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"Singa-pirate"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"Singa-pirate"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":202,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"Singa-pirate"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":204,"author":{"gitId":"Singa-pirate"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-12"},{"lineNumber":205,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"Singa-pirate"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":207,"author":{"gitId":"Singa-pirate"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2023-10-12"},{"lineNumber":208,"author":{"gitId":"Singa-pirate"},"content":"                new AddCommand(TypicalIndexes.INDEX_SECOND_PERSON, CommandTestUtil.DESC_AMY)));","lastModifiedDate":"2023-10-12"},{"lineNumber":209,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":210,"author":{"gitId":"Singa-pirate"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"Singa-pirate"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2023-10-12"},{"lineNumber":212,"author":{"gitId":"Singa-pirate"},"content":"                new AddCommand(TypicalIndexes.INDEX_FIRST_PERSON, CommandTestUtil.DESC_BOB)));","lastModifiedDate":"2023-10-12"},{"lineNumber":213,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":214,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":215,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":216,"author":{"gitId":"Singa-pirate"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-12"},{"lineNumber":217,"author":{"gitId":"Singa-pirate"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-12"},{"lineNumber":218,"author":{"gitId":"nknguyenhc"},"content":"        AddCommand.AddPersonDescriptor editPersonDescriptor \u003d new AddCommand.AddPersonDescriptor();","lastModifiedDate":"2023-10-22"},{"lineNumber":219,"author":{"gitId":"Singa-pirate"},"content":"        AddCommand addCommand \u003d new AddCommand(index, editPersonDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":220,"author":{"gitId":"nknguyenhc"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", addPersonDescriptor\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":221,"author":{"gitId":"Singa-pirate"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":222,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":223,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":224,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":225,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Eola-Z":15,"nknguyenhc":44,"xenosf":2,"Singa-pirate":100,"awhb":64}},{"path":"src/test/java/networkbook/logic/commands/AddPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.AddPersonDescriptorBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"public class AddPersonDescriptorTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"        AddCommand.AddPersonDescriptor descriptorWithSameValues \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"                new AddCommand.AddPersonDescriptor(CommandTestUtil.DESC_AMY);","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(CommandTestUtil.DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(CommandTestUtil.DESC_AMY.equals(CommandTestUtil.DESC_AMY));","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(CommandTestUtil.DESC_AMY.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(CommandTestUtil.DESC_AMY.equals(5));","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(CommandTestUtil.DESC_AMY.equals(CommandTestUtil.DESC_BOB));","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        AddCommand.AddPersonDescriptor editedAmy \u003d new AddPersonDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        editedAmy \u003d new AddPersonDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"                .withEmail(CommandTestUtil.VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"        // different link -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"        editedAmy \u003d new AddPersonDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"                .withLink(CommandTestUtil.VALID_LINK_BOB)","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"                .build();","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"        assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"        // different graduating year -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"        editedAmy \u003d new AddPersonDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"                .withGraduation(CommandTestUtil.VALID_GRADUATION_BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"                .build();","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"        assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"        // different course -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"        editedAmy \u003d new AddPersonDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"                .withCourse(CommandTestUtil.VALID_COURSE_BOB)","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"                .build();","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"        assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"        // different specialisation -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"        editedAmy \u003d new AddPersonDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"                .withSpecialisation(CommandTestUtil.VALID_SPECIALISATION_BOB)","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"        editedAmy \u003d new AddPersonDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Singa-pirate"},"content":"    public void addTag_addNewTagWhenTagFieldIsNull_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"        AddCommand.AddPersonDescriptor descriptor \u003d new AddPersonDescriptorBuilder().build();","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"        descriptor.addTag(new Tag(CommandTestUtil.VALID_TAG_FRIEND));","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cTag\u003e expectedTagList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"        expectedTagList.add(new Tag(CommandTestUtil.VALID_TAG_FRIEND));","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(expectedTagList, descriptor.getTags().get());","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"        AddCommand.AddPersonDescriptor editPersonDescriptor \u003d new AddCommand.AddPersonDescriptor();","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"        String expected \u003d AddCommand.AddPersonDescriptor.class.getCanonicalName() + \"{phones\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"awhb"},"content":"                + editPersonDescriptor.getPhones().orElse(null) + \", emails\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"                + editPersonDescriptor.getEmails().orElse(null) + \", links\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"xenosf"},"content":"                + editPersonDescriptor.getLinks().orElse(null) + \", graduation\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"                + editPersonDescriptor.getGraduation().orElse(null) + \", courses\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"                + editPersonDescriptor.getCourses().orElse(null) + \", specialisations\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"                + editPersonDescriptor.getSpecialisations().orElse(null) + \", priority\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"                + editPersonDescriptor.getPriority().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"nknguyenhc":71,"xenosf":2,"Singa-pirate":10,"awhb":17}},{"path":"src/test/java/networkbook/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ModelManager;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"public class ClearCommandTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_emptyNetworkBook_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_nonEmptyNetworkBook_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"        Model model \u003d new ModelManager(TypicalPersons.getTypicalNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"        Model expectedModel \u003d new ModelManager(TypicalPersons.getTypicalNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        expectedModel.setNetworkBook(new NetworkBook());","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"nknguyenhc":30}},{"path":"src/test/java/networkbook/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"nknguyenhc":1,"-":62}},{"path":"src/test/java/networkbook/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.CliSyntax;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.AddPersonDescriptorBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"    public static final String VALID_LINK_AMY \u003d \"linkedin.com/in/Amy-beez\";","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"    public static final String VALID_LINK_BOB \u003d \"github.com/bob2000\";","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"    public static final String VALID_GRADUATION_AMY \u003d \"AY9899-S2\";","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"    public static final String VALID_GRADUATION_FULL_AMY \u003d \"AY1998/1999 Semester 2\";","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"xenosf"},"content":"    public static final String VALID_GRADUATION_BOB \u003d \"AY2425-S1\";","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"    public static final String VALID_GRADUATION_FULL_BOB \u003d \"AY2024/2025 Semester 1\";","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"    public static final String VALID_COURSE_AMY \u003d \"Computer Science\";","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"    public static final String VALID_COURSE_BOB \u003d \"Computer Engineering\";","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"    public static final String VALID_SPECIALISATION_AMY \u003d \"Game Development\";","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"    public static final String VALID_SPECIALISATION_BOB \u003d \"Internet of Things\";","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"    public static final String VALID_PRIORITY_AMY \u003d \"High\";","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_NAME + \" \" + VALID_NAME_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_NAME + \" \" + VALID_NAME_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_PHONE + \" \" + VALID_PHONE_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_PHONE + \" \" + VALID_PHONE_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_EMAIL + \" \" + VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_EMAIL + \" \" + VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"    // amend CliSyntax","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"    public static final String LINK_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_LINK + \" \" + VALID_LINK_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"    public static final String LINK_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_LINK + \" \" + VALID_LINK_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"    public static final String GRADUATION_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_GRADUATION + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"            + VALID_GRADUATION_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"    public static final String GRADUATION_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_GRADUATION + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"xenosf"},"content":"            + VALID_GRADUATION_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"    public static final String COURSE_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_COURSE + \" \" + VALID_COURSE_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"    public static final String COURSE_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_COURSE + \" \" + VALID_COURSE_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"    public static final String SPECIALISATION_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_SPECIALISATION + \" \"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"            + VALID_SPECIALISATION_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"    public static final String SPECIALISATION_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_SPECIALISATION + \" \"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"            + VALID_SPECIALISATION_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + CliSyntax.PREFIX_TAG + \" \" + VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + CliSyntax.PREFIX_TAG + \" \" + VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"    public static final String PRIORITY_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_PRIORITY + \" \" + \"High\";","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"    public static final String PRIORITY_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_PRIORITY + \" \" + \"Medium\";","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + CliSyntax.PREFIX_NAME","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"                                                        + \" \" + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"    public static final String VALID_NAME_DESC \u003d \" \" + CliSyntax.PREFIX_NAME + \" \" + \"James\";","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"Singa-pirate"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + CliSyntax.PREFIX_PHONE","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"Singa-pirate"},"content":"                                                        + \" \" + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"    public static final String VALID_PHONE_DESC \u003d \" \" + CliSyntax.PREFIX_PHONE + \" \" + \"123456\";","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + CliSyntax.PREFIX_EMAIL","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"Singa-pirate"},"content":"                                                        + \" \" + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"    public static final String VALID_EMAIL_DESC \u003d \" \" + CliSyntax.PREFIX_EMAIL + \" \" + \"quack@gmail.com\";","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"    public static final String INVALID_LINK_DESC \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"awhb"},"content":"            \" \" + CliSyntax.PREFIX_LINK + \" \"","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"            + \"https://docs.goo_gle.com\";","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"    public static final String VALID_LINK_DESC \u003d \" \" + CliSyntax.PREFIX_LINK + \" \" + \"www.google.com\";","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"xenosf"},"content":"    public static final String INVALID_GRADUATION_DESC \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"xenosf"},"content":"            \" \" + CliSyntax.PREFIX_GRADUATION + \" \" + \"2024/2025\"; // graduation must follow format","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"    public static final String VALID_GRADUATION_DESC \u003d \" \" + CliSyntax.PREFIX_GRADUATION + \" \" + \"AY2425-S1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"awhb"},"content":"    public static final String INVALID_COURSE_DESC \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"awhb"},"content":"            \" \" + CliSyntax.PREFIX_COURSE; // empty string not allowed for course","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"    public static final String VALID_COURSE_DESC \u003d \" \" + CliSyntax.PREFIX_COURSE + \" \" + \"CS2103T\";","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"awhb"},"content":"    public static final String INVALID_SPECIALISATION_DESC \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"awhb"},"content":"            \" \" + CliSyntax.PREFIX_SPECIALISATION; // empty string not allowed for specialisation","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"    public static final String VALID_SPECIALISATION_DESC \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"            \" \" + CliSyntax.PREFIX_SPECIALISATION + \" \" + \"Software Eng\";","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + CliSyntax.PREFIX_TAG","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"Singa-pirate"},"content":"                                                        + \" \" + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"    public static final String VALID_TAG_DESC \u003d \" \" + CliSyntax.PREFIX_TAG + \" \" + \"talk\";","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"Singa-pirate"},"content":"    public static final String INVALID_PRIORITY_DESC \u003d \" \" + CliSyntax.PREFIX_PRIORITY","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"Singa-pirate"},"content":"                                                        + \" \" + \"hi\"; // incorrect priority format","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"    public static final String VALID_PRIORITY_DESC \u003d \" \" + CliSyntax.PREFIX_PRIORITY + \" \" + \"high\";","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"    public static final AddCommand.AddPersonDescriptor DESC_AMY;","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"    public static final AddCommand.AddPersonDescriptor DESC_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"    public static final String VALID_INDEX_DESC \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + \"1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"        DESC_AMY \u003d new AddPersonDescriptorBuilder()","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"awhb"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withLink(VALID_LINK_AMY)","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"xenosf"},"content":"                .withGraduation(VALID_GRADUATION_AMY).withCourse(VALID_COURSE_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"awhb"},"content":"                .withSpecialisation(VALID_SPECIALISATION_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"        DESC_BOB \u003d new AddPersonDescriptorBuilder()","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"awhb"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withLink(VALID_LINK_BOB)","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"xenosf"},"content":"                .withGraduation(VALID_GRADUATION_BOB).withCourse(VALID_COURSE_BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"awhb"},"content":"                .withSpecialisation(VALID_SPECIALISATION_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"Singa-pirate"},"content":"     * Executes the given {@code Command}, confirms that the command does not throw any exception.","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"Singa-pirate"},"content":"    public static void assertCommandThrowsNothing(Command command, Model model) {","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"Singa-pirate"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"Singa-pirate"},"content":"            command.execute(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"Singa-pirate"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"Singa-pirate"},"content":"            fail();","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"     * - the network book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"        NetworkBook expectedNetworkBook \u003d new NetworkBook(actualModel.getNetworkBook());","lastModifiedDate":"2023-10-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedNetworkBook, actualModel.getNetworkBook());","lastModifiedDate":"2023-10-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"     * {@code model}\u0027s network book.","lastModifiedDate":"2023-10-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"nknguyenhc":30,"xenosf":12,"Singa-pirate":33,"-":83,"awhb":25}},{"path":"src/test/java/networkbook/logic/commands/CreateCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ModelManager;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.PersonBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"public class CreateCommandIntegrationTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    private Model model;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"        model \u003d new ModelManager(TypicalPersons.getTypicalNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        Model expectedModel \u003d new ModelManager(model.getNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"        CommandTestUtil.assertCommandSuccess(new CreateCommand(validPerson), model,","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"                String.format(CreateCommand.MESSAGE_SUCCESS, Messages.format(validPerson))","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"                    + String.format(CreateCommand.MESSAGE_SUCCESS_INDEX, expectedModel.getFilteredPersonList().size()),","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"                expectedModel);","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        Person personInList \u003d model.getNetworkBook().getPersonList().get(0);","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"        CommandTestUtil.assertCommandFailure(new CreateCommand(personInList), model,","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"                CreateCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Eola-Z":2,"nknguyenhc":40,"Singa-pirate":4}},{"path":"src/test/java/networkbook/logic/commands/CreateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.GuiSettings;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyNetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.PersonBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"public class CreateCommandTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CreateCommand(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"        CommandResult commandResult \u003d new CreateCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(String.format(CreateCommand.MESSAGE_SUCCESS, Messages.format(validPerson))","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"                        + \"\\nAt index 1\",","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"        CreateCommand createCommand \u003d new CreateCommand(validPerson);","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"                CreateCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e createCommand.execute(modelStub));","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"        CreateCommand addAliceCommand \u003d new CreateCommand(alice);","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"        CreateCommand addBobCommand \u003d new CreateCommand(bob);","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"        CreateCommand addAliceCommandCopy \u003d new CreateCommand(alice);","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"        CreateCommand createCommand \u003d new CreateCommand(TypicalPersons.ALICE);","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"Singa-pirate"},"content":"        String expected \u003d CreateCommand.class.getCanonicalName() + \"{toAdd\u003d\" + TypicalPersons.ALICE + \"}\";","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(expected, createCommand.toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"        public Path getNetworkBookFilePath() {","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"        public void setNetworkBookFilePath(Path networkBookFilePath) {","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"        public void setNetworkBook(ReadOnlyNetworkBook newData) {","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"        public ReadOnlyNetworkBook getNetworkBook() {","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"        public void setItem(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"Eola-Z"},"content":"            // Invoked during the create command test","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"Eola-Z"},"content":"            // Emulate the addition of a new Person into the list","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"Eola-Z"},"content":"            ObservableList\u003cPerson\u003e listToFill \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"Eola-Z"},"content":"            listToFill.add(new PersonBuilder().build());","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"Eola-Z"},"content":"            return listToFill;","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"xenosf"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"xenosf"},"content":"        public void updateSortedPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"xenosf"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"nknguyenhc"},"content":"            return this.person.isSame(person);","lastModifiedDate":"2023-10-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"nknguyenhc"},"content":"            return personsAdded.stream().anyMatch(person::isSame);","lastModifiedDate":"2023-10-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"nknguyenhc"},"content":"        public ReadOnlyNetworkBook getNetworkBook() {","lastModifiedDate":"2023-10-06"},{"lineNumber":213,"author":{"gitId":"nknguyenhc"},"content":"            return new NetworkBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Eola-Z":8,"nknguyenhc":21,"xenosf":6,"Singa-pirate":12,"-":170}},{"path":"src/test/java/networkbook/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ModelManager;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"nknguyenhc":5,"-":15}},{"path":"src/test/java/networkbook/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"import networkbook.logic.commands.filter.FilterCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.filter.CourseContainsKeyTermsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.filter.CourseIsStillBeingTakenPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"import networkbook.testutil.PersonBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"public class FilterCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"    private Person personWithDatedCourse \u003d new PersonBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"            .withName(\"A\")","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"            .addCourse(\"First\", \"01-01-2000\", \"03-01-2000\")","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"            .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"    private Person personWithUndatedCourse1 \u003d new PersonBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"            .withName(\"B\")","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"            .addCourse(\"First\")","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"            .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"    private Person personWithUndatedCourse2 \u003d new PersonBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"            .withName(\"C\")","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"            .addCourse(\"Second\")","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"            .addCourse(\"Third\")","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"            .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"    private Person personWithoutCourses \u003d new PersonBuilder().withName(\"D\").build();","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate firstTakenPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 1));","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate secondTakenPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 2));","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate firstKeyTermsPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"                new CourseContainsKeyTermsPredicate(List.of(\"first\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate secondKeyTermsPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Eola-Z"},"content":"                new CourseContainsKeyTermsPredicate(List.of(\"second\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Eola-Z"},"content":"        FilterCommand firstCommand \u003d new FilterCommand(firstKeyTermsPredicate, firstTakenPredicate, true);","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Eola-Z"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(firstCommand, firstCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Eola-Z"},"content":"        // same values -\u003e return true","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(firstCommand,","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Eola-Z"},"content":"                new FilterCommand(firstKeyTermsPredicate, firstTakenPredicate, true));","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Eola-Z"},"content":"        // at least one value doesn\u0027t match -\u003e return false","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(firstCommand,","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Eola-Z"},"content":"                new FilterCommand(secondKeyTermsPredicate, firstTakenPredicate, true));","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(firstCommand,","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Eola-Z"},"content":"                new FilterCommand(firstKeyTermsPredicate, secondTakenPredicate, true));","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(firstCommand,","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Eola-Z"},"content":"                new FilterCommand(firstKeyTermsPredicate, firstTakenPredicate, false));","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Eola-Z"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(firstCommand, null);","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Eola-Z"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(firstCommand, 5);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Eola-Z"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate takenPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 1));","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate keyTermsPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Eola-Z"},"content":"                new CourseContainsKeyTermsPredicate(List.of(\"first\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Eola-Z"},"content":"        String expected \u003d FilterCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Eola-Z"},"content":"                + \"{predicate\u003d\" + keyTermsPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Eola-Z"},"content":"                + \", time\u003d\" + takenPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Eola-Z"},"content":"                + \", taken\u003dtrue}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(expected, new FilterCommand(keyTermsPredicate, takenPredicate, true).toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Eola-Z"},"content":"    public void execute_noKeyTerms_noPersonFound() {","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Eola-Z"},"content":"        Model model \u003d new ModelManager(TypicalPersons.getTypicalNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Eola-Z"},"content":"        Model expectedModel \u003d new ModelManager(TypicalPersons.getTypicalNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Eola-Z"},"content":"        String expectedMessage \u003d String.format(FilterCommand.MESSAGE_SUCCESS, \"\")","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Eola-Z"},"content":"                + String.format(FilterCommand.MESSAGE_PERSONS_FOUND_OVERVIEW, 0);","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate keyPredicate \u003d new CourseContainsKeyTermsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate takenPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 1));","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Eola-Z"},"content":"        FilterCommand command \u003d new FilterCommand(keyPredicate, takenPredicate, false);","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Eola-Z"},"content":"        expectedModel.updateFilteredPersonList(keyPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Eola-Z"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Eola-Z"},"content":"    public void execute_singleUnmatchedKeyword_noPersonFound() {","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Eola-Z"},"content":"        NetworkBook testNetworkBook \u003d new NetworkBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Eola-Z"},"content":"        testNetworkBook.addPerson(personWithDatedCourse);","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Eola-Z"},"content":"        testNetworkBook.addPerson(personWithUndatedCourse1);","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Eola-Z"},"content":"        Model model \u003d new ModelManager(testNetworkBook, new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"Eola-Z"},"content":"        Model expectedModel \u003d new ModelManager(testNetworkBook, new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate keyPredicate \u003d new CourseContainsKeyTermsPredicate(List.of(\"Fourth\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate takenPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 1));","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"Eola-Z"},"content":"        FilterCommand command \u003d new FilterCommand(keyPredicate, takenPredicate, false);","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"Eola-Z"},"content":"        String expectedMessage \u003d String.format(FilterCommand.MESSAGE_SUCCESS, \"\\\"Fourth\\\"\")","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"Eola-Z"},"content":"                + String.format(FilterCommand.MESSAGE_PERSONS_FOUND_OVERVIEW, 0);","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Eola-Z"},"content":"        expectedModel.updateFilteredPersonList(keyPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Eola-Z"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"Eola-Z"},"content":"    public void execute_singleMatchingKeyword_peopleFound() {","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"Eola-Z"},"content":"        NetworkBook testNetworkBook \u003d new NetworkBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"Eola-Z"},"content":"        testNetworkBook.addPerson(personWithDatedCourse);","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"Eola-Z"},"content":"        testNetworkBook.addPerson(personWithUndatedCourse1);","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"Eola-Z"},"content":"        Model model \u003d new ModelManager(testNetworkBook, new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"Eola-Z"},"content":"        Model expectedModel \u003d new ModelManager(testNetworkBook, new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate keyPredicate \u003d new CourseContainsKeyTermsPredicate(List.of(\"First\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate takenPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 1));","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"Eola-Z"},"content":"        FilterCommand command \u003d new FilterCommand(keyPredicate, takenPredicate, false);","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"Eola-Z"},"content":"        String expectedMessage \u003d String.format(FilterCommand.MESSAGE_SUCCESS, \"\\\"First\\\"\")","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"Eola-Z"},"content":"                + String.format(FilterCommand.MESSAGE_PERSONS_FOUND_OVERVIEW, 2);","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"Eola-Z"},"content":"        expectedModel.updateFilteredPersonList(keyPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"Eola-Z"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"Eola-Z"},"content":"    public void execute_atLeastOneMatchingKeyword_peopleFound() {","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"Eola-Z"},"content":"        NetworkBook testNetworkBook \u003d new NetworkBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"Eola-Z"},"content":"        testNetworkBook.addPerson(personWithDatedCourse);","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"Eola-Z"},"content":"        testNetworkBook.addPerson(personWithUndatedCourse1);","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"Eola-Z"},"content":"        testNetworkBook.addPerson(personWithUndatedCourse2);","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"Eola-Z"},"content":"        Model model \u003d new ModelManager(testNetworkBook, new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"Eola-Z"},"content":"        Model expectedModel \u003d new ModelManager(testNetworkBook, new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate keyPredicate \u003d new CourseContainsKeyTermsPredicate(List.of(\"Fourth\", \"Third\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate takenPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 1));","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"Eola-Z"},"content":"        FilterCommand command \u003d new FilterCommand(keyPredicate, takenPredicate, false);","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"Eola-Z"},"content":"        String expectedMessage \u003d String.format(FilterCommand.MESSAGE_SUCCESS, \"\\\"Fourth\\\", \\\"Third\\\"\")","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"Eola-Z"},"content":"                + String.format(FilterCommand.MESSAGE_PERSONS_FOUND_OVERVIEW, 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"Eola-Z"},"content":"        expectedModel.updateFilteredPersonList(keyPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"Eola-Z"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"Eola-Z"},"content":"    public void execute_matchingKeywordButDateOutOfRange_noPeopleFound() {","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"Eola-Z"},"content":"        NetworkBook testNetworkBook \u003d new NetworkBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"Eola-Z"},"content":"        testNetworkBook.addPerson(personWithDatedCourse);","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"Eola-Z"},"content":"        testNetworkBook.addPerson(personWithUndatedCourse2);","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"Eola-Z"},"content":"        Model model \u003d new ModelManager(testNetworkBook, new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"Eola-Z"},"content":"        Model expectedModel \u003d new ModelManager(testNetworkBook, new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate keyPredicate \u003d new CourseContainsKeyTermsPredicate(List.of(\"First\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate takenPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 10));","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"Eola-Z"},"content":"        FilterCommand command \u003d new FilterCommand(keyPredicate, takenPredicate, true);","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"Eola-Z"},"content":"        String expectedMessage \u003d String.format(FilterCommand.MESSAGE_SUCCESS, \"\\\"First\\\"\")","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"Eola-Z"},"content":"                + FilterCommand.MESSAGE_EXCL_FIN","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"Eola-Z"},"content":"                + String.format(FilterCommand.MESSAGE_PERSONS_FOUND_OVERVIEW, 0);","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"Eola-Z"},"content":"        expectedModel.updateFilteredPersonList(keyPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"Eola-Z"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"Eola-Z"},"content":"                p -\u003e keyPredicate.getCourses(p)","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"Eola-Z"},"content":"                        .stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"Eola-Z"},"content":"                        .anyMatch(c -\u003e takenPredicate.test(c))","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"Eola-Z"},"content":"        );","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"Eola-Z"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"Eola-Z"},"content":"    public void execute_matchingKeywordAndDateInRange_peopleFound() {","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"Eola-Z"},"content":"        NetworkBook testNetworkBook \u003d new NetworkBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"Eola-Z"},"content":"        testNetworkBook.addPerson(personWithDatedCourse);","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"Eola-Z"},"content":"        testNetworkBook.addPerson(personWithUndatedCourse1);","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"Eola-Z"},"content":"        testNetworkBook.addPerson(personWithUndatedCourse2);","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"Eola-Z"},"content":"        Model model \u003d new ModelManager(testNetworkBook, new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"Eola-Z"},"content":"        Model expectedModel \u003d new ModelManager(testNetworkBook, new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"Eola-Z"},"content":"        // Two people have the course \"First\" but only one should be counted since only","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"Eola-Z"},"content":"        // one person has their course within the date range (the person whose course doesn\u0027t have a date)","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate keyPredicate \u003d new CourseContainsKeyTermsPredicate(List.of(\"First\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate takenPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 10));","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"Eola-Z"},"content":"        FilterCommand command \u003d new FilterCommand(keyPredicate, takenPredicate, true);","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"Eola-Z"},"content":"        String expectedMessage \u003d String.format(FilterCommand.MESSAGE_SUCCESS, \"\\\"First\\\"\")","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"Eola-Z"},"content":"                + FilterCommand.MESSAGE_EXCL_FIN","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"Eola-Z"},"content":"                + String.format(FilterCommand.MESSAGE_PERSONS_FOUND_OVERVIEW, 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"Eola-Z"},"content":"        expectedModel.updateFilteredPersonList(keyPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"Eola-Z"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"Eola-Z"},"content":"                p -\u003e keyPredicate.getCourses(p)","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"Eola-Z"},"content":"                        .stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"Eola-Z"},"content":"                        .anyMatch(c -\u003e takenPredicate.test(c))","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"Eola-Z"},"content":"        );","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"Eola-Z"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"Eola-Z"},"content":"    public void execute_partialMatchingKeyword_peopleFound() {","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"Eola-Z"},"content":"        NetworkBook testNetworkBook \u003d new NetworkBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"Eola-Z"},"content":"        testNetworkBook.addPerson(personWithDatedCourse);","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"Eola-Z"},"content":"        testNetworkBook.addPerson(personWithUndatedCourse1);","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"Eola-Z"},"content":"        Model model \u003d new ModelManager(testNetworkBook, new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"Eola-Z"},"content":"        Model expectedModel \u003d new ModelManager(testNetworkBook, new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate keyPredicate \u003d new CourseContainsKeyTermsPredicate(List.of(\"Fir\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate takenPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 1));","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"Eola-Z"},"content":"        FilterCommand command \u003d new FilterCommand(keyPredicate, takenPredicate, false);","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"Eola-Z"},"content":"        String expectedMessage \u003d String.format(FilterCommand.MESSAGE_SUCCESS, \"\\\"Fir\\\"\")","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"Eola-Z"},"content":"                + String.format(FilterCommand.MESSAGE_PERSONS_FOUND_OVERVIEW, 2);","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"Eola-Z"},"content":"        expectedModel.updateFilteredPersonList(keyPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"Eola-Z"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":258,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Eola-Z":259}},{"path":"src/test/java/networkbook/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ModelManager;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.NameContainsKeyTermsPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"    private Model model \u003d new ModelManager(TypicalPersons.getTypicalNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalPersons.getTypicalNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"                new NameContainsKeyTermsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"                new NameContainsKeyTermsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"Eola-Z"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_SUCCESS, \"\")","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"Eola-Z"},"content":"                + String.format(FindCommand.MESSAGE_PERSONS_FOUND_OVERVIEW, 0);","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"    public void execute_singleUnmatchedKeyword_noPersonFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"Eola-Z"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_SUCCESS, \"\\\"Ulfred\\\"\")","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"Eola-Z"},"content":"                + String.format(FindCommand.MESSAGE_PERSONS_FOUND_OVERVIEW, 0);","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate predicate \u003d preparePredicate(\"Ulfred\");","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"awhb"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"    public void execute_multipleUnmatchedKeywords_noPersonFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"Eola-Z"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_SUCCESS, \"\\\"Ulfred\\\", \\\"Snyder\\\"\")","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"Eola-Z"},"content":"                + String.format(FindCommand.MESSAGE_PERSONS_FOUND_OVERVIEW, 0);","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate predicate \u003d preparePredicate(\"Ulfred  Snyder\");","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"awhb"},"content":"    public void execute_singleUniqueKeyword_matchingPersonFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"Eola-Z"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_SUCCESS, \"\\\"Fiona\\\"\")","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"Eola-Z"},"content":"                + String.format(FindCommand.MESSAGE_PERSONS_FOUND_OVERVIEW, 1);","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate predicate \u003d preparePredicate(\"Fiona\");","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"awhb"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"awhb"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"awhb"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"awhb"},"content":"        assertEquals(","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"awhb"},"content":"                Arrays.asList(TypicalPersons.FIONA),","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"awhb"},"content":"                model.getFilteredPersonList()","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"awhb"},"content":"        );","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"awhb"},"content":"    public void execute_multipleUniqueKeywords_matchingPersonFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"Eola-Z"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_SUCCESS, \"\\\"Fiona\\\", \\\"Kunz\\\"\")","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"Eola-Z"},"content":"                + String.format(FindCommand.MESSAGE_PERSONS_FOUND_OVERVIEW, 1);","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate predicate \u003d preparePredicate(\"Fiona   Kunz\");","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"awhb"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"awhb"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"awhb"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"awhb"},"content":"        assertEquals(","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"awhb"},"content":"                Arrays.asList(TypicalPersons.FIONA),","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"awhb"},"content":"                model.getFilteredPersonList()","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"awhb"},"content":"        );","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"awhb"},"content":"    public void execute_singleSharedKeyword_multiplePersonsFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"Eola-Z"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_SUCCESS, \"\\\"Ku\\\"\")","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"Eola-Z"},"content":"                + String.format(FindCommand.MESSAGE_PERSONS_FOUND_OVERVIEW, 2);","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate predicate \u003d preparePredicate(\"Ku\");","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"awhb"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"awhb"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"awhb"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"awhb"},"content":"        assertEquals(","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"awhb"},"content":"                Arrays.asList(TypicalPersons.CARL, TypicalPersons.FIONA),","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"awhb"},"content":"                model.getFilteredPersonList()","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"awhb"},"content":"        );","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"Eola-Z"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_SUCCESS, \"\\\"Kurz\\\", \\\"Elle\\\", \\\"Kunz\\\"\")","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"Eola-Z"},"content":"                + String.format(FindCommand.MESSAGE_PERSONS_FOUND_OVERVIEW, 3);","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"                Arrays.asList(TypicalPersons.CARL, TypicalPersons.ELLE, TypicalPersons.FIONA),","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"                model.getFilteredPersonList()","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate predicate \u003d new NameContainsKeyTermsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":150,"author":{"gitId":"awhb"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeyTermsPredicate}.","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":152,"author":{"gitId":"awhb"},"content":"    private NameContainsKeyTermsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"awhb"},"content":"        return new NameContainsKeyTermsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Eola-Z":14,"nknguyenhc":13,"-":63,"awhb":65}},{"path":"src/test/java/networkbook/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ModelManager;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpCommand.SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"nknguyenhc":5,"-":14}},{"path":"src/test/java/networkbook/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ModelManager;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        model \u003d new ModelManager(TypicalPersons.getTypicalNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"        expectedModel \u003d new ModelManager(model.getNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"        assertCommandSuccess(new ListCommand(), model,","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"                String.format(ListCommand.MESSAGE_PERSONS_LISTED_OVERVIEW, 7),","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"                expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"        assertCommandSuccess(new ListCommand(), model,","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"                String.format(ListCommand.MESSAGE_PERSONS_LISTED_OVERVIEW, 7),","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"                expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Eola-Z":6,"nknguyenhc":11,"-":26}},{"path":"src/test/java/networkbook/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"package networkbook.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"import networkbook.model.ModelManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator.SortField;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator.SortOrder;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":" * Contains integration tests (interaction with the Model) for {@code SortCommand}.","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"public class SortCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator firstComparator \u003d new PersonSortComparator(SortField.NAME, SortOrder.DESCENDING);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator secondComparator \u003d new PersonSortComparator(SortField.NONE, SortOrder.ASCENDING);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"        SortCommand sortFirstCommand \u003d new SortCommand(firstComparator);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"        SortCommand sortSecondCommand \u003d new SortCommand(secondComparator);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"xenosf"},"content":"        assertTrue(sortFirstCommand.equals(sortFirstCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"xenosf"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"        SortCommand sortFirstCommandCopy \u003d new SortCommand(firstComparator);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"        assertTrue(sortFirstCommand.equals(sortFirstCommandCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"        assertFalse(sortFirstCommand.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"        assertFalse(sortFirstCommand.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"xenosf"},"content":"        // different commans -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"        assertFalse(sortFirstCommand.equals(sortSecondCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"    public void execute_descendingNameSort_correctlySorted() {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"        List\u003cPerson\u003e expectedPersons \u003d TypicalPersons.getTypicalPersons();","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"        Collections.reverse(expectedPersons);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"Eola-Z"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_SORTED_OVERVIEW, expectedPersons.size());","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator comparator \u003d new PersonSortComparator(SortField.NAME, SortOrder.DESCENDING);","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"xenosf"},"content":"        Model model \u003d new ModelManager(TypicalPersons.getTypicalNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"xenosf"},"content":"        Model expectedModel \u003d new ModelManager(TypicalPersons.getTypicalNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"xenosf"},"content":"        SortCommand command \u003d new SortCommand(comparator);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"xenosf"},"content":"        expectedModel.updateSortedPersonList(comparator);","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"xenosf"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"        ObservableList\u003cPerson\u003e expectedList \u003d FXCollections.observableList(expectedPersons);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"xenosf"},"content":"        assertEquals(","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"xenosf"},"content":"                expectedList,","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"xenosf"},"content":"                model.getFilteredPersonList()","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"xenosf"},"content":"        );","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"xenosf"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator comparator \u003d new PersonSortComparator(SortField.NONE, SortOrder.DESCENDING);","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"xenosf"},"content":"        SortCommand sortCommand \u003d new SortCommand(comparator);","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"xenosf"},"content":"        String expected \u003d SortCommand.class.getCanonicalName() + \"{comparator\u003d\" + comparator + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"xenosf"},"content":"        assertEquals(expected, sortCommand.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Eola-Z":1,"xenosf":79}},{"path":"src/test/java/networkbook/logic/commands/delete/DeleteCourseActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"public class DeleteCourseActionTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"    private static final Person JACK \u003d TypicalPersons.JACK;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"    private static final Index firstIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"    private static final Index tenthIndex \u003d Index.fromOneBased(10);","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePersonDescriptor jackWithoutFirstCourse \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"            new UniqueList\u003cCourse\u003e().setItems(List.of(new Course(\"CS2109S\"))),","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePersonDescriptor jackWithoutAnyCourse \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"            new UniqueList\u003cCourse\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteCourseValidIndex_success() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptor \u003d new DeletePersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"        DeleteCourseAction action \u003d new DeleteCourseAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(descriptor, jackWithoutFirstCourse);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(descriptor, jackWithoutAnyCourse);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteCourseInvalidIndex_commandException() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"        DeleteCourseAction deleteFirstAction \u003d new DeleteCourseAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptorWithoutCourse \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"                new UniqueList\u003cCourse\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(CommandException.class, () -\u003e deleteFirstAction.delete(descriptorWithoutCourse));","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"        DeleteCourseAction deleteTenthAction \u003d new DeleteCourseAction(tenthIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptorWithTwoCourses \u003d new DeletePersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(CommandException.class, () -\u003e deleteTenthAction.delete(descriptorWithTwoCourses));","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteNull_nullPointerException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Singa-pirate"},"content":"        DeleteCourseAction deleteFirstAction \u003d new DeleteCourseAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(NullPointerException.class, () -\u003e deleteFirstAction.delete(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"        DeleteCourseAction deleteFirstAction1 \u003d new DeleteCourseAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"        DeleteCourseAction deleteFirstAction2 \u003d new DeleteCourseAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"Singa-pirate"},"content":"        DeleteCourseAction deleteTenthAction \u003d new DeleteCourseAction(tenthIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(deleteFirstAction1, deleteFirstAction1);","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(deleteFirstAction1, deleteFirstAction2);","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(null, deleteFirstAction1);","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, new DeletePriorityAction());","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, deleteTenthAction);","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Singa-pirate":92}},{"path":"src/test/java/networkbook/logic/commands/delete/DeleteEmailActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"public class DeleteEmailActionTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"    private static final Person JACK \u003d TypicalPersons.JACK;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"    private static final Index firstIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"    private static final Index tenthIndex \u003d Index.fromOneBased(10);","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePersonDescriptor jackWithoutFirstEmail \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"            new UniqueList\u003cEmail\u003e().setItems(List.of(new Email(\"jacky@test.com\"))),","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePersonDescriptor jackWithoutAnyEmail \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"            new UniqueList\u003cEmail\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteEmailValidIndex_success() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptor \u003d new DeletePersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"        DeleteEmailAction action \u003d new DeleteEmailAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(descriptor, jackWithoutFirstEmail);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(descriptor, jackWithoutAnyEmail);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteEmailInvalidIndex_commandException() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"        DeleteEmailAction deleteFirstAction \u003d new DeleteEmailAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptorWithoutEmail \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"                new UniqueList\u003cEmail\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(CommandException.class, () -\u003e deleteFirstAction.delete(descriptorWithoutEmail));","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"        DeleteEmailAction deleteTenthAction \u003d new DeleteEmailAction(tenthIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptorWithTwoEmails \u003d new DeletePersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(CommandException.class, () -\u003e deleteTenthAction.delete(descriptorWithTwoEmails));","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteNull_nullPointerException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Singa-pirate"},"content":"        DeleteEmailAction deleteFirstAction \u003d new DeleteEmailAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(NullPointerException.class, () -\u003e deleteFirstAction.delete(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"        DeleteEmailAction deleteFirstAction1 \u003d new DeleteEmailAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"        DeleteEmailAction deleteFirstAction2 \u003d new DeleteEmailAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"Singa-pirate"},"content":"        DeleteEmailAction deleteTenthAction \u003d new DeleteEmailAction(tenthIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(deleteFirstAction1, deleteFirstAction1);","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(deleteFirstAction1, deleteFirstAction2);","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(null, deleteFirstAction1);","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, new DeletePriorityAction());","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, deleteTenthAction);","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Singa-pirate":92}},{"path":"src/test/java/networkbook/logic/commands/delete/DeleteFieldCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static networkbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static networkbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import static networkbook.logic.commands.delete.DeleteFieldCommand.MESSAGE_DELETE_PERSON_FIELD_SUCCESS;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import static networkbook.testutil.Assert.assertThrowsAssertionError;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.ModelManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"public class DeleteFieldCommandTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"    private static final Model model \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"            new ModelManager(TypicalPersons.getTypicalNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"    private static final Index INDEX_ONE \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"    private static final Index INVALID_INDEX \u003d Index.fromOneBased(","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"            model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeleteCourseAction DELETE_FIRST_COURSE_ACTION \u003d new DeleteCourseAction(INDEX_ONE);","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeleteEmailAction DELETE_FIRST_EMAIL_ACTION \u003d new DeleteEmailAction(INDEX_ONE);","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeleteLinkAction DELETE_FIRST_LINK_ACTION \u003d new DeleteLinkAction(INDEX_ONE);","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePhoneAction DELETE_FIRST_PHONE_ACTION \u003d new DeletePhoneAction(INDEX_ONE);","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeleteSpecialisationAction DELETE_FIRST_SPEC_ACTION \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"            new DeleteSpecialisationAction(INDEX_ONE);","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeleteTagAction DELETE_FIRST_TAG_ACTION \u003d new DeleteTagAction(INDEX_ONE);","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePriorityAction DELETE_PRIORITY_ACTION \u003d new DeletePriorityAction();","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeleteGraduationAction DELETE_GRADUATION_ACTION \u003d new DeleteGraduationAction();","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"    public void constructor_null_nullPointerException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"        assertThrowsAssertionError(() -\u003e new DeleteFieldCommand(null, DELETE_PRIORITY_ACTION));","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        assertThrowsAssertionError(() -\u003e new DeleteFieldCommand(INDEX_ONE, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"        assertThrowsAssertionError(() -\u003e new DeleteFieldCommand(null, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"    public void execute_invalidIndexOfPerson_commandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand command1 \u003d new DeleteFieldCommand(INVALID_INDEX, DELETE_PRIORITY_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandFailure(command1, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand command2 \u003d new DeleteFieldCommand(INVALID_INDEX, DELETE_FIRST_TAG_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandFailure(command2, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"    public void execute_invalidIndexOfOldValue_commandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"        int numberOfCourses \u003d model.getFilteredPersonList().get(0).getCourses().size();","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand deleteInvalidCourseCommand \u003d new DeleteFieldCommand(INDEX_ONE,","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"                new DeleteCourseAction(Index.fromZeroBased(numberOfCourses + 1)));","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandFailure(deleteInvalidCourseCommand, model, DeletePersonDescriptor.MESSAGE_INVALID_COURSE_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"        int numberOfPhones \u003d model.getFilteredPersonList().get(0).getPhones().size();","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand deleteInvalidPhoneCommand \u003d new DeleteFieldCommand(INDEX_ONE,","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"                new DeletePhoneAction(Index.fromZeroBased(numberOfPhones + 1)));","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandFailure(deleteInvalidPhoneCommand, model, DeletePersonDescriptor.MESSAGE_INVALID_PHONE_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"Singa-pirate"},"content":"        int numberOfEmails \u003d model.getFilteredPersonList().get(0).getEmails().size();","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand deleteInvalidEmailCommand \u003d new DeleteFieldCommand(INDEX_ONE,","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Singa-pirate"},"content":"                new DeleteEmailAction(Index.fromZeroBased(numberOfEmails + 1)));","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandFailure(deleteInvalidEmailCommand, model, DeletePersonDescriptor.MESSAGE_INVALID_EMAIL_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"        int numberOfLinks \u003d model.getFilteredPersonList().get(0).getLinks().size();","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand deleteInvalidLinkCommand \u003d new DeleteFieldCommand(INDEX_ONE,","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"                new DeleteLinkAction(Index.fromZeroBased(numberOfLinks + 1)));","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandFailure(deleteInvalidLinkCommand, model, DeletePersonDescriptor.MESSAGE_INVALID_LINK_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"Singa-pirate"},"content":"        int numberOfSpecs \u003d model.getFilteredPersonList().get(0).getSpecialisations().size();","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand deleteInvalidSpecCommand \u003d new DeleteFieldCommand(INDEX_ONE,","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"                new DeleteSpecialisationAction(Index.fromZeroBased(numberOfSpecs + 1)));","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandFailure(deleteInvalidSpecCommand, model,","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"Singa-pirate"},"content":"                DeletePersonDescriptor.MESSAGE_INVALID_SPECIALISATION_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"        int numberOfTags \u003d model.getFilteredPersonList().get(0).getTags().size();","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand deleteInvalidTagCommand \u003d new DeleteFieldCommand(INDEX_ONE,","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"                new DeleteTagAction(Index.fromZeroBased(numberOfTags + 1)));","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandFailure(deleteInvalidTagCommand, model, DeletePersonDescriptor.MESSAGE_INVALID_TAG_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"Singa-pirate"},"content":"    public void execute_validCommand_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"Singa-pirate"},"content":"        Model originalModel \u003d new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"Singa-pirate"},"content":"        originalModel.setItem(model.getFilteredPersonList().get(0), TypicalPersons.JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"Singa-pirate"},"content":"        Name jackName \u003d TypicalPersons.JACK.getName();","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cPhone\u003e jackPhones \u003d TypicalPersons.JACK.getPhones();","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cEmail\u003e jackEmails \u003d TypicalPersons.JACK.getEmails();","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cLink\u003e jackLinks \u003d TypicalPersons.JACK.getLinks();","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cCourse\u003e jackCourses \u003d TypicalPersons.JACK.getCourses();","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cSpecialisation\u003e jackSpecialisations \u003d TypicalPersons.JACK.getSpecialisations();","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cTag\u003e jackTags \u003d TypicalPersons.JACK.getTags();","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"Singa-pirate"},"content":"        Graduation jackGraduation \u003d TypicalPersons.JACK.getGraduation().get();","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"Singa-pirate"},"content":"        Priority jackPriority \u003d TypicalPersons.JACK.getPriority().get();","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cPhone\u003e jackPhonesWithoutFirst \u003d TypicalPersons.JACK.getPhones();","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cEmail\u003e jackEmailsWithoutFirst \u003d TypicalPersons.JACK.getEmails();","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cLink\u003e jackLinksWithoutFirst \u003d TypicalPersons.JACK.getLinks();","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cCourse\u003e jackCoursesWithoutFirst \u003d TypicalPersons.JACK.getCourses();","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cSpecialisation\u003e jackSpecialisationsWithoutFirst \u003d TypicalPersons.JACK.getSpecialisations();","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cTag\u003e jackTagsWithoutFirst \u003d TypicalPersons.JACK.getTags();","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"Singa-pirate"},"content":"        jackPhonesWithoutFirst.removeAtIndex(0);","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"Singa-pirate"},"content":"        jackEmailsWithoutFirst.removeAtIndex(0);","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"Singa-pirate"},"content":"        jackLinksWithoutFirst.removeAtIndex(0);","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"Singa-pirate"},"content":"        jackCoursesWithoutFirst.removeAtIndex(0);","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"Singa-pirate"},"content":"        jackSpecialisationsWithoutFirst.removeAtIndex(0);","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"Singa-pirate"},"content":"        jackTagsWithoutFirst.removeAtIndex(0);","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"Singa-pirate"},"content":"        Person jackWithoutFirstPhone \u003d new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"Singa-pirate"},"content":"                jackName,","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"Singa-pirate"},"content":"                jackPhonesWithoutFirst,","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"Singa-pirate"},"content":"                jackEmails,","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"Singa-pirate"},"content":"                jackLinks,","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"Singa-pirate"},"content":"                jackGraduation,","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"Singa-pirate"},"content":"                jackCourses,","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"Singa-pirate"},"content":"                jackSpecialisations,","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"Singa-pirate"},"content":"                jackTags,","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"Singa-pirate"},"content":"                jackPriority","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"Singa-pirate"},"content":"        );","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"Singa-pirate"},"content":"        Person jackWithoutFirstEmail \u003d new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"Singa-pirate"},"content":"                jackName,","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"Singa-pirate"},"content":"                jackPhones,","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"Singa-pirate"},"content":"                jackEmailsWithoutFirst,","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"Singa-pirate"},"content":"                jackLinks,","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"Singa-pirate"},"content":"                jackGraduation,","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"Singa-pirate"},"content":"                jackCourses,","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"Singa-pirate"},"content":"                jackSpecialisations,","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"Singa-pirate"},"content":"                jackTags,","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"Singa-pirate"},"content":"                jackPriority","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"Singa-pirate"},"content":"        );","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"Singa-pirate"},"content":"        Person jackWithoutFirstLink \u003d new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"Singa-pirate"},"content":"                jackName,","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"Singa-pirate"},"content":"                jackPhones,","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"Singa-pirate"},"content":"                jackEmails,","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"Singa-pirate"},"content":"                jackLinksWithoutFirst,","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"Singa-pirate"},"content":"                jackGraduation,","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"Singa-pirate"},"content":"                jackCourses,","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"Singa-pirate"},"content":"                jackSpecialisations,","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"Singa-pirate"},"content":"                jackTags,","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"Singa-pirate"},"content":"                jackPriority","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"Singa-pirate"},"content":"        );","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"Singa-pirate"},"content":"        Person jackWithoutFirstCourse \u003d new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"Singa-pirate"},"content":"                jackName,","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"Singa-pirate"},"content":"                jackPhones,","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"Singa-pirate"},"content":"                jackEmails,","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"Singa-pirate"},"content":"                jackLinks,","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"Singa-pirate"},"content":"                jackGraduation,","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"Singa-pirate"},"content":"                jackCoursesWithoutFirst,","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"Singa-pirate"},"content":"                jackSpecialisations,","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"Singa-pirate"},"content":"                jackTags,","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"Singa-pirate"},"content":"                jackPriority","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"Singa-pirate"},"content":"        );","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"Singa-pirate"},"content":"        Person jackWithoutFirstSpec \u003d new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"Singa-pirate"},"content":"                jackName,","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"Singa-pirate"},"content":"                jackPhones,","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"Singa-pirate"},"content":"                jackEmails,","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"Singa-pirate"},"content":"                jackLinks,","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"Singa-pirate"},"content":"                jackGraduation,","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"Singa-pirate"},"content":"                jackCourses,","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"Singa-pirate"},"content":"                jackSpecialisationsWithoutFirst,","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"Singa-pirate"},"content":"                jackTags,","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"Singa-pirate"},"content":"                jackPriority","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"Singa-pirate"},"content":"        );","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"Singa-pirate"},"content":"        Person jackWithoutFirstTag \u003d new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"Singa-pirate"},"content":"                jackName,","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"Singa-pirate"},"content":"                jackPhones,","lastModifiedDate":"2023-10-27"},{"lineNumber":188,"author":{"gitId":"Singa-pirate"},"content":"                jackEmails,","lastModifiedDate":"2023-10-27"},{"lineNumber":189,"author":{"gitId":"Singa-pirate"},"content":"                jackLinks,","lastModifiedDate":"2023-10-27"},{"lineNumber":190,"author":{"gitId":"Singa-pirate"},"content":"                jackGraduation,","lastModifiedDate":"2023-10-27"},{"lineNumber":191,"author":{"gitId":"Singa-pirate"},"content":"                jackCourses,","lastModifiedDate":"2023-10-27"},{"lineNumber":192,"author":{"gitId":"Singa-pirate"},"content":"                jackSpecialisations,","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"Singa-pirate"},"content":"                jackTagsWithoutFirst,","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"Singa-pirate"},"content":"                jackPriority","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"Singa-pirate"},"content":"        );","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"Singa-pirate"},"content":"        Person jackWithoutGraduation \u003d new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"Singa-pirate"},"content":"                jackName,","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"Singa-pirate"},"content":"                jackPhones,","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"Singa-pirate"},"content":"                jackEmails,","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"Singa-pirate"},"content":"                jackLinks,","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"Singa-pirate"},"content":"                null,","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"Singa-pirate"},"content":"                jackCourses,","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"Singa-pirate"},"content":"                jackSpecialisations,","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"Singa-pirate"},"content":"                jackTags,","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"Singa-pirate"},"content":"                jackPriority","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"Singa-pirate"},"content":"        );","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"Singa-pirate"},"content":"        Person jackWithoutPriority \u003d new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"Singa-pirate"},"content":"                jackName,","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"Singa-pirate"},"content":"                jackPhones,","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"Singa-pirate"},"content":"                jackEmails,","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"Singa-pirate"},"content":"                jackLinks,","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"Singa-pirate"},"content":"                jackGraduation,","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"Singa-pirate"},"content":"                jackCourses,","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"Singa-pirate"},"content":"                jackSpecialisations,","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"Singa-pirate"},"content":"                jackTags,","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"Singa-pirate"},"content":"                null","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"Singa-pirate"},"content":"        );","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":221,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand deletePhoneCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_FIRST_PHONE_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"Singa-pirate"},"content":"        Model expectedModelAfterDeletingPhone \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"Singa-pirate"},"content":"                new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":224,"author":{"gitId":"Singa-pirate"},"content":"        expectedModelAfterDeletingPhone.setItem(model.getFilteredPersonList().get(0), jackWithoutFirstPhone);","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandSuccess(deletePhoneCommand, originalModel,","lastModifiedDate":"2023-10-27"},{"lineNumber":226,"author":{"gitId":"Singa-pirate"},"content":"                String.format(MESSAGE_DELETE_PERSON_FIELD_SUCCESS, Messages.format(jackWithoutFirstPhone)),","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"Singa-pirate"},"content":"                expectedModelAfterDeletingPhone);","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"Singa-pirate"},"content":"        originalModel.setItem(originalModel.getFilteredPersonList().get(0), TypicalPersons.JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand deleteEmailCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_FIRST_EMAIL_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"Singa-pirate"},"content":"        Model expectedModelAfterDeletingEmail \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"Singa-pirate"},"content":"                new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"Singa-pirate"},"content":"        expectedModelAfterDeletingEmail.setItem(model.getFilteredPersonList().get(0), jackWithoutFirstEmail);","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandSuccess(deleteEmailCommand, originalModel,","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"Singa-pirate"},"content":"                String.format(MESSAGE_DELETE_PERSON_FIELD_SUCCESS, Messages.format(jackWithoutFirstEmail)),","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"Singa-pirate"},"content":"                expectedModelAfterDeletingEmail);","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"Singa-pirate"},"content":"        originalModel.setItem(originalModel.getFilteredPersonList().get(0), TypicalPersons.JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand deleteLinkCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_FIRST_LINK_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"Singa-pirate"},"content":"        Model expectedModelAfterDeletingLink \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"Singa-pirate"},"content":"                new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"Singa-pirate"},"content":"        expectedModelAfterDeletingLink.setItem(model.getFilteredPersonList().get(0), jackWithoutFirstLink);","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandSuccess(deleteLinkCommand, originalModel,","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"Singa-pirate"},"content":"                String.format(MESSAGE_DELETE_PERSON_FIELD_SUCCESS, Messages.format(jackWithoutFirstLink)),","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"Singa-pirate"},"content":"                expectedModelAfterDeletingLink);","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"Singa-pirate"},"content":"        originalModel.setItem(originalModel.getFilteredPersonList().get(0), TypicalPersons.JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand deleteCourseCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_FIRST_COURSE_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"Singa-pirate"},"content":"        Model expectedModelAfterDeletingCourse \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"Singa-pirate"},"content":"                new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"Singa-pirate"},"content":"        expectedModelAfterDeletingCourse.setItem(model.getFilteredPersonList().get(0), jackWithoutFirstCourse);","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandSuccess(deleteCourseCommand, originalModel,","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"Singa-pirate"},"content":"                String.format(MESSAGE_DELETE_PERSON_FIELD_SUCCESS, Messages.format(jackWithoutFirstCourse)),","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"Singa-pirate"},"content":"                expectedModelAfterDeletingCourse);","lastModifiedDate":"2023-10-27"},{"lineNumber":255,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"Singa-pirate"},"content":"        originalModel.setItem(originalModel.getFilteredPersonList().get(0), TypicalPersons.JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand deleteSpecCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_FIRST_SPEC_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"Singa-pirate"},"content":"        Model expectedModelAfterDeletingSpec \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":259,"author":{"gitId":"Singa-pirate"},"content":"                new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"Singa-pirate"},"content":"        expectedModelAfterDeletingSpec.setItem(model.getFilteredPersonList().get(0), jackWithoutFirstSpec);","lastModifiedDate":"2023-10-27"},{"lineNumber":261,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandSuccess(deleteSpecCommand, originalModel,","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"Singa-pirate"},"content":"                String.format(MESSAGE_DELETE_PERSON_FIELD_SUCCESS, Messages.format(jackWithoutFirstSpec)),","lastModifiedDate":"2023-10-27"},{"lineNumber":263,"author":{"gitId":"Singa-pirate"},"content":"                expectedModelAfterDeletingSpec);","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":265,"author":{"gitId":"Singa-pirate"},"content":"        originalModel.setItem(originalModel.getFilteredPersonList().get(0), TypicalPersons.JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":266,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand deleteTagCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_FIRST_TAG_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":267,"author":{"gitId":"Singa-pirate"},"content":"        Model expectedModelAfterDeletingTag \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":268,"author":{"gitId":"Singa-pirate"},"content":"                new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"Singa-pirate"},"content":"        expectedModelAfterDeletingTag.setItem(model.getFilteredPersonList().get(0), jackWithoutFirstTag);","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandSuccess(deleteTagCommand, originalModel,","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"Singa-pirate"},"content":"                String.format(MESSAGE_DELETE_PERSON_FIELD_SUCCESS, Messages.format(jackWithoutFirstTag)),","lastModifiedDate":"2023-10-27"},{"lineNumber":272,"author":{"gitId":"Singa-pirate"},"content":"                expectedModelAfterDeletingTag);","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":274,"author":{"gitId":"Singa-pirate"},"content":"        originalModel.setItem(originalModel.getFilteredPersonList().get(0), TypicalPersons.JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":275,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand deleteGraduationCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_GRADUATION_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":276,"author":{"gitId":"Singa-pirate"},"content":"        Model expectedModelAfterDeletingGraduation \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":277,"author":{"gitId":"Singa-pirate"},"content":"                new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":278,"author":{"gitId":"Singa-pirate"},"content":"        expectedModelAfterDeletingGraduation.setItem(model.getFilteredPersonList().get(0), jackWithoutGraduation);","lastModifiedDate":"2023-10-27"},{"lineNumber":279,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandSuccess(deleteGraduationCommand, originalModel,","lastModifiedDate":"2023-10-27"},{"lineNumber":280,"author":{"gitId":"Singa-pirate"},"content":"                String.format(MESSAGE_DELETE_PERSON_FIELD_SUCCESS, Messages.format(jackWithoutGraduation)),","lastModifiedDate":"2023-10-27"},{"lineNumber":281,"author":{"gitId":"Singa-pirate"},"content":"                expectedModelAfterDeletingGraduation);","lastModifiedDate":"2023-10-27"},{"lineNumber":282,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":283,"author":{"gitId":"Singa-pirate"},"content":"        originalModel.setItem(originalModel.getFilteredPersonList().get(0), TypicalPersons.JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":284,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand deletePriorityCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_PRIORITY_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":285,"author":{"gitId":"Singa-pirate"},"content":"        Model expectedModelAfterDeletingPriority \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":286,"author":{"gitId":"Singa-pirate"},"content":"                new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":287,"author":{"gitId":"Singa-pirate"},"content":"        expectedModelAfterDeletingPriority.setItem(model.getFilteredPersonList().get(0), jackWithoutPriority);","lastModifiedDate":"2023-10-27"},{"lineNumber":288,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandSuccess(deletePriorityCommand, originalModel,","lastModifiedDate":"2023-10-27"},{"lineNumber":289,"author":{"gitId":"Singa-pirate"},"content":"                String.format(MESSAGE_DELETE_PERSON_FIELD_SUCCESS, Messages.format(jackWithoutPriority)),","lastModifiedDate":"2023-10-27"},{"lineNumber":290,"author":{"gitId":"Singa-pirate"},"content":"                expectedModelAfterDeletingPriority);","lastModifiedDate":"2023-10-27"},{"lineNumber":291,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":292,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Singa-pirate":292}},{"path":"src/test/java/networkbook/logic/commands/delete/DeleteGraduationActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"public class DeleteGraduationActionTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"    private static final Person JACK \u003d TypicalPersons.JACK;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePersonDescriptor jackWithoutGraduation \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"            null,","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteGraduation_success() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptor \u003d new DeletePersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"        DeleteGraduationAction action \u003d new DeleteGraduationAction();","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(jackWithoutGraduation, descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteGraduationOfPersonWithoutGraduation_success() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"        DeleteGraduationAction action \u003d new DeleteGraduationAction();","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptorWithoutGraduation \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"                null,","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptorWithoutGraduation);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(jackWithoutGraduation, descriptorWithoutGraduation);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteNull_nullPointerException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"        DeleteGraduationAction deleteFirstAction \u003d new DeleteGraduationAction();","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(NullPointerException.class, () -\u003e deleteFirstAction.delete(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"        DeleteGraduationAction action1 \u003d new DeleteGraduationAction();","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"        DeleteGraduationAction action2 \u003d new DeleteGraduationAction();","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(action1, action1);","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(action1, action2);","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(action1, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(null, action1);","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(action1, new DeleteCourseAction(Index.fromOneBased(1)));","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Singa-pirate":68}},{"path":"src/test/java/networkbook/logic/commands/delete/DeleteLinkActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"public class DeleteLinkActionTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"    private static final Person JACK \u003d TypicalPersons.JACK;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"    private static final Index firstIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"    private static final Index tenthIndex \u003d Index.fromOneBased(10);","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePersonDescriptor jackWithoutFirstLink \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"            new UniqueList\u003cLink\u003e().setItems(List.of(new Link(\"https://www.google.com\"))),","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePersonDescriptor jackWithoutAnyLink \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"            new UniqueList\u003cLink\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteLinkValidIndex_success() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptor \u003d new DeletePersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"        DeleteLinkAction action \u003d new DeleteLinkAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(descriptor, jackWithoutFirstLink);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(descriptor, jackWithoutAnyLink);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteLinkInvalidIndex_commandException() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"        DeleteLinkAction deleteFirstAction \u003d new DeleteLinkAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptorWithoutLink \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"                new UniqueList\u003cLink\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(CommandException.class, () -\u003e deleteFirstAction.delete(descriptorWithoutLink));","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"        DeleteLinkAction deleteTenthAction \u003d new DeleteLinkAction(tenthIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptorWithTwoLinks \u003d new DeletePersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(CommandException.class, () -\u003e deleteTenthAction.delete(descriptorWithTwoLinks));","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteNull_nullPointerException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Singa-pirate"},"content":"        DeleteLinkAction deleteFirstAction \u003d new DeleteLinkAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(NullPointerException.class, () -\u003e deleteFirstAction.delete(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"        DeleteLinkAction deleteFirstAction1 \u003d new DeleteLinkAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"        DeleteLinkAction deleteFirstAction2 \u003d new DeleteLinkAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"Singa-pirate"},"content":"        DeleteLinkAction deleteTenthAction \u003d new DeleteLinkAction(tenthIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(deleteFirstAction1, deleteFirstAction1);","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(deleteFirstAction1, deleteFirstAction2);","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(null, deleteFirstAction1);","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, new DeletePriorityAction());","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, deleteTenthAction);","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Singa-pirate":92}},{"path":"src/test/java/networkbook/logic/commands/delete/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ModelManager;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"    private Model model \u003d new ModelManager(TypicalPersons.getTypicalNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"                Messages.format(personToDelete))","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"                + String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_INDEX, 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Eola-Z"},"content":"                Messages.format(personToDelete))","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"                + String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_INDEX, 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"        Model expectedModel \u003d new ModelManager(model.getNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"        // ensures that outOfBoundIndex is still in bounds of network book list","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getNetworkBook().getPersonList().size());","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonCommand deleteFirstCommand \u003d new DeletePersonCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonCommand deleteSecondCommand \u003d new DeletePersonCommand(TypicalIndexes.INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonCommand deleteFirstCommandCopy \u003d new DeletePersonCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstCommand, 1);","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstCommand, null);","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"Singa-pirate"},"content":"        // both have null index -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonCommand deleteNull \u003d new DeletePersonCommand(null);","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonCommand deleteNull2 \u003d new DeletePersonCommand(null);","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(deleteNull, deleteNull2);","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"Singa-pirate"},"content":"        // one has null index -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteNull, deleteFirstCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstCommand, deleteNull);","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(targetIndex);","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"Singa-pirate"},"content":"        String expected \u003d DeletePersonCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(expected, deletePersonCommand.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Eola-Z":2,"nknguyenhc":21,"Singa-pirate":35,"-":71}},{"path":"src/test/java/networkbook/logic/commands/delete/DeletePersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"public class DeletePersonDescriptorTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"    private static final Person JACK_PERSON \u003d TypicalPersons.JACK;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePersonDescriptor JACK_DESCRIPTOR \u003d new DeletePersonDescriptor(JACK_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"    private static final Person EMPTY_PERSON \u003d new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"        new Name(\"empty\"),","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"        new UniqueList\u003c\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"        new UniqueList\u003c\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"        new UniqueList\u003c\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"        null,","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"        new UniqueList\u003c\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"        new UniqueList\u003c\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"        new UniqueList\u003c\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"        null","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"    );","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePersonDescriptor EMPTY_DESCRIPTOR \u003d new DeletePersonDescriptor(EMPTY_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(JACK_DESCRIPTOR, JACK_DESCRIPTOR);","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor jackDescriptor2 \u003d new DeletePersonDescriptor(JACK_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(JACK_DESCRIPTOR, jackDescriptor2);","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(JACK_DESCRIPTOR, EMPTY_DESCRIPTOR);","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(JACK_DESCRIPTOR, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(null, JACK_DESCRIPTOR);","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(JACK_DESCRIPTOR, \"string\");","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"    public void toPersonTest() {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(JACK_PERSON, JACK_DESCRIPTOR.toPerson());","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(EMPTY_PERSON, EMPTY_DESCRIPTOR.toPerson());","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(JACK_PERSON, EMPTY_DESCRIPTOR.toPerson());","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(EMPTY_PERSON, JACK_DESCRIPTOR.toPerson());","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Singa-pirate":45}},{"path":"src/test/java/networkbook/logic/commands/delete/DeletePhoneActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"public class DeletePhoneActionTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"    private static final Person JACK \u003d TypicalPersons.JACK;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"    private static final Index firstIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"    private static final Index tenthIndex \u003d Index.fromOneBased(10);","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePersonDescriptor jackWithoutFirstPhone \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"            new UniqueList\u003cPhone\u003e().setItems(List.of(new Phone(\"61828284\"))),","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePersonDescriptor jackWithoutAnyPhone \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"            new UniqueList\u003cPhone\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deletePhoneValidIndex_success() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptor \u003d new DeletePersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"        DeletePhoneAction action \u003d new DeletePhoneAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(descriptor, jackWithoutFirstPhone);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(descriptor, jackWithoutAnyPhone);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deletePhoneInvalidIndex_commandException() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"        DeletePhoneAction deleteFirstAction \u003d new DeletePhoneAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptorWithoutPhone \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"                new UniqueList\u003cPhone\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(CommandException.class, () -\u003e deleteFirstAction.delete(descriptorWithoutPhone));","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"        DeletePhoneAction deleteTenthAction \u003d new DeletePhoneAction(tenthIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptorWithTwoPhones \u003d new DeletePersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(CommandException.class, () -\u003e deleteTenthAction.delete(descriptorWithTwoPhones));","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteNull_nullPointerException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Singa-pirate"},"content":"        DeletePhoneAction deleteFirstAction \u003d new DeletePhoneAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(NullPointerException.class, () -\u003e deleteFirstAction.delete(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"        DeletePhoneAction deleteFirstAction1 \u003d new DeletePhoneAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"        DeletePhoneAction deleteFirstAction2 \u003d new DeletePhoneAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"Singa-pirate"},"content":"        DeletePhoneAction deleteTenthAction \u003d new DeletePhoneAction(tenthIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(deleteFirstAction1, deleteFirstAction1);","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(deleteFirstAction1, deleteFirstAction2);","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(null, deleteFirstAction1);","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, new DeletePriorityAction());","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, deleteTenthAction);","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Singa-pirate":92}},{"path":"src/test/java/networkbook/logic/commands/delete/DeletePriorityActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"public class DeletePriorityActionTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"    private static final Person JACK \u003d TypicalPersons.JACK;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePersonDescriptor jackWithoutPriority \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"            null));","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deletePriority_success() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptor \u003d new DeletePersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"        DeletePriorityAction action \u003d new DeletePriorityAction();","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(jackWithoutPriority, descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deletePriorityOfPersonWithoutPriority_success() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"        DeletePriorityAction action \u003d new DeletePriorityAction();","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptorWithoutPriority \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"                null));","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptorWithoutPriority);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(jackWithoutPriority, descriptorWithoutPriority);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteNull_nullPointerException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"        DeletePriorityAction deleteFirstAction \u003d new DeletePriorityAction();","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(NullPointerException.class, () -\u003e deleteFirstAction.delete(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"        DeletePriorityAction action1 \u003d new DeletePriorityAction();","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"        DeletePriorityAction action2 \u003d new DeletePriorityAction();","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(action1, action1);","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(action1, action2);","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(action1, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(null, action1);","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(action1, new DeleteCourseAction(Index.fromOneBased(1)));","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Singa-pirate":68}},{"path":"src/test/java/networkbook/logic/commands/delete/DeleteSpecialisationActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"public class DeleteSpecialisationActionTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"    private static final Person JACK \u003d TypicalPersons.JACK;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"    private static final Index firstIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"    private static final Index tenthIndex \u003d Index.fromOneBased(10);","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePersonDescriptor jackWithoutFirstSpecialisation \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"            new UniqueList\u003cSpecialisation\u003e().setItems(List.of(new Specialisation(\"Artificial Intelligence\"))),","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePersonDescriptor jackWithoutAnySpecialisation \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"            new UniqueList\u003cSpecialisation\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteSpecialisationValidIndex_success() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptor \u003d new DeletePersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"        DeleteSpecialisationAction action \u003d new DeleteSpecialisationAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(descriptor, jackWithoutFirstSpecialisation);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(descriptor, jackWithoutAnySpecialisation);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteSpecialisationInvalidIndex_commandException() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"        DeleteSpecialisationAction deleteFirstAction \u003d new DeleteSpecialisationAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptorWithoutSpecialisation \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"                new UniqueList\u003cSpecialisation\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(CommandException.class, () -\u003e deleteFirstAction.delete(descriptorWithoutSpecialisation));","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"        DeleteSpecialisationAction deleteTenthAction \u003d new DeleteSpecialisationAction(tenthIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptorWithTwoSpecialisations \u003d new DeletePersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(CommandException.class, () -\u003e deleteTenthAction.delete(descriptorWithTwoSpecialisations));","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteNull_nullPointerException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Singa-pirate"},"content":"        DeleteSpecialisationAction deleteFirstAction \u003d new DeleteSpecialisationAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(NullPointerException.class, () -\u003e deleteFirstAction.delete(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"        DeleteSpecialisationAction deleteFirstAction1 \u003d new DeleteSpecialisationAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"        DeleteSpecialisationAction deleteFirstAction2 \u003d new DeleteSpecialisationAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"Singa-pirate"},"content":"        DeleteSpecialisationAction deleteTenthAction \u003d new DeleteSpecialisationAction(tenthIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(deleteFirstAction1, deleteFirstAction1);","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(deleteFirstAction1, deleteFirstAction2);","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(null, deleteFirstAction1);","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, new DeletePriorityAction());","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, deleteTenthAction);","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Singa-pirate":92}},{"path":"src/test/java/networkbook/logic/commands/delete/DeleteTagActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.commands.delete;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"public class DeleteTagActionTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"    private static final Person JACK \u003d TypicalPersons.JACK;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"    private static final Index firstIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"    private static final Index tenthIndex \u003d Index.fromOneBased(10);","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePersonDescriptor jackWithoutFirstTag \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"            new UniqueList\u003cTag\u003e().setItems(List.of(new Tag(\"AI enthusiast\"))),","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePersonDescriptor jackWithoutAnyTag \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"            new UniqueList\u003cTag\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"            JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteTagValidIndex_success() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptor \u003d new DeletePersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"        DeleteTagAction action \u003d new DeleteTagAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(descriptor, jackWithoutFirstTag);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"        action.delete(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(descriptor, jackWithoutAnyTag);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteTagInvalidIndex_commandException() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"        DeleteTagAction deleteFirstAction \u003d new DeleteTagAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptorWithoutTag \u003d new DeletePersonDescriptor(new Person(","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getGraduation().get(),","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"                new UniqueList\u003cTag\u003e(),","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"                JACK.getPriority().get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(CommandException.class, () -\u003e deleteFirstAction.delete(descriptorWithoutTag));","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"        DeleteTagAction deleteTenthAction \u003d new DeleteTagAction(tenthIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonDescriptor descriptorWithTwoTags \u003d new DeletePersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(CommandException.class, () -\u003e deleteTenthAction.delete(descriptorWithTwoTags));","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"    public void delete_deleteNull_nullPointerException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Singa-pirate"},"content":"        DeleteTagAction deleteFirstAction \u003d new DeleteTagAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(NullPointerException.class, () -\u003e deleteFirstAction.delete(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"        DeleteTagAction deleteFirstAction1 \u003d new DeleteTagAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"        DeleteTagAction deleteFirstAction2 \u003d new DeleteTagAction(firstIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"Singa-pirate"},"content":"        DeleteTagAction deleteTenthAction \u003d new DeleteTagAction(tenthIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(deleteFirstAction1, deleteFirstAction1);","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(deleteFirstAction1, deleteFirstAction2);","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(null, deleteFirstAction1);","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, new DeletePriorityAction());","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(deleteFirstAction1, deleteTenthAction);","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Singa-pirate":92}},{"path":"src/test/java/networkbook/logic/commands/edit/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrowsAssertionError;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ModelManager;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"public class EditCommandTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditAction VALID_EDIT_ACTION \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"            editPersonDescriptor -\u003e editPersonDescriptor.setName(new Name(\"test\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    private final Model model \u003d new ModelManager(TypicalPersons.getTypicalNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"    public void constructor_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e new EditCommand(null, VALID_EDIT_ACTION));","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e new EditCommand(EditCommandUtil.VALID_INDEX, null));","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e new EditCommand(null, null));","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_invalidPersonIndexUnfilteredList_commandFailure() {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, VALID_EDIT_ACTION);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_changeNameToAnExistingContact_commandFailure() {","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"        Index lastIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"        Person duplicateInModel \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(lastIndex, editPersonDescriptor","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"                -\u003e editPersonDescriptor.setName(duplicateInModel.getName()));","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_validName_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"        Person originalPerson \u003d model.getFilteredPersonList()","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"                EditCommandUtil.VALID_NAME,","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"                editPersonDescriptor -\u003e editPersonDescriptor.setName(EditCommandUtil.VALID_NAME));","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"        Model expectedModel \u003d new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"        expectedModel.setItem(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_validPhoneAndIndex_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"        Person originalPerson \u003d model.getFilteredPersonList()","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cPhone\u003e newPhoneList \u003d originalPerson.getPhones();","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"        newPhoneList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_PHONE);","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getName(),","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"                newPhoneList,","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getEmails(),","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getLinks(),","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getGraduation().orElse(null),","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getCourses(),","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getSpecialisations(),","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getTags(),","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getPriority().orElse(null)","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"                editPersonDescriptor -\u003e editPersonDescriptor.setPhone(","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"                        EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_PHONE));","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"        Model expectedModel \u003d new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"        expectedModel.setItem(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_validPhoneAndInvalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"                editPersonDescriptor -\u003e editPersonDescriptor.setPhone(","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"                        EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_PHONE));","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d EditPersonDescriptor.MESSAGE_INVALID_PHONE_INDEX;","lastModifiedDate":"2023-10-23"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_validEmailAndIndex_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"        Person originalPerson \u003d model.getFilteredPersonList()","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cEmail\u003e newEmailList \u003d originalPerson.getEmails();","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"        newEmailList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_EMAIL);","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-10-23"},{"lineNumber":143,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getName(),","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getPhones(),","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"                newEmailList,","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getLinks(),","lastModifiedDate":"2023-10-23"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getGraduation().orElse(null),","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getCourses(),","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getSpecialisations(),","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getTags(),","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getPriority().orElse(null)","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"                editPersonDescriptor -\u003e editPersonDescriptor.setEmail(","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"                        EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_EMAIL));","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-23"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"        Model expectedModel \u003d new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"        expectedModel.setItem(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_validEmailAndInvalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"                editPersonDescriptor -\u003e editPersonDescriptor.setEmail(","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"                        EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_EMAIL));","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d EditPersonDescriptor.MESSAGE_INVALID_EMAIL_INDEX;","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":175,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_validLinkAndIndex_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":177,"author":{"gitId":"nknguyenhc"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-23"},{"lineNumber":178,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"        Person originalPerson \u003d model.getFilteredPersonList()","lastModifiedDate":"2023-10-23"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":181,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cLink\u003e newLinkList \u003d originalPerson.getLinks();","lastModifiedDate":"2023-10-23"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"        newLinkList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_LINK);","lastModifiedDate":"2023-10-23"},{"lineNumber":183,"author":{"gitId":"nknguyenhc"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-10-23"},{"lineNumber":184,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getName(),","lastModifiedDate":"2023-10-23"},{"lineNumber":185,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getPhones(),","lastModifiedDate":"2023-10-23"},{"lineNumber":186,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getEmails(),","lastModifiedDate":"2023-10-23"},{"lineNumber":187,"author":{"gitId":"nknguyenhc"},"content":"                newLinkList,","lastModifiedDate":"2023-10-23"},{"lineNumber":188,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getGraduation().orElse(null),","lastModifiedDate":"2023-10-23"},{"lineNumber":189,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getCourses(),","lastModifiedDate":"2023-10-23"},{"lineNumber":190,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getSpecialisations(),","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getTags(),","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getPriority().orElse(null)","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"nknguyenhc"},"content":"                editPersonDescriptor -\u003e editPersonDescriptor.setLink(","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"nknguyenhc"},"content":"                        EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_LINK));","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"nknguyenhc"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-23"},{"lineNumber":200,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":201,"author":{"gitId":"nknguyenhc"},"content":"        Model expectedModel \u003d new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"nknguyenhc"},"content":"        expectedModel.setItem(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":204,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":205,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_validLinkAndInvalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-23"},{"lineNumber":210,"author":{"gitId":"nknguyenhc"},"content":"                editPersonDescriptor -\u003e editPersonDescriptor.setLink(","lastModifiedDate":"2023-10-23"},{"lineNumber":211,"author":{"gitId":"nknguyenhc"},"content":"                        EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_LINK));","lastModifiedDate":"2023-10-23"},{"lineNumber":212,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d EditPersonDescriptor.MESSAGE_INVALID_LINK_INDEX;","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":215,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":216,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":217,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_validGraduation_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":218,"author":{"gitId":"nknguyenhc"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-23"},{"lineNumber":219,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":220,"author":{"gitId":"nknguyenhc"},"content":"        Person originalPerson \u003d model.getFilteredPersonList()","lastModifiedDate":"2023-10-23"},{"lineNumber":221,"author":{"gitId":"nknguyenhc"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":222,"author":{"gitId":"nknguyenhc"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-10-23"},{"lineNumber":223,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getName(),","lastModifiedDate":"2023-10-23"},{"lineNumber":224,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getPhones(),","lastModifiedDate":"2023-10-23"},{"lineNumber":225,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getEmails(),","lastModifiedDate":"2023-10-23"},{"lineNumber":226,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getLinks(),","lastModifiedDate":"2023-10-23"},{"lineNumber":227,"author":{"gitId":"nknguyenhc"},"content":"                EditCommandUtil.VALID_GRADUATION,","lastModifiedDate":"2023-10-23"},{"lineNumber":228,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getCourses(),","lastModifiedDate":"2023-10-23"},{"lineNumber":229,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getSpecialisations(),","lastModifiedDate":"2023-10-23"},{"lineNumber":230,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getTags(),","lastModifiedDate":"2023-10-23"},{"lineNumber":231,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getPriority().orElse(null)","lastModifiedDate":"2023-10-23"},{"lineNumber":232,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-23"},{"lineNumber":233,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-23"},{"lineNumber":234,"author":{"gitId":"nknguyenhc"},"content":"                editPersonDescriptor -\u003e editPersonDescriptor.setGraduation(EditCommandUtil.VALID_GRADUATION));","lastModifiedDate":"2023-10-23"},{"lineNumber":235,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":237,"author":{"gitId":"nknguyenhc"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-23"},{"lineNumber":238,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":239,"author":{"gitId":"nknguyenhc"},"content":"        Model expectedModel \u003d new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":240,"author":{"gitId":"nknguyenhc"},"content":"        expectedModel.setItem(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":241,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":242,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":243,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":244,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":245,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":246,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_validCourseAndIndex_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":247,"author":{"gitId":"nknguyenhc"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-23"},{"lineNumber":248,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":249,"author":{"gitId":"nknguyenhc"},"content":"        Person originalPerson \u003d model.getFilteredPersonList()","lastModifiedDate":"2023-10-23"},{"lineNumber":250,"author":{"gitId":"nknguyenhc"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":251,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cCourse\u003e newCourseList \u003d originalPerson.getCourses();","lastModifiedDate":"2023-10-23"},{"lineNumber":252,"author":{"gitId":"nknguyenhc"},"content":"        newCourseList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_COURSE);","lastModifiedDate":"2023-10-23"},{"lineNumber":253,"author":{"gitId":"nknguyenhc"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-10-23"},{"lineNumber":254,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getName(),","lastModifiedDate":"2023-10-23"},{"lineNumber":255,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getPhones(),","lastModifiedDate":"2023-10-23"},{"lineNumber":256,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getEmails(),","lastModifiedDate":"2023-10-23"},{"lineNumber":257,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getLinks(),","lastModifiedDate":"2023-10-23"},{"lineNumber":258,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getGraduation().orElse(null),","lastModifiedDate":"2023-10-23"},{"lineNumber":259,"author":{"gitId":"nknguyenhc"},"content":"                newCourseList,","lastModifiedDate":"2023-10-23"},{"lineNumber":260,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getSpecialisations(),","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getTags(),","lastModifiedDate":"2023-10-23"},{"lineNumber":262,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getPriority().orElse(null)","lastModifiedDate":"2023-10-23"},{"lineNumber":263,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-23"},{"lineNumber":264,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-23"},{"lineNumber":265,"author":{"gitId":"nknguyenhc"},"content":"                editPersonDescriptor -\u003e editPersonDescriptor.setCourse(","lastModifiedDate":"2023-10-23"},{"lineNumber":266,"author":{"gitId":"nknguyenhc"},"content":"                        EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_COURSE));","lastModifiedDate":"2023-10-23"},{"lineNumber":267,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":268,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":269,"author":{"gitId":"nknguyenhc"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-23"},{"lineNumber":270,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":271,"author":{"gitId":"nknguyenhc"},"content":"        Model expectedModel \u003d new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":272,"author":{"gitId":"nknguyenhc"},"content":"        expectedModel.setItem(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":273,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":274,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":275,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":276,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":277,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":278,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_validCourseAndInvalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":279,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-23"},{"lineNumber":280,"author":{"gitId":"nknguyenhc"},"content":"                editPersonDescriptor -\u003e editPersonDescriptor.setCourse(","lastModifiedDate":"2023-10-23"},{"lineNumber":281,"author":{"gitId":"nknguyenhc"},"content":"                        EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_COURSE));","lastModifiedDate":"2023-10-23"},{"lineNumber":282,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d EditPersonDescriptor.MESSAGE_INVALID_COURSE_INDEX;","lastModifiedDate":"2023-10-23"},{"lineNumber":283,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":284,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":285,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":286,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":287,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_validSpecialisationAndIndex_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":288,"author":{"gitId":"nknguyenhc"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-23"},{"lineNumber":289,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":290,"author":{"gitId":"nknguyenhc"},"content":"        Person originalPerson \u003d model.getFilteredPersonList()","lastModifiedDate":"2023-10-23"},{"lineNumber":291,"author":{"gitId":"nknguyenhc"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":292,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cSpecialisation\u003e newSpecialisationList \u003d originalPerson.getSpecialisations();","lastModifiedDate":"2023-10-23"},{"lineNumber":293,"author":{"gitId":"nknguyenhc"},"content":"        newSpecialisationList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_SPECIALISATION);","lastModifiedDate":"2023-10-23"},{"lineNumber":294,"author":{"gitId":"nknguyenhc"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-10-23"},{"lineNumber":295,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getName(),","lastModifiedDate":"2023-10-23"},{"lineNumber":296,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getPhones(),","lastModifiedDate":"2023-10-23"},{"lineNumber":297,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getEmails(),","lastModifiedDate":"2023-10-23"},{"lineNumber":298,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getLinks(),","lastModifiedDate":"2023-10-23"},{"lineNumber":299,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getGraduation().orElse(null),","lastModifiedDate":"2023-10-23"},{"lineNumber":300,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getCourses(),","lastModifiedDate":"2023-10-23"},{"lineNumber":301,"author":{"gitId":"nknguyenhc"},"content":"                newSpecialisationList,","lastModifiedDate":"2023-10-23"},{"lineNumber":302,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getTags(),","lastModifiedDate":"2023-10-23"},{"lineNumber":303,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getPriority().orElse(null)","lastModifiedDate":"2023-10-23"},{"lineNumber":304,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-23"},{"lineNumber":305,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-23"},{"lineNumber":306,"author":{"gitId":"nknguyenhc"},"content":"                editPersonDescriptor -\u003e editPersonDescriptor.setSpecialisation(","lastModifiedDate":"2023-10-23"},{"lineNumber":307,"author":{"gitId":"nknguyenhc"},"content":"                        EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_SPECIALISATION));","lastModifiedDate":"2023-10-23"},{"lineNumber":308,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":309,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":310,"author":{"gitId":"nknguyenhc"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-23"},{"lineNumber":311,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":312,"author":{"gitId":"nknguyenhc"},"content":"        Model expectedModel \u003d new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":313,"author":{"gitId":"nknguyenhc"},"content":"        expectedModel.setItem(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":314,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":315,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":316,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":317,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":318,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":319,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_validSpecialisationAndInvalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":320,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-23"},{"lineNumber":321,"author":{"gitId":"nknguyenhc"},"content":"                editPersonDescriptor -\u003e editPersonDescriptor.setSpecialisation(","lastModifiedDate":"2023-10-23"},{"lineNumber":322,"author":{"gitId":"nknguyenhc"},"content":"                        EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_SPECIALISATION));","lastModifiedDate":"2023-10-23"},{"lineNumber":323,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d EditPersonDescriptor.MESSAGE_INVALID_SPECIALISATION_INDEX;","lastModifiedDate":"2023-10-23"},{"lineNumber":324,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":325,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":326,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":327,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":328,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_validTagAndIndex_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":329,"author":{"gitId":"nknguyenhc"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-23"},{"lineNumber":330,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":331,"author":{"gitId":"nknguyenhc"},"content":"        Person originalPerson \u003d model.getFilteredPersonList()","lastModifiedDate":"2023-10-23"},{"lineNumber":332,"author":{"gitId":"nknguyenhc"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":333,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cTag\u003e newTagList \u003d originalPerson.getTags();","lastModifiedDate":"2023-10-23"},{"lineNumber":334,"author":{"gitId":"nknguyenhc"},"content":"        newTagList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_TAG);","lastModifiedDate":"2023-10-23"},{"lineNumber":335,"author":{"gitId":"nknguyenhc"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-10-23"},{"lineNumber":336,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getName(),","lastModifiedDate":"2023-10-23"},{"lineNumber":337,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getPhones(),","lastModifiedDate":"2023-10-23"},{"lineNumber":338,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getEmails(),","lastModifiedDate":"2023-10-23"},{"lineNumber":339,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getLinks(),","lastModifiedDate":"2023-10-23"},{"lineNumber":340,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getGraduation().orElse(null),","lastModifiedDate":"2023-10-23"},{"lineNumber":341,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getCourses(),","lastModifiedDate":"2023-10-23"},{"lineNumber":342,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getSpecialisations(),","lastModifiedDate":"2023-10-23"},{"lineNumber":343,"author":{"gitId":"nknguyenhc"},"content":"                newTagList,","lastModifiedDate":"2023-10-23"},{"lineNumber":344,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getPriority().orElse(null)","lastModifiedDate":"2023-10-23"},{"lineNumber":345,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-23"},{"lineNumber":346,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-23"},{"lineNumber":347,"author":{"gitId":"nknguyenhc"},"content":"                editPersonDescriptor -\u003e editPersonDescriptor.setTag(","lastModifiedDate":"2023-10-23"},{"lineNumber":348,"author":{"gitId":"nknguyenhc"},"content":"                        EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_TAG));","lastModifiedDate":"2023-10-23"},{"lineNumber":349,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":350,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":351,"author":{"gitId":"nknguyenhc"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-23"},{"lineNumber":352,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":353,"author":{"gitId":"nknguyenhc"},"content":"        Model expectedModel \u003d new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":354,"author":{"gitId":"nknguyenhc"},"content":"        expectedModel.setItem(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":355,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":356,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":357,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":358,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":359,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":360,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_validTagAndInvalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":361,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-23"},{"lineNumber":362,"author":{"gitId":"nknguyenhc"},"content":"                editPersonDescriptor -\u003e editPersonDescriptor.setTag(","lastModifiedDate":"2023-10-23"},{"lineNumber":363,"author":{"gitId":"nknguyenhc"},"content":"                        EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_TAG));","lastModifiedDate":"2023-10-23"},{"lineNumber":364,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d EditPersonDescriptor.MESSAGE_INVALID_TAG_INDEX;","lastModifiedDate":"2023-10-23"},{"lineNumber":365,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":366,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":367,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":368,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":369,"author":{"gitId":"nknguyenhc"},"content":"    public void execute_validPriority_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":370,"author":{"gitId":"nknguyenhc"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-23"},{"lineNumber":371,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":372,"author":{"gitId":"nknguyenhc"},"content":"        Person originalPerson \u003d model.getFilteredPersonList()","lastModifiedDate":"2023-10-23"},{"lineNumber":373,"author":{"gitId":"nknguyenhc"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":374,"author":{"gitId":"nknguyenhc"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-10-23"},{"lineNumber":375,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getName(),","lastModifiedDate":"2023-10-23"},{"lineNumber":376,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getPhones(),","lastModifiedDate":"2023-10-23"},{"lineNumber":377,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getEmails(),","lastModifiedDate":"2023-10-23"},{"lineNumber":378,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getLinks(),","lastModifiedDate":"2023-10-23"},{"lineNumber":379,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getGraduation().orElse(null),","lastModifiedDate":"2023-10-23"},{"lineNumber":380,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getCourses(),","lastModifiedDate":"2023-10-23"},{"lineNumber":381,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getSpecialisations(),","lastModifiedDate":"2023-10-23"},{"lineNumber":382,"author":{"gitId":"nknguyenhc"},"content":"                originalPerson.getTags(),","lastModifiedDate":"2023-10-23"},{"lineNumber":383,"author":{"gitId":"nknguyenhc"},"content":"                EditCommandUtil.VALID_PRIORITY","lastModifiedDate":"2023-10-23"},{"lineNumber":384,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-23"},{"lineNumber":385,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-23"},{"lineNumber":386,"author":{"gitId":"nknguyenhc"},"content":"                editPersonDescriptor -\u003e editPersonDescriptor.setPriority(EditCommandUtil.VALID_PRIORITY));","lastModifiedDate":"2023-10-23"},{"lineNumber":387,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":388,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":389,"author":{"gitId":"nknguyenhc"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-23"},{"lineNumber":390,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":391,"author":{"gitId":"nknguyenhc"},"content":"        Model expectedModel \u003d new ModelManager(new NetworkBook(model.getNetworkBook()), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":392,"author":{"gitId":"nknguyenhc"},"content":"        expectedModel.setItem(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":393,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":394,"author":{"gitId":"nknguyenhc"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":395,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":396,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":397,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":398,"author":{"gitId":"nknguyenhc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":399,"author":{"gitId":"nknguyenhc"},"content":"        EditAction editAction \u003d editPersonDescriptor -\u003e {};","lastModifiedDate":"2023-10-25"},{"lineNumber":400,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand standardCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, editAction);","lastModifiedDate":"2023-10-25"},{"lineNumber":401,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand sameCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, editAction);","lastModifiedDate":"2023-10-25"},{"lineNumber":402,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand differentCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, editPersonDescriptor -\u003e {});","lastModifiedDate":"2023-10-25"},{"lineNumber":403,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand differentIndexCommand \u003d new EditCommand(TypicalIndexes.INDEX_SECOND_PERSON, editAction);","lastModifiedDate":"2023-10-25"},{"lineNumber":404,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":405,"author":{"gitId":"nknguyenhc"},"content":"        // same reference","lastModifiedDate":"2023-10-25"},{"lineNumber":406,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":407,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":408,"author":{"gitId":"nknguyenhc"},"content":"        // false for null","lastModifiedDate":"2023-10-25"},{"lineNumber":409,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":410,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":411,"author":{"gitId":"nknguyenhc"},"content":"        // different object type -\u003e false","lastModifiedDate":"2023-10-25"},{"lineNumber":412,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(standardCommand.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":413,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":414,"author":{"gitId":"nknguyenhc"},"content":"        // equivalent commands","lastModifiedDate":"2023-10-25"},{"lineNumber":415,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(standardCommand.equals(sameCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":416,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":417,"author":{"gitId":"nknguyenhc"},"content":"        // different commands","lastModifiedDate":"2023-10-25"},{"lineNumber":418,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(standardCommand.equals(differentCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":419,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":420,"author":{"gitId":"nknguyenhc"},"content":"        // different indices","lastModifiedDate":"2023-10-25"},{"lineNumber":421,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(standardCommand.equals(differentIndexCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":422,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":423,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":424,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":425,"author":{"gitId":"nknguyenhc"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":426,"author":{"gitId":"nknguyenhc"},"content":"        EditAction editAction \u003d editPersonDescriptor -\u003e {};","lastModifiedDate":"2023-10-25"},{"lineNumber":427,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand command \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, editAction);","lastModifiedDate":"2023-10-25"},{"lineNumber":428,"author":{"gitId":"nknguyenhc"},"content":"        String expectedString \u003d command.getClass().getCanonicalName()","lastModifiedDate":"2023-10-25"},{"lineNumber":429,"author":{"gitId":"nknguyenhc"},"content":"                + \"{index\u003d\" + TypicalIndexes.INDEX_FIRST_PERSON","lastModifiedDate":"2023-10-25"},{"lineNumber":430,"author":{"gitId":"nknguyenhc"},"content":"                + \", editAction\u003d\" + editAction + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":431,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedString, command.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":432,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":433,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":432,"Singa-pirate":1}},{"path":"src/test/java/networkbook/logic/commands/edit/EditCommandUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":" * Contains the values to be used in edit command testing.","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"public class EditCommandUtil {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    public static final Index VALID_INDEX \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    public static final Index INVALID_INDEX \u003d Index.fromOneBased(10);","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    public static final Name VALID_NAME \u003d new Name(\"Quack\");","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    public static final Phone VALID_PHONE \u003d new Phone(\"12309856\");","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"    public static final Email VALID_EMAIL \u003d new Email(\"nkn@example.com\");","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    public static final Link VALID_LINK \u003d new Link(\"www.quack.com\");","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    public static final Graduation VALID_GRADUATION \u003d new Graduation(\"AY2324-S1\");","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    public static final Course VALID_COURSE \u003d new Course(\"CS3230\");","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public static final Specialisation VALID_SPECIALISATION \u003d new Specialisation(\"Algorithm\");","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"    public static final Tag VALID_TAG \u003d new Tag(\"Algo godz\");","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    public static final Priority VALID_PRIORITY \u003d new Priority(\"low\");","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":28,"Singa-pirate":1}},{"path":"src/test/java/networkbook/logic/commands/edit/EditCourseActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrowsAssertionError;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.TypicalPersons.JACK;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"public class EditCourseActionTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditCourseAction SAMPLE_VALID_EDIT_COURSE_ACTION \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"            new EditCourseAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_COURSE);","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditCourseAction SAMPLE_INVALID_EDIT_COURSE_ACTION \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"            new EditCourseAction(EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_COURSE);","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditCourseAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_COURSE).equals(1));","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditCourseAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_COURSE).equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditCourseAction(","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"                EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_COURSE).equals(new Object()));","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(SAMPLE_VALID_EDIT_COURSE_ACTION.equals(SAMPLE_VALID_EDIT_COURSE_ACTION));","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(new EditCourseAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_COURSE)","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"                .equals(SAMPLE_VALID_EDIT_COURSE_ACTION));","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        String expected \u003d EditCourseAction.class.getCanonicalName() + \"{course\u003d\" + EditCommandUtil.VALID_COURSE","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"                + \", index\u003d\" + EditCommandUtil.VALID_INDEX.getOneBased() + \"}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(SAMPLE_VALID_EDIT_COURSE_ACTION.toString(), expected);","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e SAMPLE_VALID_EDIT_COURSE_ACTION.edit(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_validEditAction_success() throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        SAMPLE_VALID_EDIT_COURSE_ACTION.edit(actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cCourse\u003e newCourseList \u003d JACK.getCourses();","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"        newCourseList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_COURSE);","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"                newCourseList,","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_invalidEditAction_throwsCommandException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, () -\u003e SAMPLE_INVALID_EDIT_COURSE_ACTION.edit(actualDescriptor));","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":75}},{"path":"src/test/java/networkbook/logic/commands/edit/EditEmailActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrowsAssertionError;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.TypicalPersons.JACK;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"public class EditEmailActionTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditEmailAction SAMPLE_VALID_EDIT_EMAIL_ACTION \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"            new EditEmailAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_EMAIL);","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditEmailAction SAMPLE_INVALID_EDIT_EMAIL_ACTION \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"            new EditEmailAction(EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_EMAIL);","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditEmailAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_EMAIL).equals(1));","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditEmailAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_EMAIL).equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditEmailAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_EMAIL).equals(new Object()));","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(SAMPLE_VALID_EDIT_EMAIL_ACTION.equals(SAMPLE_VALID_EDIT_EMAIL_ACTION));","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(new EditEmailAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_EMAIL)","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"                .equals(SAMPLE_VALID_EDIT_EMAIL_ACTION));","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        String expected \u003d EditEmailAction.class.getCanonicalName() + \"{email\u003d\" + EditCommandUtil.VALID_EMAIL","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"                + \", index\u003d\" + EditCommandUtil.VALID_INDEX.getOneBased() + \"}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(SAMPLE_VALID_EDIT_EMAIL_ACTION.toString(), expected);","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e SAMPLE_VALID_EDIT_EMAIL_ACTION.edit(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_validEditAction_success() throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        SAMPLE_VALID_EDIT_EMAIL_ACTION.edit(actualDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cEmail\u003e newEmailList \u003d JACK.getEmails();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        newEmailList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_EMAIL);","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"                newEmailList,","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_invalidEditAction_throwsCommandException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, () -\u003e SAMPLE_INVALID_EDIT_EMAIL_ACTION.edit(actualDescriptor));","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":74}},{"path":"src/test/java/networkbook/logic/commands/edit/EditGraduationActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrowsAssertionError;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.TypicalPersons.JACK;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"public class EditGraduationActionTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditGraduationAction SAMPLE_VALID_EDIT_GRADUATION_ACTION \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"            new EditGraduationAction(EditCommandUtil.VALID_GRADUATION);","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditGraduationAction(EditCommandUtil.VALID_GRADUATION).equals(1));","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditGraduationAction(EditCommandUtil.VALID_GRADUATION).equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditGraduationAction(EditCommandUtil.VALID_GRADUATION).equals(new Object()));","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(SAMPLE_VALID_EDIT_GRADUATION_ACTION.equals(SAMPLE_VALID_EDIT_GRADUATION_ACTION));","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(new EditGraduationAction(EditCommandUtil.VALID_GRADUATION)","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"                .equals(SAMPLE_VALID_EDIT_GRADUATION_ACTION));","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        String expected \u003d EditGraduationAction.class.getCanonicalName() + \"{graduation\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"                + EditCommandUtil.VALID_GRADUATION + \"}\";","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(SAMPLE_VALID_EDIT_GRADUATION_ACTION.toString(), expected);","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e SAMPLE_VALID_EDIT_GRADUATION_ACTION.edit(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_validEditAction_success() throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        SAMPLE_VALID_EDIT_GRADUATION_ACTION.edit(actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"                EditCommandUtil.VALID_GRADUATION,","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":60}},{"path":"src/test/java/networkbook/logic/commands/edit/EditLinkActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrowsAssertionError;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.TypicalPersons.JACK;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"public class EditLinkActionTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditLinkAction SAMPLE_VALID_EDIT_LINK_ACTION \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"            new EditLinkAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_LINK);","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditLinkAction SAMPLE_INVALID_EDIT_LINK_ACTION \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"            new EditLinkAction(EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_LINK);","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditLinkAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_LINK).equals(1));","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditLinkAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_LINK).equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditLinkAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_LINK).equals(new Object()));","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(SAMPLE_VALID_EDIT_LINK_ACTION.equals(SAMPLE_VALID_EDIT_LINK_ACTION));","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(new EditLinkAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_LINK)","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"                .equals(SAMPLE_VALID_EDIT_LINK_ACTION));","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        String expected \u003d EditLinkAction.class.getCanonicalName() + \"{link\u003d\" + EditCommandUtil.VALID_LINK","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"                + \", index\u003d\" + EditCommandUtil.VALID_INDEX.getOneBased() + \"}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(SAMPLE_VALID_EDIT_LINK_ACTION.toString(), expected);","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e SAMPLE_VALID_EDIT_LINK_ACTION.edit(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_validEditAction_success() throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        SAMPLE_VALID_EDIT_LINK_ACTION.edit(actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cLink\u003e newLinkList \u003d JACK.getLinks();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        newLinkList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_LINK);","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"                newLinkList,","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_invalidEditAction_throwsCommandException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, () -\u003e SAMPLE_INVALID_EDIT_LINK_ACTION.edit(actualDescriptor));","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":74}},{"path":"src/test/java/networkbook/logic/commands/edit/EditNameActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrowsAssertionError;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.TypicalPersons.JACK;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"public class EditNameActionTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditNameAction SAMPLE_VALID_EDIT_NAME_ACTION \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"            new EditNameAction(EditCommandUtil.VALID_NAME);","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditNameAction(EditCommandUtil.VALID_NAME).equals(1));","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditNameAction(EditCommandUtil.VALID_NAME).equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditNameAction(EditCommandUtil.VALID_NAME).equals(new Object()));","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(SAMPLE_VALID_EDIT_NAME_ACTION.equals(SAMPLE_VALID_EDIT_NAME_ACTION));","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(new EditNameAction(EditCommandUtil.VALID_NAME).equals(SAMPLE_VALID_EDIT_NAME_ACTION));","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        String expected \u003d EditNameAction.class.getCanonicalName() + \"{name\u003d\" + EditCommandUtil.VALID_NAME + \"}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(SAMPLE_VALID_EDIT_NAME_ACTION.toString(), expected);","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e SAMPLE_VALID_EDIT_NAME_ACTION.edit(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_validEditAction_success() throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        SAMPLE_VALID_EDIT_NAME_ACTION.edit(actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"                EditCommandUtil.VALID_NAME,","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":58}},{"path":"src/test/java/networkbook/logic/commands/edit/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrowsAssertionError;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.TypicalPersons.JACK;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor sameDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor differentDescriptor \u003d new EditPersonDescriptor(IDA);","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        //  null -\u003e false","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(descriptor.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"        // other object type -\u003e false","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(descriptor.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        // same reference -\u003e true","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(descriptor.equals(descriptor));","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"        // same descriptor -\u003e true","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(descriptor.equals(sameDescriptor));","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        // different descriptor -\u003e false","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(descriptor.equals(differentDescriptor));","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    public void setName_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setName(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"    public void setName_validName_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        actualDescriptor.setName(EditCommandUtil.VALID_NAME);","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"                EditCommandUtil.VALID_NAME,","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"    public void setPhone_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setPhone(null, EditCommandUtil.VALID_PHONE));","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setPhone(EditCommandUtil.VALID_INDEX, null));","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setPhone(null, null));","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"    public void setPhone_validPhoneAndIndex_success() throws Exception {","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"        actualDescriptor.setPhone(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_PHONE);","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cPhone\u003e newPhoneList \u003d JACK.getPhones();","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"        newPhoneList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_PHONE);","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"                newPhoneList,","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"    public void setPhone_duplicatePhone_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"        Phone duplicatePhone \u003d new Phone(\"12345678\");","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"        Index index \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, () -\u003e editPersonDescriptor.setPhone(index, duplicatePhone));","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"    public void setPhone_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, ()","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"                -\u003e actualDescriptor.setPhone(EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_PHONE));","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"    public void setEmail_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setEmail(null, EditCommandUtil.VALID_EMAIL));","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setEmail(EditCommandUtil.VALID_INDEX, null));","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setEmail(null, null));","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"    public void setEmail_validEmailAndIndex_success() throws Exception {","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"        actualDescriptor.setEmail(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_EMAIL);","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cEmail\u003e newEmailList \u003d JACK.getEmails();","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"        newEmailList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_EMAIL);","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"                newEmailList,","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":143,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"    public void setEmail_duplicateEmail_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"        Email duplicateEmail \u003d new Email(\"jack@gmail.com\");","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"        Index index \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, () -\u003e editPersonDescriptor.setEmail(index, duplicateEmail));","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"    public void setEmail_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, ()","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"                -\u003e actualDescriptor.setEmail(EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_EMAIL));","lastModifiedDate":"2023-10-23"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"    public void setLink_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setLink(null, EditCommandUtil.VALID_LINK));","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setLink(EditCommandUtil.VALID_INDEX, null));","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setLink(null, null));","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":172,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":174,"author":{"gitId":"nknguyenhc"},"content":"    public void setLink_validLinkAndIndex_success() throws Exception {","lastModifiedDate":"2023-10-22"},{"lineNumber":175,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":176,"author":{"gitId":"nknguyenhc"},"content":"        actualDescriptor.setLink(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_LINK);","lastModifiedDate":"2023-10-22"},{"lineNumber":177,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":178,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cLink\u003e newLinkList \u003d JACK.getLinks();","lastModifiedDate":"2023-10-22"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"        newLinkList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_LINK);","lastModifiedDate":"2023-10-22"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":181,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-22"},{"lineNumber":183,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":184,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":185,"author":{"gitId":"nknguyenhc"},"content":"                newLinkList,","lastModifiedDate":"2023-10-22"},{"lineNumber":186,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":187,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":188,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":189,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":190,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":191,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":192,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":193,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":194,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":195,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":196,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"nknguyenhc"},"content":"    public void setLink_duplicateLink_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"nknguyenhc"},"content":"        Link duplicateLink \u003d new Link(\"nkn.com\");","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"nknguyenhc"},"content":"        Index index \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, () -\u003e editPersonDescriptor.setLink(index, duplicateLink));","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":205,"author":{"gitId":"nknguyenhc"},"content":"    public void setLink_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":206,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":207,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, ()","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"nknguyenhc"},"content":"                -\u003e actualDescriptor.setLink(EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_LINK));","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":210,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":211,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":212,"author":{"gitId":"nknguyenhc"},"content":"    public void setGraduation_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":214,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setGraduation(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":216,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":217,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":218,"author":{"gitId":"nknguyenhc"},"content":"    public void setGraduation_validGraduation_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":219,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":220,"author":{"gitId":"nknguyenhc"},"content":"        actualDescriptor.setGraduation(EditCommandUtil.VALID_GRADUATION);","lastModifiedDate":"2023-10-22"},{"lineNumber":221,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":222,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":223,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-22"},{"lineNumber":224,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":225,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":226,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":227,"author":{"gitId":"nknguyenhc"},"content":"                EditCommandUtil.VALID_GRADUATION,","lastModifiedDate":"2023-10-22"},{"lineNumber":228,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":229,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":230,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":231,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":232,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":233,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":234,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":235,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":236,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":237,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":238,"author":{"gitId":"nknguyenhc"},"content":"    public void setCourse_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":240,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setCourse(null, EditCommandUtil.VALID_COURSE));","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setCourse(EditCommandUtil.VALID_INDEX, null));","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setCourse(null, null));","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":244,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":245,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":246,"author":{"gitId":"nknguyenhc"},"content":"    public void setCourse_validCourseAndIndex_success() throws Exception {","lastModifiedDate":"2023-10-22"},{"lineNumber":247,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":248,"author":{"gitId":"nknguyenhc"},"content":"        actualDescriptor.setCourse(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_COURSE);","lastModifiedDate":"2023-10-22"},{"lineNumber":249,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":250,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cCourse\u003e newCourseList \u003d JACK.getCourses();","lastModifiedDate":"2023-10-22"},{"lineNumber":251,"author":{"gitId":"nknguyenhc"},"content":"        newCourseList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_COURSE);","lastModifiedDate":"2023-10-22"},{"lineNumber":252,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":253,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":254,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-22"},{"lineNumber":255,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":256,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":257,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":258,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":259,"author":{"gitId":"nknguyenhc"},"content":"                newCourseList,","lastModifiedDate":"2023-10-22"},{"lineNumber":260,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":261,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":262,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":263,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":264,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":265,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":266,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":267,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":268,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"nknguyenhc"},"content":"    public void setCourse_duplicateCourse_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"nknguyenhc"},"content":"        Course duplicateCourse \u003d new Course(\"CS2103T\");","lastModifiedDate":"2023-10-27"},{"lineNumber":272,"author":{"gitId":"nknguyenhc"},"content":"        Index index \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, () -\u003e editPersonDescriptor.setCourse(index, duplicateCourse));","lastModifiedDate":"2023-10-27"},{"lineNumber":274,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":275,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":276,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":277,"author":{"gitId":"nknguyenhc"},"content":"    public void setCourse_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":278,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":279,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, ()","lastModifiedDate":"2023-10-23"},{"lineNumber":280,"author":{"gitId":"nknguyenhc"},"content":"                -\u003e actualDescriptor.setCourse(EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_COURSE));","lastModifiedDate":"2023-10-23"},{"lineNumber":281,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":282,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":283,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":284,"author":{"gitId":"nknguyenhc"},"content":"    public void setSpecialisation_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":285,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":286,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(()","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"nknguyenhc"},"content":"                -\u003e actualDescriptor.setSpecialisation(null, EditCommandUtil.VALID_SPECIALISATION));","lastModifiedDate":"2023-10-23"},{"lineNumber":288,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(()","lastModifiedDate":"2023-10-26"},{"lineNumber":289,"author":{"gitId":"nknguyenhc"},"content":"                -\u003e actualDescriptor.setSpecialisation(EditCommandUtil.VALID_INDEX, null));","lastModifiedDate":"2023-10-23"},{"lineNumber":290,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setSpecialisation(null, null));","lastModifiedDate":"2023-10-26"},{"lineNumber":291,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":292,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":293,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":294,"author":{"gitId":"nknguyenhc"},"content":"    public void setSpecialisation_validCourseAndIndex_success() throws Exception {","lastModifiedDate":"2023-10-22"},{"lineNumber":295,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":296,"author":{"gitId":"nknguyenhc"},"content":"        actualDescriptor.setSpecialisation(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_SPECIALISATION);","lastModifiedDate":"2023-10-22"},{"lineNumber":297,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":298,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cSpecialisation\u003e newSpecialisationList \u003d JACK.getSpecialisations();","lastModifiedDate":"2023-10-22"},{"lineNumber":299,"author":{"gitId":"nknguyenhc"},"content":"        newSpecialisationList.setItem(","lastModifiedDate":"2023-10-23"},{"lineNumber":300,"author":{"gitId":"nknguyenhc"},"content":"                EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_SPECIALISATION);","lastModifiedDate":"2023-10-23"},{"lineNumber":301,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":302,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":303,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-22"},{"lineNumber":304,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":305,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":306,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":307,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":308,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":309,"author":{"gitId":"nknguyenhc"},"content":"                newSpecialisationList,","lastModifiedDate":"2023-10-22"},{"lineNumber":310,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":311,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":312,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":313,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":314,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":315,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":316,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":317,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":318,"author":{"gitId":"nknguyenhc"},"content":"    public void setSpecialisation_duplicateSpecialisation_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":319,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":320,"author":{"gitId":"nknguyenhc"},"content":"        Specialisation duplicateSpecialisation \u003d new Specialisation(\"Software Engineering\");","lastModifiedDate":"2023-10-27"},{"lineNumber":321,"author":{"gitId":"nknguyenhc"},"content":"        Index index \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-27"},{"lineNumber":322,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, ()","lastModifiedDate":"2023-10-27"},{"lineNumber":323,"author":{"gitId":"nknguyenhc"},"content":"                -\u003e editPersonDescriptor.setSpecialisation(index, duplicateSpecialisation));","lastModifiedDate":"2023-10-27"},{"lineNumber":324,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":325,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":326,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":327,"author":{"gitId":"nknguyenhc"},"content":"    public void setSpecialisation_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":328,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":329,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, ()","lastModifiedDate":"2023-10-23"},{"lineNumber":330,"author":{"gitId":"nknguyenhc"},"content":"                -\u003e actualDescriptor.setSpecialisation(","lastModifiedDate":"2023-10-23"},{"lineNumber":331,"author":{"gitId":"nknguyenhc"},"content":"                        EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_SPECIALISATION));","lastModifiedDate":"2023-10-23"},{"lineNumber":332,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":333,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":334,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":335,"author":{"gitId":"nknguyenhc"},"content":"    public void setTag_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":336,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":337,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setTag(null, EditCommandUtil.VALID_TAG));","lastModifiedDate":"2023-10-26"},{"lineNumber":338,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setTag(EditCommandUtil.VALID_INDEX, null));","lastModifiedDate":"2023-10-26"},{"lineNumber":339,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setTag(null, null));","lastModifiedDate":"2023-10-26"},{"lineNumber":340,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":341,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":342,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":343,"author":{"gitId":"nknguyenhc"},"content":"    public void setTag_validTagAndIndex_success() throws Exception {","lastModifiedDate":"2023-10-22"},{"lineNumber":344,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":345,"author":{"gitId":"nknguyenhc"},"content":"        actualDescriptor.setTag(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_TAG);","lastModifiedDate":"2023-10-22"},{"lineNumber":346,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":347,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cTag\u003e newTagList \u003d JACK.getTags();","lastModifiedDate":"2023-10-22"},{"lineNumber":348,"author":{"gitId":"nknguyenhc"},"content":"        newTagList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_TAG);","lastModifiedDate":"2023-10-22"},{"lineNumber":349,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":350,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":351,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-22"},{"lineNumber":352,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":353,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":354,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":355,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":356,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":357,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":358,"author":{"gitId":"nknguyenhc"},"content":"                newTagList,","lastModifiedDate":"2023-10-22"},{"lineNumber":359,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":360,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":361,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":362,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":363,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":364,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":365,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":366,"author":{"gitId":"nknguyenhc"},"content":"    public void setTag_duplicateTag_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":367,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-27"},{"lineNumber":368,"author":{"gitId":"nknguyenhc"},"content":"        Tag duplicateTag \u003d new Tag(\"software eng enthusiast\");","lastModifiedDate":"2023-10-27"},{"lineNumber":369,"author":{"gitId":"nknguyenhc"},"content":"        Index index \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-27"},{"lineNumber":370,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, () -\u003e editPersonDescriptor.setTag(index, duplicateTag));","lastModifiedDate":"2023-10-27"},{"lineNumber":371,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":372,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":373,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":374,"author":{"gitId":"nknguyenhc"},"content":"    public void setTag_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":375,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":376,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, ()","lastModifiedDate":"2023-10-23"},{"lineNumber":377,"author":{"gitId":"nknguyenhc"},"content":"                -\u003e actualDescriptor.setTag(EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_TAG));","lastModifiedDate":"2023-10-23"},{"lineNumber":378,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":379,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":380,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":381,"author":{"gitId":"nknguyenhc"},"content":"    public void setPriority_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":382,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":383,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e actualDescriptor.setPriority(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":384,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":385,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":386,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":387,"author":{"gitId":"nknguyenhc"},"content":"    public void setPriority_validPriority_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":388,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":389,"author":{"gitId":"nknguyenhc"},"content":"        actualDescriptor.setPriority(EditCommandUtil.VALID_PRIORITY);","lastModifiedDate":"2023-10-22"},{"lineNumber":390,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":391,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":392,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-22"},{"lineNumber":393,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":394,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":395,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":396,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":397,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":398,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":399,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":400,"author":{"gitId":"nknguyenhc"},"content":"                EditCommandUtil.VALID_PRIORITY","lastModifiedDate":"2023-10-22"},{"lineNumber":401,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":402,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":403,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":404,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":405,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":404,"Singa-pirate":1}},{"path":"src/test/java/networkbook/logic/commands/edit/EditPhoneActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrowsAssertionError;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.TypicalPersons.JACK;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"public class EditPhoneActionTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditPhoneAction SAMPLE_VALID_EDIT_PHONE_ACTION \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"            new EditPhoneAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_PHONE);","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditPhoneAction SAMPLE_INVALID_EDIT_PHONE_ACTION \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"            new EditPhoneAction(EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_PHONE);","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditPhoneAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_PHONE).equals(1));","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditPhoneAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_PHONE).equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditPhoneAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_PHONE).equals(new Object()));","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(SAMPLE_VALID_EDIT_PHONE_ACTION.equals(SAMPLE_VALID_EDIT_PHONE_ACTION));","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(new EditPhoneAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_PHONE)","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"                .equals(SAMPLE_VALID_EDIT_PHONE_ACTION));","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        String expected \u003d EditPhoneAction.class.getCanonicalName() + \"{phone\u003d\" + EditCommandUtil.VALID_PHONE","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"                + \", index\u003d\" + EditCommandUtil.VALID_INDEX.getOneBased() + \"}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(SAMPLE_VALID_EDIT_PHONE_ACTION.toString(), expected);","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e SAMPLE_VALID_EDIT_PHONE_ACTION.edit(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_validEditAction_success() throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        SAMPLE_VALID_EDIT_PHONE_ACTION.edit(actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cPhone\u003e newPhoneList \u003d JACK.getPhones();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        newPhoneList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_PHONE);","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"                newPhoneList,","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_invalidEditAction_throwsCommandException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, () -\u003e SAMPLE_INVALID_EDIT_PHONE_ACTION.edit(actualDescriptor));","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":74}},{"path":"src/test/java/networkbook/logic/commands/edit/EditPriorityActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrowsAssertionError;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.TypicalPersons.JACK;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"public class EditPriorityActionTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditPriorityAction SAMPLE_VALID_EDIT_PRIORITY_ACTION \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"            new EditPriorityAction(EditCommandUtil.VALID_PRIORITY);","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditPriorityAction(EditCommandUtil.VALID_PRIORITY).equals(1));","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditPriorityAction(EditCommandUtil.VALID_PRIORITY).equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditPriorityAction(EditCommandUtil.VALID_PRIORITY).equals(new Object()));","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(SAMPLE_VALID_EDIT_PRIORITY_ACTION.equals(SAMPLE_VALID_EDIT_PRIORITY_ACTION));","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(new EditPriorityAction(EditCommandUtil.VALID_PRIORITY).equals(SAMPLE_VALID_EDIT_PRIORITY_ACTION));","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        String expected \u003d EditPriorityAction.class.getCanonicalName() + \"{priority\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"                + EditCommandUtil.VALID_PRIORITY + \"}\";","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(SAMPLE_VALID_EDIT_PRIORITY_ACTION.toString(), expected);","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e SAMPLE_VALID_EDIT_PRIORITY_ACTION.edit(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_validEditAction_success() throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        SAMPLE_VALID_EDIT_PRIORITY_ACTION.edit(actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"                EditCommandUtil.VALID_PRIORITY","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":59}},{"path":"src/test/java/networkbook/logic/commands/edit/EditSpecialisationActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrowsAssertionError;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.TypicalPersons.JACK;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"public class EditSpecialisationActionTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditSpecialisationAction SAMPLE_VALID_EDIT_SPECIALISATION_ACTION \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"            new EditSpecialisationAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_SPECIALISATION);","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditSpecialisationAction SAMPLE_INVALID_EDIT_SPECIALISATION_ACTION \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"            new EditSpecialisationAction(EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_SPECIALISATION);","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditSpecialisationAction(","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"                EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_SPECIALISATION).equals(1));","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditSpecialisationAction(","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"                EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_SPECIALISATION).equals(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditSpecialisationAction(","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"                EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_SPECIALISATION).equals(new Object()));","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(SAMPLE_VALID_EDIT_SPECIALISATION_ACTION.equals(SAMPLE_VALID_EDIT_SPECIALISATION_ACTION));","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(new EditSpecialisationAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_SPECIALISATION)","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"                .equals(SAMPLE_VALID_EDIT_SPECIALISATION_ACTION));","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"        String expected \u003d EditSpecialisationAction.class.getCanonicalName() + \"{specialisation\u003d\"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"                + EditCommandUtil.VALID_SPECIALISATION + \", index\u003d\" + EditCommandUtil.VALID_INDEX.getOneBased() + \"}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(SAMPLE_VALID_EDIT_SPECIALISATION_ACTION.toString(), expected);","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e SAMPLE_VALID_EDIT_SPECIALISATION_ACTION.edit(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_validEditAction_success() throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        SAMPLE_VALID_EDIT_SPECIALISATION_ACTION.edit(actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cSpecialisation\u003e newSpecialisationList \u003d JACK.getSpecialisations();","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"        newSpecialisationList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(),","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"                EditCommandUtil.VALID_SPECIALISATION);","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"                newSpecialisationList,","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getTags(),","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_invalidEditAction_throwsCommandException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, ()","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"                -\u003e SAMPLE_INVALID_EDIT_SPECIALISATION_ACTION.edit(actualDescriptor));","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":79}},{"path":"src/test/java/networkbook/logic/commands/edit/EditTagActionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.commands.edit;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrowsAssertionError;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.TypicalPersons.JACK;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"public class EditTagActionTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditTagAction SAMPLE_VALID_EDIT_TAG_ACTION \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"            new EditTagAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_TAG);","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditTagAction SAMPLE_INVALID_EDIT_TAG_ACTION \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"            new EditTagAction(EditCommandUtil.INVALID_INDEX, EditCommandUtil.VALID_TAG);","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditTagAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_TAG).equals(1));","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditTagAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_TAG).equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new EditTagAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_TAG).equals(new Object()));","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(SAMPLE_VALID_EDIT_TAG_ACTION.equals(SAMPLE_VALID_EDIT_TAG_ACTION));","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(new EditTagAction(EditCommandUtil.VALID_INDEX, EditCommandUtil.VALID_TAG)","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"                .equals(SAMPLE_VALID_EDIT_TAG_ACTION));","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        String expected \u003d EditTagAction.class.getCanonicalName() + \"{tag\u003d\" + EditCommandUtil.VALID_TAG","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"                + \", index\u003d\" + EditCommandUtil.VALID_INDEX.getOneBased() + \"}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(SAMPLE_VALID_EDIT_TAG_ACTION.toString(), expected);","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e SAMPLE_VALID_EDIT_TAG_ACTION.edit(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_validEditAction_success() throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        SAMPLE_VALID_EDIT_TAG_ACTION.edit(actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cTag\u003e newTagList \u003d JACK.getTags();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        newTagList.setItem(EditCommandUtil.VALID_INDEX.getZeroBased(), EditCommandUtil.VALID_TAG);","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new Person(","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getName(),","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPhones(),","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getEmails(),","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getLinks(),","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getGraduation().orElse(null),","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getCourses(),","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getSpecialisations(),","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"                newTagList,","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"                JACK.getPriority().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor expectedDescriptor \u003d new EditPersonDescriptor(expectedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedDescriptor, actualDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"    public void edit_invalidEditAction_throwsCommandException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"        EditPersonDescriptor actualDescriptor \u003d new EditPersonDescriptor(JACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(CommandException.class, () -\u003e SAMPLE_INVALID_EDIT_TAG_ACTION.edit(actualDescriptor));","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"nknguyenhc":73,"Singa-pirate":1}},{"path":"src/test/java/networkbook/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static networkbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static networkbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.AddCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.AddPersonDescriptorBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"        // no index specified","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"        assertParseFailure(parser, CommandTestUtil.VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"        // no field specified","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"        assertParseFailure(parser, \"1\", AddCommand.MESSAGE_NO_INFO);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"        // negative index","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"        assertParseFailure(parser, \"-5\" + CommandTestUtil.NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"        // zero index","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"        assertParseFailure(parser, \"0\" + CommandTestUtil.NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"        assertParseFailure(parser, \"1 /prior string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"                \"1\" + CommandTestUtil.INVALID_PHONE_DESC,","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"                Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"                \"1\" + CommandTestUtil.INVALID_EMAIL_DESC,","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"                Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"                \"1\" + CommandTestUtil.INVALID_LINK_DESC,","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"                Link.MESSAGE_CONSTRAINTS); // invalid link","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"xenosf"},"content":"                \"1\" + CommandTestUtil.INVALID_GRADUATION_DESC,","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"xenosf"},"content":"                Graduation.MESSAGE_CONSTRAINTS); // invalid Graduating Year","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"                \"1\" + CommandTestUtil.INVALID_COURSE_DESC,","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"                Course.MESSAGE_CONSTRAINTS); // invalid Course","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"                \"1\" + CommandTestUtil.INVALID_SPECIALISATION_DESC,","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"                Specialisation.MESSAGE_CONSTRAINTS); // invalid Specialisation","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"Singa-pirate"},"content":"                \"1\" + CommandTestUtil.INVALID_TAG_DESC,","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"                \"1\" + CommandTestUtil.INVALID_PRIORITY_DESC,","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"                Priority.MESSAGE_CONSTRAINTS); // invalid priority","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"Singa-pirate"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"                \"1\" + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.EMAIL_DESC_AMY,","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"Singa-pirate"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"Singa-pirate"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.VALID_LINK_AMY + CommandTestUtil.VALID_PHONE_AMY,","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_nameSpecified_failure() {","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"        Index index \u003d TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"        String userInput \u003d index.getOneBased() + CommandTestUtil.VALID_NAME_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(parser, userInput, AddCommandParser.MESSAGE_MULTIPLE_NAMES);","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"Singa-pirate"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"Singa-pirate"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"awhb"},"content":"                + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.LINK_DESC_AMY","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"xenosf"},"content":"                + CommandTestUtil.GRADUATION_DESC_AMY + CommandTestUtil.COURSE_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"awhb"},"content":"                + CommandTestUtil.SPECIALISATION_DESC_AMY","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"        AddCommand.AddPersonDescriptor descriptor \u003d new AddPersonDescriptorBuilder()","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"Singa-pirate"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"Singa-pirate"},"content":"                .withEmail(CommandTestUtil.VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"awhb"},"content":"                .withLink(CommandTestUtil.VALID_LINK_AMY)","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"xenosf"},"content":"                .withGraduation(CommandTestUtil.VALID_GRADUATION_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"awhb"},"content":"                .withCourse(CommandTestUtil.VALID_COURSE_AMY)","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"awhb"},"content":"                .withSpecialisation(CommandTestUtil.VALID_SPECIALISATION_AMY)","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"Singa-pirate"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND, CommandTestUtil.VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"Singa-pirate"},"content":"                .build();","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"Singa-pirate"},"content":"        AddCommand expectedCommand \u003d new AddCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"Singa-pirate"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"Singa-pirate"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"Singa-pirate"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"        AddCommand.AddPersonDescriptor descriptor \u003d new AddPersonDescriptorBuilder()","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"Singa-pirate"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"Singa-pirate"},"content":"                .withEmail(CommandTestUtil.VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"Singa-pirate"},"content":"        AddCommand expectedCommand \u003d new AddCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"Singa-pirate"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"Singa-pirate"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"Singa-pirate"},"content":"        // phone","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"        AddCommand.AddPersonDescriptor descriptor \u003d new AddPersonDescriptorBuilder()","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"        AddCommand expectedCommand \u003d new AddCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"Singa-pirate"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"Singa-pirate"},"content":"        // email","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"Singa-pirate"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"        descriptor \u003d new AddPersonDescriptorBuilder().withEmail(CommandTestUtil.VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":153,"author":{"gitId":"Singa-pirate"},"content":"        expectedCommand \u003d new AddCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"Singa-pirate"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"awhb"},"content":"        // link","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"awhb"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.LINK_DESC_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"        descriptor \u003d new AddPersonDescriptorBuilder().withLink(CommandTestUtil.VALID_LINK_AMY).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"awhb"},"content":"        expectedCommand \u003d new AddCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"awhb"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"xenosf"},"content":"        // graduation date","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"xenosf"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.GRADUATION_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"        descriptor \u003d new AddPersonDescriptorBuilder().withGraduation(CommandTestUtil.VALID_GRADUATION_AMY)","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"awhb"},"content":"                    .build();","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"awhb"},"content":"        expectedCommand \u003d new AddCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"awhb"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"awhb"},"content":"        // course","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"awhb"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.COURSE_DESC_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"        descriptor \u003d new AddPersonDescriptorBuilder().withCourse(CommandTestUtil.VALID_COURSE_AMY).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":172,"author":{"gitId":"awhb"},"content":"        expectedCommand \u003d new AddCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"awhb"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":174,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"awhb"},"content":"        // specialisation","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"awhb"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.SPECIALISATION_DESC_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"nknguyenhc"},"content":"        descriptor \u003d new AddPersonDescriptorBuilder().withSpecialisation(CommandTestUtil.VALID_SPECIALISATION_AMY)","lastModifiedDate":"2023-10-22"},{"lineNumber":178,"author":{"gitId":"awhb"},"content":"                    .build();","lastModifiedDate":"2023-10-14"},{"lineNumber":179,"author":{"gitId":"Singa-pirate"},"content":"        expectedCommand \u003d new AddCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"Singa-pirate"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"Singa-pirate"},"content":"        // tags","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"Singa-pirate"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"nknguyenhc"},"content":"        descriptor \u003d new AddPersonDescriptorBuilder().withTags(CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":185,"author":{"gitId":"Singa-pirate"},"content":"        expectedCommand \u003d new AddCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"Singa-pirate"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":189,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"Singa-pirate"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"Singa-pirate"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"Singa-pirate"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"Singa-pirate"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"Singa-pirate"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"nknguyenhc"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.LINK_DESC_AMY","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"Singa-pirate"},"content":"                + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"awhb"},"content":"                + CommandTestUtil.LINK_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2023-10-14"},{"lineNumber":201,"author":{"gitId":"awhb"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.LINK_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":202,"author":{"gitId":"Singa-pirate"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":204,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(parser, userInput, ParserUtil.MESSAGE_PHONE_DUPLICATE);","lastModifiedDate":"2023-10-19"},{"lineNumber":205,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"nknguyenhc":23,"xenosf":7,"Singa-pirate":139,"awhb":37}},{"path":"src/test/java/networkbook/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/ pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q 111 -t dashT-Value p/ pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"nknguyenhc":1,"-":149}},{"path":"src/test/java/networkbook/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.Command;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"nknguyenhc":3,"-":36}},{"path":"src/test/java/networkbook/logic/parser/CreateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_COURSE_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_GRADUATION_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_LINK_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_PRIORITY_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_SPECIALISATION_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.CreateCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.PersonBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"public class CreateCommandParserTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"    private CreateCommandParser parser \u003d new CreateCommandParser();","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPerson \u003d new PersonBuilder(TypicalPersons.BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"                .withTags(CommandTestUtil.VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.PREAMBLE_WHITESPACE","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"                + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"                + CommandTestUtil.LINK_DESC_BOB + CommandTestUtil.GRADUATION_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"                + CommandTestUtil.COURSE_DESC_BOB + CommandTestUtil.SPECIALISATION_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"                new CreateCommand(expectedPerson));","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(TypicalPersons.BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"                .withTags(CommandTestUtil.VALID_TAG_FRIEND, CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.LINK_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.GRADUATION_DESC_BOB + CommandTestUtil.COURSE_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_BOB + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND,","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"                new CreateCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_repeatedSingleValuedField_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"        String validExpectedPersonString \u003d CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"                + CommandTestUtil.LINK_DESC_BOB + CommandTestUtil.GRADUATION_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"                + CommandTestUtil.COURSE_DESC_BOB + CommandTestUtil.SPECIALISATION_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"                + CommandTestUtil.PRIORITY_DESC_BOB + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"        // multiple names","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"                CommandTestUtil.NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_NAME));","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"Singa-pirate"},"content":"        // multiple priorities","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"Singa-pirate"},"content":"                CommandTestUtil.PRIORITY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_PRIORITY));","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"        // multiple graduations","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"                CommandTestUtil.GRADUATION_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_GRADUATION));","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"                validExpectedPersonString + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"                        + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.LINK_DESC_AMY + CommandTestUtil.GRADUATION_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.COURSE_DESC_AMY + CommandTestUtil.SPECIALISATION_DESC_AMY","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"awhb"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"                        CliSyntax.PREFIX_NAME,","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"xenosf"},"content":"                        CliSyntax.PREFIX_GRADUATION,","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Singa-pirate"},"content":"                        CliSyntax.PREFIX_PRIORITY));","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"        // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"                CommandTestUtil.INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_NAME));","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"xenosf"},"content":"        // invalid graduation date","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"awhb"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"xenosf"},"content":"                CommandTestUtil.INVALID_GRADUATION_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"xenosf"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_GRADUATION));","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"        // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"                validExpectedPersonString + CommandTestUtil.INVALID_NAME_DESC,","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_NAME));","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"xenosf"},"content":"        // invalid graduation date","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"xenosf"},"content":"                validExpectedPersonString + CommandTestUtil.INVALID_GRADUATION_DESC,","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"xenosf"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_GRADUATION));","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"awhb"},"content":"        // no phone","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"awhb"},"content":"        Person expectedPersonWithoutPhone \u003d new PersonBuilder(TypicalPersons.AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"awhb"},"content":"                .withoutOptionalFields()","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"awhb"},"content":"                .withEmails(List.of(VALID_EMAIL_AMY))","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"awhb"},"content":"                .withLinks(List.of(VALID_LINK_AMY))","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"xenosf"},"content":"                .withGraduation(VALID_GRADUATION_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"                .withCourses(List.of(VALID_COURSE_AMY))","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"Eola-Z"},"content":"                .withSpecialisations(List.of(VALID_SPECIALISATION_AMY))","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"awhb"},"content":"                .withPriority(VALID_PRIORITY_AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"awhb"},"content":"                .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"awhb"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"awhb"},"content":"                CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.LINK_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.GRADUATION_DESC_AMY + CommandTestUtil.COURSE_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_AMY + CommandTestUtil.PRIORITY_DESC_AMY,","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"awhb"},"content":"                new CreateCommand(expectedPersonWithoutPhone));","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"awhb"},"content":"        // no emails","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"awhb"},"content":"        Person expectedPersonWithoutEmails \u003d new PersonBuilder(TypicalPersons.AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"awhb"},"content":"                .withoutOptionalFields()","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"awhb"},"content":"                .withPhones(List.of(VALID_PHONE_AMY))","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"awhb"},"content":"                .withLinks(List.of(VALID_LINK_AMY))","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"xenosf"},"content":"                .withGraduation(VALID_GRADUATION_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"                .withCourses(List.of(VALID_COURSE_AMY))","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"Eola-Z"},"content":"                .withSpecialisations(List.of(VALID_SPECIALISATION_AMY))","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"awhb"},"content":"                .withPriority(VALID_PRIORITY_AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"awhb"},"content":"                .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"awhb"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"awhb"},"content":"                CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.LINK_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.GRADUATION_DESC_AMY + CommandTestUtil.COURSE_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_AMY + CommandTestUtil.PRIORITY_DESC_AMY,","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"awhb"},"content":"                new CreateCommand(expectedPersonWithoutEmails));","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"awhb"},"content":"        // no links","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"awhb"},"content":"        Person expectedPersonWithoutLinks \u003d new PersonBuilder(TypicalPersons.AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"awhb"},"content":"                .withoutOptionalFields()","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"awhb"},"content":"                .withPhones(List.of(VALID_PHONE_AMY))","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"awhb"},"content":"                .withEmails(List.of(VALID_EMAIL_AMY))","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"xenosf"},"content":"                .withGraduation(VALID_GRADUATION_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"                .withCourses(List.of(VALID_COURSE_AMY))","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"Eola-Z"},"content":"                .withSpecialisations(List.of(VALID_SPECIALISATION_AMY))","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"awhb"},"content":"                .withPriority(VALID_PRIORITY_AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"awhb"},"content":"                .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"awhb"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"awhb"},"content":"                CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.GRADUATION_DESC_AMY + CommandTestUtil.COURSE_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_AMY + CommandTestUtil.PRIORITY_DESC_AMY,","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"awhb"},"content":"                new CreateCommand(expectedPersonWithoutLinks));","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"xenosf"},"content":"        // no graduation date","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"xenosf"},"content":"        Person expectedPersonWithoutGraduation \u003d new PersonBuilder(TypicalPersons.AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"awhb"},"content":"                .withoutOptionalFields()","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"awhb"},"content":"                .withPhones(List.of(VALID_PHONE_AMY))","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"awhb"},"content":"                .withEmails(List.of(VALID_EMAIL_AMY))","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"awhb"},"content":"                .withLinks(List.of(VALID_LINK_AMY))","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"                .withCourses(List.of(VALID_COURSE_AMY))","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"Eola-Z"},"content":"                .withSpecialisations(List.of(VALID_SPECIALISATION_AMY))","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"awhb"},"content":"                .withPriority(VALID_PRIORITY_AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"awhb"},"content":"                .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"awhb"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"awhb"},"content":"                CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.LINK_DESC_AMY + CommandTestUtil.COURSE_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_AMY + CommandTestUtil.PRIORITY_DESC_AMY,","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"xenosf"},"content":"                new CreateCommand(expectedPersonWithoutGraduation));","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"awhb"},"content":"        // no course","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"awhb"},"content":"        Person expectedPersonWithoutCourse \u003d new PersonBuilder(TypicalPersons.AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"awhb"},"content":"                .withoutOptionalFields()","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"awhb"},"content":"                .withPhones(List.of(VALID_PHONE_AMY))","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"awhb"},"content":"                .withEmails(List.of(VALID_EMAIL_AMY))","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"awhb"},"content":"                .withLinks(List.of(VALID_LINK_AMY))","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"xenosf"},"content":"                .withGraduation(VALID_GRADUATION_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"Eola-Z"},"content":"                .withSpecialisations(List.of(VALID_SPECIALISATION_AMY))","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"awhb"},"content":"                .withPriority(VALID_PRIORITY_AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"awhb"},"content":"                .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"awhb"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"awhb"},"content":"                CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.LINK_DESC_AMY + CommandTestUtil.GRADUATION_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_AMY + CommandTestUtil.PRIORITY_DESC_AMY,","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"awhb"},"content":"                new CreateCommand(expectedPersonWithoutCourse));","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"awhb"},"content":"        // no specialisation","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"awhb"},"content":"        Person expectedPersonWithoutSpecialisation \u003d new PersonBuilder(TypicalPersons.AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"awhb"},"content":"                .withoutOptionalFields()","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"awhb"},"content":"                .withPhones(List.of(VALID_PHONE_AMY))","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"awhb"},"content":"                .withEmails(List.of(VALID_EMAIL_AMY))","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"awhb"},"content":"                .withLinks(List.of(VALID_LINK_AMY))","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"xenosf"},"content":"                .withGraduation(VALID_GRADUATION_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"nknguyenhc"},"content":"                .withCourses(List.of(VALID_COURSE_AMY))","lastModifiedDate":"2023-10-19"},{"lineNumber":216,"author":{"gitId":"awhb"},"content":"                .withPriority(VALID_PRIORITY_AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"awhb"},"content":"                .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"awhb"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"awhb"},"content":"                CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.LINK_DESC_AMY + CommandTestUtil.GRADUATION_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.COURSE_DESC_AMY + CommandTestUtil.PRIORITY_DESC_AMY,","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"awhb"},"content":"                new CreateCommand(expectedPersonWithoutSpecialisation));","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"nknguyenhc"},"content":"        // zero tags","lastModifiedDate":"2023-10-06"},{"lineNumber":226,"author":{"gitId":"awhb"},"content":"        Person expectedPersonWithoutTags \u003d new PersonBuilder(TypicalPersons.AMY).withTags().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":228,"author":{"gitId":"nknguyenhc"},"content":"                CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2023-10-06"},{"lineNumber":229,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.LINK_DESC_AMY","lastModifiedDate":"2023-10-14"},{"lineNumber":230,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.GRADUATION_DESC_AMY + CommandTestUtil.COURSE_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_AMY + CommandTestUtil.PRIORITY_DESC_AMY,","lastModifiedDate":"2023-10-14"},{"lineNumber":232,"author":{"gitId":"awhb"},"content":"                new CreateCommand(expectedPersonWithoutTags));","lastModifiedDate":"2023-10-17"},{"lineNumber":233,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":234,"author":{"gitId":"awhb"},"content":"        // no non-name fields","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"awhb"},"content":"        Person expectedPersonWithoutOptionalFields \u003d new PersonBuilder(TypicalPersons.AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"awhb"},"content":"                .withoutOptionalFields()","lastModifiedDate":"2023-10-17"},{"lineNumber":237,"author":{"gitId":"awhb"},"content":"                .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":238,"author":{"gitId":"awhb"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":239,"author":{"gitId":"awhb"},"content":"                CommandTestUtil.NAME_DESC_AMY,","lastModifiedDate":"2023-10-17"},{"lineNumber":240,"author":{"gitId":"awhb"},"content":"                new CreateCommand(expectedPersonWithoutOptionalFields));","lastModifiedDate":"2023-10-17"},{"lineNumber":241,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":242,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":243,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":244,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-06"},{"lineNumber":245,"author":{"gitId":"Singa-pirate"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, CreateCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-11"},{"lineNumber":246,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":247,"author":{"gitId":"nknguyenhc"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-06"},{"lineNumber":248,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":249,"author":{"gitId":"nknguyenhc"},"content":"                CommandTestUtil.VALID_NAME_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2023-10-06"},{"lineNumber":250,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.LINK_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":251,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.GRADUATION_DESC_BOB + CommandTestUtil.COURSE_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":252,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_BOB,","lastModifiedDate":"2023-10-14"},{"lineNumber":253,"author":{"gitId":"nknguyenhc"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-06"},{"lineNumber":254,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":255,"author":{"gitId":"nknguyenhc"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-06"},{"lineNumber":256,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":257,"author":{"gitId":"nknguyenhc"},"content":"                CommandTestUtil.VALID_NAME_BOB + CommandTestUtil.VALID_PHONE_BOB","lastModifiedDate":"2023-10-06"},{"lineNumber":258,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.VALID_EMAIL_BOB + CommandTestUtil.VALID_LINK_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":259,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.VALID_GRADUATION_BOB + CommandTestUtil.VALID_COURSE_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":260,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.VALID_SPECIALISATION_BOB,","lastModifiedDate":"2023-10-14"},{"lineNumber":261,"author":{"gitId":"nknguyenhc"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-06"},{"lineNumber":262,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":263,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":264,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":265,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-06"},{"lineNumber":266,"author":{"gitId":"nknguyenhc"},"content":"        // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":267,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":268,"author":{"gitId":"nknguyenhc"},"content":"                CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2023-10-06"},{"lineNumber":269,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.LINK_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":270,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.GRADUATION_DESC_BOB + CommandTestUtil.COURSE_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":271,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":272,"author":{"gitId":"nknguyenhc"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":273,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":274,"author":{"gitId":"nknguyenhc"},"content":"        // invalid phone","lastModifiedDate":"2023-10-06"},{"lineNumber":275,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":276,"author":{"gitId":"nknguyenhc"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.INVALID_PHONE_DESC","lastModifiedDate":"2023-10-06"},{"lineNumber":277,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.LINK_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":278,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.GRADUATION_DESC_BOB + CommandTestUtil.COURSE_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":279,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":280,"author":{"gitId":"nknguyenhc"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-06"},{"lineNumber":281,"author":{"gitId":"nknguyenhc"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":282,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":283,"author":{"gitId":"nknguyenhc"},"content":"        // invalid email","lastModifiedDate":"2023-10-06"},{"lineNumber":284,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":285,"author":{"gitId":"nknguyenhc"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2023-10-06"},{"lineNumber":286,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.INVALID_EMAIL_DESC + CommandTestUtil.LINK_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":287,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.GRADUATION_DESC_BOB + CommandTestUtil.COURSE_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":288,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":289,"author":{"gitId":"nknguyenhc"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-06"},{"lineNumber":290,"author":{"gitId":"nknguyenhc"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":291,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":292,"author":{"gitId":"awhb"},"content":"        // invalid link","lastModifiedDate":"2023-10-14"},{"lineNumber":293,"author":{"gitId":"awhb"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-14"},{"lineNumber":294,"author":{"gitId":"awhb"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":295,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.INVALID_LINK_DESC","lastModifiedDate":"2023-10-14"},{"lineNumber":296,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.GRADUATION_DESC_BOB + CommandTestUtil.COURSE_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":297,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":298,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-14"},{"lineNumber":299,"author":{"gitId":"awhb"},"content":"                Link.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":300,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":301,"author":{"gitId":"xenosf"},"content":"        // invalid graduation date","lastModifiedDate":"2023-10-18"},{"lineNumber":302,"author":{"gitId":"awhb"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-14"},{"lineNumber":303,"author":{"gitId":"awhb"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":304,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.LINK_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":305,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.INVALID_GRADUATION_DESC + CommandTestUtil.COURSE_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":306,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":307,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-14"},{"lineNumber":308,"author":{"gitId":"xenosf"},"content":"                Graduation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":309,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":310,"author":{"gitId":"awhb"},"content":"        // invalid course","lastModifiedDate":"2023-10-14"},{"lineNumber":311,"author":{"gitId":"awhb"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-14"},{"lineNumber":312,"author":{"gitId":"awhb"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":313,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.LINK_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":314,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.GRADUATION_DESC_BOB + CommandTestUtil.INVALID_COURSE_DESC","lastModifiedDate":"2023-10-18"},{"lineNumber":315,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":316,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-14"},{"lineNumber":317,"author":{"gitId":"awhb"},"content":"                Course.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":318,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":319,"author":{"gitId":"awhb"},"content":"        // invalid specialisation","lastModifiedDate":"2023-10-14"},{"lineNumber":320,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":321,"author":{"gitId":"nknguyenhc"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2023-10-06"},{"lineNumber":322,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.LINK_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":323,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.GRADUATION_DESC_BOB + CommandTestUtil.COURSE_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":324,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.INVALID_SPECIALISATION_DESC","lastModifiedDate":"2023-10-14"},{"lineNumber":325,"author":{"gitId":"nknguyenhc"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-06"},{"lineNumber":326,"author":{"gitId":"awhb"},"content":"                Specialisation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":327,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":328,"author":{"gitId":"nknguyenhc"},"content":"        // invalid tag","lastModifiedDate":"2023-10-06"},{"lineNumber":329,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":330,"author":{"gitId":"nknguyenhc"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2023-10-06"},{"lineNumber":331,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.LINK_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":332,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.GRADUATION_DESC_BOB + CommandTestUtil.COURSE_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":333,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":334,"author":{"gitId":"nknguyenhc"},"content":"                        + CommandTestUtil.INVALID_TAG_DESC + CommandTestUtil.VALID_TAG_FRIEND,","lastModifiedDate":"2023-10-06"},{"lineNumber":335,"author":{"gitId":"nknguyenhc"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":336,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":337,"author":{"gitId":"Singa-pirate"},"content":"        String validExpectedPersonString \u003d CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2023-10-26"},{"lineNumber":338,"author":{"gitId":"Singa-pirate"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2023-10-26"},{"lineNumber":339,"author":{"gitId":"Singa-pirate"},"content":"                + CommandTestUtil.LINK_DESC_BOB + CommandTestUtil.GRADUATION_DESC_BOB","lastModifiedDate":"2023-10-26"},{"lineNumber":340,"author":{"gitId":"Singa-pirate"},"content":"                + CommandTestUtil.COURSE_DESC_BOB + CommandTestUtil.SPECIALISATION_DESC_BOB","lastModifiedDate":"2023-10-26"},{"lineNumber":341,"author":{"gitId":"Singa-pirate"},"content":"                + CommandTestUtil.PRIORITY_DESC_BOB + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-26"},{"lineNumber":342,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":343,"author":{"gitId":"Singa-pirate"},"content":"        // duplicate multi-valued field, invalid followed by valid","lastModifiedDate":"2023-10-26"},{"lineNumber":344,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":345,"author":{"gitId":"Singa-pirate"},"content":"        // invalid email","lastModifiedDate":"2023-10-26"},{"lineNumber":346,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-26"},{"lineNumber":347,"author":{"gitId":"Singa-pirate"},"content":"                CommandTestUtil.INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-26"},{"lineNumber":348,"author":{"gitId":"Singa-pirate"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":349,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":350,"author":{"gitId":"Singa-pirate"},"content":"        // invalid phone","lastModifiedDate":"2023-10-26"},{"lineNumber":351,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-26"},{"lineNumber":352,"author":{"gitId":"Singa-pirate"},"content":"                CommandTestUtil.INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-26"},{"lineNumber":353,"author":{"gitId":"Singa-pirate"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":354,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":355,"author":{"gitId":"Singa-pirate"},"content":"        // invalid link","lastModifiedDate":"2023-10-26"},{"lineNumber":356,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-26"},{"lineNumber":357,"author":{"gitId":"Singa-pirate"},"content":"                CommandTestUtil.INVALID_LINK_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-26"},{"lineNumber":358,"author":{"gitId":"Singa-pirate"},"content":"                Link.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":359,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":360,"author":{"gitId":"Singa-pirate"},"content":"        // invalid course","lastModifiedDate":"2023-10-26"},{"lineNumber":361,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-26"},{"lineNumber":362,"author":{"gitId":"Singa-pirate"},"content":"                CommandTestUtil.INVALID_COURSE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-26"},{"lineNumber":363,"author":{"gitId":"Singa-pirate"},"content":"                Course.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":364,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":365,"author":{"gitId":"Singa-pirate"},"content":"        // invalid specialisation","lastModifiedDate":"2023-10-26"},{"lineNumber":366,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-26"},{"lineNumber":367,"author":{"gitId":"Singa-pirate"},"content":"                CommandTestUtil.INVALID_SPECIALISATION_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-26"},{"lineNumber":368,"author":{"gitId":"Singa-pirate"},"content":"                Specialisation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":369,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":370,"author":{"gitId":"Singa-pirate"},"content":"        // duplicate multi-valued field, valid followed by invalid","lastModifiedDate":"2023-10-26"},{"lineNumber":371,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":372,"author":{"gitId":"Singa-pirate"},"content":"        // invalid email","lastModifiedDate":"2023-10-26"},{"lineNumber":373,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-26"},{"lineNumber":374,"author":{"gitId":"Singa-pirate"},"content":"                validExpectedPersonString + CommandTestUtil.INVALID_EMAIL_DESC,","lastModifiedDate":"2023-10-26"},{"lineNumber":375,"author":{"gitId":"Singa-pirate"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":376,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":377,"author":{"gitId":"Singa-pirate"},"content":"        // invalid phone","lastModifiedDate":"2023-10-26"},{"lineNumber":378,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-26"},{"lineNumber":379,"author":{"gitId":"Singa-pirate"},"content":"                validExpectedPersonString + CommandTestUtil.INVALID_PHONE_DESC,","lastModifiedDate":"2023-10-26"},{"lineNumber":380,"author":{"gitId":"Singa-pirate"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":381,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":382,"author":{"gitId":"Singa-pirate"},"content":"        // invalid link","lastModifiedDate":"2023-10-26"},{"lineNumber":383,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-26"},{"lineNumber":384,"author":{"gitId":"Singa-pirate"},"content":"                validExpectedPersonString + CommandTestUtil.INVALID_LINK_DESC,","lastModifiedDate":"2023-10-26"},{"lineNumber":385,"author":{"gitId":"Singa-pirate"},"content":"                Link.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":386,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":387,"author":{"gitId":"Singa-pirate"},"content":"        // invalid course","lastModifiedDate":"2023-10-26"},{"lineNumber":388,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-26"},{"lineNumber":389,"author":{"gitId":"Singa-pirate"},"content":"                validExpectedPersonString + CommandTestUtil.INVALID_COURSE_DESC,","lastModifiedDate":"2023-10-26"},{"lineNumber":390,"author":{"gitId":"Singa-pirate"},"content":"                Course.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":391,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":392,"author":{"gitId":"Singa-pirate"},"content":"        // invalid specialisation","lastModifiedDate":"2023-10-26"},{"lineNumber":393,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-26"},{"lineNumber":394,"author":{"gitId":"Singa-pirate"},"content":"                validExpectedPersonString + CommandTestUtil.INVALID_SPECIALISATION_DESC,","lastModifiedDate":"2023-10-26"},{"lineNumber":395,"author":{"gitId":"Singa-pirate"},"content":"                Specialisation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":396,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":397,"author":{"gitId":"nknguyenhc"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-06"},{"lineNumber":398,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":399,"author":{"gitId":"nknguyenhc"},"content":"                CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2023-10-06"},{"lineNumber":400,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.INVALID_LINK_DESC","lastModifiedDate":"2023-10-14"},{"lineNumber":401,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.GRADUATION_DESC_BOB + CommandTestUtil.COURSE_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":402,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_BOB,","lastModifiedDate":"2023-10-14"},{"lineNumber":403,"author":{"gitId":"nknguyenhc"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":404,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":405,"author":{"gitId":"nknguyenhc"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-06"},{"lineNumber":406,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":407,"author":{"gitId":"nknguyenhc"},"content":"                CommandTestUtil.PREAMBLE_NON_EMPTY + CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2023-10-06"},{"lineNumber":408,"author":{"gitId":"nknguyenhc"},"content":"                        + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2023-10-06"},{"lineNumber":409,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.LINK_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":410,"author":{"gitId":"xenosf"},"content":"                        + CommandTestUtil.GRADUATION_DESC_BOB + CommandTestUtil.COURSE_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":411,"author":{"gitId":"awhb"},"content":"                        + CommandTestUtil.SPECIALISATION_DESC_BOB + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-14"},{"lineNumber":412,"author":{"gitId":"nknguyenhc"},"content":"                        + CommandTestUtil.TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-06"},{"lineNumber":413,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, CreateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-11"},{"lineNumber":414,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":415,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Eola-Z":5,"nknguyenhc":137,"xenosf":41,"Singa-pirate":79,"awhb":153}},{"path":"src/test/java/networkbook/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeleteCourseAction;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeleteEmailAction;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeleteFieldCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeleteGraduationAction;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeleteLinkAction;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeletePersonCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeletePhoneAction;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeletePriorityAction;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeleteSpecialisationAction;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeleteTagAction;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":" * Test class that contains unit test cases for {@code DeleteCommandParser}.","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"    private static final String NAME \u003d CliSyntax.PREFIX_NAME.getPrefix();","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"    private static final String PHONE \u003d CliSyntax.PREFIX_PHONE.getPrefix();","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"    private static final String EMAIL \u003d CliSyntax.PREFIX_EMAIL.getPrefix();","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"    private static final String LINK \u003d CliSyntax.PREFIX_LINK.getPrefix();","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"    private static final String GRADUATION \u003d CliSyntax.PREFIX_GRADUATION.getPrefix();","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"    private static final String COURSE \u003d CliSyntax.PREFIX_COURSE.getPrefix();","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"    private static final String SPECIALISATION \u003d CliSyntax.PREFIX_SPECIALISATION.getPrefix();","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"    private static final String PRIORITY \u003d CliSyntax.PREFIX_PRIORITY.getPrefix();","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"    private static final String TAG \u003d CliSyntax.PREFIX_TAG.getPrefix();","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"    private static final String INDEX \u003d CliSyntax.PREFIX_INDEX.getPrefix();","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"    private static final String WHITESPACE \u003d \" \";","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"    private static final String LONG_WHITESPACE \u003d \"         \";","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"    private static final String ONE \u003d \"1\";","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"    private static final String TWO \u003d \"2\";","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"    private static final String RANDOM \u003d \"$\u0027fn2\";","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"    private static final String INVALID_PREFIX \u003d \"/invalid\";","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"    private static final Index INDEX_ONE \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"    private static final Index INDEX_TWO \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePhoneAction DELETE_FIRST_PHONE_ACTION \u003d new DeletePhoneAction(INDEX_ONE);","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeleteEmailAction DELETE_FIRST_EMAIL_ACTION \u003d new DeleteEmailAction(INDEX_ONE);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeleteLinkAction DELETE_FIRST_LINK_ACTION \u003d new DeleteLinkAction(INDEX_ONE);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeleteCourseAction DELETE_FIRST_COURSE_ACTION \u003d new DeleteCourseAction(INDEX_ONE);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeleteSpecialisationAction DELETE_FIRST_SPECIALISATION_ACTION \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"            new DeleteSpecialisationAction(INDEX_ONE);","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeleteTagAction DELETE_FIRST_TAG_ACTION \u003d new DeleteTagAction(INDEX_ONE);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeleteGraduationAction DELETE_GRADUATION_ACTION \u003d new DeleteGraduationAction();","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"    private static final DeletePriorityAction DELETE_PRIORITY_ACTION \u003d new DeletePriorityAction();","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"    public String generateUserInput(String... parts) {","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"        for (int i \u003d 0; i \u003c parts.length - 1; i++) {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"            sb.append(parts[i]);","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"            sb.append(WHITESPACE);","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"        sb.append(parts[parts.length - 1]);","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_validIndex_returnsDeletePersonCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"1\",","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"                new DeletePersonCommand(TypicalIndexes.INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_noPersonIndex_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser, WHITESPACE,","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(NAME),","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(INDEX, ONE),","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(INDEX),","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(PRIORITY),","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_deleteName_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, NAME),","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"Singa-pirate"},"content":"                DeleteCommandParser.MESSAGE_DELETE_NAME);","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, PHONE, NAME, RANDOM),","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"Singa-pirate"},"content":"                DeleteCommandParser.MESSAGE_DELETE_NAME);","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, NAME, INDEX, ONE),","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"Singa-pirate"},"content":"                DeleteCommandParser.MESSAGE_DELETE_NAME);","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_deleteInvalidPrefix_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, INVALID_PREFIX),","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, INVALID_PREFIX, INDEX, ONE),","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, INVALID_PREFIX, GRADUATION),","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, INVALID_PREFIX, TAG, INDEX, ONE),","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, INDEX),","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, INDEX, ONE),","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, INDEX, ONE, INDEX, TWO),","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_deleteMultiplePrefixes_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, GRADUATION, PRIORITY),","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"Singa-pirate"},"content":"                Messages.MESSAGE_EXACTLY_ONE_FIELD);","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, GRADUATION, TAG),","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"Singa-pirate"},"content":"                Messages.MESSAGE_EXACTLY_ONE_FIELD);","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, TAG, GRADUATION, PRIORITY),","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"Singa-pirate"},"content":"                Messages.MESSAGE_EXACTLY_ONE_FIELD);","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, GRADUATION, TAG, INDEX, ONE),","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"Singa-pirate"},"content":"                Messages.MESSAGE_EXACTLY_ONE_FIELD);","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, GRADUATION, PRIORITY, INDEX, ONE),","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"Singa-pirate"},"content":"                Messages.MESSAGE_EXACTLY_ONE_FIELD);","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, GRADUATION, INDEX, ONE, PRIORITY),","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"Singa-pirate"},"content":"                Messages.MESSAGE_EXACTLY_ONE_FIELD);","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, GRADUATION, RANDOM, PRIORITY),","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"Singa-pirate"},"content":"                Messages.MESSAGE_EXACTLY_ONE_FIELD);","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_deleteSamePrefixMultipleTimes_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, PRIORITY, PRIORITY),","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"Singa-pirate"},"content":"                Messages.MESSAGE_DUPLICATE_PREFIX);","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, EMAIL, INDEX, ONE, EMAIL, INDEX, ONE),","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"Singa-pirate"},"content":"                Messages.MESSAGE_DUPLICATE_PREFIX);","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, LINK, GRADUATION, LINK),","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"Singa-pirate"},"content":"                Messages.MESSAGE_DUPLICATE_PREFIX);","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, COURSE, RANDOM, COURSE, INDEX, PRIORITY),","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"Singa-pirate"},"content":"                Messages.MESSAGE_DUPLICATE_PREFIX);","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_deleteMultiValuedFieldInvalidIndex_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, TAG),","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INDEX_MUST_BE_PRESENT, TAG));","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, SPECIALISATION, INDEX, ONE, INDEX, TWO),","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INDEX_MUST_BE_PRESENT, SPECIALISATION));","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, LINK, INDEX, ONE, INDEX, ONE),","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INDEX_MUST_BE_PRESENT, LINK));","lastModifiedDate":"2023-10-27"},{"lineNumber":188,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":189,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, COURSE, INDEX, INDEX),","lastModifiedDate":"2023-10-27"},{"lineNumber":190,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INDEX_MUST_BE_PRESENT, COURSE));","lastModifiedDate":"2023-10-27"},{"lineNumber":191,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":192,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_deleteSingleValuedFieldUsingIndex_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, PRIORITY, INDEX, ONE),","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"Singa-pirate"},"content":"                Messages.MESSAGE_INDEX_CANNOT_BE_PRESENT);","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, PRIORITY, INDEX, ONE, INDEX, TWO),","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"Singa-pirate"},"content":"                Messages.MESSAGE_INDEX_CANNOT_BE_PRESENT);","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, GRADUATION, INDEX),","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"Singa-pirate"},"content":"                Messages.MESSAGE_INDEX_CANNOT_BE_PRESENT);","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, GRADUATION, INDEX, RANDOM),","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"Singa-pirate"},"content":"                Messages.MESSAGE_INDEX_CANNOT_BE_PRESENT);","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_deleteWithRedundantValue_throwsParseException() throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, PRIORITY, RANDOM),","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_VALUE_CANNOT_BE_PRESENT, PRIORITY));","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, GRADUATION, RANDOM),","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_VALUE_CANNOT_BE_PRESENT, GRADUATION));","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, TAG, RANDOM, INDEX, ONE),","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_VALUE_CANNOT_BE_PRESENT, TAG));","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":221,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, INDEX, ONE, LINK, RANDOM),","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_VALUE_CANNOT_BE_PRESENT, LINK));","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":224,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":226,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_deleteSingleValuedField_success() throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand expectedGraduationCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_GRADUATION_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, GRADUATION),","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"Singa-pirate"},"content":"                expectedGraduationCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand expectedPriorityCommand \u003d new DeleteFieldCommand(INDEX_TWO, DELETE_PRIORITY_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(TWO, PRIORITY),","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"Singa-pirate"},"content":"                expectedPriorityCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_deleteMultiValuedField_success() throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand expectedEmailCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_FIRST_EMAIL_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, EMAIL, INDEX, ONE),","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"Singa-pirate"},"content":"                expectedEmailCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand expectedLinkCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_FIRST_LINK_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, INDEX, ONE, LINK),","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"Singa-pirate"},"content":"                expectedLinkCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand expectedPhoneCommand \u003d new DeleteFieldCommand(INDEX_TWO, DELETE_FIRST_PHONE_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(TWO, PHONE, INDEX, ONE),","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"Singa-pirate"},"content":"                expectedPhoneCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":255,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand expectedCourseCommand \u003d new DeleteFieldCommand(INDEX_TWO, DELETE_FIRST_COURSE_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(TWO, INDEX, ONE, COURSE),","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"Singa-pirate"},"content":"                expectedCourseCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":259,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand expectedSpecCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_FIRST_SPECIALISATION_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":261,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, SPECIALISATION, INDEX, ONE),","lastModifiedDate":"2023-10-27"},{"lineNumber":263,"author":{"gitId":"Singa-pirate"},"content":"                expectedSpecCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":265,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand expectedTagCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_FIRST_TAG_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":266,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":267,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, INDEX, ONE, TAG),","lastModifiedDate":"2023-10-27"},{"lineNumber":268,"author":{"gitId":"Singa-pirate"},"content":"                expectedTagCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":272,"author":{"gitId":"Singa-pirate"},"content":"    public void parse_deleteValidInputWithWhiteSpaces_success() throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand expectedEmailCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_FIRST_EMAIL_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":274,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":275,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, LONG_WHITESPACE, EMAIL, INDEX, ONE),","lastModifiedDate":"2023-10-27"},{"lineNumber":276,"author":{"gitId":"Singa-pirate"},"content":"                expectedEmailCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":277,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":278,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand expectedLinkCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_FIRST_LINK_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":279,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":280,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, INDEX, LONG_WHITESPACE, ONE, LINK),","lastModifiedDate":"2023-10-27"},{"lineNumber":281,"author":{"gitId":"Singa-pirate"},"content":"                expectedLinkCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":282,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":283,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand expectedPhoneCommand \u003d new DeleteFieldCommand(INDEX_TWO, DELETE_FIRST_PHONE_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":284,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":285,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(TWO, PHONE, INDEX, LONG_WHITESPACE, ONE),","lastModifiedDate":"2023-10-27"},{"lineNumber":286,"author":{"gitId":"Singa-pirate"},"content":"                expectedPhoneCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":287,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":288,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand expectedCourseCommand \u003d new DeleteFieldCommand(INDEX_TWO, DELETE_FIRST_COURSE_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":289,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":290,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(LONG_WHITESPACE, TWO, LONG_WHITESPACE, INDEX, ONE, COURSE),","lastModifiedDate":"2023-10-27"},{"lineNumber":291,"author":{"gitId":"Singa-pirate"},"content":"                expectedCourseCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":292,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":293,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand expectedSpecCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_FIRST_SPECIALISATION_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":294,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":295,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(ONE, SPECIALISATION, INDEX, LONG_WHITESPACE, ONE, LONG_WHITESPACE),","lastModifiedDate":"2023-10-27"},{"lineNumber":296,"author":{"gitId":"Singa-pirate"},"content":"                expectedSpecCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":297,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":298,"author":{"gitId":"Singa-pirate"},"content":"        DeleteFieldCommand expectedTagCommand \u003d new DeleteFieldCommand(INDEX_ONE, DELETE_FIRST_TAG_ACTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":299,"author":{"gitId":"Singa-pirate"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":300,"author":{"gitId":"Singa-pirate"},"content":"                generateUserInput(LONG_WHITESPACE, ONE, LONG_WHITESPACE, INDEX,","lastModifiedDate":"2023-10-27"},{"lineNumber":301,"author":{"gitId":"Singa-pirate"},"content":"                        LONG_WHITESPACE, ONE, LONG_WHITESPACE, TAG),","lastModifiedDate":"2023-10-27"},{"lineNumber":302,"author":{"gitId":"Singa-pirate"},"content":"                expectedTagCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":303,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"nknguyenhc":4,"Singa-pirate":285,"-":15}},{"path":"src/test/java/networkbook/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditCommandUtil;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditCourseAction;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditEmailAction;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditGraduationAction;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditLinkAction;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditNameAction;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditPhoneAction;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditPriorityAction;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditSpecialisationAction;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditTagAction;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"    private static final EditCommandParser PARSER \u003d new EditCommandParser();","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    private static final String USAGE_MESSAGE \u003d String.format(","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"            Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"            EditCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    );","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_noPreamble_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER, \"\", USAGE_MESSAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER, CliSyntax.PREFIX_INDEX + \" 1\", USAGE_MESSAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"                CliSyntax.PREFIX_PHONE + \" 123456 \" + CliSyntax.PREFIX_INDEX + \" 1\", USAGE_MESSAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER, \"-1\", USAGE_MESSAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER, \"-1 \" + CliSyntax.PREFIX_PHONE","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"                + \" 123456 \" + CliSyntax.PREFIX_INDEX + \" 1\", USAGE_MESSAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER, \"0\", USAGE_MESSAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER, \"1 quack\", USAGE_MESSAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER, \"1 quack \" + CliSyntax.PREFIX_PHONE + \" 123456 \"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_INDEX + \" 1\", USAGE_MESSAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_noFieldSpecified_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER, \"1\", Messages.MESSAGE_EXACTLY_ONE_FIELD);","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER, \"1 \" + CliSyntax.PREFIX_INDEX + \" 1\", Messages.MESSAGE_EXACTLY_ONE_FIELD);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_multipleFieldsSpecified_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.VALID_PHONE_DESC + CommandTestUtil.VALID_COURSE_DESC","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"                        + CommandTestUtil.VALID_INDEX_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"                Messages.MESSAGE_EXACTLY_ONE_FIELD);","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_multipleIndicesSpecified_failure() {","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.VALID_PHONE_DESC + CommandTestUtil.VALID_INDEX_DESC","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"                        + CommandTestUtil.VALID_INDEX_DESC,","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INDEX_MUST_BE_PRESENT, CliSyntax.PREFIX_PHONE));","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_listItemFieldWithoutIndexSpecified_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.VALID_PHONE_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INDEX_MUST_BE_PRESENT, CliSyntax.PREFIX_PHONE));","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.VALID_EMAIL_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INDEX_MUST_BE_PRESENT, CliSyntax.PREFIX_EMAIL));","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.VALID_LINK_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INDEX_MUST_BE_PRESENT, CliSyntax.PREFIX_LINK));","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.VALID_COURSE_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INDEX_MUST_BE_PRESENT, CliSyntax.PREFIX_COURSE));","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.VALID_SPECIALISATION_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INDEX_MUST_BE_PRESENT, CliSyntax.PREFIX_SPECIALISATION));","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.VALID_TAG_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"Singa-pirate"},"content":"                String.format(Messages.MESSAGE_INDEX_MUST_BE_PRESENT, CliSyntax.PREFIX_TAG));","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_singleValueFieldWithIndexSpecified_failure() {","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.VALID_NAME_DESC + CommandTestUtil.VALID_INDEX_DESC,","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"                Messages.MESSAGE_INDEX_CANNOT_BE_PRESENT);","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.VALID_GRADUATION_DESC + CommandTestUtil.VALID_INDEX_DESC,","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"                Messages.MESSAGE_INDEX_CANNOT_BE_PRESENT);","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.VALID_PRIORITY_DESC + CommandTestUtil.VALID_INDEX_DESC,","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"                Messages.MESSAGE_INDEX_CANNOT_BE_PRESENT);","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.INVALID_NAME_DESC,","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"                Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.VALID_INDEX_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"                Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.INVALID_EMAIL_DESC + CommandTestUtil.VALID_INDEX_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"                Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.INVALID_LINK_DESC + CommandTestUtil.VALID_INDEX_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"awhb"},"content":"                Link.MESSAGE_CONSTRAINTS); // invalid link","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"xenosf"},"content":"                \"1\" + CommandTestUtil.INVALID_GRADUATION_DESC,","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"                Graduation.MESSAGE_CONSTRAINTS); // invalid Graduating Year","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.INVALID_COURSE_DESC + CommandTestUtil.VALID_INDEX_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"                Course.MESSAGE_CONSTRAINTS); // invalid Course","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.INVALID_SPECIALISATION_DESC + CommandTestUtil.VALID_INDEX_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"                Specialisation.MESSAGE_CONSTRAINTS); // invalid Specialisation","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.INVALID_TAG_DESC + CommandTestUtil.VALID_INDEX_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(PARSER,","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"                \"1\" + CommandTestUtil.INVALID_PRIORITY_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":143,"author":{"gitId":"nknguyenhc"},"content":"                Priority.MESSAGE_CONSTRAINTS); // invalid priority","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_validName_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"        String userInput \u003d TypicalIndexes.INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_NAME + \" \" + CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"        EditNameAction expectedEditAction \u003d new EditNameAction(new Name(CommandTestUtil.VALID_NAME_AMY));","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand expectedCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, expectedEditAction);","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"        assertParseSuccess(PARSER, userInput, expectedCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_validPhoneAndIndex_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"        String userInput \u003d TypicalIndexes.INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_PHONE + \" \" + CommandTestUtil.VALID_PHONE_AMY + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_INDEX + \" \" + EditCommandUtil.VALID_INDEX.getOneBased();","lastModifiedDate":"2023-10-23"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"        EditPhoneAction expectedAction \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"                new EditPhoneAction(EditCommandUtil.VALID_INDEX, new Phone(CommandTestUtil.VALID_PHONE_AMY));","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand expectedCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, expectedAction);","lastModifiedDate":"2023-10-23"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"        assertParseSuccess(PARSER, userInput, expectedCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":167,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_validEmailAndIndex_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"        String userInput \u003d TypicalIndexes.INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_EMAIL + \" \" + CommandTestUtil.VALID_EMAIL_AMY + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_INDEX + \" \" + EditCommandUtil.VALID_INDEX.getOneBased();","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"        EditEmailAction expectedAction \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"nknguyenhc"},"content":"                new EditEmailAction(EditCommandUtil.VALID_INDEX, new Email(CommandTestUtil.VALID_EMAIL_AMY));","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand expectedCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, expectedAction);","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"nknguyenhc"},"content":"        assertParseSuccess(PARSER, userInput, expectedCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":175,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":176,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":177,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_validLinkAndIndex_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"        String userInput \u003d TypicalIndexes.INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_LINK + \" \" + CommandTestUtil.VALID_LINK_AMY + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":181,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_INDEX + \" \" + EditCommandUtil.VALID_INDEX.getOneBased();","lastModifiedDate":"2023-10-23"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"        EditLinkAction expectedAction \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":183,"author":{"gitId":"nknguyenhc"},"content":"                new EditLinkAction(EditCommandUtil.VALID_INDEX, new Link(CommandTestUtil.VALID_LINK_AMY));","lastModifiedDate":"2023-10-23"},{"lineNumber":184,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand expectedCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, expectedAction);","lastModifiedDate":"2023-10-23"},{"lineNumber":185,"author":{"gitId":"nknguyenhc"},"content":"        assertParseSuccess(PARSER, userInput, expectedCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":186,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":187,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":188,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":189,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_validGraduation_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":190,"author":{"gitId":"nknguyenhc"},"content":"        String userInput \u003d TypicalIndexes.INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_GRADUATION + \" \" + CommandTestUtil.VALID_GRADUATION_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"nknguyenhc"},"content":"        EditGraduationAction expectedAction \u003d new EditGraduationAction(","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"nknguyenhc"},"content":"                new Graduation(CommandTestUtil.VALID_GRADUATION_AMY));","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand expectedCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, expectedAction);","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"nknguyenhc"},"content":"        assertParseSuccess(PARSER, userInput, expectedCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":198,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_validCourseAndIndex_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":200,"author":{"gitId":"nknguyenhc"},"content":"        String userInput \u003d TypicalIndexes.INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":201,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_COURSE + \" \" + CommandTestUtil.VALID_COURSE_AMY + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_INDEX + \" \" + EditCommandUtil.VALID_INDEX.getOneBased();","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"nknguyenhc"},"content":"        EditCourseAction expectedAction \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":204,"author":{"gitId":"nknguyenhc"},"content":"                new EditCourseAction(TypicalIndexes.INDEX_FIRST_PERSON, new Course(CommandTestUtil.VALID_COURSE_AMY));","lastModifiedDate":"2023-10-23"},{"lineNumber":205,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand expectedCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, expectedAction);","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"nknguyenhc"},"content":"        assertParseSuccess(PARSER, userInput, expectedCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":208,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":209,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":210,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_validSpecialisationAndIndex_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":211,"author":{"gitId":"nknguyenhc"},"content":"        String userInput \u003d TypicalIndexes.INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":212,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_SPECIALISATION + \" \" + CommandTestUtil.VALID_SPECIALISATION_AMY + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_INDEX + \" \" + EditCommandUtil.VALID_INDEX.getOneBased();","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"nknguyenhc"},"content":"        EditSpecialisationAction expectedAction \u003d new EditSpecialisationAction(","lastModifiedDate":"2023-10-23"},{"lineNumber":215,"author":{"gitId":"nknguyenhc"},"content":"                TypicalIndexes.INDEX_FIRST_PERSON, new Specialisation(CommandTestUtil.VALID_SPECIALISATION_AMY));","lastModifiedDate":"2023-10-23"},{"lineNumber":216,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand expectedCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, expectedAction);","lastModifiedDate":"2023-10-23"},{"lineNumber":217,"author":{"gitId":"nknguyenhc"},"content":"        assertParseSuccess(PARSER, userInput, expectedCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":218,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":219,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":220,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":221,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_validTagAndIndex_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":222,"author":{"gitId":"nknguyenhc"},"content":"        String userInput \u003d TypicalIndexes.INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":223,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_TAG + \" \" + CommandTestUtil.VALID_TAG_FRIEND + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":224,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_INDEX + \" \" + EditCommandUtil.VALID_INDEX.getOneBased();","lastModifiedDate":"2023-10-23"},{"lineNumber":225,"author":{"gitId":"nknguyenhc"},"content":"        EditTagAction expectedAction \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":226,"author":{"gitId":"nknguyenhc"},"content":"                new EditTagAction(TypicalIndexes.INDEX_FIRST_PERSON, new Tag(CommandTestUtil.VALID_TAG_FRIEND));","lastModifiedDate":"2023-10-23"},{"lineNumber":227,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand expectedCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, expectedAction);","lastModifiedDate":"2023-10-23"},{"lineNumber":228,"author":{"gitId":"nknguyenhc"},"content":"        assertParseSuccess(PARSER, userInput, expectedCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":229,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":230,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":231,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":232,"author":{"gitId":"nknguyenhc"},"content":"    public void parse_validPriority_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":233,"author":{"gitId":"nknguyenhc"},"content":"        String userInput \u003d TypicalIndexes.INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":234,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_PRIORITY + \" \" + CommandTestUtil.VALID_PRIORITY_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":235,"author":{"gitId":"nknguyenhc"},"content":"        EditPriorityAction expectedAction \u003d new EditPriorityAction(new Priority(CommandTestUtil.VALID_PRIORITY_AMY));","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"nknguyenhc"},"content":"        EditCommand expectedCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, expectedAction);","lastModifiedDate":"2023-10-23"},{"lineNumber":237,"author":{"gitId":"nknguyenhc"},"content":"        assertParseSuccess(PARSER, userInput, expectedCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":238,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":239,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"nknguyenhc":225,"xenosf":2,"Singa-pirate":8,"awhb":4}},{"path":"src/test/java/networkbook/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"import static networkbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"import static networkbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"import networkbook.logic.commands.filter.FilterCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.filter.CourseContainsKeyTermsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.filter.CourseIsStillBeingTakenPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"        assertParseFailure(parser, \"    \",","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"    public void parse_noFields_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"        assertParseFailure(parser, \"filter /with \",","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"                new CourseContainsKeyTermsPredicate(List.of(\"Alice\", \"Bob\")),","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.now()),","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"                false);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"        // no whitespaces","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"        assertParseSuccess(parser, \"filter /with Alice Bob\", expectedCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"        // multiple whitespaces","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Eola-Z"},"content":"        assertParseSuccess(parser, \"filter /with  Alice    Bob\", expectedCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"    public void parse_takenFieldNotTrueOrFalse_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Eola-Z"},"content":"        assertParseFailure(parser, \"filter /with Alice /taken no\",","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Eola-Z"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Eola-Z"},"content":"    public void parse_validTakenField_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Eola-Z"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Eola-Z"},"content":"                new CourseContainsKeyTermsPredicate(List.of(\"Alice\", \"Bob\")),","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.now()),","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Eola-Z"},"content":"                true);","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Eola-Z"},"content":"        assertParseSuccess(parser, \"filter /with Alice Bob /taken true\", expectedCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Eola-Z":61}},{"path":"src/test/java/networkbook/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.FindCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.NameContainsKeyTermsPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"                new FindCommand(new NameContainsKeyTermsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"nknguyenhc":7,"-":26,"awhb":2}},{"path":"src/test/java/networkbook/logic/parser/NetworkBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.CreateCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.FindCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.ListCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"import networkbook.logic.commands.SortCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.delete.DeletePersonCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.edit.EditNameAction;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"import networkbook.logic.commands.filter.FilterCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.NameContainsKeyTermsPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator.SortField;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator.SortOrder;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.filter.CourseContainsKeyTermsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.filter.CourseIsStillBeingTakenPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.PersonBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.PersonUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"public class NetworkBookParserTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"    private final NetworkBookParser parser \u003d new NetworkBookParser();","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"        CreateCommand command \u003d (CreateCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(new CreateCommand(person), command);","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) parser.parseCommand(","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"                DeletePersonCommand.COMMAND_WORD + \" \" + TypicalIndexes.INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(new DeletePersonCommand(TypicalIndexes.INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"                + TypicalIndexes.INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"                + CliSyntax.PREFIX_NAME + \" \" + CommandTestUtil.VALID_NAME_AMY);","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"        EditNameAction expectedAction \u003d new EditNameAction(new Name(CommandTestUtil.VALID_NAME_AMY));","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, expectedAction), command);","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"awhb"},"content":"        assertEquals(new FindCommand(new NameContainsKeyTermsPredicate(keywords)), command);","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"xenosf"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"xenosf"},"content":"        SortCommand command \u003d (SortCommand) parser.parseCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"xenosf"},"content":"                SortCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"xenosf"},"content":"                + CliSyntax.PREFIX_SORT_FIELD + \" NAMe \"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"xenosf"},"content":"                + CliSyntax.PREFIX_SORT_ORDER + \" desCending\");","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator expectedCmp \u003d new PersonSortComparator(SortField.NAME, SortOrder.DESCENDING);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"xenosf"},"content":"        assertEquals(new SortCommand(expectedCmp), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Eola-Z"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Eola-Z"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Eola-Z"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Eola-Z"},"content":"                FilterCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Eola-Z"},"content":"                        + CliSyntax.PREFIX_FILTER_FIELD + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Eola-Z"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \"))","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Eola-Z"},"content":"        );","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(new FilterCommand(","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"Eola-Z"},"content":"                new CourseContainsKeyTermsPredicate(keywords),","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.now()),","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Eola-Z"},"content":"                false), command);","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                        -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(ParseException.class, Messages.MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"                -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Eola-Z":18,"nknguyenhc":30,"xenosf":14,"Singa-pirate":7,"-":65,"awhb":1}},{"path":"src/test/java/networkbook/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator.SortField;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator.SortOrder;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"    private static final String INVALID_LINK \u003d \"facebookcom\";","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"    private static final String INVALID_GRADUATION \u003d \"2024\";","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"    private static final String INVALID_COURSE \u003d \"\";","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"    private static final String INVALID_SPECIALISATION \u003d \"\";","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"    private static final String INVALID_PRIORITY \u003d \"hi\";","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"    private static final String INVALID_SORT_FIELD \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"    private static final String INVALID_SORT_ORDER \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"    private static final String VALID_PHONE_2 \u003d \"98765432\";","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"    private static final String VALID_LINK \u003d \"www.facebook.com/alice\";","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"    private static final String VALID_LINK_2 \u003d \"https://www.google.com/?q\u003dhaha\";","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"    private static final String VALID_GRADUATION \u003d \"AY9900-S2\";","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"    private static final String VALID_COURSE \u003d \"Computer Science\";","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"    private static final String VALID_SPECIALISATION \u003d \"Game Development\";","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    private static final String VALID_EMAIL_2 \u003d \"nkn@what.com\";","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"    private static final String VALID_TAG_2 \u003d \"cs_god\";","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"    private static final String VALID_TAG_3 \u003d \"hyphen-tag and space\";","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"    private static final String VALID_PRIORITY \u003d \"meDIuM\";","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"    private static final String VALID_SORT_FIELD \u003d \"nAme\";","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"    private static final String VALID_SORT_ORDER \u003d \"asC\";","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(ParseException.class, ParserUtil.MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(TypicalIndexes.INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(TypicalIndexes.INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"awhb"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"awhb"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"awhb"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"awhb"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"awhb"},"content":"    public void parsePhones_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"awhb"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhones(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"awhb"},"content":"    public void parsePhones_collectionWithInvalidPhones_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"awhb"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhones(Arrays.asList(VALID_PHONE, INVALID_PHONE)));","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"awhb"},"content":"    public void parsePhones_collectionWithDuplicates_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"awhb"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhones(Arrays.asList(VALID_PHONE, VALID_PHONE)));","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"awhb"},"content":"    public void parsePhones_emptyCollection_returnsEmptyListOfPhones() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"awhb"},"content":"        assertEquals(new UniqueList\u003cPhone\u003e(), ParserUtil.parsePhones(Arrays.asList()));","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"awhb"},"content":"    public void parsePhones_collectionWithValidPhones_returnsPhoneList() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"awhb"},"content":"        UniqueList\u003cPhone\u003e expectedList \u003d new UniqueList\u003cPhone\u003e()","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"awhb"},"content":"                .setItems(Arrays.asList(new Phone(VALID_PHONE), new Phone(VALID_PHONE_2)));","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"awhb"},"content":"        UniqueList\u003cPhone\u003e actualList \u003d ParserUtil.parsePhones(Arrays.asList(VALID_PHONE, VALID_PHONE_2));","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"awhb"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"awhb"},"content":"    public void parseLink_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"awhb"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLink(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"awhb"},"content":"    public void parseLink_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"awhb"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLink(INVALID_LINK));","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"awhb"},"content":"    public void parseLink_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"awhb"},"content":"        Link expectedLink \u003d new Link(VALID_LINK);","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"awhb"},"content":"        assertEquals(expectedLink, ParserUtil.parseLink(VALID_LINK));","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"awhb"},"content":"    public void parseLink_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"awhb"},"content":"        String linkWithWhitespace \u003d WHITESPACE + VALID_LINK + WHITESPACE;","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"awhb"},"content":"        Link expectedLink \u003d new Link(VALID_LINK);","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"awhb"},"content":"        assertEquals(expectedLink, ParserUtil.parseLink(linkWithWhitespace));","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"nknguyenhc"},"content":"    public void parseLinks_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLinks(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"    public void parseLinks_collectionWithInvalidLinks_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLinks(Arrays.asList(VALID_LINK, INVALID_LINK)));","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"nknguyenhc"},"content":"    public void parseLinks_collectionWithDuplicates_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLinks(Arrays.asList(VALID_LINK, VALID_LINK)));","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"awhb"},"content":"    public void parseLinks_emptyCollection_returnsEmptyListOfLinks() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(new UniqueList\u003cLink\u003e(), ParserUtil.parseLinks(Arrays.asList()));","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"nknguyenhc"},"content":"    public void parseLinks_collectionWithValidLinks_returnsLinkList() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cLink\u003e expectedList \u003d new UniqueList\u003cLink\u003e()","lastModifiedDate":"2023-10-16"},{"lineNumber":197,"author":{"gitId":"nknguyenhc"},"content":"                .setItems(Arrays.asList(new Link(VALID_LINK), new Link(VALID_LINK_2)));","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cLink\u003e actualList \u003d ParserUtil.parseLinks(Arrays.asList(VALID_LINK, VALID_LINK_2));","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"xenosf"},"content":"    public void parseGraduation_null_returnsNull() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"xenosf"},"content":"        assertEquals(null, ParserUtil.parseGraduation(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"xenosf"},"content":"    public void parseGraduation_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"xenosf"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGraduation(INVALID_GRADUATION));","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":211,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":212,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":213,"author":{"gitId":"awhb"},"content":"    public void parseCourse_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":214,"author":{"gitId":"awhb"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCourse(INVALID_COURSE));","lastModifiedDate":"2023-10-14"},{"lineNumber":215,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":216,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":217,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":218,"author":{"gitId":"Eola-Z"},"content":"    public void parseCourses_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":219,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCourses(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":220,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":221,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":222,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":223,"author":{"gitId":"Eola-Z"},"content":"    public void parseCourses_collectionWithInvalidLinks_throwsParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":224,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCourses(Arrays.asList(VALID_COURSE, INVALID_COURSE)));","lastModifiedDate":"2023-10-19"},{"lineNumber":225,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":226,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":227,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":228,"author":{"gitId":"Eola-Z"},"content":"    public void parseCourses_collectionWithDuplicates_throwsParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":229,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCourses(Arrays.asList(VALID_COURSE, VALID_COURSE)));","lastModifiedDate":"2023-10-19"},{"lineNumber":230,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":231,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":232,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":233,"author":{"gitId":"awhb"},"content":"    public void parseSpecialisation_null_returnsNull() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":234,"author":{"gitId":"awhb"},"content":"        assertEquals(null, ParserUtil.parseSpecialisation(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":236,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":237,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":238,"author":{"gitId":"awhb"},"content":"    public void parseSpecialisation_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":239,"author":{"gitId":"awhb"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSpecialisation(INVALID_COURSE));","lastModifiedDate":"2023-10-14"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":242,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":243,"author":{"gitId":"Eola-Z"},"content":"    public void parseSpecialisations_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":244,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSpecialisations(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":245,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":246,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":247,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":248,"author":{"gitId":"Eola-Z"},"content":"    public void parseSpecialisations_collectionWithInvalidLinks_throwsParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":249,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2023-10-19"},{"lineNumber":250,"author":{"gitId":"Eola-Z"},"content":"                .parseSpecialisations(Arrays.asList(VALID_SPECIALISATION, INVALID_SPECIALISATION)));","lastModifiedDate":"2023-10-19"},{"lineNumber":251,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":252,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":253,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":254,"author":{"gitId":"Eola-Z"},"content":"    public void parseSpecialisations_collectionWithDuplicates_throwsParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":255,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2023-10-19"},{"lineNumber":256,"author":{"gitId":"Eola-Z"},"content":"                .parseSpecialisations(Arrays.asList(VALID_SPECIALISATION, VALID_SPECIALISATION)));","lastModifiedDate":"2023-10-19"},{"lineNumber":257,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":258,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":282,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":283,"author":{"gitId":"nknguyenhc"},"content":"    public void parseEmails_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":284,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmails(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":285,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":286,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":287,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":288,"author":{"gitId":"nknguyenhc"},"content":"    public void parseEmails_collectionWithInvalidEmails_throwsParseException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":289,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmails(Arrays.asList(VALID_EMAIL, INVALID_EMAIL)));","lastModifiedDate":"2023-10-13"},{"lineNumber":290,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":291,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":292,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":293,"author":{"gitId":"nknguyenhc"},"content":"    public void parseEmails_collectionWithDuplicates_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":294,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmails(Arrays.asList(VALID_EMAIL, VALID_EMAIL)));","lastModifiedDate":"2023-10-14"},{"lineNumber":295,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":296,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":297,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":298,"author":{"gitId":"nknguyenhc"},"content":"    public void parseEmails_emptyCollection_returnsEmptyListOfEmails() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":299,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(new UniqueList\u003cEmail\u003e(), ParserUtil.parseEmails(Arrays.asList()));","lastModifiedDate":"2023-10-13"},{"lineNumber":300,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":301,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":302,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":303,"author":{"gitId":"nknguyenhc"},"content":"    public void parseEmails_collectionWithValidEmails_returnsEmailList() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":304,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cEmail\u003e expectedList \u003d new UniqueList\u003cEmail\u003e()","lastModifiedDate":"2023-10-13"},{"lineNumber":305,"author":{"gitId":"nknguyenhc"},"content":"                .setItems(Arrays.asList(new Email(VALID_EMAIL), new Email(VALID_EMAIL_2)));","lastModifiedDate":"2023-10-13"},{"lineNumber":306,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cEmail\u003e actualList \u003d ParserUtil.parseEmails(Arrays.asList(VALID_EMAIL, VALID_EMAIL_2));","lastModifiedDate":"2023-10-13"},{"lineNumber":307,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedList, actualList);","lastModifiedDate":"2023-10-13"},{"lineNumber":308,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":309,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":350,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2, VALID_TAG_3));","lastModifiedDate":"2023-10-18"},{"lineNumber":351,"author":{"gitId":"Singa-pirate"},"content":"        UniqueList\u003cTag\u003e expectedTagSet \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":352,"author":{"gitId":"Singa-pirate"},"content":"        expectedTagSet.add(new Tag(VALID_TAG_1));","lastModifiedDate":"2023-10-17"},{"lineNumber":353,"author":{"gitId":"Singa-pirate"},"content":"        expectedTagSet.add(new Tag(VALID_TAG_2));","lastModifiedDate":"2023-10-17"},{"lineNumber":354,"author":{"gitId":"Singa-pirate"},"content":"        expectedTagSet.add(new Tag(VALID_TAG_3));","lastModifiedDate":"2023-10-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":358,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":359,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":360,"author":{"gitId":"Singa-pirate"},"content":"    public void parseTags_collectionWithDuplicateTags_parseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":361,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":362,"author":{"gitId":"Singa-pirate"},"content":"                ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2, VALID_TAG_1)));","lastModifiedDate":"2023-10-18"},{"lineNumber":363,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":364,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":365,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":366,"author":{"gitId":"Singa-pirate"},"content":"    public void parsePriority_validValue_success() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":367,"author":{"gitId":"Singa-pirate"},"content":"        Priority expectedPriority \u003d new Priority(VALID_PRIORITY);","lastModifiedDate":"2023-10-12"},{"lineNumber":368,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(expectedPriority, ParserUtil.parsePriority(VALID_PRIORITY));","lastModifiedDate":"2023-10-12"},{"lineNumber":369,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":370,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":371,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":372,"author":{"gitId":"Singa-pirate"},"content":"    public void parsePriority_validValueWithWhitespace_success() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":373,"author":{"gitId":"Singa-pirate"},"content":"        Priority expectedPriority \u003d new Priority(VALID_PRIORITY);","lastModifiedDate":"2023-10-12"},{"lineNumber":374,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(expectedPriority, ParserUtil.parsePriority(WHITESPACE + VALID_PRIORITY + WHITESPACE));","lastModifiedDate":"2023-10-12"},{"lineNumber":375,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":376,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":377,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":378,"author":{"gitId":"Singa-pirate"},"content":"    public void parsePriority_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":379,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePriority(INVALID_PRIORITY));","lastModifiedDate":"2023-10-12"},{"lineNumber":380,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":381,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":382,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":383,"author":{"gitId":"xenosf"},"content":"    public void parseSortField_validValue_success() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":384,"author":{"gitId":"xenosf"},"content":"        SortField expectedField \u003d SortField.NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":385,"author":{"gitId":"xenosf"},"content":"        assertEquals(expectedField, ParserUtil.parseSortField(VALID_SORT_FIELD));","lastModifiedDate":"2023-10-18"},{"lineNumber":386,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":387,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":388,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":389,"author":{"gitId":"xenosf"},"content":"    public void parseSortField_validValueWithWhitespace_success() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":390,"author":{"gitId":"xenosf"},"content":"        SortField expectedField \u003d SortField.NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":391,"author":{"gitId":"xenosf"},"content":"        assertEquals(expectedField, ParserUtil.parseSortField(WHITESPACE + VALID_SORT_FIELD + WHITESPACE));","lastModifiedDate":"2023-10-18"},{"lineNumber":392,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":393,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":394,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":395,"author":{"gitId":"xenosf"},"content":"    public void parseSortField_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":396,"author":{"gitId":"xenosf"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSortField(INVALID_SORT_FIELD));","lastModifiedDate":"2023-10-18"},{"lineNumber":397,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":398,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":399,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":400,"author":{"gitId":"xenosf"},"content":"    public void parseSortField_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":401,"author":{"gitId":"xenosf"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSortField(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":402,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":403,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":404,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":405,"author":{"gitId":"xenosf"},"content":"    public void parseSortOrder_validValue_success() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":406,"author":{"gitId":"xenosf"},"content":"        SortOrder expectedOrder \u003d SortOrder.ASCENDING;","lastModifiedDate":"2023-10-18"},{"lineNumber":407,"author":{"gitId":"xenosf"},"content":"        assertEquals(expectedOrder, ParserUtil.parseSortOrder(VALID_SORT_ORDER));","lastModifiedDate":"2023-10-18"},{"lineNumber":408,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":409,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":410,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":411,"author":{"gitId":"xenosf"},"content":"    public void parseSortOrder_validValueWithWhitespace_success() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":412,"author":{"gitId":"xenosf"},"content":"        SortOrder expectedOrder \u003d SortOrder.ASCENDING;","lastModifiedDate":"2023-10-18"},{"lineNumber":413,"author":{"gitId":"xenosf"},"content":"        assertEquals(expectedOrder, ParserUtil.parseSortOrder(WHITESPACE + VALID_SORT_ORDER + WHITESPACE));","lastModifiedDate":"2023-10-18"},{"lineNumber":414,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":415,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":416,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":417,"author":{"gitId":"xenosf"},"content":"    public void parseSortOrder_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":418,"author":{"gitId":"xenosf"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSortOrder(INVALID_SORT_ORDER));","lastModifiedDate":"2023-10-18"},{"lineNumber":419,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":420,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":421,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":422,"author":{"gitId":"xenosf"},"content":"    public void parseSortOrder_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":423,"author":{"gitId":"xenosf"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSortOrder(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":424,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":425,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Eola-Z":32,"nknguyenhc":69,"xenosf":56,"Singa-pirate":34,"-":161,"awhb":73}},{"path":"src/test/java/networkbook/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"package networkbook.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"import static networkbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"import static networkbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"import networkbook.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"import networkbook.logic.commands.SortCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator.SortField;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator.SortOrder;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"    public void parse_validArgs_returnsSortCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator cmp \u003d new PersonSortComparator(SortField.GRAD, SortOrder.ASCENDING);","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"        SortCommand expectedSortCommand \u003d new SortCommand(cmp);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"        assertParseSuccess(parser, \" \\n /by  grad  \\n \\t /order   asc  \\t\", expectedSortCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"xenosf"},"content":"        assertParseSuccess(parser, \" /by graduation /order ascending\", expectedSortCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"        assertParseSuccess(parser, \" /by grad\", expectedSortCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"xenosf":33}},{"path":"src/test/java/networkbook/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.GuiSettings;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator.SortField;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator.SortOrder;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.NetworkBookBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(new NetworkBook(), new NetworkBook(modelManager.getNetworkBook()));","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"        userPrefs.setNetworkBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"        userPrefs.setNetworkBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"    public void setNetworkBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setNetworkBookFilePath(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"    public void setNetworkBookFilePath_validPath_setsNetworkBookFilePath() {","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"        modelManager.setNetworkBookFilePath(path);","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(path, modelManager.getNetworkBookFilePath());","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"    public void hasPerson_personNotInNetworkBook_returnsFalse() {","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(modelManager.hasPerson(TypicalPersons.ALICE));","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"    public void hasPerson_personInNetworkBook_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"        modelManager.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(modelManager.hasPerson(TypicalPersons.ALICE));","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"        NetworkBook networkBook \u003d new NetworkBookBuilder()","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"                .withPerson(TypicalPersons.ALICE)","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"                .withPerson(TypicalPersons.BENSON)","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"        NetworkBook differentNetworkBook \u003d new NetworkBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"        modelManager \u003d new ModelManager(networkBook, userPrefs);","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(networkBook, userPrefs);","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"        // different networkBook -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentNetworkBook, userPrefs)));","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"xenosf"},"content":"        // different filter -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"        String[] keywords \u003d TypicalPersons.ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(modelManager.equals(new ModelManager(networkBook, userPrefs)));","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"        modelManager.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"xenosf"},"content":"        modelManager.updateSortedPersonList(PersonSortComparator.EMPTY_COMPARATOR);","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"xenosf"},"content":"        // different sort -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"xenosf"},"content":"        modelManager.updateSortedPersonList(new PersonSortComparator(SortField.NAME, SortOrder.DESCENDING));","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"xenosf"},"content":"        assertFalse(modelManager.equals(new ModelManager(networkBook, userPrefs)));","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"xenosf"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"xenosf"},"content":"        modelManager.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"xenosf"},"content":"        modelManager.updateSortedPersonList(PersonSortComparator.EMPTY_COMPARATOR);","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"        differentUserPrefs.setNetworkBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(modelManager.equals(new ModelManager(networkBook, differentUserPrefs)));","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"xenosf"},"content":"    public void updateSortedPersonList_descendingNameSort_correctlySorted() {","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator comparator \u003d new PersonSortComparator(SortField.NAME, SortOrder.DESCENDING);","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"xenosf"},"content":"        Model model \u003d new ModelManager(TypicalPersons.getTypicalNetworkBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"xenosf"},"content":"        model.updateSortedPersonList(comparator);","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"xenosf"},"content":"        List\u003cPerson\u003e expectedPersons \u003d TypicalPersons.getTypicalPersons();","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"xenosf"},"content":"        Collections.reverse(expectedPersons);","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"xenosf"},"content":"        ObservableList\u003cPerson\u003e expectedList \u003d FXCollections.observableList(expectedPersons);","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"xenosf"},"content":"        assertEquals(","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"xenosf"},"content":"                expectedList,","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"xenosf"},"content":"                model.getFilteredPersonList()","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"xenosf"},"content":"        );","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"nknguyenhc":33,"xenosf":33,"-":99}},{"path":"src/test/java/networkbook/model/NetworkBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_COURSE_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrowsAssertionError;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.PersonBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"public class NetworkBookTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    private final NetworkBook networkBook \u003d new NetworkBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(Collections.emptyList(), networkBook.getPersonList());","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(NullPointerException.class, () -\u003e networkBook.resetData(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    public void resetData_withValidReadOnlyNetworkBook_replacesData() {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"        NetworkBook newData \u003d TypicalPersons.getTypicalNetworkBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        networkBook.resetData(newData);","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(newData, networkBook);","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    public void resetData_withDuplicatePersons_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"                .withCourses(List.of(VALID_COURSE_BOB))","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(TypicalPersons.ALICE, editedAlice);","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"        NetworkBookStub newData \u003d new NetworkBookStub(newPersons);","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e networkBook.resetData(newData));","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(NullPointerException.class, () -\u003e networkBook.hasPerson(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"    public void hasPerson_personNotInNetworkBook_returnsFalse() {","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(networkBook.hasPerson(TypicalPersons.ALICE));","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"    public void hasPerson_personInNetworkBook_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"        networkBook.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(networkBook.hasPerson(TypicalPersons.ALICE));","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"    public void hasPerson_personWithSameIdentityFieldsInNetworkBook_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        networkBook.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"                .withCourses(List.of(VALID_COURSE_BOB))","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(networkBook.hasPerson(editedAlice));","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e networkBook.getPersonList().remove(0));","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"        String expected \u003d NetworkBook.class.getCanonicalName() + \"{persons\u003d\" + networkBook.getPersonList() + \"}\";","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expected, networkBook.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"     * A stub ReadOnlyNetworkBook whose persons list can violate interface constraints.","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"    private static class NetworkBookStub implements ReadOnlyNetworkBook {","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"        NetworkBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"            return persons;","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"nknguyenhc":110,"awhb":1}},{"path":"src/test/java/networkbook/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"    public void setNetworkBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setNetworkBookFilePath(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"nknguyenhc":4,"-":17}},{"path":"src/test/java/networkbook/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"nknguyenhc":2,"-":54}},{"path":"src/test/java/networkbook/model/person/CourseContainsKeyTermsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.filter.CourseContainsKeyTermsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"import networkbook.testutil.PersonBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"public class CourseContainsKeyTermsPredicateTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"        List\u003cString\u003e firstKeyTermList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"        List\u003cString\u003e secondKeyTermList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate firstPredicate \u003d new CourseContainsKeyTermsPredicate(firstKeyTermList);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate secondPredicate \u003d new CourseContainsKeyTermsPredicate(secondKeyTermList);","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(secondPredicate, secondPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"        // both lists have the corresponding pairs of items - \u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(secondPredicate, new CourseContainsKeyTermsPredicate(secondKeyTermList));","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"        // lists have different items - \u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"        // both lists have the same items but in different order -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(secondPredicate, new CourseContainsKeyTermsPredicate(Arrays.asList(\"second\", \"first\")));","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(firstPredicate, 5);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Eola-Z"},"content":"        // null -\u003e return false","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(firstPredicate, null);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Eola-Z"},"content":"    public void test_coursesContainKeyTerms_returnsTrue() {","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Eola-Z"},"content":"        Person oneCoursePerson \u003d new PersonBuilder().addCourse(\"First\").build();","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Eola-Z"},"content":"        // 1 to 1 complete match","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate predicate \u003d new CourseContainsKeyTermsPredicate(Arrays.asList(\"First\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(predicate.test(oneCoursePerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Eola-Z"},"content":"        // 1 to 1 mixed case match","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Eola-Z"},"content":"        predicate \u003d new CourseContainsKeyTermsPredicate(Arrays.asList(\"fIRsT\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(predicate.test(oneCoursePerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Eola-Z"},"content":"        // 1 to 1 partial match","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Eola-Z"},"content":"        predicate \u003d new CourseContainsKeyTermsPredicate(Arrays.asList(\"Fir\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(predicate.test(oneCoursePerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Eola-Z"},"content":"        // 1 to many complete match","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Eola-Z"},"content":"        Person manyCoursePerson \u003d new PersonBuilder().withCourses(List.of(\"First\", \"Second\")).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Eola-Z"},"content":"        predicate \u003d new CourseContainsKeyTermsPredicate(Arrays.asList(\"First\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(predicate.test(manyCoursePerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Eola-Z"},"content":"        // 1 to many mixed case match","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Eola-Z"},"content":"        predicate \u003d new CourseContainsKeyTermsPredicate(Arrays.asList(\"fIRsT\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(predicate.test(manyCoursePerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Eola-Z"},"content":"        // 1 to many partial match","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Eola-Z"},"content":"        predicate \u003d new CourseContainsKeyTermsPredicate(Arrays.asList(\"Fir\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(predicate.test(manyCoursePerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Eola-Z"},"content":"        // many to 1 complete match","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Eola-Z"},"content":"        predicate \u003d new CourseContainsKeyTermsPredicate(Arrays.asList(\"First\", \"Second\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(predicate.test(oneCoursePerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Eola-Z"},"content":"        // many to 1 mixed case match","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Eola-Z"},"content":"        predicate \u003d new CourseContainsKeyTermsPredicate(Arrays.asList(\"fIRsT\", \"sEcoNd\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(predicate.test(oneCoursePerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Eola-Z"},"content":"        // many to 1 partial match","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Eola-Z"},"content":"        predicate \u003d new CourseContainsKeyTermsPredicate(Arrays.asList(\"Fir\", \"Sec\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(predicate.test(oneCoursePerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Eola-Z"},"content":"        // many to many; at least one complete match","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Eola-Z"},"content":"        predicate \u003d new CourseContainsKeyTermsPredicate(Arrays.asList(\"Third\", \"Fourth\", \"Second\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(predicate.test(manyCoursePerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Eola-Z"},"content":"        // many to many; at least one mixed case match","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Eola-Z"},"content":"        predicate \u003d new CourseContainsKeyTermsPredicate(Arrays.asList(\"fiRSt\", \"THIRD\", \"SecONd\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(predicate.test(manyCoursePerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Eola-Z"},"content":"        // many to many; at least one partial match","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Eola-Z"},"content":"        predicate \u003d new CourseContainsKeyTermsPredicate(Arrays.asList(\"Thir\", \"Fif\", \"Sec\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(predicate.test(manyCoursePerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Eola-Z"},"content":"    public void test_courseDoesNotContainKeyTerms_returnsFalse() {","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Eola-Z"},"content":"        // Zero key terms","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate predicate \u003d new CourseContainsKeyTermsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"Eola-Z"},"content":"                new PersonBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Eola-Z"},"content":"                        .withName(\"Alice\")","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Eola-Z"},"content":"                        .withCourses(List.of(\"Computer Science\"))","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Eola-Z"},"content":"                        .build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Eola-Z"},"content":"        // No matching key terms (one course)","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Eola-Z"},"content":"        predicate \u003d new CourseContainsKeyTermsPredicate(Arrays.asList(\"Drawing\", \"Painting\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"Eola-Z"},"content":"                new PersonBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"Eola-Z"},"content":"                        .withName(\"Alice\")","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"Eola-Z"},"content":"                        .withCourses(List.of(\"Computer Science\"))","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"Eola-Z"},"content":"                        .build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"Eola-Z"},"content":"        // No matching key terms (multiple courses)","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"Eola-Z"},"content":"                new PersonBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"Eola-Z"},"content":"                        .withName(\"Alice\")","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"Eola-Z"},"content":"                        .withCourses(List.of(\"Computer Science\", \"Information Systems\"))","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Eola-Z"},"content":"                        .build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Eola-Z"},"content":"        // Key term matches name but does not match course","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Eola-Z"},"content":"        predicate \u003d new CourseContainsKeyTermsPredicate(Arrays.asList(\"Alice\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Eola-Z"},"content":"                new PersonBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"Eola-Z"},"content":"                        .withName(\"Alice\")","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"Eola-Z"},"content":"                        .withCourses(List.of(\"Computer Science\", \"Information Systems\"))","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"Eola-Z"},"content":"                        .build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"Eola-Z"},"content":"        // Key term matches start or end date but does not match course","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"Eola-Z"},"content":"        predicate \u003d new CourseContainsKeyTermsPredicate(Arrays.asList(\"01-01-2000\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"Eola-Z"},"content":"                new PersonBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"Eola-Z"},"content":"                        .withName(\"Alice\")","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"Eola-Z"},"content":"                        .addCourse(\"Computer science\", \"01-01-2000\")","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"Eola-Z"},"content":"                        .build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"Eola-Z"},"content":"                new PersonBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"Eola-Z"},"content":"                        .withName(\"Alice\")","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"Eola-Z"},"content":"                        .addCourse(\"Computer science\", \"01-01-1999\", \"01-01-2000\")","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"Eola-Z"},"content":"                        .build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"Eola-Z"},"content":"    public void test_personWithNoCourses_returnsFalse() {","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate predicate \u003d new CourseContainsKeyTermsPredicate(List.of(\"Computers\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"Eola-Z"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"Eola-Z"},"content":"        List\u003cString\u003e keyTerms \u003d List.of(\"First\", \"Second\");","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate predicate \u003d new CourseContainsKeyTermsPredicate(keyTerms);","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"Eola-Z"},"content":"        String expected \u003d CourseContainsKeyTermsPredicate.class.getCanonicalName() + \"{key terms\u003d\" + keyTerms + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(predicate.toString(), expected);","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"Eola-Z"},"content":"    public void getKeyTerms() {","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"Eola-Z"},"content":"        List\u003cString\u003e keyTerms \u003d List.of(\"First\", \"Second\");","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate predicate \u003d new CourseContainsKeyTermsPredicate(keyTerms);","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(keyTerms, predicate.getKeyTerms());","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"Eola-Z"},"content":"    public void getCourses() {","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"Eola-Z"},"content":"        List\u003cString\u003e keyTerms \u003d List.of(\"First\", \"Second\", \"Third\");","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"Eola-Z"},"content":"        CourseContainsKeyTermsPredicate predicate \u003d new CourseContainsKeyTermsPredicate(keyTerms);","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"Eola-Z"},"content":"        Person personWithSomeMatchingCourses \u003d new PersonBuilder().addCourse(\"First\").addCourse(\"Third\").build();","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"Eola-Z"},"content":"        List\u003cCourse\u003e expected \u003d List.of(new Course(\"First\"), new Course(\"Third\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(expected, predicate.getCourses(personWithSomeMatchingCourses));","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Eola-Z":181}},{"path":"src/test/java/networkbook/model/person/CourseIsStillBeingTakenPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"import networkbook.model.person.filter.CourseIsStillBeingTakenPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"public class CourseIsStillBeingTakenPredicateTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"    public void dateEqualOrAfter() {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"                .ofPattern(\"dd-MM-uuuu\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"        LocalDate earlyDate \u003d LocalDate.parse(\"01-01-2000\", dtf);","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"        LocalDate lateDate \u003d LocalDate.parse(\"02-01-2000\", dtf);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"        // same date -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(CourseIsStillBeingTakenPredicate.dateEqualOrAfter(earlyDate, earlyDate));","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"        // first date is after second date -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(CourseIsStillBeingTakenPredicate.dateEqualOrAfter(lateDate, earlyDate));","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"        // first date is before second date -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(CourseIsStillBeingTakenPredicate.dateEqualOrAfter(earlyDate, lateDate));","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"    public void dateEqualOrBefore() {","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"                .ofPattern(\"dd-MM-uuuu\")","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Eola-Z"},"content":"        LocalDate earlyDate \u003d LocalDate.parse(\"01-01-2000\", dtf);","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"        LocalDate lateDate \u003d LocalDate.parse(\"02-01-2000\", dtf);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"        // same date -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(CourseIsStillBeingTakenPredicate.dateEqualOrBefore(earlyDate, earlyDate));","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Eola-Z"},"content":"        // first date is after second date -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(CourseIsStillBeingTakenPredicate.dateEqualOrBefore(lateDate, earlyDate));","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Eola-Z"},"content":"        // first date is before second date -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(CourseIsStillBeingTakenPredicate.dateEqualOrBefore(earlyDate, lateDate));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Eola-Z"},"content":"    public void test_courseHasNoStartDate_returnsTrue() {","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Eola-Z"},"content":"        Course course \u003d new Course(\"Valid Course\");","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate predicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 1));","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(predicate.test(course));","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Eola-Z"},"content":"    public void test_givenDateBeforeCourseStartDateAndNoEndDate_returnsFalse() {","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Eola-Z"},"content":"        Course course \u003d new Course(\"Valid Course\", \"02-01-2000\");","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate predicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 1));","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(predicate.test(course));","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Eola-Z"},"content":"    public void test_givenDateEqualsCourseStartDateAndNoEndDate_returnsTrue() {","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Eola-Z"},"content":"        Course course \u003d new Course(\"Valid Course\", \"01-01-2000\");","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate predicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 1));","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(predicate.test(course));","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Eola-Z"},"content":"    public void test_givenDateAfterCourseStartDateAndNoEndDate_returnsTrue() {","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Eola-Z"},"content":"        Course course \u003d new Course(\"Valid Course\", \"01-01-2000\");","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate predicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 2));","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(predicate.test(course));","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Eola-Z"},"content":"    public void test_givenDateBetweenStartDateAndEndDate_returnsTrue() {","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Eola-Z"},"content":"        Course course \u003d new Course(\"Valid Course\", \"01-01-2000\", \"03-01-2000\");","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate startPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 1));","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate midPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 2));","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate endPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 3));","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(startPredicate.test(course));","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(midPredicate.test(course));","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(endPredicate.test(course));","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Eola-Z"},"content":"    public void test_givenDateNotBetweenStartDateAndEndDate_returnsFalse() {","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Eola-Z"},"content":"        Course course \u003d new Course(\"Valid Course\", \"02-01-2000\", \"03-01-2000\");","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate beforeStartPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 1));","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate afterEndPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 4));","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(beforeStartPredicate.test(course));","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(afterEndPredicate.test(course));","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"Eola-Z"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"Eola-Z"},"content":"        CourseIsStillBeingTakenPredicate predicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"Eola-Z"},"content":"                new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 1));","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Eola-Z"},"content":"        // Same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(predicate, predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Eola-Z"},"content":"        // Same date -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(predicate, new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 1)));","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"Eola-Z"},"content":"        // Different date -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(predicate, new CourseIsStillBeingTakenPredicate(LocalDate.ofYearDay(2000, 2)));","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"Eola-Z"},"content":"        // Different type -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(predicate, 5);","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"Eola-Z"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(predicate, null);","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Eola-Z":139}},{"path":"src/test/java/networkbook/model/person/CourseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"public class CourseTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Course(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Course(null, \"01-01-2000\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Course(\"Valid Course\", null));","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"                new Course(\"Valid Course\", \"01-01-2000\", null));","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"                new Course(\"Valid Course\", null, \"01-01-2000\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"                new Course(null, \"01-01-1999\", \"01-01-2000\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"    public void constructor_invalidCourse_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"        // empty course","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Course(\"\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"        // course starts with empty space or consists of empty space only","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Course(\" \"));","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Course(\"     \"));","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Course(\" Computer Science\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"        // course contains multiple spacing between words","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Course(\"Computer  Science\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"    public void constructor_invalidDates_throwIllegalArgumentException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"        String validCourse \u003d \"Valid Course\";","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Eola-Z"},"content":"        String validDate \u003d \"01-01-2000\";","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"        // empty dates","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Course(validCourse, \"\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Course(validCourse, validDate, \"\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Course(validCourse, \"\", validDate));","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Eola-Z"},"content":"        // other cases covered by isValidDate and areChronologicalDates","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"    public void isValidCourse() {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"        // null course","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"        assertThrows(NullPointerException.class, () -\u003e Course.isValidCourse(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"        // invalid courses","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"        assertFalse(Course.isValidCourse(\"\")); // empty string","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"        assertFalse(Course.isValidCourse(\" \")); // spaces only","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(Course.isValidCourse(\" Computer Science\")); // begins with empty space","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(Course.isValidDate(\"Computer  Science\")); // multiple space between words","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"        // valid courses","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"        assertTrue(Course.isValidCourse(\"Computer Science\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"        assertTrue(Course.isValidCourse(\"-\")); // one character","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(Course.isValidCourse(\"Double Degree Programme in Law and Liberal Arts\")); // long course name","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(Course","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Eola-Z"},"content":"                .isValidCourse(\",./;\u0027[]{}:\u003c\u003e? +_)(*\u0026%$#@!\")); // symbols are allowed while spacing rule is obeyed","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"Eola-Z"},"content":"    public void isValidDate() {","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"Eola-Z"},"content":"        String validDate \u003d \"01-01-2000\";","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"Eola-Z"},"content":"        String incorrectlyFormattedDate \u003d \"02-13-2000\";","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"Eola-Z"},"content":"        String nonExistentDate \u003d \"30-02-2000\";","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"Eola-Z"},"content":"        // null date returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"Eola-Z"},"content":"        // Never happens in standard execution; checks for null values are done before this method is called.","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(Course.isValidDate(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"Eola-Z"},"content":"        // invalid dates","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(Course.isValidDate(incorrectlyFormattedDate)); // date exists but is not DD-MM-YYYY format.","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(Course.isValidDate(nonExistentDate)); // date is correctly formatted but doesn\u0027t exist.","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"Eola-Z"},"content":"        // anything that isn\u0027t a date or isn\u0027t the correct format is also invalid","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(Course.isValidDate(\"Thursday\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(Course.isValidDate(\"12 Dec 2012\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(Course.isValidDate(\"\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(Course.isValidDate(\"Computer\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(Course.isValidDate(\"12-21-02001\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"Eola-Z"},"content":"        // valid dates","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(Course.isValidDate(validDate));","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(Course.isValidDate(\"12-12-2001\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"Eola-Z"},"content":"    public void areChronologicalDates() {","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"Eola-Z"},"content":"        String earlyDate \u003d \"01-01-2000\";","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"Eola-Z"},"content":"        String midDate \u003d \"02-01-2000\";","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"Eola-Z"},"content":"        String lateDate \u003d \"03-01-2000\";","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"Eola-Z"},"content":"        // start date is later than end date -\u003e return false","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(Course.areChronologicalDates(lateDate, midDate));","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(Course.areChronologicalDates(midDate, earlyDate));","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(Course.areChronologicalDates(lateDate, earlyDate));","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"Eola-Z"},"content":"        // start and end dates are the same -\u003e return false","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(Course.areChronologicalDates(earlyDate, earlyDate));","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"Eola-Z"},"content":"        // start date is earlier than end date -\u003e return true","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(Course.areChronologicalDates(earlyDate, midDate));","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(Course.areChronologicalDates(earlyDate, lateDate));","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(Course.areChronologicalDates(midDate, lateDate));","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"Eola-Z"},"content":"        // invalid format -\u003e throws exception","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Course.areChronologicalDates(earlyDate, \"\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Course.areChronologicalDates(earlyDate, null));","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Course.areChronologicalDates(earlyDate, \"a\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Course.areChronologicalDates(earlyDate, \"20-02-02001\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"Eola-Z"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Course.areChronologicalDates(earlyDate, \"12-13-2000\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"Eola-Z"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"Eola-Z"},"content":"        Course course \u003d new Course(\"Valid Course\");","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"Eola-Z"},"content":"        Course courseWithStart \u003d new Course(\"Valid Course\", \"01-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"Eola-Z"},"content":"        Course courseWithBothDates \u003d new Course(\"Valid Course\", \"01-01-2000\", \"02-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"Eola-Z"},"content":"        // equals to self","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(course.toString(), course.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(courseWithStart.toString(), courseWithStart.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(courseWithBothDates.toString(), courseWithBothDates.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(course.toString(), new Course(\"Valid Course\").toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(courseWithBothDates.toString(),","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"Eola-Z"},"content":"                new Course(\"Valid Course\", \"01-01-2000\", \"02-01-2000\").toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"Eola-Z"},"content":"        // toString can produce equal outputs for unequal courses","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"Eola-Z"},"content":"        // not an issue since toString is not used to test equality","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(courseWithStart.toString(), new Course(\"Valid Course (Started: 01-01-2000)\").toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"Eola-Z"},"content":"        // for most other scenarios the output is not equal","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(course.toString(), courseWithStart.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(course.toString(), courseWithBothDates.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(courseWithStart.toString(), courseWithBothDates.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(course.toString(), new Course(\"Other Valid Course\").toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"awhb"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"awhb"},"content":"        Course course \u003d new Course(\"Valid Course\");","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"Eola-Z"},"content":"        Course courseWithStart \u003d new Course(\"Valid Course\", \"01-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"Eola-Z"},"content":"        Course courseWithBothDates \u003d new Course(\"Valid Course\", \"01-01-2000\", \"02-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"Eola-Z"},"content":"        // same course -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(course, new Course(\"Valid Course\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(course, courseWithStart);","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(course, courseWithBothDates);","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(courseWithStart, courseWithBothDates);","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"awhb"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(course, course);","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"awhb"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(course, null);","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"awhb"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(course, 5.0f);","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"Eola-Z"},"content":"        // different course field -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(course, new Course(\"Other Valid Course\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(courseWithStart, new Course(\"Valid Course (Started: 01-01-2000)\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"Eola-Z"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"Eola-Z"},"content":"        // almost identical to equals","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"Eola-Z"},"content":"        Course course \u003d new Course(\"Valid Course\");","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"Eola-Z"},"content":"        Course courseWithStart \u003d new Course(\"Valid Course\", \"01-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"Eola-Z"},"content":"        Course courseWithBothDates \u003d new Course(\"Valid Course\", \"01-01-2000\", \"02-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"Eola-Z"},"content":"        // same course -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(course.hashCode(), new Course(\"Valid Course\").hashCode());","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(course.hashCode(), courseWithStart.hashCode());","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(course.hashCode(), courseWithBothDates.hashCode());","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(courseWithStart.hashCode(), courseWithBothDates.hashCode());","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"Eola-Z"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(course.hashCode(), course.hashCode());","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"Eola-Z"},"content":"        // 0 -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(course.hashCode(), 0);","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"Eola-Z"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(course.hashCode(), 5.0f);","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"Eola-Z"},"content":"        // different course field -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(course.hashCode(), new Course(\"Other Valid Course\").hashCode());","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(courseWithStart.hashCode(), new Course(\"Valid Course (Started: 01-01-2000)\").hashCode());","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":204,"author":{"gitId":"Eola-Z"},"content":"    public void getCourse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":205,"author":{"gitId":"Eola-Z"},"content":"        Course course \u003d new Course(\"Valid Course\");","lastModifiedDate":"2023-10-19"},{"lineNumber":206,"author":{"gitId":"Eola-Z"},"content":"        Course courseWithStart \u003d new Course(\"Valid Course\", \"01-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"Eola-Z"},"content":"        Course courseWithBothDates \u003d new Course(\"Valid Course\", \"01-01-2000\", \"02-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":209,"author":{"gitId":"Eola-Z"},"content":"        // similar to equals","lastModifiedDate":"2023-10-19"},{"lineNumber":210,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(course.getCourse(), courseWithStart.getCourse());","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(course.getCourse(), courseWithBothDates.getCourse());","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":213,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(course.getCourse(), new Course(\"Other Valid Course\").getCourse());","lastModifiedDate":"2023-10-19"},{"lineNumber":214,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":215,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":216,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":217,"author":{"gitId":"Eola-Z"},"content":"    public void getStartDate() {","lastModifiedDate":"2023-10-19"},{"lineNumber":218,"author":{"gitId":"Eola-Z"},"content":"        Course course \u003d new Course(\"Valid Course\");","lastModifiedDate":"2023-10-19"},{"lineNumber":219,"author":{"gitId":"Eola-Z"},"content":"        Course courseWithStart \u003d new Course(\"Valid Course\", \"01-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":220,"author":{"gitId":"Eola-Z"},"content":"        Course courseWithBothDates \u003d new Course(\"Valid Course\", \"01-01-2000\", \"02-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":221,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":222,"author":{"gitId":"Eola-Z"},"content":"        // no start date -\u003e returns empty string","lastModifiedDate":"2023-10-19"},{"lineNumber":223,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(course.getStartDate(), \"\");","lastModifiedDate":"2023-10-19"},{"lineNumber":224,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(courseWithStart.getStartDate(), \"01-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":225,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(courseWithBothDates.getStartDate(), courseWithStart.getStartDate());","lastModifiedDate":"2023-10-19"},{"lineNumber":226,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":227,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(courseWithStart.getStartDate(),","lastModifiedDate":"2023-10-19"},{"lineNumber":228,"author":{"gitId":"Eola-Z"},"content":"                new Course(\"Other Valid Course\", \"01-01-2000\").getStartDate());","lastModifiedDate":"2023-10-19"},{"lineNumber":229,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":230,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(courseWithStart.getStartDate(),","lastModifiedDate":"2023-10-19"},{"lineNumber":231,"author":{"gitId":"Eola-Z"},"content":"                new Course(\"Valid Course\", \"02-01-2000\").getStartDate());","lastModifiedDate":"2023-10-19"},{"lineNumber":232,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":233,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":234,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":235,"author":{"gitId":"Eola-Z"},"content":"    public void getEndDate() {","lastModifiedDate":"2023-10-19"},{"lineNumber":236,"author":{"gitId":"Eola-Z"},"content":"        Course course \u003d new Course(\"Valid Course\");","lastModifiedDate":"2023-10-19"},{"lineNumber":237,"author":{"gitId":"Eola-Z"},"content":"        Course courseWithStart \u003d new Course(\"Valid Course\", \"01-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":238,"author":{"gitId":"Eola-Z"},"content":"        Course courseWithBothDates \u003d new Course(\"Valid Course\", \"01-01-2000\", \"02-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":239,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":240,"author":{"gitId":"Eola-Z"},"content":"        // no end date -\u003e returns empty string","lastModifiedDate":"2023-10-19"},{"lineNumber":241,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(course.getEndDate(), \"\");","lastModifiedDate":"2023-10-19"},{"lineNumber":242,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(course.getEndDate(), courseWithStart.getEndDate());","lastModifiedDate":"2023-10-19"},{"lineNumber":243,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(courseWithBothDates.getEndDate(), \"02-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":244,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":245,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(courseWithBothDates.getEndDate(),","lastModifiedDate":"2023-10-19"},{"lineNumber":246,"author":{"gitId":"Eola-Z"},"content":"                new Course(\"Other Valid Course\", \"01-01-2000\", \"02-01-2000\").getEndDate());","lastModifiedDate":"2023-10-19"},{"lineNumber":247,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":248,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(courseWithBothDates.getEndDate(),","lastModifiedDate":"2023-10-19"},{"lineNumber":249,"author":{"gitId":"Eola-Z"},"content":"                new Course(\"Valid Course\", \"01-01-2000\", \"03-01-2000\").getEndDate());","lastModifiedDate":"2023-10-19"},{"lineNumber":250,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":251,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":252,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":253,"author":{"gitId":"Eola-Z"},"content":"    public void startDateExists() {","lastModifiedDate":"2023-10-19"},{"lineNumber":254,"author":{"gitId":"Eola-Z"},"content":"        Course course \u003d new Course(\"Valid Course\");","lastModifiedDate":"2023-10-19"},{"lineNumber":255,"author":{"gitId":"Eola-Z"},"content":"        Course courseWithStart \u003d new Course(\"Valid Course\", \"01-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":256,"author":{"gitId":"Eola-Z"},"content":"        Course courseWithBothDates \u003d new Course(\"Valid Course\", \"01-01-2000\", \"02-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":257,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":258,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(course.startDateExists());","lastModifiedDate":"2023-10-19"},{"lineNumber":259,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(courseWithStart.startDateExists());","lastModifiedDate":"2023-10-19"},{"lineNumber":260,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(courseWithBothDates.startDateExists());","lastModifiedDate":"2023-10-19"},{"lineNumber":261,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":262,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":263,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":264,"author":{"gitId":"Eola-Z"},"content":"    public void endDateExists() {","lastModifiedDate":"2023-10-19"},{"lineNumber":265,"author":{"gitId":"Eola-Z"},"content":"        Course course \u003d new Course(\"Valid Course\");","lastModifiedDate":"2023-10-19"},{"lineNumber":266,"author":{"gitId":"Eola-Z"},"content":"        Course courseWithStart \u003d new Course(\"Valid Course\", \"01-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":267,"author":{"gitId":"Eola-Z"},"content":"        Course courseWithBothDates \u003d new Course(\"Valid Course\", \"01-01-2000\", \"02-01-2000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":268,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":269,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(course.endDateExists());","lastModifiedDate":"2023-10-19"},{"lineNumber":270,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(courseWithStart.endDateExists());","lastModifiedDate":"2023-10-19"},{"lineNumber":271,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(courseWithBothDates.endDateExists());","lastModifiedDate":"2023-10-19"},{"lineNumber":272,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":273,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Eola-Z":227,"awhb":46}},{"path":"src/test/java/networkbook/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"    public void isSame_sameEmails_returnsTrue() {","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(new Email(\"valid@exam.com\").isSame(new Email(\"valid@exam.com\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(new Email(\"test@random.com\").isSame(new Email(\"test@random.com\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"    public void isSame_differentEmails_returnsFalse() {","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new Email(\"valid@exam.com\").isSame(new Email(\"valid@random.com\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(new Email(\"valid@exam.com\").isSame(new Email(\"test@exam.com\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"nknguyenhc":14,"-":86}},{"path":"src/test/java/networkbook/model/person/GraduationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"public class GraduationTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Graduation(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"    public void isValidGraduation() {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"        // null graduation string","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"        assertThrows(NullPointerException.class, () -\u003e Graduation.isValidGraduation(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"        // invalid graduation strings","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"        assertFalse(Graduation.isValidGraduation(\"\")); // empty string","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"        assertFalse(Graduation.isValidGraduation(\" \")); // spaces only","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"        assertFalse(Graduation.isValidGraduation(\"2023 sem 1\")); // not following format","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"        assertFalse(Graduation.isValidGraduation(\"AY2324-z1\")); // wrong letters","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"        assertFalse(Graduation.isValidGraduation(\"AY2324\")); // missing semester","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"        assertFalse(Graduation.isValidGraduation(\"AY910-S1\")); // AY not 4 digits","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"xenosf"},"content":"        assertFalse(Graduation.isValidGraduation(\"AY910-S01\")); // semester not 1 digit","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"        assertFalse(Graduation.isValidGraduation(\"AY2324-S0\")); // semester out of range - low","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"        assertFalse(Graduation.isValidGraduation(\"AY2324-S3\")); // semester out of range - high","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"        assertFalse(Graduation.isValidGraduation(\"AY0110-S1\")); // years not consecutive","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"        assertFalse(Graduation.isValidGraduation(\"AY2423-S1\")); // years in wrong order","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"        assertFalse(Graduation.isValidGraduation(\"AY2423-S3\")); // invalid year and sem","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"        // valid graduation strings","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"xenosf"},"content":"        assertTrue(Graduation.isValidGraduation(\"AY2324-S1\")); // follows format","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(Graduation.isValidGraduation(\"AY6970-S1\")); // follows format","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(Graduation.isValidGraduation(\"AY9900-S1\")); // follows format","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"        assertTrue(Graduation.isValidGraduation(\"AY0001-S1\")); // follows format","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"        assertTrue(Graduation.isValidGraduation(\"aY7071-s2\")); // follows format, case insensitive","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"        assertTrue(Graduation.isValidGraduation(\" AY6869-S1 \")); // follows format, leading/trailing whitespace","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"        Graduation graduation \u003d new Graduation(\"AY2324-S1\");","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"xenosf"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"        assertTrue(graduation.equals(new Graduation(\"AY2324-S1\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"        assertTrue(graduation.equals(graduation));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"        assertFalse(graduation.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"xenosf"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"xenosf"},"content":"        assertFalse(graduation.equals(5.0f));","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"xenosf"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"xenosf"},"content":"        assertFalse(graduation.equals(new Graduation(\"AY2122-S1\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"xenosf"},"content":"        assertFalse(graduation.equals(new Graduation(\"AY2324-S2\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"xenosf"},"content":"    public void isValidGraduationYear() {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"xenosf"},"content":"        // invalid","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"xenosf"},"content":"        assertFalse(Graduation.isValidGraduationYear(2001, 2000)); // reversed","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"xenosf"},"content":"        assertFalse(Graduation.isValidGraduationYear(2020, 2020)); // difference \u003d\u003d 0","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"xenosf"},"content":"        assertFalse(Graduation.isValidGraduationYear(2025, 2030)); // difference \u003e 1","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"xenosf"},"content":"        // valid","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"xenosf"},"content":"        assertTrue(Graduation.isValidGraduationYear(1999, 2000));","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"xenosf"},"content":"        assertTrue(Graduation.isValidGraduationYear(1997, 1998));","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"xenosf"},"content":"    public void isValidGraduationSemester() {","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"xenosf"},"content":"        // null","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"xenosf"},"content":"        assertThrows(NullPointerException.class, () -\u003e Graduation.isValidGraduationSemester(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"xenosf"},"content":"        // invalid","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"xenosf"},"content":"        assertFalse(Graduation.isValidGraduationSemester(Graduation.Semester.INVALID));","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"xenosf"},"content":"        // valid","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"xenosf"},"content":"        assertTrue(Graduation.isValidGraduationSemester(Graduation.Semester.S1));","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"xenosf"},"content":"        assertTrue(Graduation.isValidGraduationSemester(Graduation.Semester.S2));","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Singa-pirate"},"content":"    public void parseSemester_validGraduationString_validSemesterEnum() {","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(Graduation.Semester.S1, Graduation.parseSemester(\"AY2021-S1\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(Graduation.Semester.S2, Graduation.parseSemester(\"AY2021-S2\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"xenosf"},"content":"    public void parseSemester_invalidGraduationString_invalidGraduationSemester() {","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(Graduation.Semester.INVALID, Graduation.parseSemester(\"AY2021-S3\")); // invalid sem","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(Graduation.Semester.INVALID, Graduation.parseSemester(\"AY2021-S0\")); // invalid sem","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(Graduation.Semester.INVALID, Graduation.parseSemester(\"sem 1\")); // invalid format","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(Graduation.Semester.INVALID, Graduation.parseSemester(\"\")); // empty","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"xenosf"},"content":"    public void compareTo() {","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"xenosf"},"content":"        // earlier AY","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, new Graduation(\"AY7071-S1\").compareTo(new Graduation(\"AY2324-S1\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"xenosf"},"content":"        // later AY","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, new Graduation(\"AY2425-S1\").compareTo(new Graduation(\"AY2324-S1\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"xenosf"},"content":"        // same AY earlier sem","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, new Graduation(\"AY2324-S1\").compareTo(new Graduation(\"AY2324-S2\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"xenosf"},"content":"        // same AY later sem","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, new Graduation(\"AY2324-S2\").compareTo(new Graduation(\"AY2324-S1\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"xenosf"},"content":"        // same AY same sem","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, new Graduation(\"AY2324-S1\").compareTo(new Graduation(\"AY2324-S1\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"xenosf":115,"Singa-pirate":9}},{"path":"src/test/java/networkbook/model/person/LinkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"public class LinkTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Link(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"    public void constructor_invalidLink_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"        String invalidLink \u003d \"\";","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Link(invalidLink));","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"    public void isValidLink() {","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"        // null email","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"        assertThrows(NullPointerException.class, () -\u003e Link.isValidLink(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"        // blank email","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"        assertFalse(Link.isValidLink(\"\")); // empty string","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"        assertFalse(Link.isValidLink(\" \")); // spaces only","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"        // missing parts","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"        assertFalse(Link.isValidLink(\"example.\")); // missing local part","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"        assertFalse(Link.isValidLink(\"peterjack@\")); // missing domain label","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(Link.isValidLink(\"http://\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"        // invalid parts","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"        assertFalse(Link.isValidLink(\"peterjack@-.com\")); // invalid domain name","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"        assertFalse(Link.isValidLink(\"exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"        // valid link","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(Link.isValidLink(\"pythonanywhere.com/user/test\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(Link.isValidLink(\"example-dash.com\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(Link.isValidLink(\"example.com.sg\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(Link.isValidLink(\"http://xn--stackoverflow.com\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(Link.isValidLink(\"www.stackoverflow.xn--com\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(Link.isValidLink(\"example.com/test01\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(Link.isValidLink(\"www.example.com/test01/test02\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(Link.isValidLink(\"google.com/quack-quack\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(Link.isValidLink(\"google.com/index.html\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"        assertTrue(Link.isValidLink(\"https://www.pythonanywhere.com/user/test_underscore/\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(Link.isValidLink(\"https://www.google.com/?q\u003dhaha\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(Link.isValidLink(\"https://www.google.com?q\u003dhaha\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(Link.isValidLink(\"https://www.google.com/ncr?q\u003dhaha\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"    public void equals() {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"        Link link \u003d new Link(\"linkedin.com/in/aaron\");","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"        assertTrue(link.equals(new Link(\"linkedin.com/in/aaron\")));","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"        assertTrue(link.equals(link));","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"        assertFalse(link.equals(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"awhb"},"content":"        assertFalse(link.equals(5.0f));","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"        assertFalse(link.equals(new Link(\"linkedin.com/in/colin\")));","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"awhb"},"content":"    public void isSame_sameLinks_returnsTrue() {","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"        assertTrue(new Link(\"facebook.com/colin\").isSame(new Link(\"facebook.com/colin\")));","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"awhb"},"content":"        assertTrue(new Link(\"www.google.com\").isSame(new Link(\"www.google.com\")));","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"awhb"},"content":"    public void isSame_differentLinks_returnsFalse() {","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"awhb"},"content":"        assertFalse(new Link(\"facebook.com/colin\").isSame(new Link(\"facebook.com/aaron\")));","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"awhb"},"content":"        assertFalse(new Link(\"www.google.com\").isSame(new Link(\"www.exam.com\")));","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"nknguyenhc":14,"awhb":73}},{"path":"src/test/java/networkbook/model/person/NameContainsKeyTermsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"import networkbook.testutil.PersonBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"public class NameContainsKeyTermsPredicateTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"        List\u003cString\u003e firstPredicateKeyTermList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"        List\u003cString\u003e secondPredicateKeyTermList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate firstPredicate \u003d new NameContainsKeyTermsPredicate(firstPredicateKeyTermList);","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate secondPredicate \u003d new NameContainsKeyTermsPredicate(secondPredicateKeyTermList);","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate firstPredicateCopy \u003d new NameContainsKeyTermsPredicate(firstPredicateKeyTermList);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"    public void test_nameContainsKeyTerms_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"        // One keyword","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate predicate \u003d new NameContainsKeyTermsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"        predicate \u003d new NameContainsKeyTermsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"        predicate \u003d new NameContainsKeyTermsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"        predicate \u003d new NameContainsKeyTermsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"        // One key term","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"        predicate \u003d new NameContainsKeyTermsPredicate(Collections.singletonList(\"Ali\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"        // Multiple key terms","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"        predicate \u003d new NameContainsKeyTermsPredicate(Arrays.asList(\"lic\", \"ob\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"        // Only one matching key term","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"        predicate \u003d new NameContainsKeyTermsPredicate(Arrays.asList(\"Bo\", \"arol\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"awhb"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"        // Mixed-case key terms","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"        predicate \u003d new NameContainsKeyTermsPredicate(Arrays.asList(\"aL\", \"ce\", \"oB\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"        predicate \u003d new NameContainsKeyTermsPredicate(Arrays.asList(\"Bo\", \"aRoL\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"awhb"},"content":"    public void test_nameDoesNotContainKeyTerms_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"awhb"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate predicate \u003d new NameContainsKeyTermsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"awhb"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"awhb"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"awhb"},"content":"        predicate \u003d new NameContainsKeyTermsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"awhb"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"awhb"},"content":"        // Keywords match phone and email, but does not match name","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"awhb"},"content":"        predicate \u003d new NameContainsKeyTermsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"awhb"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhones(List.of(\"12345\"))","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"awhb"},"content":"                .withEmails(List.of(\"alice@email.com\")).build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"awhb"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"awhb"},"content":"        List\u003cString\u003e keyTerms \u003d List.of(\"keyterm1\", \"keyterm2\");","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"awhb"},"content":"        NameContainsKeyTermsPredicate predicate \u003d new NameContainsKeyTermsPredicate(keyTerms);","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"awhb"},"content":"        String expected \u003d NameContainsKeyTermsPredicate.class.getCanonicalName() + \"{key terms\u003d\" + keyTerms + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"awhb"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"awhb":103}},{"path":"src/test/java/networkbook/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.PersonBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"        // Keywords match phone and email, but does not match name","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhones(List.of(\"12345\"))","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"                .withEmails(List.of(\"alice@email.com\")).build()));","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"nknguyenhc":3,"-":80,"awhb":2}},{"path":"src/test/java/networkbook/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"nknguyenhc":2,"-":58}},{"path":"src/test/java/networkbook/model/person/PersonSortComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator.SortField;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.PersonSortComparator.SortOrder;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"import networkbook.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"import networkbook.testutil.PersonBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"public class PersonSortComparatorTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator firstCmp \u003d new PersonSortComparator(SortField.NAME, SortOrder.DESCENDING);","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator secondCmp \u003d new PersonSortComparator(SortField.PRIORITY, SortOrder.ASCENDING);","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"        assertTrue(firstCmp.equals(firstCmp));","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"xenosf"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"        assertFalse(firstCmp.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"        assertFalse(firstCmp.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"xenosf"},"content":"        assertFalse(firstCmp.equals(secondCmp));","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"xenosf"},"content":"    public void test_compareName_comparesCorrectly() {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"        Person a \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"        Person a2 \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"        Person b \u003d new PersonBuilder(TypicalPersons.BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"        // Ascending","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator ascCmp \u003d new PersonSortComparator(SortField.NAME, SortOrder.ASCENDING);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, ascCmp.compare(a, a2));","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, ascCmp.compare(b, a));","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, ascCmp.compare(a, b));","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"        // Descending","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator descCmp \u003d new PersonSortComparator(SortField.NAME, SortOrder.DESCENDING);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, descCmp.compare(a, a2));","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, descCmp.compare(a, b));","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, descCmp.compare(b, a));","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"xenosf"},"content":"    public void test_comparePriority_comparesCorrectly() {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"xenosf"},"content":"        Person h \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"xenosf"},"content":"                .withPriority(\"h\")","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"xenosf"},"content":"        Person h2 \u003d new PersonBuilder(TypicalPersons.BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"xenosf"},"content":"                .withPriority(\"h\")","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"xenosf"},"content":"        Person m \u003d new PersonBuilder(TypicalPersons.CARL)","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"xenosf"},"content":"                .withPriority(\"m\")","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"xenosf"},"content":"        // Ascending","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator ascCmp \u003d new PersonSortComparator(SortField.PRIORITY, SortOrder.ASCENDING);","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, ascCmp.compare(h, h2));","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, ascCmp.compare(h, m));","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, ascCmp.compare(m, h));","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"xenosf"},"content":"        // Descending","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator descCmp \u003d new PersonSortComparator(SortField.PRIORITY, SortOrder.DESCENDING);","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, descCmp.compare(h, h2));","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, descCmp.compare(m, h));","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, descCmp.compare(h, m));","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"xenosf"},"content":"    public void test_compareGrad_comparesCorrectly() {","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"xenosf"},"content":"        Person a1 \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"xenosf"},"content":"                .withGraduation(\"AY2223-S1\")","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"xenosf"},"content":"        Person a2 \u003d new PersonBuilder(TypicalPersons.BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"xenosf"},"content":"                .withGraduation(\"AY2223-S1\")","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"xenosf"},"content":"        Person b \u003d new PersonBuilder(TypicalPersons.BENSON)","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"xenosf"},"content":"                .withGraduation(\"AY2223-S2\")","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"xenosf"},"content":"        Person c \u003d new PersonBuilder(TypicalPersons.CARL)","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"xenosf"},"content":"                .withGraduation(\"AY2324-S2\")","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"xenosf"},"content":"        // Ascending","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator ascCmp \u003d new PersonSortComparator(SortField.GRAD, SortOrder.ASCENDING);","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, ascCmp.compare(a1, a2));","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, ascCmp.compare(c, b));","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, ascCmp.compare(b, a1));","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, ascCmp.compare(b, c));","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, ascCmp.compare(a2, b));","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"xenosf"},"content":"        // Descending","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator descCmp \u003d new PersonSortComparator(SortField.GRAD, SortOrder.DESCENDING);","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, descCmp.compare(a1, a2));","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, descCmp.compare(b, c));","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, descCmp.compare(a2, b));","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, descCmp.compare(c, b));","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, descCmp.compare(b, a1));","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"xenosf"},"content":"    public void test_compareOptional_comparesCorrectly() {","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"xenosf"},"content":"        Person h \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"xenosf"},"content":"                .withPriority(\"h\")","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"xenosf"},"content":"                .withGraduation(\"AY5051-S1\")","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"xenosf"},"content":"        Person h2 \u003d new PersonBuilder(TypicalPersons.DANIEL)","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"xenosf"},"content":"                .withPriority(\"h\")","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"xenosf"},"content":"                .withGraduation(\"AY5051-S1\")","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"xenosf"},"content":"        Person m \u003d new PersonBuilder(TypicalPersons.CARL)","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"xenosf"},"content":"                .withPriority(\"m\")","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"xenosf"},"content":"                .withGraduation(\"AY4950-S1\")","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"xenosf"},"content":"        Person n \u003d new Person(new Name(\"Nile\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"xenosf"},"content":"                new UniqueList\u003cPhone\u003e().setItems(List.of(new Phone(\"87438807\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"xenosf"},"content":"                new UniqueList\u003cEmail\u003e().setItems(List.of(new Email(\"alexyeoh@example.com\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"xenosf"},"content":"                new UniqueList\u003cLink\u003e().setItems(List.of(new Link(\"www.alexyeoh.net\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"xenosf"},"content":"                null,","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"                new UniqueList\u003cCourse\u003e().setItems(List.of(new Course(\"Information Systems\"))),","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"                new UniqueList\u003cSpecialisation\u003e().setItems(List.of(new Specialisation(\"Financial Technology\"))),","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"xenosf"},"content":"                SampleDataUtil.getTagList(\"friends\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"xenosf"},"content":"                null);","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"xenosf"},"content":"        Person n2 \u003d new Person(new Name(\"Nile Too\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"xenosf"},"content":"                new UniqueList\u003cPhone\u003e().setItems(List.of(new Phone(\"87438807\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"xenosf"},"content":"                new UniqueList\u003cEmail\u003e().setItems(List.of(new Email(\"alexyeoh@example.com\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"xenosf"},"content":"                new UniqueList\u003cLink\u003e().setItems(List.of(new Link(\"www.alexyeoh.net\"))),","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"xenosf"},"content":"                null,","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"                new UniqueList\u003cCourse\u003e().setItems(List.of(new Course(\"Information Systems\"))),","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"                new UniqueList\u003cSpecialisation\u003e().setItems(List.of(new Specialisation(\"Financial Technology\"))),","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"xenosf"},"content":"                SampleDataUtil.getTagList(\"friends\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"xenosf"},"content":"                null);","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"xenosf"},"content":"        // Ascending priority","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator ascPriority \u003d new PersonSortComparator(SortField.PRIORITY, SortOrder.ASCENDING);","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, ascPriority.compare(h, h2));","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, ascPriority.compare(n, n2));","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, ascPriority.compare(n, m));","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, ascPriority.compare(m, n));","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, ascPriority.compare(h, m));","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, ascPriority.compare(m, h));","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"xenosf"},"content":"        // Descending priority","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator descPriority \u003d new PersonSortComparator(SortField.PRIORITY, SortOrder.DESCENDING);","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, descPriority.compare(h, h2));","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, descPriority.compare(n, n2));","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, descPriority.compare(n, m));","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, descPriority.compare(m, n));","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, descPriority.compare(m, h));","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, descPriority.compare(h, m));","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"xenosf"},"content":"        // Ascending grad","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator ascGrad \u003d new PersonSortComparator(SortField.GRAD, SortOrder.ASCENDING);","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, ascGrad.compare(h, h2));","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, ascGrad.compare(n, n2));","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, ascGrad.compare(n, m));","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, ascGrad.compare(m, n));","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, ascGrad.compare(h, m));","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, ascGrad.compare(m, h));","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"xenosf"},"content":"        // Descending grad","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator descGrad \u003d new PersonSortComparator(SortField.GRAD, SortOrder.DESCENDING);","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, descGrad.compare(h, h2));","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, descGrad.compare(n, n2));","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, descGrad.compare(n, m));","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, descGrad.compare(m, n));","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"xenosf"},"content":"        assertEquals(1, descGrad.compare(m, h));","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"xenosf"},"content":"        assertEquals(-1, descGrad.compare(h, m));","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"xenosf"},"content":"    public void test_compareEmpty_comparesCorrectly() {","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"xenosf"},"content":"        Person h \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"xenosf"},"content":"                .withPriority(\"h\")","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"xenosf"},"content":"        Person h2 \u003d new PersonBuilder(TypicalPersons.BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"xenosf"},"content":"                .withPriority(\"h\")","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"xenosf"},"content":"        Person m \u003d new PersonBuilder(TypicalPersons.CARL)","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"xenosf"},"content":"                .withPriority(\"m\")","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"xenosf"},"content":"        // Ascending","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator ascCmp \u003d new PersonSortComparator(SortField.NONE, SortOrder.ASCENDING);","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, ascCmp.compare(h, h2));","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, ascCmp.compare(h, m));","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, ascCmp.compare(m, h));","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"xenosf"},"content":"        // Descending","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator descCmp \u003d new PersonSortComparator(SortField.NONE, SortOrder.DESCENDING);","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, descCmp.compare(h, h2));","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, descCmp.compare(m, h));","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"xenosf"},"content":"        assertEquals(0, descCmp.compare(h, m));","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":213,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"xenosf"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"xenosf"},"content":"        PersonSortComparator cmp \u003d new PersonSortComparator(SortField.NONE, SortOrder.ASCENDING);","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"xenosf"},"content":"        Comparator\u003cPerson\u003e comparator \u003d PersonSortComparator.EMPTY_COMPARATOR;","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"xenosf"},"content":"        String expected \u003d PersonSortComparator.class.getCanonicalName() + \"{comparator\u003d\" + comparator.toString() + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"xenosf"},"content":"        assertEquals(expected, cmp.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"xenosf"},"content":"    public void parseSortField() {","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"xenosf"},"content":"        assertEquals(SortField.NAME, PersonSortComparator.parseSortField(\"name\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"xenosf"},"content":"        assertEquals(SortField.GRAD, PersonSortComparator.parseSortField(\"grad\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"xenosf"},"content":"        assertEquals(SortField.GRAD, PersonSortComparator.parseSortField(\"graduation\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"xenosf"},"content":"        assertEquals(SortField.PRIORITY, PersonSortComparator.parseSortField(\"priority\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"xenosf"},"content":"        assertEquals(SortField.NONE, PersonSortComparator.parseSortField(\"none\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"xenosf"},"content":"        assertEquals(SortField.INVALID, PersonSortComparator.parseSortField(\"sfdsfsdf\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"xenosf"},"content":"        assertEquals(SortField.INVALID, PersonSortComparator.parseSortField(\"\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"xenosf"},"content":"    public void parseSortOrder() {","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"xenosf"},"content":"        assertEquals(SortOrder.ASCENDING, PersonSortComparator.parseSortOrder(\"ascending\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"xenosf"},"content":"        assertEquals(SortOrder.ASCENDING, PersonSortComparator.parseSortOrder(\"asc\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"xenosf"},"content":"        assertEquals(SortOrder.DESCENDING, PersonSortComparator.parseSortOrder(\"descending\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"xenosf"},"content":"        assertEquals(SortOrder.DESCENDING, PersonSortComparator.parseSortOrder(\"desc\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":245,"author":{"gitId":"xenosf"},"content":"        assertEquals(SortOrder.INVALID, PersonSortComparator.parseSortOrder(\"alksdjkld\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"xenosf"},"content":"        assertEquals(SortOrder.INVALID, PersonSortComparator.parseSortOrder(\"\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":247,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":249,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":250,"author":{"gitId":"xenosf"},"content":"    public void isValidSortField() {","lastModifiedDate":"2023-10-18"},{"lineNumber":251,"author":{"gitId":"xenosf"},"content":"        assertTrue(PersonSortComparator.isValidSortField(SortField.NAME));","lastModifiedDate":"2023-10-18"},{"lineNumber":252,"author":{"gitId":"xenosf"},"content":"        assertTrue(PersonSortComparator.isValidSortField(SortField.GRAD));","lastModifiedDate":"2023-10-18"},{"lineNumber":253,"author":{"gitId":"xenosf"},"content":"        assertTrue(PersonSortComparator.isValidSortField(SortField.PRIORITY));","lastModifiedDate":"2023-10-18"},{"lineNumber":254,"author":{"gitId":"xenosf"},"content":"        assertTrue(PersonSortComparator.isValidSortField(SortField.NONE));","lastModifiedDate":"2023-10-18"},{"lineNumber":255,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":256,"author":{"gitId":"xenosf"},"content":"        assertFalse(PersonSortComparator.isValidSortField(SortField.INVALID));","lastModifiedDate":"2023-10-18"},{"lineNumber":257,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":259,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":260,"author":{"gitId":"xenosf"},"content":"    public void isValidSortOrder() {","lastModifiedDate":"2023-10-18"},{"lineNumber":261,"author":{"gitId":"xenosf"},"content":"        assertTrue(PersonSortComparator.isValidSortOrder(SortOrder.ASCENDING));","lastModifiedDate":"2023-10-18"},{"lineNumber":262,"author":{"gitId":"xenosf"},"content":"        assertTrue(PersonSortComparator.isValidSortOrder(SortOrder.DESCENDING));","lastModifiedDate":"2023-10-18"},{"lineNumber":263,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":264,"author":{"gitId":"xenosf"},"content":"        assertFalse(PersonSortComparator.isValidSortOrder(SortOrder.INVALID));","lastModifiedDate":"2023-10-18"},{"lineNumber":265,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":266,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":267,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":268,"author":{"gitId":"xenosf"},"content":"    public void isValidSortParams() {","lastModifiedDate":"2023-10-19"},{"lineNumber":269,"author":{"gitId":"xenosf"},"content":"        // valid","lastModifiedDate":"2023-10-19"},{"lineNumber":270,"author":{"gitId":"xenosf"},"content":"        assertTrue(PersonSortComparator.isValidSortParams(SortField.NONE, SortOrder.ASCENDING));","lastModifiedDate":"2023-10-19"},{"lineNumber":271,"author":{"gitId":"xenosf"},"content":"        assertTrue(PersonSortComparator.isValidSortParams(SortField.NAME, SortOrder.DESCENDING));","lastModifiedDate":"2023-10-19"},{"lineNumber":272,"author":{"gitId":"xenosf"},"content":"        assertTrue(PersonSortComparator.isValidSortParams(SortField.GRAD, SortOrder.DESCENDING));","lastModifiedDate":"2023-10-19"},{"lineNumber":273,"author":{"gitId":"xenosf"},"content":"        assertTrue(PersonSortComparator.isValidSortParams(SortField.PRIORITY, SortOrder.ASCENDING));","lastModifiedDate":"2023-10-19"},{"lineNumber":274,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":275,"author":{"gitId":"xenosf"},"content":"        // invalid","lastModifiedDate":"2023-10-19"},{"lineNumber":276,"author":{"gitId":"xenosf"},"content":"        assertFalse(PersonSortComparator.isValidSortParams(SortField.INVALID, SortOrder.INVALID));","lastModifiedDate":"2023-10-19"},{"lineNumber":277,"author":{"gitId":"xenosf"},"content":"        assertFalse(PersonSortComparator.isValidSortParams(SortField.NONE, SortOrder.INVALID));","lastModifiedDate":"2023-10-19"},{"lineNumber":278,"author":{"gitId":"xenosf"},"content":"        assertFalse(PersonSortComparator.isValidSortParams(SortField.INVALID, SortOrder.ASCENDING));","lastModifiedDate":"2023-10-19"},{"lineNumber":279,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":280,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":281,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"nknguyenhc":4,"xenosf":277}},{"path":"src/test/java/networkbook/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_COURSE_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_GRADUATION_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_LINK_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_SPECIALISATION_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.PersonBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"public class PersonTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public void isSame() {","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"        assertTrue(TypicalPersons.AMY.isSame(TypicalPersons.AMY));","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"        assertFalse(TypicalPersons.AMY.isSame(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"        Person editedAmy \u003d new PersonBuilder(TypicalPersons.AMY)","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"                .withPhones(List.of(VALID_PHONE_BOB))","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"xenosf"},"content":"                .withEmails(List.of(VALID_EMAIL_BOB))","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"                .withLinks(List.of(VALID_LINK_BOB))","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"xenosf"},"content":"                .withGraduation(VALID_GRADUATION_BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"                .withCourses(List.of(VALID_COURSE_BOB))","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"                .withSpecialisations(List.of(VALID_SPECIALISATION_BOB))","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"        assertTrue(TypicalPersons.AMY.isSame(editedAmy));","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"        editedAmy \u003d new PersonBuilder(TypicalPersons.ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"        assertFalse(TypicalPersons.ALICE.isSame(editedAmy));","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        Person editedBob \u003d new PersonBuilder(TypicalPersons.BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(TypicalPersons.BOB.isSame(editedBob));","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"        editedBob \u003d new PersonBuilder(TypicalPersons.BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(TypicalPersons.BOB.isSame(editedBob));","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"    public void getValue_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(UnsupportedOperationException.class, TypicalPersons.ALICE::getValue);","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"        Person aliceCopy \u003d new PersonBuilder(TypicalPersons.AMY).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"        assertTrue(TypicalPersons.AMY.equals(aliceCopy));","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"        assertTrue(TypicalPersons.AMY.equals(TypicalPersons.AMY));","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"        assertFalse(TypicalPersons.AMY.equals(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"awhb"},"content":"        assertFalse(TypicalPersons.AMY.equals(5));","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"awhb"},"content":"        assertFalse(TypicalPersons.AMY.equals(TypicalPersons.BOB));","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"awhb"},"content":"        Person editedAmy \u003d new PersonBuilder(TypicalPersons.AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"awhb"},"content":"        assertFalse(TypicalPersons.AMY.equals(editedAmy));","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"awhb"},"content":"        editedAmy \u003d new PersonBuilder(TypicalPersons.AMY).withPhones(List.of(VALID_PHONE_BOB)).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"awhb"},"content":"        assertFalse(TypicalPersons.AMY.equals(editedAmy));","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"        editedAmy \u003d new PersonBuilder(TypicalPersons.AMY).withEmails(List.of(VALID_EMAIL_BOB)).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"awhb"},"content":"        assertFalse(TypicalPersons.AMY.equals(editedAmy));","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"awhb"},"content":"        // different link -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"        editedAmy \u003d new PersonBuilder(TypicalPersons.AMY).withLinks(List.of(VALID_LINK_BOB)).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"awhb"},"content":"        assertFalse(TypicalPersons.AMY.equals(editedAmy));","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"xenosf"},"content":"        // different graduation date -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"xenosf"},"content":"        editedAmy \u003d new PersonBuilder(TypicalPersons.AMY).withGraduation(VALID_GRADUATION_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"awhb"},"content":"        assertFalse(TypicalPersons.AMY.equals(editedAmy));","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"awhb"},"content":"        // different course -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"        editedAmy \u003d new PersonBuilder(TypicalPersons.AMY).withCourses(List.of(VALID_COURSE_BOB)).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"awhb"},"content":"        assertFalse(TypicalPersons.AMY.equals(editedAmy));","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"awhb"},"content":"        // different specialisation -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"Eola-Z"},"content":"        editedAmy \u003d new PersonBuilder(TypicalPersons.AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"Eola-Z"},"content":"                .withSpecialisations(List.of(VALID_SPECIALISATION_BOB))","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"Eola-Z"},"content":"                .build();","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"awhb"},"content":"        assertFalse(TypicalPersons.AMY.equals(editedAmy));","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"awhb"},"content":"        editedAmy \u003d new PersonBuilder(TypicalPersons.AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"awhb"},"content":"        assertFalse(TypicalPersons.AMY.equals(editedAmy));","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"awhb"},"content":"        String expected \u003d Person.class.getCanonicalName()","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"awhb"},"content":"                + \"{name\u003d\" + TypicalPersons.AMY.getName()","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"awhb"},"content":"                + \", phones\u003d\" + TypicalPersons.AMY.getPhones()","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"awhb"},"content":"                + \", emails\u003d\" + TypicalPersons.AMY.getEmails()","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"                + \", links\u003d\" + TypicalPersons.AMY.getLinks()","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"xenosf"},"content":"                + \", graduation\u003d\" + TypicalPersons.AMY.getGraduation().get()","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"                + \", courses\u003d\" + TypicalPersons.AMY.getCourses()","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"                + \", specialisations\u003d\" + TypicalPersons.AMY.getSpecialisations()","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"awhb"},"content":"                + \", tags\u003d\" + TypicalPersons.AMY.getTags() + \", priority\u003d\" + TypicalPersons.AMY.getPriority().get()","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"awhb"},"content":"                + \"}\";","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"awhb"},"content":"        assertEquals(expected, TypicalPersons.AMY.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Eola-Z":3,"nknguyenhc":79,"xenosf":10,"awhb":39}},{"path":"src/test/java/networkbook/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"nknguyenhc":2,"-":58}},{"path":"src/test/java/networkbook/model/person/PriorityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"public class PriorityTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"    public static final String VALID_PRIORITY_STRING_1 \u003d \"h\";","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Singa-pirate"},"content":"    public static final String VALID_PRIORITY_STRING_2 \u003d \"M\";","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"    public static final String VALID_PRIORITY_STRING_3 \u003d \"l\";","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"    public static final String VALID_PRIORITY_STRING_4 \u003d \"high\";","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"    public static final String VALID_PRIORITY_STRING_5 \u003d \"mEDiUm\";","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"    public static final String VALID_PRIORITY_STRING_6 \u003d \"lOW\";","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"    public static final String INVALID_PRIORITY_STRING_1 \u003d \"hi\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"    public static final String INVALID_PRIORITY_STRING_2 \u003d \"1\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"    public static final String INVALID_PRIORITY_STRING_3 \u003d \"highmedium\";","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Priority(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"    public void constructor_validPriority_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"        Priority p1 \u003d new Priority(VALID_PRIORITY_STRING_1);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"        Priority p2 \u003d new Priority(VALID_PRIORITY_STRING_4);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(p1, p2);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"    public void constructor_invalidPriority_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Priority(INVALID_PRIORITY_STRING_1));","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Priority(INVALID_PRIORITY_STRING_2));","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Priority(INVALID_PRIORITY_STRING_3));","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"    public void isValidPriority() {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"        // null priority","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(NullPointerException.class, () -\u003e Priority.isValidPriority(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"        // invalid priority","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"        assertFalse(Priority.isValidPriority(Priority.PriorityLevel.INVALID));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"        // valid priorities","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(Priority.isValidPriority(Priority.PriorityLevel.HIGH));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(Priority.isValidPriority(Priority.PriorityLevel.MEDIUM));","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(Priority.isValidPriority(Priority.PriorityLevel.LOW));","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"    public void parsePriorityLevel_validPriorityString_validPriorityLevel() {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(Priority.isValidPriority(Priority.parsePriorityLevel(VALID_PRIORITY_STRING_1)));","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(Priority.isValidPriority(Priority.parsePriorityLevel(VALID_PRIORITY_STRING_2)));","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(Priority.isValidPriority(Priority.parsePriorityLevel(VALID_PRIORITY_STRING_3)));","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(Priority.isValidPriority(Priority.parsePriorityLevel(VALID_PRIORITY_STRING_4)));","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(Priority.isValidPriority(Priority.parsePriorityLevel(VALID_PRIORITY_STRING_5)));","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(Priority.isValidPriority(Priority.parsePriorityLevel(VALID_PRIORITY_STRING_6)));","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"    public void parsePriorityLevel_invalidPriorityString_invalidPriorityLevel() {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"Singa-pirate"},"content":"        assertFalse(Priority.isValidPriority(Priority.parsePriorityLevel(INVALID_PRIORITY_STRING_1)));","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"Singa-pirate"},"content":"        assertFalse(Priority.isValidPriority(Priority.parsePriorityLevel(INVALID_PRIORITY_STRING_2)));","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"Singa-pirate"},"content":"        assertFalse(Priority.isValidPriority(Priority.parsePriorityLevel(INVALID_PRIORITY_STRING_3)));","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"Singa-pirate"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"Singa-pirate"},"content":"        Priority priority \u003d new Priority(VALID_PRIORITY_STRING_1);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"Singa-pirate"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(priority.equals(priority));","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"Singa-pirate"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"Singa-pirate"},"content":"        assertFalse(priority.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"Singa-pirate"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"Singa-pirate"},"content":"        assertFalse(priority.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"Singa-pirate"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"Singa-pirate"},"content":"        assertFalse(priority.equals(new Priority(VALID_PRIORITY_STRING_2)));","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"Singa-pirate"},"content":"    public void toString_validPriority_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"        String s1 \u003d new Priority(VALID_PRIORITY_STRING_1).toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"Singa-pirate"},"content":"        String s2 \u003d new Priority(VALID_PRIORITY_STRING_2).toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"        String s3 \u003d new Priority(VALID_PRIORITY_STRING_3).toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(\"High\", s1);","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(\"Medium\", s2);","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(\"Low\", s3);","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Singa-pirate":98}},{"path":"src/test/java/networkbook/model/person/SpecialisationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"public class SpecialisationTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Specialisation(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    public void constructor_invalidSpecialisation_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"        String invalidSpecialisation \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Specialisation(invalidSpecialisation));","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"     * The constructor should automatically remove leading and trailing spaces when constructing a specialisation","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"    public void constructor_removalOfSpaces_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"            Specialisation spec \u003d new Specialisation(\"  Computer Science   \");","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"            Assertions.fail();","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"    public void isValidSpecialisation() {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"        // null specialisation","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"        assertThrows(NullPointerException.class, () -\u003e Specialisation.isValidSpecialisation(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"        // invalid specialisations","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"        assertFalse(Specialisation.isValidSpecialisation(\"\")); // empty string","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"        assertFalse(Specialisation.isValidSpecialisation(\" \")); // spaces only","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(Specialisation","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"                .isValidSpecialisation(\"I once saw a  balloon\")); // more than one space between words","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(Specialisation.isValidSpecialisation(\" I once went to Kentucky\")); // spaces in the beginning","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"        // valid specialisations","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"        assertTrue(Specialisation.isValidSpecialisation(\"Software Engineering\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(Specialisation.isValidSpecialisation(\"AAA Gaming\")); // all uppercase words (acronyms)","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(Specialisation","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Eola-Z"},"content":"                .isValidSpecialisation(\"Leader of the Multinational Party of Czechoslovakia and the \"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Eola-Z"},"content":"                        + \"Associations Within the Umbrella of the Multinational Party.\")); // very long specialisation","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(Specialisation","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Eola-Z"},"content":"                .isValidSpecialisation(\"Industry 4.0 and AI planning, \"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Eola-Z"},"content":"                        + \"decision-making\")); // commas, periods, dashes","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(Specialisation.isValidSpecialisation(\"developed moon.exe\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(Specialisation.isValidSpecialisation(\"AIa\")); // uppercase letters beyond the first character","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(Specialisation.isValidSpecialisation(\", but\")); // starting a word with comma, period, dash","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(Specialisation.isValidSpecialisation(\".exe\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(Specialisation.isValidSpecialisation(\"-ish\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"        Specialisation specialisation \u003d new Specialisation(\"Valid specialisation\");","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(specialisation, new Specialisation(\"Valid specialisation\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(specialisation, specialisation);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"        assertFalse(specialisation.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(5.0f, specialisation);","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"awhb"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"Eola-Z"},"content":"        assertNotEquals(specialisation, new Specialisation(\"Other valid specialisation\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"Eola-Z"},"content":"        // same specialisation but with leading/trailing spaces -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(specialisation, new Specialisation(\"  Valid specialisation    \"));","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"Eola-Z"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Eola-Z"},"content":"        // roughly equivalent to equals","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Eola-Z"},"content":"        Specialisation specialisation \u003d new Specialisation(\"Valid specialisation\");","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(specialisation.hashCode() \u003d\u003d new Specialisation(\"Valid specialisation\").hashCode());","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(specialisation.hashCode() \u003d\u003d specialisation.hashCode());","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(specialisation.hashCode() \u003d\u003d new Specialisation(\"Other valid specialisation\").hashCode());","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(specialisation.hashCode() \u003d\u003d 5);","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(new Integer(specialisation.hashCode()).equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"Eola-Z"},"content":"    public void getSpecialisation() {","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Eola-Z"},"content":"        Specialisation specialisation \u003d new Specialisation(\"Valid Specialisation\");","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"Eola-Z"},"content":"        // Should behave like the string that it was constructed from","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(specialisation.getSpecialisation().equals(\"Valid Specialisation\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(specialisation.getSpecialisation()","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"Eola-Z"},"content":"                .equals(new Specialisation(\"Valid Specialisation\").getSpecialisation()));","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(specialisation.getSpecialisation()","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"Eola-Z"},"content":"                .equals(new Specialisation(specialisation.getSpecialisation()).getSpecialisation()));","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(specialisation.getSpecialisation().equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(specialisation.getSpecialisation().equals(\"Some other text\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"Eola-Z"},"content":"        assertFalse(specialisation.getSpecialisation()","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"Eola-Z"},"content":"                .equals(new Specialisation(\"Other Valid Specialisation\").getSpecialisation()));","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"Eola-Z"},"content":"        // leading and trailing spaces removed","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(new Specialisation(\"   Valid specialisation    \").getSpecialisation(),","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"Eola-Z"},"content":"                \"Valid specialisation\");","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Eola-Z":71,"awhb":50}},{"path":"src/test/java/networkbook/model/person/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.model.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"    private static final String INVALID_TAG_1 \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"    private static final String INVALID_TAG_2 \u003d \"/friends\";","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"    private static final String VALID_TAG_1 \u003d \"cs_god\";","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"    private static final String VALID_TAG_2 \u003d \"hyphen-tag and space\";","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(INVALID_TAG_1));","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(INVALID_TAG_2));","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"    public void isValidTagName_nullTagName_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"    public void isSame_sameTagNames_returnsTrue() {","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(new Tag(VALID_TAG_1).isSame(new Tag(VALID_TAG_1)));","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(new Tag(VALID_TAG_2).isSame(new Tag(VALID_TAG_2)));","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"    public void isSame_differentTagNames_returnsFalse() {","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"        assertFalse(new Tag(VALID_TAG_1).isSame(new Tag(VALID_TAG_2)));","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Singa-pirate"},"content":"        assertFalse(new Tag(VALID_TAG_1).isSame(new Tag(\" \" + VALID_TAG_1)));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Singa-pirate"},"content":"    public void isSame_secondTagIsNull_returnsFalse() {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Singa-pirate"},"content":"        assertFalse(new Tag(VALID_TAG_1).isSame(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Singa-pirate"},"content":"    public void equals_sameTags_returnTrue() {","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(new Tag(VALID_TAG_2), new Tag(VALID_TAG_2));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Singa-pirate"},"content":"    public void equals_differentTags_returnFalse() {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2));","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Singa-pirate"},"content":"    public void equals_null_returnFalse() {","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Singa-pirate"},"content":"        assertNotEquals(new Tag(VALID_TAG_1), null);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"nknguyenhc":11,"Singa-pirate":35,"-":21}},{"path":"src/test/java/networkbook/model/util/UniqueListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.util;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrowsAssertionError;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"public class UniqueListTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    private static final UniqueNumber ITEM1 \u003d new UniqueNumber(1, 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"    private static final UniqueNumber ITEM1_COPY \u003d new UniqueNumber(1, 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"    private static final UniqueNumber ITEM1_SAME \u003d new UniqueNumber(1, 2);","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    private static final UniqueNumber ITEM2 \u003d new UniqueNumber(2, 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    private static final UniqueNumber ITEM3 \u003d new UniqueNumber(3, 0);","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    private static final UniqueNumber ITEM_NOT_IN_LIST \u003d new UniqueNumber(4, 0);","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    private static final UniqueNumber ITEM_NOT_IN_LIST1 \u003d new UniqueNumber(5, 0);","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"    private static final int INDEX1 \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    private static final int INDEX2 \u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    private static final int INDEX_OUT_OF_BOUND \u003d 3;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    private static final int NEGATIVE_INDEX \u003d -1;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    private static final UniqueList\u003cUniqueNumber\u003e SAMPLE_LIST \u003d new UniqueList\u003cUniqueNumber\u003e().setItems(List.of(","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"            ITEM1, ITEM2, ITEM3));","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    private static UniqueList\u003cUniqueNumber\u003e getSampleList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        return SAMPLE_LIST.copy();","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    public void contains_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().contains(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    public void contains_elementNotInList_returnsFalse() {","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(getSampleList().contains(ITEM_NOT_IN_LIST));","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    public void contains_elementInList_returnsTrue() {","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(getSampleList().contains(ITEM1));","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(getSampleList().contains(ITEM1_SAME));","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(getSampleList().contains(ITEM1_COPY));","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"    public void containsNotAtIndex_null_throwsAssertionError() {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().containsNotAtIndex(null, INDEX1));","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"    public void containsNotAtIndex_indexOutOfBound_throwsAssertionError() {","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().containsNotAtIndex(ITEM1_COPY, NEGATIVE_INDEX));","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().containsNotAtIndex(ITEM1_COPY, INDEX_OUT_OF_BOUND));","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"    public void containsNotAtIndex_elementInListNotAtIndex_returnsTrue() {","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(getSampleList().containsNotAtIndex(ITEM1, INDEX2));","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(getSampleList().containsNotAtIndex(ITEM1_COPY, INDEX2));","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(getSampleList().containsNotAtIndex(ITEM1_SAME, INDEX2));","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"    public void containsNotAtIndex_elementInListAtIndex_returnsFalse() {","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(getSampleList().containsNotAtIndex(ITEM1, INDEX1));","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(getSampleList().containsNotAtIndex(ITEM1_COPY, INDEX1));","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(getSampleList().containsNotAtIndex(ITEM1_SAME, INDEX1));","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"    public void containsNotAtIndex_elementNotInList_returnFalse() {","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(getSampleList().containsNotAtIndex(ITEM_NOT_IN_LIST, INDEX1));","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"    public void add_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().add(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"    public void add_duplicate_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().add(ITEM1));","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().add(ITEM1_SAME));","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().add(ITEM1_COPY));","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"    public void addAll_null_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().addAllFromList(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"    public void addAll_duplicate_duplicateNotAdded() {","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e uniqueList \u003d getSampleList();","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e addList \u003d new UniqueList\u003cUniqueNumber\u003e().setItems(List.of(","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"                ITEM1_SAME, ITEM_NOT_IN_LIST));","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"        uniqueList.addAllFromList(addList);","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e expectedList \u003d getSampleList();","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"        expectedList.add(ITEM_NOT_IN_LIST);","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedList, uniqueList);","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"        uniqueList \u003d getSampleList();","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"        addList \u003d new UniqueList\u003cUniqueNumber\u003e().setItems(List.of(","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"                ITEM1_COPY, ITEM_NOT_IN_LIST));","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"        uniqueList.addAllFromList(addList);","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedList, uniqueList);","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"    public void addAll_noDuplicate_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e uniqueList \u003d getSampleList();","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e addList \u003d new UniqueList\u003cUniqueNumber\u003e().setItems(List.of(ITEM_NOT_IN_LIST));","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"        uniqueList.addAllFromList(addList);","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e expectedList \u003d new UniqueList\u003cUniqueNumber\u003e().setItems(List.of(","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"                ITEM1, ITEM2, ITEM3, ITEM_NOT_IN_LIST));","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedList, uniqueList);","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"    public void setItem_nullTarget_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(()","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"                -\u003e getSampleList().setItem(null, ITEM_NOT_IN_LIST));","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"    public void setItem_nullEdited_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(()","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"                -\u003e getSampleList().setItem(ITEM1, null));","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"    public void setItem_targetNotInList_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().setItem(ITEM_NOT_IN_LIST, ITEM_NOT_IN_LIST1));","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"    public void setItem_editedEqualToTarget_success() {","lastModifiedDate":"2023-10-11"},{"lineNumber":143,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e uniqueList \u003d getSampleList();","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"        uniqueList.setItem(ITEM1, ITEM1_COPY);","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e expectedList \u003d getSampleList();","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedList, uniqueList);","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"        uniqueList.setItem(ITEM1, ITEM1);","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedList, uniqueList);","lastModifiedDate":"2023-10-11"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"    public void setItem_editedIsSameAsTarget_success() {","lastModifiedDate":"2023-10-11"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e uniqueList \u003d getSampleList();","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"        uniqueList.setItem(ITEM1, ITEM1_SAME);","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e expectedList \u003d new UniqueList\u003cUniqueNumber\u003e().setItems(List.of(","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"                ITEM1_SAME, ITEM2, ITEM3));","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedList, uniqueList);","lastModifiedDate":"2023-10-11"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"    public void setItem_editedDifferentFromTarget_success() {","lastModifiedDate":"2023-10-11"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e uniqueList \u003d getSampleList();","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"        uniqueList.setItem(ITEM1, ITEM_NOT_IN_LIST);","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e expectedList \u003d new UniqueList\u003cUniqueNumber\u003e().setItems(List.of(","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"                ITEM_NOT_IN_LIST, ITEM2, ITEM3));","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedList, uniqueList);","lastModifiedDate":"2023-10-11"},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"    public void setItem_editedNotUnique_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().setItem(ITEM3, ITEM1_SAME));","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"nknguyenhc"},"content":"    public void setItemWithIndex_nullEdited_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().setItem(INDEX1, null));","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"nknguyenhc"},"content":"    public void setItemWithIndex_invalidIndex_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().setItem(NEGATIVE_INDEX, ITEM_NOT_IN_LIST));","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().setItem(INDEX_OUT_OF_BOUND, ITEM_NOT_IN_LIST));","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"nknguyenhc"},"content":"    public void setItemWithIndex_editedItemAlreadyInList_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().setItem(INDEX2, ITEM1));","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().setItem(INDEX2, ITEM1_COPY));","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().setItem(INDEX2, ITEM1_SAME));","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"nknguyenhc"},"content":"    public void setItemWithIndex_editedItemEqualTarget_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e uniqueList \u003d getSampleList();","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"nknguyenhc"},"content":"        uniqueList.setItem(INDEX1, ITEM1_COPY);","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e expectedList \u003d getSampleList();","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedList, uniqueList);","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"nknguyenhc"},"content":"        uniqueList.setItem(INDEX1, ITEM1);","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedList, uniqueList);","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"nknguyenhc"},"content":"    public void setItemWithIndex_editedItemSameAsTarget_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e uniqueList \u003d getSampleList();","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"nknguyenhc"},"content":"        uniqueList.setItem(INDEX1, ITEM1_SAME);","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e expectedList \u003d new UniqueList\u003cUniqueNumber\u003e().setItems(List.of(","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"nknguyenhc"},"content":"                ITEM1_SAME, ITEM2, ITEM3));","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedList, uniqueList);","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"nknguyenhc"},"content":"    public void setItemWithIndex_editedNotInList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e uniqueList \u003d getSampleList();","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"nknguyenhc"},"content":"        uniqueList.setItem(INDEX1, ITEM_NOT_IN_LIST);","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e expectedList \u003d new UniqueList\u003cUniqueNumber\u003e().setItems(List.of(","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"nknguyenhc"},"content":"                ITEM_NOT_IN_LIST, ITEM2, ITEM3));","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedList, uniqueList);","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":221,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":222,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":223,"author":{"gitId":"nknguyenhc"},"content":"    public void remove_itemDoesNotExist_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().remove(ITEM_NOT_IN_LIST));","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":226,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":227,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":228,"author":{"gitId":"nknguyenhc"},"content":"    public void remove_itemExists_removesItem() {","lastModifiedDate":"2023-10-11"},{"lineNumber":229,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e uniqueList \u003d getSampleList();","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"nknguyenhc"},"content":"        uniqueList.remove(ITEM1);","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e expected \u003d new UniqueList\u003cUniqueNumber\u003e().setItems(List.of(","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"nknguyenhc"},"content":"                ITEM2, ITEM3));","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expected, uniqueList);","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"nknguyenhc"},"content":"        uniqueList \u003d getSampleList();","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"nknguyenhc"},"content":"        uniqueList.remove(ITEM1_COPY);","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expected, uniqueList);","lastModifiedDate":"2023-10-11"},{"lineNumber":238,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":239,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":240,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":241,"author":{"gitId":"nknguyenhc"},"content":"    public void setItems_nullList_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e new UniqueList\u003cUniqueNumber\u003e().setItems((List\u003cUniqueNumber\u003e) null));","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e new UniqueList\u003cUniqueNumber\u003e().setItems((UniqueList\u003cUniqueNumber\u003e) null));","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":245,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":246,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":247,"author":{"gitId":"nknguyenhc"},"content":"    public void setItems_uniqueList_replacesOwnListWithProvided() {","lastModifiedDate":"2023-10-11"},{"lineNumber":248,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e expectedUniqueList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-11"},{"lineNumber":249,"author":{"gitId":"nknguyenhc"},"content":"        List\u003cUniqueNumber\u003e expectedList \u003d List.of(new UniqueNumber(3, 1));","lastModifiedDate":"2023-10-11"},{"lineNumber":250,"author":{"gitId":"nknguyenhc"},"content":"        expectedList.forEach(expectedUniqueList::add);","lastModifiedDate":"2023-10-11"},{"lineNumber":251,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedUniqueList, new UniqueList\u003cUniqueNumber\u003e().setItems(expectedUniqueList));","lastModifiedDate":"2023-10-11"},{"lineNumber":252,"author":{"gitId":"nknguyenhc"},"content":"        assertNotEquals(new UniqueList\u003cUniqueNumber\u003e(),","lastModifiedDate":"2023-10-11"},{"lineNumber":253,"author":{"gitId":"nknguyenhc"},"content":"                new UniqueList\u003cUniqueNumber\u003e().setItems(expectedUniqueList));","lastModifiedDate":"2023-10-11"},{"lineNumber":254,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(expectedUniqueList, new UniqueList\u003cUniqueNumber\u003e().setItems(expectedList));","lastModifiedDate":"2023-10-11"},{"lineNumber":255,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":256,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":257,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":258,"author":{"gitId":"nknguyenhc"},"content":"    public void setItems_listWithDuplicate_throwsAssertionError() {","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"nknguyenhc"},"content":"        List\u003cUniqueNumber\u003e list \u003d List.of(ITEM1, ITEM1_SAME);","lastModifiedDate":"2023-10-26"},{"lineNumber":260,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e getSampleList().setItems(list));","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":262,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":263,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":264,"author":{"gitId":"nknguyenhc"},"content":"    public void isEmpty_emptyList_returnsTrue() {","lastModifiedDate":"2023-10-11"},{"lineNumber":265,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(new UniqueList\u003cUniqueNumber\u003e().isEmpty());","lastModifiedDate":"2023-10-11"},{"lineNumber":266,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":267,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":268,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":269,"author":{"gitId":"nknguyenhc"},"content":"    public void isEmpty_notEmptyList_returnsFalse() {","lastModifiedDate":"2023-10-11"},{"lineNumber":270,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(getSampleList().isEmpty());","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":272,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":273,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":274,"author":{"gitId":"nknguyenhc"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":275,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-11"},{"lineNumber":276,"author":{"gitId":"nknguyenhc"},"content":"                -\u003e getSampleList()","lastModifiedDate":"2023-10-26"},{"lineNumber":277,"author":{"gitId":"nknguyenhc"},"content":"                .asUnmodifiableObservableList()","lastModifiedDate":"2023-10-11"},{"lineNumber":278,"author":{"gitId":"nknguyenhc"},"content":"                .add(ITEM_NOT_IN_LIST));","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":280,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":281,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":282,"author":{"gitId":"nknguyenhc"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":283,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e uniqueList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":284,"author":{"gitId":"nknguyenhc"},"content":"        UniqueNumber uniqueNumber \u003d new UniqueNumber(1, 0);","lastModifiedDate":"2023-10-15"},{"lineNumber":285,"author":{"gitId":"nknguyenhc"},"content":"        UniqueNumber sameUniqueNumber \u003d new UniqueNumber(1, 0);","lastModifiedDate":"2023-10-15"},{"lineNumber":286,"author":{"gitId":"nknguyenhc"},"content":"        UniqueNumber differentUniqueNumber \u003d new UniqueNumber(1, 10);","lastModifiedDate":"2023-10-15"},{"lineNumber":287,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":288,"author":{"gitId":"nknguyenhc"},"content":"        // same reference","lastModifiedDate":"2023-10-15"},{"lineNumber":289,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(uniqueList.equals(uniqueList));","lastModifiedDate":"2023-10-15"},{"lineNumber":290,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":291,"author":{"gitId":"nknguyenhc"},"content":"        // different class","lastModifiedDate":"2023-10-15"},{"lineNumber":292,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(uniqueList.equals(uniqueNumber));","lastModifiedDate":"2023-10-15"},{"lineNumber":293,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":294,"author":{"gitId":"nknguyenhc"},"content":"        // same list","lastModifiedDate":"2023-10-15"},{"lineNumber":295,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(uniqueList.equals(new UniqueList\u003cUniqueNumber\u003e()));","lastModifiedDate":"2023-10-15"},{"lineNumber":296,"author":{"gitId":"nknguyenhc"},"content":"        uniqueList.add(uniqueNumber);","lastModifiedDate":"2023-10-15"},{"lineNumber":297,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e sameUniqueList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":298,"author":{"gitId":"nknguyenhc"},"content":"        sameUniqueList.add(sameUniqueNumber);","lastModifiedDate":"2023-10-15"},{"lineNumber":299,"author":{"gitId":"nknguyenhc"},"content":"        assertTrue(uniqueList.equals(sameUniqueList));","lastModifiedDate":"2023-10-15"},{"lineNumber":300,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":301,"author":{"gitId":"nknguyenhc"},"content":"        // different list","lastModifiedDate":"2023-10-15"},{"lineNumber":302,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(uniqueList.equals(new UniqueList\u003cUniqueNumber\u003e()));","lastModifiedDate":"2023-10-15"},{"lineNumber":303,"author":{"gitId":"nknguyenhc"},"content":"        UniqueList\u003cUniqueNumber\u003e differentUniqueList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":304,"author":{"gitId":"nknguyenhc"},"content":"        differentUniqueList.add(differentUniqueNumber);","lastModifiedDate":"2023-10-15"},{"lineNumber":305,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(uniqueList.equals(differentUniqueList));","lastModifiedDate":"2023-10-15"},{"lineNumber":306,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":307,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":308,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":309,"author":{"gitId":"nknguyenhc"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-11"},{"lineNumber":310,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(getSampleList().asUnmodifiableObservableList().toString(), getSampleList().toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":311,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":312,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"nknguyenhc":312}},{"path":"src/test/java/networkbook/model/util/UniqueNumber.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.model.util;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"class UniqueNumber implements Identifiable\u003cUniqueNumber\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"    private int number;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"    // to distinguish equals from identity","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"    private int dummy;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"    public UniqueNumber(int number, int dummy) {","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"        this.number \u003d number;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"        this.dummy \u003d dummy;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"    public boolean isSame(UniqueNumber another) {","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"        return this.number \u003d\u003d another.number;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"        return String.valueOf(this.number);","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        if (this \u003d\u003d object) {","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"        if (!(object instanceof UniqueNumber)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"        UniqueNumber anotherNumber \u003d (UniqueNumber) object;","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"        return this.number \u003d\u003d anotherNumber.number \u0026\u0026 this.dummy \u003d\u003d anotherNumber.dummy;","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"nknguyenhc":36}},{"path":"src/test/java/networkbook/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"// TODO: add/amend tests based on individual attribute specification","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"    private static final List\u003cJsonAdaptedProperty\u003cPhone\u003e\u003e INVALID_PHONES \u003d List.of(","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"            new JsonAdaptedProperty\u003c\u003e(\"+651234\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"    private static final List\u003cJsonAdaptedProperty\u003cEmail\u003e\u003e INVALID_EMAILS \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"            List.of(new JsonAdaptedProperty\u003c\u003e(\"example.com\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    private static final List\u003cJsonAdaptedProperty\u003cLink\u003e\u003e INVALID_LINKS \u003d List.of(","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"            new JsonAdaptedProperty\u003c\u003e(\"facebookcom\")","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"    );","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"    private static final String INVALID_GRADUATION \u003d \"2024\";","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    private static final List\u003cJsonAdaptedProperty\u003cCourse\u003e\u003e INVALID_COURSES \u003d List.of(","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"            new JsonAdaptedProperty\u003c\u003e(\"\")","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    );","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"    private static final List\u003cJsonAdaptedProperty\u003cSpecialisation\u003e\u003e INVALID_SPECIALISATION \u003d List.of(","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"            new JsonAdaptedProperty\u003cSpecialisation\u003e(\"\")","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"    );","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Singa-pirate"},"content":"    private static final String INVALID_PRIORITY \u003d \"hi\";","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    private static final String VALID_NAME \u003d TypicalPersons.BENSON.getName().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"    private static final List\u003cJsonAdaptedProperty\u003cPhone\u003e\u003e VALID_PHONES \u003d TypicalPersons.BENSON.getPhones().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"            .map(JsonAdaptedProperty::new)","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    private static final List\u003cJsonAdaptedProperty\u003cEmail\u003e\u003e VALID_EMAILS \u003d TypicalPersons.BENSON.getEmails().stream()","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"            .map(JsonAdaptedProperty::new)","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"    private static final List\u003cJsonAdaptedProperty\u003cLink\u003e\u003e VALID_LINKS \u003d TypicalPersons.BENSON.getLinks().stream()","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"            .map(JsonAdaptedProperty::new)","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"    private static final String VALID_GRADUATION \u003d TypicalPersons.BENSON.getGraduation()","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"            .map(Graduation::toString).orElse(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"    private static final List\u003cJsonAdaptedProperty\u003cCourse\u003e\u003e VALID_COURSES \u003d TypicalPersons.BENSON.getCourses().stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"            .map(JsonAdaptedProperty::new)","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"Eola-Z"},"content":"    private static final List\u003cJsonAdaptedProperty\u003cSpecialisation\u003e\u003e VALID_SPECIALISATION \u003d List.of(","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Eola-Z"},"content":"            new JsonAdaptedProperty\u003cSpecialisation\u003e(\"Game Development\")","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Eola-Z"},"content":"    );","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"    private static final List\u003cJsonAdaptedProperty\u003cTag\u003e\u003e VALID_TAGS \u003d TypicalPersons.BENSON.getTags().stream()","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"            .map(JsonAdaptedProperty::new)","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Singa-pirate"},"content":"    private static final String VALID_PRIORITY \u003d \"mEDiUM\";","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(TypicalPersons.BENSON);","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(TypicalPersons.BENSON, person.toModelType());","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONES, VALID_EMAILS,","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"                        VALID_LINKS, VALID_GRADUATION, VALID_COURSES,","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"                        VALID_SPECIALISATION, VALID_TAGS, VALID_PRIORITY);","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"awhb"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONES, VALID_EMAILS,","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"                VALID_LINKS, VALID_GRADUATION, VALID_COURSES,","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"awhb"},"content":"                VALID_SPECIALISATION, VALID_TAGS, VALID_PRIORITY);","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"                JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"                Name.class.getSimpleName()","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"awhb"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONES, VALID_EMAILS,","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"                        VALID_LINKS, VALID_GRADUATION, VALID_COURSES,","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"awhb"},"content":"                        VALID_SPECIALISATION, VALID_TAGS, VALID_PRIORITY);","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"awhb"},"content":"    public void toModelType_invalidEmails_throwsIllegalValueException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"awhb"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONES, INVALID_EMAILS,","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"                        VALID_LINKS, VALID_GRADUATION, VALID_COURSES,","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"awhb"},"content":"                        VALID_SPECIALISATION, VALID_TAGS, VALID_PRIORITY);","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"awhb"},"content":"    public void toModelType_invalidLink_throwsIllegalValueException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"awhb"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONES, VALID_EMAILS,","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"                        INVALID_LINKS, VALID_GRADUATION, VALID_COURSES,","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"awhb"},"content":"                        VALID_SPECIALISATION, VALID_TAGS, VALID_PRIORITY);","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"awhb"},"content":"        String expectedMessage \u003d Link.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"xenosf"},"content":"    public void toModelType_invalidGraduation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"awhb"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"awhb"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONES, VALID_EMAILS,","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"                        VALID_LINKS, INVALID_GRADUATION, VALID_COURSES,","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"awhb"},"content":"                        VALID_SPECIALISATION, VALID_TAGS, VALID_PRIORITY);","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"xenosf"},"content":"        String expectedMessage \u003d Graduation.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"awhb"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"awhb"},"content":"    public void toModelType_invalidCourse_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"awhb"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"awhb"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONES, VALID_EMAILS,","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"                        VALID_LINKS, VALID_GRADUATION, INVALID_COURSES,","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"awhb"},"content":"                        VALID_SPECIALISATION, VALID_TAGS, VALID_PRIORITY);","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"awhb"},"content":"        String expectedMessage \u003d Course.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"awhb"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"awhb"},"content":"    public void toModelType_invalidSpecialisation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"awhb"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"awhb"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONES, VALID_EMAILS,","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"                        VALID_LINKS, VALID_GRADUATION, VALID_COURSES,","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"awhb"},"content":"                        INVALID_SPECIALISATION, VALID_TAGS, VALID_PRIORITY);","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"awhb"},"content":"        String expectedMessage \u003d Specialisation.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"awhb"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"        List\u003cJsonAdaptedProperty\u003cTag\u003e\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-10-10"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"        invalidTags.add(new JsonAdaptedProperty\u003c\u003e(INVALID_TAG));","lastModifiedDate":"2023-10-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"awhb"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONES, VALID_EMAILS,","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"                        VALID_LINKS, VALID_GRADUATION, VALID_COURSES,","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"awhb"},"content":"                        VALID_SPECIALISATION, invalidTags, VALID_PRIORITY);","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"Singa-pirate"},"content":"    public void toModelType_invalidPriority_throwsIllegalValueException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"awhb"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONES, VALID_EMAILS,","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"                VALID_LINKS, VALID_GRADUATION, VALID_COURSES,","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"awhb"},"content":"                VALID_SPECIALISATION, VALID_TAGS, INVALID_PRIORITY);","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"Singa-pirate"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"Singa-pirate"},"content":"    public void toModelType_nullPriority_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"awhb"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONES, VALID_EMAILS,","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"nknguyenhc"},"content":"                VALID_LINKS, VALID_GRADUATION, VALID_COURSES,","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"awhb"},"content":"                VALID_SPECIALISATION, VALID_TAGS, null);","lastModifiedDate":"2023-10-14"},{"lineNumber":180,"author":{"gitId":"Singa-pirate"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"Singa-pirate"},"content":"            assertEquals(TypicalPersons.BENSON, person.toModelType());","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"Singa-pirate"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"Singa-pirate"},"content":"            fail();","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Eola-Z":6,"nknguyenhc":45,"xenosf":6,"Singa-pirate":18,"-":57,"awhb":55}},{"path":"src/test/java/networkbook/storage/JsonNetworkBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyNetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"public class JsonNetworkBookStorageTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonNetworkBookStorageTest\");","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"    @TempDir","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public void readNetworkBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(NullPointerException.class, () -\u003e readNetworkBook(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    private java.util.Optional\u003cReadOnlyNetworkBook\u003e readNetworkBook(String filePath) throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        return new JsonNetworkBookStorage(Paths.get(filePath)).readNetworkBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"                : null;","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        assertFalse(readNetworkBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readNetworkBook(\"notJsonFormatNetworkBook.json\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"    public void readNetworkBook_invalidPersonNetworkBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readNetworkBook(\"invalidPersonNetworkBook.json\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"    public void readNetworkBook_invalidAndValidPersonNetworkBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readNetworkBook(\"invalidAndValidPersonNetworkBook.json\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"    public void readAndSaveNetworkBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"        Path filePath \u003d testFolder.resolve(\"TempNetworkBook.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"        NetworkBook original \u003d TypicalPersons.getTypicalNetworkBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"        JsonNetworkBookStorage jsonNetworkBookStorage \u003d new JsonNetworkBookStorage(filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"        jsonNetworkBookStorage.saveNetworkBook(original, filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"        ReadOnlyNetworkBook readBack \u003d jsonNetworkBookStorage.readNetworkBook(filePath).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(original, new NetworkBook(readBack));","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"        original.addPerson(TypicalPersons.HOON);","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"        original.removePerson(TypicalPersons.ALICE);","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"        jsonNetworkBookStorage.saveNetworkBook(original, filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"        readBack \u003d jsonNetworkBookStorage.readNetworkBook(filePath).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(original, new NetworkBook(readBack));","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"        original.addPerson(TypicalPersons.IDA);","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"        jsonNetworkBookStorage.saveNetworkBook(original); // file path not specified","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"        readBack \u003d jsonNetworkBookStorage.readNetworkBook().get(); // file path not specified","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(original, new NetworkBook(readBack));","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"    public void saveNetworkBook_nullNetworkBook_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveNetworkBook(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"     * Saves {@code networkBook} at the specified {@code filePath}.","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"    private void saveNetworkBook(ReadOnlyNetworkBook networkBook, String filePath) {","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"            new JsonNetworkBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"                    .saveNetworkBook(networkBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"    public void saveNetworkBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveNetworkBook(new NetworkBook(), null));","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"nknguyenhc":107}},{"path":"src/test/java/networkbook/storage/JsonSerializableNetworkBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.util.JsonUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"public class JsonSerializableNetworkBookTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableNetworkBookTest\");","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsNetworkBook.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonNetworkBook.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonNetworkBook.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        JsonSerializableNetworkBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"                JsonSerializableNetworkBook.class).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        NetworkBook networkBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        NetworkBook typicalPersonsNetworkBook \u003d TypicalPersons.getTypicalNetworkBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(networkBookFromFile, typicalPersonsNetworkBook);","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"        JsonSerializableNetworkBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"                JsonSerializableNetworkBook.class).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        JsonSerializableNetworkBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"                JsonSerializableNetworkBook.class).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableNetworkBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"nknguyenhc":47}},{"path":"src/test/java/networkbook/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.GuiSettings;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        userPrefs.setNetworkBookFilePath(Paths.get(\"networkbook.json\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"nknguyenhc":6,"-":117}},{"path":"src/test/java/networkbook/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.GuiSettings;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.ReadOnlyNetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.UserPrefs;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.testutil.TypicalPersons;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        JsonNetworkBookStorage networkBookStorage \u003d new JsonNetworkBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"        storageManager \u003d new StorageManager(networkBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"    public void networkBookReadSave() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"         * {@link JsonNetworkBookStorage} class.","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonNetworkBookStorageTest} class.","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"        NetworkBook original \u003d TypicalPersons.getTypicalNetworkBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"        storageManager.saveNetworkBook(original);","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"        ReadOnlyNetworkBook retrieved \u003d storageManager.readNetworkBook().get();","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(original, new NetworkBook(retrieved));","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"    public void getNetworkBookFilePath() {","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"        assertNotNull(storageManager.getNetworkBookFilePath());","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":17,"-":51}},{"path":"src/test/java/networkbook/testutil/AddPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.commands.AddCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":" * A utility class to help with building AddPersonDescriptor objects.","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"public class AddPersonDescriptorBuilder {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    private AddCommand.AddPersonDescriptor descriptor;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    public AddPersonDescriptorBuilder() {","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"        descriptor \u003d new AddCommand.AddPersonDescriptor();","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"    public AddPersonDescriptorBuilder(AddCommand.AddPersonDescriptor descriptor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        this.descriptor \u003d new AddCommand.AddPersonDescriptor(descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"     * Returns an {@code AddPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    public AddPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        descriptor \u003d new AddCommand.AddPersonDescriptor();","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"        descriptor.setPhones(person.getPhones());","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        descriptor.setEmails(person.getEmails());","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        descriptor.setLinks(person.getLinks());","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"xenosf"},"content":"        person.getGraduation().ifPresent((Graduation g) -\u003e descriptor.setGraduation(g));","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"        descriptor.setCourses(person.getCourses());","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"        descriptor.setSpecialisations(person.getSpecialisations());","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"        person.getPriority().ifPresent((Priority p) -\u003e descriptor.setPriority(p));","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"     * Sets the {@code Phone} of the {@code AddPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"    public AddPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"        descriptor.addPhone(new Phone(phone));","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"     * Sets the {@code Email} of the {@code AddPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"    public AddPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"        descriptor.addEmail(new Email(email));","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"     * Sets the {@code Link} of the {@code AddPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"    public AddPersonDescriptorBuilder withLink(String link) {","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        descriptor.addLink(new Link(link));","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"        return this;","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"     * Sets the {@code Graduation} of the {@code AddPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"    public AddPersonDescriptorBuilder withGraduation(String graduation) {","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"xenosf"},"content":"        descriptor.setGraduation(new Graduation(graduation));","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"        return this;","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"     * Sets the {@code Course} of the {@code AddPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"    public AddPersonDescriptorBuilder withCourse(String course) {","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"        descriptor.addCourse(new Course(course));","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"awhb"},"content":"        return this;","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"     * Sets the {@code Specialisation} of the {@code AddPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"    public AddPersonDescriptorBuilder withSpecialisation(String specialisation) {","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"Eola-Z"},"content":"        descriptor.addSpecialisation(new Specialisation(specialisation));","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code AddPersonDescriptor}","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"    public AddPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"Singa-pirate"},"content":"        descriptor.setTags(new UniqueList\u003c\u003e());","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Singa-pirate"},"content":"        for (String tag : tags) {","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"Singa-pirate"},"content":"            descriptor.addTag(new Tag(tag));","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"Singa-pirate"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"     * Sets the {@code Priority} of the {@code AddPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"    public AddPersonDescriptorBuilder withPriority(String priority) {","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"Singa-pirate"},"content":"        descriptor.setPriority(new Priority(priority));","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"Singa-pirate"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"    public AddCommand.AddPersonDescriptor build() {","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Eola-Z":2,"nknguyenhc":38,"xenosf":3,"Singa-pirate":14,"-":40,"awhb":20}},{"path":"src/test/java/networkbook/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"     * Asserts that the {@code executable} throws an assertion error.","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    public static void assertThrowsAssertionError(Executable executable) {","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"        Assertions.assertThrows(AssertionError.class, executable);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"nknguyenhc":8,"-":33}},{"path":"src/test/java/networkbook/testutil/NetworkBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" *     {@code NetworkBook ab \u003d new NetworkBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"public class NetworkBookBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"    private NetworkBook networkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    public NetworkBookBuilder() {","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"        networkBook \u003d new NetworkBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    public NetworkBookBuilder(NetworkBook networkBook) {","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"        this.networkBook \u003d networkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"     * Adds a new {@code Person} to the {@code NetworkBook} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public NetworkBookBuilder withPerson(Person person) {","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        networkBook.addPerson(person);","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    public NetworkBook build() {","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"        return networkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"nknguyenhc":34}},{"path":"src/test/java/networkbook/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Course;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Email;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"import networkbook.model.person.Graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Link;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Name;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Priority;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"import networkbook.model.person.Specialisation;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.util.UniqueList;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"    public static final String DEFAULT_LINK \u003d \"github.com/amybeez\";","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"    public static final String DEFAULT_GRADUATION \u003d \"AY0001-S1\";","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"    public static final String DEFAULT_COURSE \u003d \"Computer Science\";","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"    public static final String DEFAULT_SPECIALISATION \u003d \"Game Development\";","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"    public static final String DEFAULT_PRIORITY \u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"    private UniqueList\u003cPhone\u003e phones;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    private UniqueList\u003cEmail\u003e emails;","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"    private UniqueList\u003cLink\u003e links;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"    private Graduation graduation;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    private UniqueList\u003cCourse\u003e courses;","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"    private UniqueList\u003cSpecialisation\u003e specialisations;","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"    private UniqueList\u003cTag\u003e tags;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"    private Priority priority;","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"        phones \u003d new UniqueList\u003cPhone\u003e().setItems(List.of(new Phone(DEFAULT_PHONE)));","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        emails \u003d new UniqueList\u003cEmail\u003e().setItems(List.of(new Email(DEFAULT_EMAIL)));","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        links \u003d new UniqueList\u003cLink\u003e().setItems(List.of(new Link(DEFAULT_LINK)));","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"        graduation \u003d new Graduation(DEFAULT_GRADUATION);","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        courses \u003d new UniqueList\u003cCourse\u003e().setItems(List.of(new Course(DEFAULT_COURSE)));","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Eola-Z"},"content":"        specialisations \u003d new UniqueList\u003cSpecialisation\u003e()","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Eola-Z"},"content":"                .setItems(List.of(new Specialisation(DEFAULT_SPECIALISATION)));","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"Singa-pirate"},"content":"        tags \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Singa-pirate"},"content":"        priority \u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"        phones \u003d personToCopy.getPhones();","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"        emails \u003d personToCopy.getEmails();","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        links \u003d personToCopy.getLinks();","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"xenosf"},"content":"        graduation \u003d personToCopy.getGraduation().orElse(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"        courses \u003d personToCopy.getCourses();","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Eola-Z"},"content":"        specialisations \u003d personToCopy.getSpecialisations();","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"Singa-pirate"},"content":"        tags \u003d personToCopy.getTags();","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Singa-pirate"},"content":"        priority \u003d personToCopy.getPriority().orElse(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"Singa-pirate"},"content":"     * Parses the {@code tags} into a {@code UniqueList\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"Singa-pirate"},"content":"        this.tags \u003d SampleDataUtil.getTagList(tags);","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"     * Adds a link to the person we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"awhb"},"content":"    public PersonBuilder addLink(String link) {","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"        this.links.add(new Link(link));","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"     * Sets the list of link of the person that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"    public PersonBuilder withLinks(List\u003cString\u003e links) {","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"        this.links \u003d new UniqueList\u003cLink\u003e().setItems(links.stream().map(Link::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"awhb"},"content":"        return this;","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"xenosf"},"content":"     * Sets the {@code Graduation} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"xenosf"},"content":"    public PersonBuilder withGraduation(String graduation) {","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"xenosf"},"content":"        this.graduation \u003d new Graduation(graduation);","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"awhb"},"content":"        return this;","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"     * Adds a course to the person we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"    public PersonBuilder addCourse(String course) {","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"        this.courses.add(new Course(course));","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"Eola-Z"},"content":"     * Adds a course with a start date to the person we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Eola-Z"},"content":"    public PersonBuilder addCourse(String course, String startDate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Eola-Z"},"content":"        this.courses.add(new Course(course, startDate));","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Eola-Z"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"Eola-Z"},"content":"     * Adds a course with a start and end date to the person we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"Eola-Z"},"content":"    public PersonBuilder addCourse(String course, String startDate, String endDate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"Eola-Z"},"content":"        this.courses.add(new Course(course, startDate, endDate));","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"Eola-Z"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"awhb"},"content":"     * Sets the {@code Course} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"    public PersonBuilder withCourses(List\u003cString\u003e courses) {","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"        this.courses \u003d new UniqueList\u003cCourse\u003e()","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"                .setItems(courses.stream().map(Course::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"awhb"},"content":"        return this;","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"Eola-Z"},"content":"     * Adds a specialisation to the person we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"Eola-Z"},"content":"    public PersonBuilder addSpecialisation(String specialisation) {","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"Eola-Z"},"content":"        this.specialisations.add(new Specialisation(specialisation));","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"Eola-Z"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"awhb"},"content":"     * Sets the {@code Specialisation} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"Eola-Z"},"content":"    public PersonBuilder withSpecialisations(List\u003cString\u003e specialisations) {","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"Eola-Z"},"content":"        this.specialisations \u003d new UniqueList\u003cSpecialisation\u003e()","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"Eola-Z"},"content":"                .setItems(specialisations.stream().map(Specialisation::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":163,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"awhb"},"content":"     * Adds a phone to the person we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"awhb"},"content":"    public PersonBuilder addPhone(String phone) {","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"awhb"},"content":"        this.phones.add(new Phone(phone));","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"awhb"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":173,"author":{"gitId":"awhb"},"content":"    public PersonBuilder withPhones(List\u003cString\u003e phones) {","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"awhb"},"content":"        this.phones \u003d new UniqueList\u003cPhone\u003e().setItems(phones.stream().map(Phone::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":178,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"awhb"},"content":"     * Adds an email to the person we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"awhb"},"content":"    public PersonBuilder addEmail(String email) {","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"awhb"},"content":"        this.emails.add(new Email(email));","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"awhb"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":186,"author":{"gitId":"nknguyenhc"},"content":"     * Sets the emails of the person that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":188,"author":{"gitId":"nknguyenhc"},"content":"    public PersonBuilder withEmails(List\u003cString\u003e emails) {","lastModifiedDate":"2023-10-15"},{"lineNumber":189,"author":{"gitId":"nknguyenhc"},"content":"        this.emails \u003d new UniqueList\u003cEmail\u003e().setItems(emails.stream().map(Email::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":193,"author":{"gitId":"Singa-pirate"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"awhb"},"content":"     * Sets the {@code Priority} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"Singa-pirate"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"Singa-pirate"},"content":"    public PersonBuilder withPriority(String priority) {","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"Singa-pirate"},"content":"        this.priority \u003d new Priority(priority);","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"Singa-pirate"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"awhb"},"content":"     * Sets all fields of the {@code Person} that we are building to null.","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"awhb"},"content":"    public PersonBuilder withoutOptionalFields() {","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"awhb"},"content":"        this.phones \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"awhb"},"content":"        this.emails \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"awhb"},"content":"        this.links \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"xenosf"},"content":"        this.graduation \u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"nknguyenhc"},"content":"        this.courses \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":210,"author":{"gitId":"Eola-Z"},"content":"        this.specialisations \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"Singa-pirate"},"content":"        this.tags \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"awhb"},"content":"        this.priority \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"awhb"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":217,"author":{"gitId":"nknguyenhc"},"content":"        return new Person(name, phones, emails, links, graduation, courses, specialisations, tags, priority);","lastModifiedDate":"2023-10-19"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Eola-Z":31,"nknguyenhc":44,"xenosf":9,"Singa-pirate":19,"-":62,"awhb":55}},{"path":"src/test/java/networkbook/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.logic.commands.CreateCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.logic.parser.CliSyntax;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":" * A utility class for Person.","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"public class PersonUtil {","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"    //TODO: Add priority","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"        return CreateCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"        sb.append(CliSyntax.PREFIX_NAME + \" \" + person.getName().fullName + \" \");","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"        person.getPhones().stream().forEach(","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"                e -\u003e sb.append(CliSyntax.PREFIX_PHONE + \" \" + e.toString() + \" \")","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"        );","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        person.getEmails().stream().forEach(","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"                e -\u003e sb.append(CliSyntax.PREFIX_EMAIL + \" \" + e.toString() + \" \")","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        person.getLinks().stream().forEach(","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"                e -\u003e sb.append(CliSyntax.PREFIX_LINK + \" \" + e.toString() + \" \")","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"        person.getGraduation().ifPresent(graduation -\u003e sb.append(CliSyntax.PREFIX_GRADUATION)","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"                .append(\" \").append(graduation).append(\" \"));","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        person.getCourses().forEach(","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"                e -\u003e sb.append(CliSyntax.PREFIX_COURSE + \" \" + e.toString() + \" \")","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"        person.getSpecialisations().stream().forEach(","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"                e -\u003e sb.append(CliSyntax.PREFIX_SPECIALISATION + \" \" + e.toString() + \" \")","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"        );","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"Singa-pirate"},"content":"            s -\u003e sb.append(CliSyntax.PREFIX_TAG + \" \" + s.getValue() + \" \")","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Eola-Z":3,"nknguyenhc":33,"xenosf":2,"Singa-pirate":5,"awhb":4}},{"path":"src/test/java/networkbook/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":1,"-":71}},{"path":"src/test/java/networkbook/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nknguyenhc":4,"-":51}},{"path":"src/test/java/networkbook/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.commons.core.index.Index;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"nknguyenhc":2,"-":10}},{"path":"src/test/java/networkbook/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_COURSE_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_COURSE_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_GRADUATION_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_GRADUATION_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_LINK_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_LINK_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_SPECIALISATION_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_SPECIALISATION_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.NetworkBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"            .withEmails(List.of(\"alice@example.com\"))","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"            .withPhones(List.of(\"94351253\"))","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"            .withGraduation(\"AY2324-S1\")","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"            .withEmails(List.of(\"johnd@example.com\"))","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"            .withPhones(List.of(\"98765432\"))","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"            .withLinks(List.of(\"www.facebook.com/john-d\"))","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"            .withGraduation(\"AY0001-S1\")","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"            .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"            .withPhones(List.of(\"95352563\"))","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"            .withEmails(List.of(\"heinz@example.com\"))","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"            .withGraduation(\"AY3031-S2\")","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"            .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"xenosf"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"xenosf"},"content":"        .withPhones(List.of(\"87652533\"))","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"            .withEmails(List.of(\"cornelia@example.com\"))","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"            .withGraduation(\"AY9899-S1\")","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"            .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"            .withPhones(List.of(\"9482224\"))","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"            .withEmails(List.of(\"werner@example.com\"))","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"xenosf"},"content":"            .withGraduation(\"AY8990-S1\")","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"xenosf"},"content":"            .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"xenosf"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"xenosf"},"content":"            .withPhones(List.of(\"9482427\"))","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"xenosf"},"content":"            .withEmails(List.of(\"lydia@example.com\"))","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"xenosf"},"content":"            .withGraduation(\"AY2122-S2\")","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"xenosf"},"content":"            .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"xenosf"},"content":"            .withPhones(List.of(\"9482442\"))","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"xenosf"},"content":"            .withEmails(List.of(\"anna@example.com\"))","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"xenosf"},"content":"            .withGraduation(\"AY2324-S2\")","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"xenosf"},"content":"            .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhones(List.of(\"8482424\"))","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"            .withEmails(List.of(\"stefan@example.com\")).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhones(List.of(\"8482131\"))","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"            .withEmails(List.of(\"hans@example.com\")).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"    public static final Person JACK \u003d new PersonBuilder().withName(\"Jacky\")","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"            .withPhones(List.of(\"12345678\", \"61828284\"))","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"            .withEmails(List.of(\"jack@gmail.com\", \"jacky@test.com\"))","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"            .withLinks(List.of(\"nkn.com\", \"https://www.google.com\"))","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"            .withGraduation(\"AY2526-S2\")","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"            .withCourses(List.of(\"CS2103T\", \"CS2109S\"))","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"            .withSpecialisations(List.of(\"Software Engineering\", \"Artificial Intelligence\"))","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"            .withPriority(\"High\")","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"            .withTags(\"software eng enthusiast\", \"AI enthusiast\").build();","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":87,"author":{"gitId":"awhb"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhones(List.of(VALID_PHONE_AMY))","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"            .withEmails(List.of(VALID_EMAIL_AMY)).withLinks(List.of(VALID_LINK_AMY))","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"xenosf"},"content":"            .withGraduation(VALID_GRADUATION_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"            .withCourses(List.of(VALID_COURSE_AMY))","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"            .withSpecialisations(List.of(VALID_SPECIALISATION_AMY))","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"            .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"Singa-pirate"},"content":"            .withPriority(\"High\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"awhb"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhones(List.of(VALID_PHONE_BOB))","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"            .withEmails(List.of(VALID_EMAIL_BOB)).withLinks(List.of(VALID_LINK_BOB))","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"xenosf"},"content":"            .withGraduation(VALID_GRADUATION_BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"            .withCourses(List.of(VALID_COURSE_BOB)).withSpecialisations(List.of(VALID_SPECIALISATION_BOB))","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"awhb"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"     * Returns an {@code NetworkBook} with all the typical persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"    public static NetworkBook getTypicalNetworkBook() {","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"        NetworkBook ab \u003d new NetworkBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"nknguyenhc":35,"xenosf":33,"Singa-pirate":1,"-":36,"awhb":13}},{"path":"src/test/java/networkbook/ui/FieldHyperlinkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"package networkbook.ui;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"import org.testfx.framework.junit5.ApplicationExtension;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"import org.testfx.framework.junit5.ApplicationTest;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"import networkbook.MainApp;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"@ExtendWith(ApplicationExtension.class)","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"public class FieldHyperlinkTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"    //NOTE: for GUI headless tests, running this single file or test case has issue on Windows,","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"    //possibly due to issue discussed in https://github.com/Santulator/Santulator/issues/14","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"    //To avoid the issue, either run gradle test command to perform all tests,","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"    //or use \u0027gradlew check coverage\u0027 in command line in root folder","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"    @BeforeAll","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"    public static void setupForHeadlessTesting() {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"        HeadlessHelper.setupForHeadlessTesting();","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"    public void setup() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"xenosf"},"content":"        ApplicationTest.launch(MainApp.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"    public void constructor_hasValidLabel_showsValidLabel() {","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"        FieldHyperlink fh1 \u003d new FieldHyperlink(\"\", () -\u003e {});","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"        FieldHyperlink fh2 \u003d new FieldHyperlink(\"test\", () -\u003e {});","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"xenosf"},"content":"        FieldHyperlink fh3 \u003d new FieldHyperlink(\"test@test.com\", () -\u003e {});","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"        assertEquals(\"\", fh1.getText());","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"xenosf"},"content":"        assertEquals(\"test\", fh2.getText());","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"xenosf"},"content":"        assertEquals(\"test@test.com\", fh3.getText());","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"    public void constructor_nullParams_exceptionThrown() {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"            FieldHyperlink f \u003d new FieldHyperlink(\"test\", null);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"        });","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"xenosf"},"content":"            FieldHyperlink f \u003d new FieldHyperlink(null, null);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"xenosf"},"content":"        });","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"            FieldHyperlink f \u003d new FieldHyperlink(null, () -\u003e {});","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"        });","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"xenosf":57}},{"path":"src/test/java/networkbook/ui/HeadlessHelper.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Singa-pirate"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Singa-pirate"},"content":" * Prepares test environment to be headless, when the test is run on Command Interface","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Singa-pirate"},"content":" * which does not support UI pop-up.","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Singa-pirate"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Singa-pirate"},"content":"public class HeadlessHelper {","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    //@@author Singa-Pirate reused","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    //Reused from https://stackoverflow.com/a/35309920/19206704","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void setupForHeadlessTesting() {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        System.setProperty(\"testfx.robot\", \"glass\");","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        System.setProperty(\"testfx.headless\", \"true\");","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        System.setProperty(\"prism.order\", \"sw\");","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        System.setProperty(\"prism.text\", \"t2k\");","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        System.setProperty(\"java.awt.headless\", \"true\");","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Singa-pirate":7,"-":11}},{"path":"src/test/java/networkbook/ui/PersonCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Singa-pirate"},"content":"package networkbook.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_COURSE_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_GRADUATION_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_GRADUATION_FULL_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import static networkbook.logic.commands.CommandTestUtil.VALID_SPECIALISATION_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Singa-pirate"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Singa-pirate"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Singa-pirate"},"content":"import org.testfx.framework.junit5.ApplicationExtension;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Singa-pirate"},"content":"import org.testfx.framework.junit5.ApplicationTest;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Singa-pirate"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.MainApp;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Singa-pirate"},"content":"import networkbook.testutil.PersonBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Singa-pirate"},"content":"@ExtendWith(ApplicationExtension.class)","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Singa-pirate"},"content":"public class PersonCardTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Singa-pirate"},"content":"    //NOTE: for GUI headless tests, running this single file or test case has issue on Windows,","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Singa-pirate"},"content":"    //possibly due to issue discussed in https://github.com/Santulator/Santulator/issues/14","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Singa-pirate"},"content":"    //To avoid the issue, either run gradle test command to perform all tests,","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Singa-pirate"},"content":"    //or use \u0027gradlew check coverage\u0027 in command line in root folder","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Singa-pirate"},"content":"    @BeforeAll","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Singa-pirate"},"content":"    public static void setupForHeadlessTesting() {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Singa-pirate"},"content":"        HeadlessHelper.setupForHeadlessTesting();","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Singa-pirate"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Singa-pirate"},"content":"    public void setup() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Singa-pirate"},"content":"        ApplicationTest.launch(MainApp.class);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"    public void constructor_hasValidGraduation_showsValidGraduation() {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"        Person person \u003d new PersonBuilder().withName(\"Bob\").withGraduation(VALID_GRADUATION_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"        PersonCard personCard \u003d new PersonCard(person, 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"        Label graduation \u003d personCard.getGraduation();","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"        assertEquals(\"Graduation: \" + VALID_GRADUATION_FULL_BOB, graduation.getText());","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"        assertTrue(graduation.isVisible());","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"    public void constructor_noGraduation_showsBlank() {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"        Person person \u003d new PersonBuilder().withName(\"Bob\").withoutOptionalFields().build();","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"        PersonCard personCard \u003d new PersonCard(person, 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"        Label graduation \u003d personCard.getGraduation();","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"        assertEquals(\"Graduation: -\", graduation.getText());","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"        assertTrue(graduation.isVisible());","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"    public void constructor_hasValidCourse_showsValidCourse() {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"        Person person \u003d new PersonBuilder().withName(\"Bob\").withCourses(List.of(VALID_COURSE_BOB)).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"        PersonCard personCard \u003d new PersonCard(person, 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"        Label course \u003d personCard.getCourse();","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(\"Courses: [\" + VALID_COURSE_BOB + \"]\", course.getText());","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"        assertTrue(course.isVisible());","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"xenosf"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"xenosf"},"content":"    public void constructor_hasValidPhones_showsValidPhones() {","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"xenosf"},"content":"        Person person \u003d new PersonBuilder().withName(\"Bob\").withPhones(List.of(VALID_PHONE_BOB)).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"xenosf"},"content":"        PersonCard personCard \u003d new PersonCard(person, 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"xenosf"},"content":"        Label phones \u003d personCard.getPhones();","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"xenosf"},"content":"        assertEquals(\"Phone: [\" + VALID_PHONE_BOB + \"]\", phones.getText());","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"xenosf"},"content":"        assertTrue(phones.isVisible());","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"awhb"},"content":"    public void constructor_hasValidSpecialisation_showsValidSpecialisation() {","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"Eola-Z"},"content":"        Person person \u003d new PersonBuilder().withName(\"Bob\")","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"Eola-Z"},"content":"                .withSpecialisations(List.of(VALID_SPECIALISATION_BOB))","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"Eola-Z"},"content":"                .build();","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"awhb"},"content":"        PersonCard personCard \u003d new PersonCard(person, 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Eola-Z"},"content":"        Label specialisations \u003d personCard.getSpecialisations();","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(\"Specialisations: [\" + VALID_SPECIALISATION_BOB + \"]\", specialisations.getText());","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"Eola-Z"},"content":"        assertTrue(specialisations.isVisible());","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"Singa-pirate"},"content":"    public void constructor_hasHighPriority_showsHighPriority() {","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"xenosf"},"content":"        Person person \u003d new PersonBuilder().withName(\"Bob\").withoutOptionalFields().withPriority(\"High\").build();","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Singa-pirate"},"content":"        PersonCard personCard \u003d new PersonCard(person, 1);","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"Singa-pirate"},"content":"        Label priority \u003d personCard.getPriority();","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"Singa-pirate"},"content":"        assertEquals(\"Priority: High\", priority.getText());","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"Singa-pirate"},"content":"        assertTrue(priority.isVisible());","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"Singa-pirate"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"xenosf"},"content":"    public void constructor_noPriority_showsBlank() {","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Singa-pirate"},"content":"        Person person \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"Singa-pirate"},"content":"        PersonCard personCard \u003d new PersonCard(person, 1);","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"Singa-pirate"},"content":"        Label priority \u003d personCard.getPriority();","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"xenosf"},"content":"        assertEquals(\"Priority: -\", priority.getText());","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"xenosf"},"content":"        assertTrue(priority.isVisible());","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Singa-pirate"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"Singa-pirate"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"Singa-pirate"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Eola-Z":7,"nknguyenhc":3,"xenosf":30,"Singa-pirate":49,"awhb":18}},{"path":"src/test/java/networkbook/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.ui;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"nknguyenhc":1,"-":44}},{"path":"src/test/java/networkbook/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package networkbook.ui;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static networkbook.testutil.Assert.assertThrowsAssertionError;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import networkbook.MainApp;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        assertThrowsAssertionError(() -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"nknguyenhc":10,"-":105}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"\u003c?import networkbook.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"nknguyenhc":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"\u003cfx:root type\u003d\"networkbook.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"nknguyenhc":1,"-":5}}]

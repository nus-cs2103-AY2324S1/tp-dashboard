[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W12-4/tp/actions)","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"* The project simulates an ongoing software project for a desktop application (called _TimetaBRO_) used for finding meetup times.","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"* For the detailed documentation of this project, see the **[TimetaBRO Website](https://ay2324s1-cs2103T-w12-4.github.io/tp/)**.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"* This project is based on the AddressBook-Level3 project created by the **[SE-EDU initiative](https://se-education.org)**.","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"andrefoo":4,"-":5}},{"path":"bin/main/view/CommandBox.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":9}},{"path":"bin/main/view/DarkTheme.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":".background {","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":".label {","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":".label-bright {","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":".label-header {","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":".text-field {","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":".tab-pane {","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":".table-view {","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color:","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"        transparent","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"        transparent","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"        transparent;","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"owenyeo"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"owenyeo"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"owenyeo"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"owenyeo"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"owenyeo"},"content":".split-pane {","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"owenyeo"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"owenyeo"},"content":".list-view {","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"owenyeo"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"owenyeo"},"content":".list-cell {","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"owenyeo"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"owenyeo"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"owenyeo"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"owenyeo"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"owenyeo"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"owenyeo"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"owenyeo"},"content":".list-cell .label {","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"owenyeo"},"content":".cell_big_label {","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"owenyeo"},"content":".cell_small_label {","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"owenyeo"},"content":".stack-pane {","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"owenyeo"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"owenyeo"},"content":".pane-with-border {","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"owenyeo"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"owenyeo"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"owenyeo"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"owenyeo"},"content":".status-bar {","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"owenyeo"},"content":".result-display {","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"owenyeo"},"content":".result-display .label {","lastModifiedDate":"2023-10-03"},{"lineNumber":157,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2023-10-03"},{"lineNumber":158,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":159,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"owenyeo"},"content":".status-bar .label {","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"owenyeo"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-10-03"},{"lineNumber":165,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":166,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":167,"author":{"gitId":"owenyeo"},"content":".status-bar-with-border {","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-10-03"},{"lineNumber":170,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-03"},{"lineNumber":171,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":172,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":173,"author":{"gitId":"owenyeo"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-10-03"},{"lineNumber":174,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":176,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":177,"author":{"gitId":"owenyeo"},"content":".grid-pane {","lastModifiedDate":"2023-10-03"},{"lineNumber":178,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-03"},{"lineNumber":180,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-03"},{"lineNumber":181,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":182,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"owenyeo"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-10-03"},{"lineNumber":184,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-03"},{"lineNumber":185,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":186,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":187,"author":{"gitId":"owenyeo"},"content":".context-menu {","lastModifiedDate":"2023-10-03"},{"lineNumber":188,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":190,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"owenyeo"},"content":".context-menu .label {","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":194,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"owenyeo"},"content":".menu-bar {","lastModifiedDate":"2023-10-03"},{"lineNumber":196,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":197,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":199,"author":{"gitId":"owenyeo"},"content":".menu-bar .label {","lastModifiedDate":"2023-10-03"},{"lineNumber":200,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":201,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-03"},{"lineNumber":202,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":203,"author":{"gitId":"owenyeo"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-03"},{"lineNumber":204,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":205,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":206,"author":{"gitId":"owenyeo"},"content":".menu .left-container {","lastModifiedDate":"2023-10-03"},{"lineNumber":207,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-10-03"},{"lineNumber":208,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":209,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":210,"author":{"gitId":"owenyeo"},"content":"/*","lastModifiedDate":"2023-10-03"},{"lineNumber":211,"author":{"gitId":"owenyeo"},"content":" * Metro style Push Button","lastModifiedDate":"2023-10-03"},{"lineNumber":212,"author":{"gitId":"owenyeo"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-10-03"},{"lineNumber":213,"author":{"gitId":"owenyeo"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-10-03"},{"lineNumber":214,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":215,"author":{"gitId":"owenyeo"},"content":".button {","lastModifiedDate":"2023-10-03"},{"lineNumber":216,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-10-03"},{"lineNumber":217,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2023-10-03"},{"lineNumber":218,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-10-03"},{"lineNumber":219,"author":{"gitId":"owenyeo"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":220,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-03"},{"lineNumber":221,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-10-03"},{"lineNumber":222,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":223,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2023-10-03"},{"lineNumber":224,"author":{"gitId":"owenyeo"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-10-03"},{"lineNumber":225,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":226,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":227,"author":{"gitId":"owenyeo"},"content":".button:hover {","lastModifiedDate":"2023-10-03"},{"lineNumber":228,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2023-10-03"},{"lineNumber":229,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":230,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":231,"author":{"gitId":"owenyeo"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-10-03"},{"lineNumber":232,"author":{"gitId":"owenyeo"},"content":"  -fx-background-color: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":233,"author":{"gitId":"owenyeo"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-10-03"},{"lineNumber":234,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":235,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":236,"author":{"gitId":"owenyeo"},"content":".button:focused {","lastModifiedDate":"2023-10-03"},{"lineNumber":237,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2023-10-03"},{"lineNumber":238,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":239,"author":{"gitId":"owenyeo"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-10-03"},{"lineNumber":240,"author":{"gitId":"owenyeo"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":241,"author":{"gitId":"owenyeo"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":242,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":243,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":244,"author":{"gitId":"owenyeo"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-10-03"},{"lineNumber":245,"author":{"gitId":"owenyeo"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-10-03"},{"lineNumber":246,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-03"},{"lineNumber":247,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":248,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":249,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":250,"author":{"gitId":"owenyeo"},"content":".button:default {","lastModifiedDate":"2023-10-03"},{"lineNumber":251,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-10-03"},{"lineNumber":252,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-03"},{"lineNumber":253,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":254,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":255,"author":{"gitId":"owenyeo"},"content":".button:default:hover {","lastModifiedDate":"2023-10-03"},{"lineNumber":256,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-10-03"},{"lineNumber":257,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":258,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":259,"author":{"gitId":"owenyeo"},"content":".dialog-pane {","lastModifiedDate":"2023-10-03"},{"lineNumber":260,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-03"},{"lineNumber":261,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":262,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":263,"author":{"gitId":"owenyeo"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-10-03"},{"lineNumber":264,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-03"},{"lineNumber":265,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":266,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":267,"author":{"gitId":"owenyeo"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-10-03"},{"lineNumber":268,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-03"},{"lineNumber":269,"author":{"gitId":"owenyeo"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-03"},{"lineNumber":270,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":271,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":272,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":273,"author":{"gitId":"owenyeo"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-10-03"},{"lineNumber":274,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-10-03"},{"lineNumber":275,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":276,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":277,"author":{"gitId":"owenyeo"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-10-03"},{"lineNumber":278,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-03"},{"lineNumber":279,"author":{"gitId":"owenyeo"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-10-03"},{"lineNumber":280,"author":{"gitId":"owenyeo"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":281,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":282,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":283,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":284,"author":{"gitId":"owenyeo"},"content":".scroll-bar {","lastModifiedDate":"2023-10-03"},{"lineNumber":285,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":286,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":287,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":288,"author":{"gitId":"owenyeo"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-10-03"},{"lineNumber":289,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-10-03"},{"lineNumber":290,"author":{"gitId":"owenyeo"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-10-03"},{"lineNumber":291,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":292,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":293,"author":{"gitId":"owenyeo"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-10-03"},{"lineNumber":294,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-03"},{"lineNumber":295,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":296,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":297,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":298,"author":{"gitId":"owenyeo"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-10-03"},{"lineNumber":299,"author":{"gitId":"owenyeo"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-10-03"},{"lineNumber":300,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":301,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":302,"author":{"gitId":"owenyeo"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-10-03"},{"lineNumber":303,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-10-03"},{"lineNumber":304,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":305,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":306,"author":{"gitId":"owenyeo"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-10-03"},{"lineNumber":307,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":308,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":309,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":310,"author":{"gitId":"owenyeo"},"content":"#cardPane {","lastModifiedDate":"2023-10-03"},{"lineNumber":311,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-03"},{"lineNumber":312,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":313,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":314,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":315,"author":{"gitId":"owenyeo"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-10-03"},{"lineNumber":316,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-10-03"},{"lineNumber":317,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-10-03"},{"lineNumber":318,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":319,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":320,"author":{"gitId":"owenyeo"},"content":"#commandTextField {","lastModifiedDate":"2023-10-03"},{"lineNumber":321,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2023-10-03"},{"lineNumber":322,"author":{"gitId":"owenyeo"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":323,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2023-10-03"},{"lineNumber":324,"author":{"gitId":"owenyeo"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":325,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":326,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-03"},{"lineNumber":327,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":328,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":329,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":330,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":331,"author":{"gitId":"owenyeo"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2023-10-03"},{"lineNumber":332,"author":{"gitId":"owenyeo"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-10-03"},{"lineNumber":333,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":334,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":335,"author":{"gitId":"owenyeo"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-10-03"},{"lineNumber":336,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2023-10-03"},{"lineNumber":337,"author":{"gitId":"owenyeo"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":338,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":339,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":340,"author":{"gitId":"owenyeo"},"content":"#tags {","lastModifiedDate":"2023-10-03"},{"lineNumber":341,"author":{"gitId":"owenyeo"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-03"},{"lineNumber":342,"author":{"gitId":"owenyeo"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-03"},{"lineNumber":343,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":344,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":345,"author":{"gitId":"owenyeo"},"content":"#tags .label {","lastModifiedDate":"2023-10-03"},{"lineNumber":346,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":347,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-10-03"},{"lineNumber":348,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-03"},{"lineNumber":349,"author":{"gitId":"owenyeo"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-03"},{"lineNumber":350,"author":{"gitId":"owenyeo"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-03"},{"lineNumber":351,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-03"},{"lineNumber":352,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":353,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":354,"author":{"gitId":"lululwtv"},"content":"#freeTimes {","lastModifiedDate":"2023-10-19"},{"lineNumber":355,"author":{"gitId":"lululwtv"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-19"},{"lineNumber":356,"author":{"gitId":"lululwtv"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-19"},{"lineNumber":357,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-10-19"},{"lineNumber":358,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":359,"author":{"gitId":"lululwtv"},"content":"#freeTimes .label {","lastModifiedDate":"2023-10-19"},{"lineNumber":360,"author":{"gitId":"lululwtv"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-19"},{"lineNumber":361,"author":{"gitId":"lululwtv"},"content":"    -fx-background-color: #6b358c;","lastModifiedDate":"2023-10-19"},{"lineNumber":362,"author":{"gitId":"lululwtv"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-19"},{"lineNumber":363,"author":{"gitId":"lululwtv"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-19"},{"lineNumber":364,"author":{"gitId":"lululwtv"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-19"},{"lineNumber":365,"author":{"gitId":"lululwtv"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-19"},{"lineNumber":366,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-10-19"},{"lineNumber":367,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":368,"author":{"gitId":"lululwtv"},"content":"#userProfilePlaceholder .label {","lastModifiedDate":"2023-10-19"},{"lineNumber":369,"author":{"gitId":"lululwtv"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-19"},{"lineNumber":370,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-10-19"},{"lineNumber":371,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":372,"author":{"gitId":"owenyeo"},"content":".ListView {","lastModifiedDate":"2023-10-27"},{"lineNumber":373,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-27"},{"lineNumber":374,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-27"},{"lineNumber":375,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-27"},{"lineNumber":376,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":377,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":378,"author":{"gitId":"owenyeo"},"content":"#selectedFriendPlaceholder .label {","lastModifiedDate":"2023-10-27"},{"lineNumber":379,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-27"},{"lineNumber":380,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":381,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":382,"author":{"gitId":"owenyeo"},"content":".display_small_label {","lastModifiedDate":"2023-10-27"},{"lineNumber":383,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-27"},{"lineNumber":384,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-27"},{"lineNumber":385,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-27"},{"lineNumber":386,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":387,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"owenyeo":369,"lululwtv":18}},{"path":"bin/main/view/Extensions.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":".error {","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":".list-cell:empty {","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"    -fx-background: #383838;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":".tag-selector {","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":".tooltip-text {","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":20}},{"path":"bin/main/view/HelpWindow.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"#copyButton {","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"#copyButton:hover {","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"#copyButton:armed {","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"#helpMessageContainer {","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":19}},{"path":"bin/main/view/HelpWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"  \u003cicons\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"  \u003cscene\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"    \u003cScene\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":44}},{"path":"bin/main/view/MainWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"         title\u003d\"TimetaBRO\" minWidth\u003d\"1200\" minHeight\u003d\"800\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"  \u003cicons\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"    \u003cImage url\u003d\"@/images/calendar.png\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"  \u003cscene\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    \u003cScene\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"          \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"          \u003c/MenuBar\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"          \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"          \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"                     minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"          \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"        \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"800\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"          \u003crowConstraints\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"            \u003cRowConstraints percentHeight\u003d\"50\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"            \u003cRowConstraints percentHeight\u003d\"50\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"owenyeo"},"content":"          \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"owenyeo"},"content":"          \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"            \u003cColumnConstraints percentWidth\u003d\"100\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"          \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"          \u003cVBox styleClass\u003d\"pane-with-border\" GridPane.rowIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"owenyeo"},"content":"            \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"userProfilePlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"lululwtv"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"lululwtv"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"owenyeo"},"content":"          \u003cVBox styleClass\u003d\"pane-with-border\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"owenyeo"},"content":"            \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"selectedFriendPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"owenyeo"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"owenyeo"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"owenyeo"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"lululwtv"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"owenyeo"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"owenyeo"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"owenyeo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":83,"lululwtv":9}},{"path":"bin/main/view/PersonListCard.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"      \u003cLabel fx:id\u003d\"birthday\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthday\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"      \u003cFlowPane fx:id\u003d\"freeTimes\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":37,"lululwtv":1}},{"path":"bin/main/view/PersonListPanel.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":8}},{"path":"bin/main/view/ResultDisplay.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":9}},{"path":"bin/main/view/SelectedFriendCard.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.shape.Line?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.skin.TableHeaderRow?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.TableColumn?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" \u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"            \u003cLabel fx:id\u003d\"userName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"\u003e\u003c/Label\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"            \u003cSeparator\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"                    \u003cInsets bottom\u003d\"5\" top\u003d\"5\" right\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"            \u003c/Separator\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"display_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"display_small_label\" text\u003d\"\\$address\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"display_small_label\" text\u003d\"\\$email\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"            \u003cFlowPane fx:id\u003d\"freeTimes\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"owenyeo":65}},{"path":"bin/main/view/StatusBarFooter.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":12}},{"path":"bin/main/view/UserCard.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.shape.Line?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.skin.TableHeaderRow?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.TableColumn?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" \u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"            \u003cLabel styleClass\u003d\"cell_big_label\"\u003eMy Profile\u003c/Label\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"            \u003cSeparator\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"                    \u003cInsets bottom\u003d\"3\" top\u003d\"5\" right\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"            \u003c/Separator\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"            \u003cLabel fx:id\u003d\"userName\" text\u003d\"\\$first\" styleClass\u003d\"display_small_label\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"display_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"display_small_label\" text\u003d\"\\$address\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"display_small_label\" text\u003d\"\\$email\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"            \u003cLabel fx:id\u003d\"birthday\" styleClass\u003d\"display_small_label\" text\u003d\"\\$birthday\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"            \u003cFlowPane fx:id\u003d\"freeTimes\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"owenyeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"owenyeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"owenyeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"owenyeo"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"owenyeo"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"owenyeo":77}},{"path":"bin/test/view/UiPartTest/invalidFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"Not a valid FXML file","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":1}},{"path":"bin/test/view/UiPartTest/validFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import seedu.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":4}},{"path":"bin/test/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003cfx:root type\u003d\"seedu.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"run {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"    archiveFileName \u003d \u0027timetabro.jar\u0027","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"owenyeo":5,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"### Andre Foo En Jie","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"\u003cimg src\u003d\"images/andrefoo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[github](https://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"* Role: Developer","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"### Khiew Yiquan, Edric","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"\u003cimg src\u003d\"images/lululwtv.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"[[github](http://github.com/lululwtv)]","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"[[portfolio](team/lululwtv.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"* Role: Developer","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"* Responsibilities: Ui","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"### Krista Yeo Su-Anne","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"\u003cimg src\u003d\"images/kristayeo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"[[github](http://github.com/kristayeo)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"* Role: UI","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"### Owen Yeo Le Yang","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"\u003cimg src\u003d\"images/owenyeo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"[[github](http://github.com/owenyeo)]","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"[[portfolio](team/owenyeo.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"### Teo Zheng Yang","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"\u003cimg src\u003d\"images/teozhengyang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"[[github](http://github.com/teozhengyang)]","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lululwtv":2,"kristayeo":18,"-":39}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"* [**`UI`**](#ui-component): The UI of TimetaBRO.","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"* [**`Model`**](#model-component): Holds the data of TimetaBRO in memory.","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"kristayeo"},"content":"**Description:**","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"kristayeo"},"content":"The `UI` component manages the user interface of TimetaBRO so it responds to any command to user inputs or action accordingly.","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"kristayeo"},"content":"It uses the JavaFx Ui framework.","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"kristayeo"},"content":"The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"kristayeo"},"content":"**Functionality:**","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"kristayeo"},"content":"**Component Structure:**","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"kristayeo"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"kristayeo"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"owenyeo"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` object.","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"owenyeo"},"content":"* stores user data i.e. one `User` object, which contains user details. This is exposed to the outside as a `ReadOnlyUserData` object.","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"owenyeo"},"content":"* stores the `User` object in a `ObservableList\u003cUser\u003e` that can be \u0027obeserved\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when user data changes.","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"owenyeo"},"content":"* can save address book data, user preference, and user data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"owenyeo"},"content":"* inherits from `AddressBookStorage`, `UserPrefStorage`, and `UserDataStorage` which means it can be treated as any one (if only the functionality of only one is needed).","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"teozhengyang"},"content":"* has a need to manage university life, social interactions, and schedule","lastModifiedDate":"2023-10-03"},{"lineNumber":271,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"teozhengyang"},"content":"**Value proposition**: manage contacts \u0026 schedule faster than a typical mouse/GUI-driven app","lastModifiedDate":"2023-10-03"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"| Priority | As a …​      | I want to …​                                                                       | So that I can…​                                                            |","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"teozhengyang"},"content":"|----------|--------------|------------------------------------------------------------------------------------|----------------------------------------------------------------------------|","lastModifiedDate":"2023-10-26"},{"lineNumber":285,"author":{"gitId":"teozhengyang"},"content":"| `* * *`  | new user     | see a welcoming popup when i first open the app                                    | navigate the app easily and fill up my own details                         |","lastModifiedDate":"2023-10-26"},{"lineNumber":286,"author":{"gitId":"teozhengyang"},"content":"| `* * *`  | user         | add contacts to my list of friends using information like name and contact details | identify them more easily                                                  |","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"teozhengyang"},"content":"| `* * *`  | user         | view my list of friends                                                            | see all my friends in a glance                                             |","lastModifiedDate":"2023-10-26"},{"lineNumber":288,"author":{"gitId":"teozhengyang"},"content":"| `* * *`  | user         | edit details of my friends                                                         | keep their information up to date or change any wrongly filled information |","lastModifiedDate":"2023-10-26"},{"lineNumber":289,"author":{"gitId":"teozhengyang"},"content":"| `* * *`  | user         | search for specific friend                                                         | find their information more easily                                         |","lastModifiedDate":"2023-10-26"},{"lineNumber":290,"author":{"gitId":"teozhengyang"},"content":"| `* * *`  | user         | delete friends from my list of friends                                             | remove people who are no longer my friends and not needed in the list      |","lastModifiedDate":"2023-10-26"},{"lineNumber":291,"author":{"gitId":"teozhengyang"},"content":"| `* * *`  | student      | add my timetable to the app                                                        | easily access and keep track of my own timetable                           |","lastModifiedDate":"2023-10-26"},{"lineNumber":292,"author":{"gitId":"teozhengyang"},"content":"| `* * *`  | student      | add my friend\u0027s timetable to the app                                               | keep track of my friends                                                   |","lastModifiedDate":"2023-10-26"},{"lineNumber":293,"author":{"gitId":"teozhengyang"},"content":"| `* * *`  | student      | identify common free time slots with friends                                       | organise meals or other social activities with them                        |","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"teozhengyang"},"content":"| `* * *`  | student      | set reminders about events                                                         | be well-prepared and organised for all my commitments                      |","lastModifiedDate":"2023-10-26"},{"lineNumber":295,"author":{"gitId":"teozhengyang"},"content":"| `* * *`  | student      | create events                                                                      | keep track of important commitments and activities                         |","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"teozhengyang"},"content":"| `* * *`  | busy student | receive reminders about events                                                     | remember any upcoming events                                               |","lastModifiedDate":"2023-10-26"},{"lineNumber":297,"author":{"gitId":"teozhengyang"},"content":"| `* * *`  | busy student | receive reminders about my friends\u0027 birthdays                                      | plan something for their birthday                                          |","lastModifiedDate":"2023-10-26"},{"lineNumber":298,"author":{"gitId":"teozhengyang"},"content":"| `* *`    | student      | edit my timetable                                                                  | update changes in my timetable                                             |","lastModifiedDate":"2023-10-26"},{"lineNumber":299,"author":{"gitId":"teozhengyang"},"content":"| `* *`    | student      | view my own timetable                                                              | plan my day and easily view my commitments                                 |","lastModifiedDate":"2023-10-26"},{"lineNumber":300,"author":{"gitId":"teozhengyang"},"content":"| `* *`    | student      | view my friends\u0027 timetables                                                        | know more about their day                                                  |","lastModifiedDate":"2023-10-26"},{"lineNumber":301,"author":{"gitId":"teozhengyang"},"content":"| `* *`    | student      | visually compare my timetable with that of my friends                              | quickly identify overlaps or free times                                    |","lastModifiedDate":"2023-10-26"},{"lineNumber":302,"author":{"gitId":"andrefoo"},"content":"| `* *`    | student      | identify common modules with my friends                                            | attend classes with them                                                   |","lastModifiedDate":"2023-10-04"},{"lineNumber":303,"author":{"gitId":"teozhengyang"},"content":"| `* *`    | student      | edit events                                                                        | update any change in event details                                         |","lastModifiedDate":"2023-10-26"},{"lineNumber":304,"author":{"gitId":"teozhengyang"},"content":"| `*`      | student      | give my friends nicknames and set their profile pictures in my list                | personalise and easily identify them                                       |","lastModifiedDate":"2023-10-26"},{"lineNumber":305,"author":{"gitId":"teozhengyang"},"content":"| `*`      | student      | set my own profile picture                                                         | personalise my own profile                                                 |","lastModifiedDate":"2023-10-26"},{"lineNumber":306,"author":{"gitId":"teozhengyang"},"content":"| `*`      | student      | add friends to events                                                              | remember who is attending events                                           |","lastModifiedDate":"2023-10-26"},{"lineNumber":307,"author":{"gitId":"teozhengyang"},"content":"| `*`      | student      | create friend groups                                                               | easily manage and view schedules for specific circles of friends           |","lastModifiedDate":"2023-10-26"},{"lineNumber":308,"author":{"gitId":"teozhengyang"},"content":"| `*`      | student      | see combined timetables of multiple friends                                        | find common free time visually                                             |","lastModifiedDate":"2023-10-26"},{"lineNumber":309,"author":{"gitId":"teozhengyang"},"content":"| `*`      | student      | add notes to events                                                                | remember additional information about the event                            |","lastModifiedDate":"2023-10-26"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":339,"author":{"gitId":"lululwtv"},"content":"**Use case: Edit a person**","lastModifiedDate":"2023-10-27"},{"lineNumber":340,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":341,"author":{"gitId":"lululwtv"},"content":"**MSS**","lastModifiedDate":"2023-10-27"},{"lineNumber":342,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":343,"author":{"gitId":"lululwtv"},"content":"1.  User requests to list persons","lastModifiedDate":"2023-10-27"},{"lineNumber":344,"author":{"gitId":"lululwtv"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2023-10-27"},{"lineNumber":345,"author":{"gitId":"lululwtv"},"content":"3.  User requests to edit a specific person in the list","lastModifiedDate":"2023-10-27"},{"lineNumber":346,"author":{"gitId":"lululwtv"},"content":"4.  AddressBook edits the person","lastModifiedDate":"2023-10-27"},{"lineNumber":347,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":348,"author":{"gitId":"lululwtv"},"content":"    Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":349,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":350,"author":{"gitId":"lululwtv"},"content":"**Extensions**","lastModifiedDate":"2023-10-27"},{"lineNumber":351,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":352,"author":{"gitId":"lululwtv"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-27"},{"lineNumber":353,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":354,"author":{"gitId":"lululwtv"},"content":"  Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":355,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":356,"author":{"gitId":"lululwtv"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-27"},{"lineNumber":357,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":358,"author":{"gitId":"lululwtv"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2023-10-27"},{"lineNumber":359,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":360,"author":{"gitId":"lululwtv"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-27"},{"lineNumber":361,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":362,"author":{"gitId":"lululwtv"},"content":"**Use case: Add a person**","lastModifiedDate":"2023-10-27"},{"lineNumber":363,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":364,"author":{"gitId":"lululwtv"},"content":"**MSS**","lastModifiedDate":"2023-10-27"},{"lineNumber":365,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":366,"author":{"gitId":"lululwtv"},"content":"1.  User requests to list persons","lastModifiedDate":"2023-10-27"},{"lineNumber":367,"author":{"gitId":"lululwtv"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2023-10-27"},{"lineNumber":368,"author":{"gitId":"lululwtv"},"content":"3.  User requests to add a new person to the list","lastModifiedDate":"2023-10-27"},{"lineNumber":369,"author":{"gitId":"lululwtv"},"content":"4.  AddressBook adds the new person","lastModifiedDate":"2023-10-27"},{"lineNumber":370,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":371,"author":{"gitId":"lululwtv"},"content":"    Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":372,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":373,"author":{"gitId":"lululwtv"},"content":"**Extensions**","lastModifiedDate":"2023-10-27"},{"lineNumber":374,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":375,"author":{"gitId":"lululwtv"},"content":"* 3a. Not all the required fields of the person are provided.","lastModifiedDate":"2023-10-27"},{"lineNumber":376,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":377,"author":{"gitId":"lululwtv"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2023-10-27"},{"lineNumber":378,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":379,"author":{"gitId":"lululwtv"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-27"},{"lineNumber":380,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":381,"author":{"gitId":"lululwtv"},"content":"**Use case: Find a person**","lastModifiedDate":"2023-10-27"},{"lineNumber":382,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":383,"author":{"gitId":"lululwtv"},"content":"**MSS**","lastModifiedDate":"2023-10-27"},{"lineNumber":384,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":385,"author":{"gitId":"lululwtv"},"content":"1.  User requests to list persons","lastModifiedDate":"2023-10-27"},{"lineNumber":386,"author":{"gitId":"lululwtv"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2023-10-27"},{"lineNumber":387,"author":{"gitId":"lululwtv"},"content":"3.  User requests to find names containing an inputted keyword","lastModifiedDate":"2023-10-27"},{"lineNumber":388,"author":{"gitId":"lululwtv"},"content":"4.  AddressBook shows a list of persons whose names contain the keyword","lastModifiedDate":"2023-10-27"},{"lineNumber":389,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":390,"author":{"gitId":"lululwtv"},"content":"    Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":391,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":392,"author":{"gitId":"lululwtv"},"content":"**Extensions**","lastModifiedDate":"2023-10-27"},{"lineNumber":393,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":394,"author":{"gitId":"lululwtv"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-27"},{"lineNumber":395,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":396,"author":{"gitId":"lululwtv"},"content":"  Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":397,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":398,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":399,"author":{"gitId":"lululwtv"},"content":"**Use case: Check for common free times with friends**","lastModifiedDate":"2023-10-27"},{"lineNumber":400,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":401,"author":{"gitId":"lululwtv"},"content":"**MSS**","lastModifiedDate":"2023-10-27"},{"lineNumber":402,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":403,"author":{"gitId":"lululwtv"},"content":"1. User requests to list persons","lastModifiedDate":"2023-10-27"},{"lineNumber":404,"author":{"gitId":"lululwtv"},"content":"2. AddressBook shows a list of persons","lastModifiedDate":"2023-10-27"},{"lineNumber":405,"author":{"gitId":"lululwtv"},"content":"3. User requests for common free times either with a specific friend or entire address book","lastModifiedDate":"2023-10-27"},{"lineNumber":406,"author":{"gitId":"lululwtv"},"content":"4. If user requests for common free times with a specific friend, AddressBook shows the friend\u0027s free times.","lastModifiedDate":"2023-10-27"},{"lineNumber":407,"author":{"gitId":"lululwtv"},"content":"5. If user requests for common free times with entire address book, AddressBook shows list of friends with common free times, and their associated common free times","lastModifiedDate":"2023-10-27"},{"lineNumber":408,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":409,"author":{"gitId":"lululwtv"},"content":"    Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":410,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":411,"author":{"gitId":"lululwtv"},"content":"**Extensions**","lastModifiedDate":"2023-10-27"},{"lineNumber":412,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":413,"author":{"gitId":"lululwtv"},"content":"* 2a. The list is empty","lastModifiedDate":"2023-10-27"},{"lineNumber":414,"author":{"gitId":"lululwtv"},"content":"* 4a. Friend has no common free time with User","lastModifiedDate":"2023-10-27"},{"lineNumber":415,"author":{"gitId":"lululwtv"},"content":"* 4b. Friend name specified by user does not exist","lastModifiedDate":"2023-10-27"},{"lineNumber":416,"author":{"gitId":"lululwtv"},"content":"* 5a. No contacts in User\u0027s address book has common free times with user","lastModifiedDate":"2023-10-27"},{"lineNumber":417,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":419,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"lululwtv"},"content":"4.  Should not have a latency of more than 2 seconds to ensure optimal user experience","lastModifiedDate":"2023-10-03"},{"lineNumber":425,"author":{"gitId":"lululwtv"},"content":"5.  Should be able to hold up to 10 modules per person without noticeable detriments to the performance of the app","lastModifiedDate":"2023-10-05"},{"lineNumber":426,"author":{"gitId":"lululwtv"},"content":"6.  Should ensure the integrity of user data, preventing any data corruption or loss during normal usage.","lastModifiedDate":"2023-10-05"},{"lineNumber":427,"author":{"gitId":"lululwtv"},"content":"7.  Should implement appropriate security measures to protect user data from unauthorized access or tampering.","lastModifiedDate":"2023-10-05"},{"lineNumber":428,"author":{"gitId":"lululwtv"},"content":"8.  Should be designed with accessibility in mind, ensuring that it is usable by individuals with disabilities, including those who rely on screen readers or keyboard navigation.","lastModifiedDate":"2023-10-05"},{"lineNumber":429,"author":{"gitId":"lululwtv"},"content":"9.  Should be able to handle a growing number of contacts without a significant decrease in performance.","lastModifiedDate":"2023-10-05"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"owenyeo"},"content":"* **Performance**: Speed at which the app completes queries.","lastModifiedDate":"2023-10-07"},{"lineNumber":438,"author":{"gitId":"owenyeo"},"content":"* **Tampering**: Modifying data without permission from the owner of said data.","lastModifiedDate":"2023-10-07"},{"lineNumber":439,"author":{"gitId":"owenyeo"},"content":"* **normal usage**: Day-to-day usage of the app without any errors occurring.","lastModifiedDate":"2023-10-07"},{"lineNumber":440,"author":{"gitId":"owenyeo"},"content":"* **Optimal user experience**: User can utilise all functionality without bugs and lag.","lastModifiedDate":"2023-10-07"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"teozhengyang":27,"owenyeo":9,"andrefoo":1,"lululwtv":85,"kristayeo":14,"-":357}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"# TimetaBRO User Guide","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"## Introduction","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"Welcome to TimetaBRO, your ultimate companion for managing your university life, social interactions, and schedules. It is dedicated to **NUS students who have many things on their plate, and have trouble arranging meetings with friends and teammates**.","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"In the past, NUS students had to tediously save their friend’s timetables, and compare them to their own. Most of the time, students do not even have the time to compare timetables, and have to go through the hassle of coordination through messaging apps.","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"However, with TimetaBRO, you can now **save your friends’ timetables**, and ask it when your friends are free! Make scheduling meetups and meetings slick and easy, and while you’re busy scheduling the best dates, you can also save important details about your friends! No more forgetting birthdays or favourite foods, be the best friend you can be!","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"## About the user guide","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"This comprehensive user guide will walk you through all the exciting features TimetaBRO has to offer. New to TimetaBRO? Fret not! This guide will walk you through a quickstart to start using TimetaBRO.","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"This user guide will also provide information about its amazing functionalities in the features section, optimising your use of TimetaBRO even further. Included is a command summary for your perusal.","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"Additionally, we included FAQs and a glossary in case you have any additional questions after reading this user guide.","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"## Quickstart","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"Before we jump into it, let\u0027s make sure that your TimetaBRO is working properly!","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"1. Ensure you have Java 11 installed on your computer.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"    * To check if Java 11 is currently installed, you may follow this short guide. ","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"    * If Java 11 is not installed, you may follow the installation instructions over here. ","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"2. Next, download the latest \u0027timetabro.jar\u0027 from [here](https://github.com/AY2324S1-CS2103T-W12-4/tp).","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"3. Copy the file to the folder you want to use as a home folder for TimetaBRO. ","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    * add n/Owen p/91792309 s/CS2101 Tuesday 1200 1400 b/ 2001-12-26:","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"    adds a friend named Owen, with phone number 91792309 and birthday on 26 December 2001. He is taking a class on Tuesday 1200-1400 for module CS2101","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    * cft Friday 1200 1400:","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"    Filters your friend list to people who are free on these timings","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"Nice! Now you know the basic commands and have launched TimetaBRO, lets get into the finer details.","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"Adds a person to TimetaBRO.","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"Format: `add n/NAME [u/NICKNAME] p/PHONE_NUMBER t/TELEGRAM_HANDLE e/EMAIL [m/MODULE /from START_TIME /to END_TIME /day DAY] [t/TAG]`","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003eTip:","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"\u003c/div\u003e\u003cbr /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"Successful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"- `Added {NAME} to the list.`","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"Unsuccessful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"- `Wrong inputs for prefix: {prefix with error}`","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"* `add n/John Doe p/98765432 t/johndoe e/johnd@example.com m/CS2103T /from 1200 /to 1300 /day Wednesday t/police`","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"* `add n/Betsy Crowe t/betsycrowe e/betsycrowe@example.com p/1234567 m/CS2101 /from 1200 /to 1400 /day Monday, Thursday  t/criminal`","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"Shows a list of all added friends.","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"Successful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"Adds a person to your list. `Added {NAME} to the list.`","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"Unsuccessful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"Displays an error message. `To list, please run the command ‘list’`","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"### Editing a friend\u0027s information : `edit`","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"Edits an existing person in TimetaBRO.","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [t/TELEGRAM_HANDLE] [e/EMAIL] [m/MODULE /from START_TIME /to END_TIME /day DAY] [t/TAG]…​`","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"teozhengyang"},"content":"  specifying any tags after it.","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"teozhengyang"},"content":"Successful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"teozhengyang"},"content":"Changes the specified parameters of specified friend’s profile","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"teozhengyang"},"content":"Unsuccessful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"teozhengyang"},"content":"Displays an error message `Please specify the details to change! Correct syntax: edit INDEX [n/NAME] [p/PHONE_NUMBER] [t/TELEGRAM_HANDLE] [e/EMAIL] [m/MODULE /from START_TIME /to END_TIME /day DAY] [t/TAG]`","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"teozhengyang"},"content":"*  `edit 2 n/Betsy Crower m/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing modules.","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"teozhengyang"},"content":"Deletes the specified friend from TimetaBRO.","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"teozhengyang"},"content":"Successful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"teozhengyang"},"content":"Delete person from user’s profile.`(NAME) deleted.`","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"teozhengyang"},"content":"Unsuccessful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"teozhengyang"},"content":"- `Cannot delete (NAME)`","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"teozhengyang"},"content":"- `Cannot find (INDEX)`","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"teozhengyang"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"andrefoo"},"content":"### Finding common free times with friend(s) : `cft`","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"andrefoo"},"content":"Finds friend(s) with the same free times as you.","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"andrefoo"},"content":"Format: `cft [n/NAME]`","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"andrefoo"},"content":"* Finds common free times with friend of the specified `NAME`.","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"andrefoo"},"content":"* Finds common free times with **all friends** in the list if `NAME` is not included.","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"lululwtv"},"content":"Successful Command:\\","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"lululwtv"},"content":"**Input:** \\","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"lululwtv"},"content":"`cft`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"lululwtv"},"content":"**Output:**\\","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"lululwtv"},"content":"Found common free time with friend.\\","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"andrefoo"},"content":"`Here are the contacts with the same free time as you:`","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"andrefoo"},"content":"- `Andre [Monday 1230 1300]`","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"andrefoo"},"content":"- `Owen [Sunday 1200 1400]`","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"andrefoo"},"content":"You have no free time: `You have no free time!`","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"andrefoo"},"content":"No common free times with friends: `You have no contacts with the same free time as you!`","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"andrefoo"},"content":"Unsuccessful Command:","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"lululwtv"},"content":"If user inputs a friend that does not exist, the app will display\\","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"lululwtv"},"content":"`There is no such contact in your contacts!`","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"andrefoo"},"content":"Examples:","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"andrefoo"},"content":"* `cft` lists all friends .","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"andrefoo"},"content":"* `cft n/Betsy` finds people with the name `Betsy` and displays the common free times with this list.","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"lululwtv"},"content":"### Add events to you/your friend\u0027s schedule : `addevent`","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"lululwtv"},"content":"This command adds a dated, non-recurring event to you or your friend\u0027s schedule. ","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"lululwtv"},"content":"Format: `addevent`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"lululwtv"},"content":"To add event to yourself, use \\","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"lululwtv"},"content":"`addevent user type/[TYPE] en/[EVENT NAME] h/[DATE TIME] r/[REMINDER]` \\","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"lululwtv"},"content":"To add event for friend, use \\","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"lululwtv"},"content":"`addevent INDEX type/[TYPE] en/[EVENT NAME] h/[DATE TIME] r/[REMINDER]`","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"lululwtv"},"content":"- Adds an event titled `EVENT_NAME` to either user or ","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"lululwtv"},"content":"the specified friend and `INDEX`","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"lululwtv"},"content":"- Event date and time will be equal to `DATE TIME`","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"lululwtv"},"content":"where `DATE TIME` must be entered in the format `YYYY-MM-DD HHMM [start time] HHMM [end time]`","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"lululwtv"},"content":"- Users can set whether they want to enable reminders for this event by inputting `y/n` under `[REMINDER]`","lastModifiedDate":"2023-10-31"},{"lineNumber":197,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"lululwtv"},"content":"Successful Command:\\","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"lululwtv"},"content":"**Input:** \\","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"lululwtv"},"content":"addevent 1 type/dated en/CS2030 Finals h/2023-10-31 1000 1400 r/y\\","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"lululwtv"},"content":"**Output:**\\","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"lululwtv"},"content":"`New event added:`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"lululwtv"},"content":"`Dated Event:`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"lululwtv"},"content":"`CS2030 Finals 2023-10-31 1000 1400 to [Friend Name]`","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"lululwtv"},"content":"**Input:**\\","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"lululwtv"},"content":"addevent user type/dated en/CS2101 OP2 h/2023-10-31 1500 1600 r/y\\","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"lululwtv"},"content":"**Output:**\\","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"lululwtv"},"content":"`New event added:` \\","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"lululwtv"},"content":"`Dated Event:`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"lululwtv"},"content":"`CS2101 OP2 2023-10-31 1500 1600 to Me`","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"lululwtv"},"content":"Unsuccessful Command:\\","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"lululwtv"},"content":"If a user puts an invalid index,","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"lululwtv"},"content":"this error message will be shown","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"lululwtv"},"content":"`Invalid index!`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"lululwtv"},"content":"`addevent: Adds a non-recurring event to the calendar.`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"lululwtv"},"content":"`Parameters: INDEX type/EVENT_TYPE en/EVENT_NAME h/[Date [YYYY-MM-DD] StarTime (HHMM) EndTime (HHMM)] r/[REMINDER: y/n]`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"lululwtv"},"content":"`Example: addevent 1 type/dated en/CS2103T Lecture h/2020-03-02 1400 1600 r/y`\\ ","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"lululwtv"},"content":"`Note: If you are adding a meetup event, then index refers to the index of the friend you are meeting with.`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"lululwtv"},"content":" `If you are adding a dated event, then index should be the index of the friend you are adding the dated event to or \u0027user\u0027 if you would like to add the event to yourself`","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"lululwtv"},"content":" If a user uses the wrong format (i.e missing prefix, wrong event type),","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"lululwtv"},"content":"this error message will be shown\\","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"lululwtv"},"content":"`Input should be in the format \u0027name YYYY-MM-DD HHMM HHMM yes/no\u0027, where:`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"lululwtv"},"content":"`\u0027name\u0027 represents the name and should not contain spaces.`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"lululwtv"},"content":"`\u0027YYYY-MM-DD\u0027 represents a date (e.g., \u00272023-10-24\u0027).`","lastModifiedDate":"2023-10-31"},{"lineNumber":230,"author":{"gitId":"lululwtv"},"content":"`\u0027HHMM\u0027 represents a valid 24-hour time format in half-hour blocks (e.g., 0000, 1230, 2300).`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"lululwtv"},"content":"`The first \u0027HHMM\u0027 represents the starting time (e.g., \u00270830\u0027 for 08:30 AM).`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"lululwtv"},"content":"`The second \u0027HHMM\u0027 represents the ending time (e.g., \u00271730\u0027 for 05:30 PM).`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"lululwtv"},"content":"`y/n represents whether you want a reminder for this event.`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"lululwtv"},"content":"### Removing an event: `rmevent`","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"lululwtv"},"content":"Removes the specified event from the specified Person","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"lululwtv"},"content":"**Format:**\\","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"lululwtv"},"content":"To remove an event, you can use the rmevent command with the following parameters:","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":242,"author":{"gitId":"lululwtv"},"content":"`rmevent [INDEX] type/[EVENT_TYPE] en/[EVENT_NAME]`","lastModifiedDate":"2023-10-31"},{"lineNumber":243,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":244,"author":{"gitId":"lululwtv"},"content":"INDEX (Index of the friend or \u0027user\u0027)","lastModifiedDate":"2023-10-31"},{"lineNumber":245,"author":{"gitId":"lululwtv"},"content":"type/EVENT_TYPE (Event type, either \u0027dated\u0027 or \u0027meetup\u0027)","lastModifiedDate":"2023-10-31"},{"lineNumber":246,"author":{"gitId":"lululwtv"},"content":"en/EVENT_NAME (Event name)","lastModifiedDate":"2023-10-31"},{"lineNumber":247,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"lululwtv"},"content":"Successful commands:","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"lululwtv"},"content":"Remove an event from a friend\u0027s calendar:\\","lastModifiedDate":"2023-10-31"},{"lineNumber":251,"author":{"gitId":"lululwtv"},"content":"`rmevent 1 type/dated en/CS2103T Lecture`","lastModifiedDate":"2023-10-31"},{"lineNumber":252,"author":{"gitId":"lululwtv"},"content":"Remove an event from your own calendar:\\","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"lululwtv"},"content":"`rmevent user type/dated en/CS2103T Lecture`","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"lululwtv"},"content":"**Unsuccessful commands:**\\","lastModifiedDate":"2023-10-31"},{"lineNumber":257,"author":{"gitId":"lululwtv"},"content":"If an invalid index is used:\\","lastModifiedDate":"2023-10-31"},{"lineNumber":258,"author":{"gitId":"lululwtv"},"content":"`Invalid index!`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":259,"author":{"gitId":"lululwtv"},"content":"`Parameters: INDEX`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":260,"author":{"gitId":"lululwtv"},"content":"`type/EVENT_TYPE`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":261,"author":{"gitId":"lululwtv"},"content":"`en/EVENT_NAME`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":262,"author":{"gitId":"lululwtv"},"content":"`Example: rmevent 1 type/dated en/CS2103T Lecture`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":263,"author":{"gitId":"lululwtv"},"content":"`NOTE: If you want to remove an event from yourself, use index user`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":264,"author":{"gitId":"lululwtv"},"content":"`Example: rmevent user type/dated en/CS2103T Lecture`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":265,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":266,"author":{"gitId":"lululwtv"},"content":"If wrong command format is used (i.e missing prefixes, wrong event name):\\","lastModifiedDate":"2023-10-31"},{"lineNumber":267,"author":{"gitId":"lululwtv"},"content":"`Command format is invalid!`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":268,"author":{"gitId":"lululwtv"},"content":"`Parameters: INDEX`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":269,"author":{"gitId":"lululwtv"},"content":"`type/EVENT_TYPE`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":270,"author":{"gitId":"lululwtv"},"content":"`en/EVENT_NAME`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":271,"author":{"gitId":"lululwtv"},"content":"`Example: rmevent 1 type/dated en/CS2103T Lecture`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":272,"author":{"gitId":"lululwtv"},"content":"`NOTE: If you want to remove an event from yourself, use index user`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":273,"author":{"gitId":"lululwtv"},"content":"`Example: rmevent user type/dated en/CS2103T Lecture`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":274,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":275,"author":{"gitId":"lululwtv"},"content":"### Add recurring events to you/your friend\u0027s schedule : `addschedule`","lastModifiedDate":"2023-10-31"},{"lineNumber":276,"author":{"gitId":"lululwtv"},"content":"This command adds a recurring event to you or your friend\u0027s schedule. ","lastModifiedDate":"2023-10-31"},{"lineNumber":277,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":278,"author":{"gitId":"lululwtv"},"content":"Format: `addschedule`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":279,"author":{"gitId":"lululwtv"},"content":"To add event to yourself, use \\","lastModifiedDate":"2023-10-31"},{"lineNumber":280,"author":{"gitId":"lululwtv"},"content":"`addschedule user type/[TYPE] en/[EVENT NAME] h/[DAY TIME]` \\","lastModifiedDate":"2023-10-31"},{"lineNumber":281,"author":{"gitId":"lululwtv"},"content":"To add event for friend, use \\","lastModifiedDate":"2023-10-31"},{"lineNumber":282,"author":{"gitId":"lululwtv"},"content":"`addschedule INDEX type/[TYPE] en/[EVENT NAME] h/[DAY TIME]`","lastModifiedDate":"2023-10-31"},{"lineNumber":283,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"lululwtv"},"content":"- Adds an event titled `EVENT_NAME` to either user or ","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"lululwtv"},"content":"the specified friend and `INDEX`","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"lululwtv"},"content":"- Event date and time will be equal to `DAY TIME`","lastModifiedDate":"2023-10-31"},{"lineNumber":287,"author":{"gitId":"lululwtv"},"content":"where `DAY TIME` must be entered in the format `[monday/tuesday/wednesday/thursday/friday/saturday/sunday] HHMM [start time] HHMM [end time]`","lastModifiedDate":"2023-10-31"},{"lineNumber":288,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":289,"author":{"gitId":"lululwtv"},"content":"Successful Command:\\","lastModifiedDate":"2023-10-31"},{"lineNumber":290,"author":{"gitId":"lululwtv"},"content":"**Input:** \\","lastModifiedDate":"2023-10-31"},{"lineNumber":291,"author":{"gitId":"lululwtv"},"content":"`addschedule 1 type/module en/CS2030 h/Monday 1000 1400`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":292,"author":{"gitId":"lululwtv"},"content":"**Output:**\\","lastModifiedDate":"2023-10-31"},{"lineNumber":293,"author":{"gitId":"lululwtv"},"content":"`New event added:`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":294,"author":{"gitId":"lululwtv"},"content":"`Module:`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":295,"author":{"gitId":"lululwtv"},"content":"`CS2030 Monday 1000 1400 to [Friend Name]`","lastModifiedDate":"2023-10-31"},{"lineNumber":296,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":297,"author":{"gitId":"lululwtv"},"content":"**Input:**\\","lastModifiedDate":"2023-10-31"},{"lineNumber":298,"author":{"gitId":"lululwtv"},"content":"`addschedule user type/CCA en/CS2101 h/Tuesday 1500 1600`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":299,"author":{"gitId":"lululwtv"},"content":"**Output:**\\","lastModifiedDate":"2023-10-31"},{"lineNumber":300,"author":{"gitId":"lululwtv"},"content":"`New event added:` \\","lastModifiedDate":"2023-10-31"},{"lineNumber":301,"author":{"gitId":"lululwtv"},"content":"`CCA:`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":302,"author":{"gitId":"lululwtv"},"content":"`CS2101 Tuesday 1500 1600 to Me`","lastModifiedDate":"2023-10-31"},{"lineNumber":303,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":304,"author":{"gitId":"lululwtv"},"content":"Unsuccessful Command:\\","lastModifiedDate":"2023-10-31"},{"lineNumber":305,"author":{"gitId":"lululwtv"},"content":"If a user puts an invalid index,","lastModifiedDate":"2023-10-31"},{"lineNumber":306,"author":{"gitId":"lululwtv"},"content":"this error message will be shown","lastModifiedDate":"2023-10-31"},{"lineNumber":307,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":308,"author":{"gitId":"lululwtv"},"content":"`Invalid index!`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":309,"author":{"gitId":"lululwtv"},"content":"`addevent: Adds a non-recurring event to the calendar.`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":310,"author":{"gitId":"lululwtv"},"content":"`Parameters: INDEX type/EVENT_TYPE en/EVENT_NAME h/[Day [Day of week] StarTime (HHMM) EndTime (HHMM)]`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":311,"author":{"gitId":"lululwtv"},"content":"`Example: addschedule 1 type/dated en/CS2103T Lecture h/Wednesday 1400 1600`\\ ","lastModifiedDate":"2023-10-31"},{"lineNumber":312,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":313,"author":{"gitId":"lululwtv"},"content":"`Note: If you are adding a meetup event, then index refers to the index of the friend you are meeting with.`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":314,"author":{"gitId":"lululwtv"},"content":" `If you are adding a dated event, then index should be the index of the friend you are adding the dated event to or \u0027user\u0027 if you would like to add the event to yourself`","lastModifiedDate":"2023-10-31"},{"lineNumber":315,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":316,"author":{"gitId":"lululwtv"},"content":" If a user uses the wrong format (i.e missing prefix, wrong event type),","lastModifiedDate":"2023-10-31"},{"lineNumber":317,"author":{"gitId":"lululwtv"},"content":"this error message will be shown\\","lastModifiedDate":"2023-10-31"},{"lineNumber":318,"author":{"gitId":"lululwtv"},"content":"`Input should be in the format \u0027name [Day] HHMM HHMM yes/no\u0027, where:`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":319,"author":{"gitId":"lululwtv"},"content":"`\u0027name\u0027 represents the name and should not contain spaces.`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":320,"author":{"gitId":"lululwtv"},"content":"`\u0027Day\u0027 represents a day of the week (e.g. Monday).`","lastModifiedDate":"2023-10-31"},{"lineNumber":321,"author":{"gitId":"lululwtv"},"content":"`\u0027HHMM\u0027 represents a valid 24-hour time format in half-hour blocks (e.g., 0000, 1230, 2300).`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":322,"author":{"gitId":"lululwtv"},"content":"`The first \u0027HHMM\u0027 represents the starting time (e.g., \u00270830\u0027 for 08:30 AM).`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":323,"author":{"gitId":"lululwtv"},"content":"`The second \u0027HHMM\u0027 represents the ending time (e.g., \u00271730\u0027 for 05:30 PM).`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":324,"author":{"gitId":"lululwtv"},"content":"`y/n represents whether you want a reminder for this event.`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":325,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":326,"author":{"gitId":"lululwtv"},"content":"### Removing a recurring scheduled event: `rmschedule`","lastModifiedDate":"2023-10-31"},{"lineNumber":327,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":328,"author":{"gitId":"lululwtv"},"content":"Removes the specified recurring item from the specified Person\u0027s schedule","lastModifiedDate":"2023-10-31"},{"lineNumber":329,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":330,"author":{"gitId":"lululwtv"},"content":"**Format:**\\","lastModifiedDate":"2023-10-31"},{"lineNumber":331,"author":{"gitId":"lululwtv"},"content":"To remove a scheduled event, you can use the rmschedule command with the following parameters:","lastModifiedDate":"2023-10-31"},{"lineNumber":332,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":333,"author":{"gitId":"lululwtv"},"content":"`rmevent [INDEX] type/[EVENT_TYPE] en/[EVENT_NAME]`","lastModifiedDate":"2023-10-31"},{"lineNumber":334,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":335,"author":{"gitId":"lululwtv"},"content":"INDEX (Index of the friend or \u0027user\u0027)","lastModifiedDate":"2023-10-31"},{"lineNumber":336,"author":{"gitId":"lululwtv"},"content":"type/EVENT_TYPE (Event type, either \u0027dated\u0027 or \u0027meetup\u0027)","lastModifiedDate":"2023-10-31"},{"lineNumber":337,"author":{"gitId":"lululwtv"},"content":"en/EVENT_NAME (Event name)","lastModifiedDate":"2023-10-31"},{"lineNumber":338,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":339,"author":{"gitId":"lululwtv"},"content":"Successful commands:","lastModifiedDate":"2023-10-31"},{"lineNumber":340,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":341,"author":{"gitId":"lululwtv"},"content":"Remove an event from a friend\u0027s calendar:\\","lastModifiedDate":"2023-10-31"},{"lineNumber":342,"author":{"gitId":"lululwtv"},"content":"`rmschedule 1 type/CCA en/CS2103T Lecture`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":343,"author":{"gitId":"lululwtv"},"content":"`CS2103T Lecture has been removed from [Friend]!`","lastModifiedDate":"2023-10-31"},{"lineNumber":344,"author":{"gitId":"lululwtv"},"content":"Remove an event from your own calendar:\\","lastModifiedDate":"2023-10-31"},{"lineNumber":345,"author":{"gitId":"lululwtv"},"content":"`rmschedule user type/module en/CS2103T Lecture`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":346,"author":{"gitId":"lululwtv"},"content":"`CS2103T Lecture has been removed from Me!`","lastModifiedDate":"2023-10-31"},{"lineNumber":347,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":348,"author":{"gitId":"lululwtv"},"content":"**Unsuccessful commands:**\\","lastModifiedDate":"2023-10-31"},{"lineNumber":349,"author":{"gitId":"lululwtv"},"content":"If an invalid index is used:\\","lastModifiedDate":"2023-10-31"},{"lineNumber":350,"author":{"gitId":"lululwtv"},"content":"`Invalid index!`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":351,"author":{"gitId":"lululwtv"},"content":"`Parameters: INDEX`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":352,"author":{"gitId":"lululwtv"},"content":"`type/EVENT_TYPE`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":353,"author":{"gitId":"lululwtv"},"content":"`en/EVENT_NAME`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":354,"author":{"gitId":"lululwtv"},"content":"`Example: rmschedule 1 type/module en/CS2103T Lecture`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":355,"author":{"gitId":"lululwtv"},"content":"`NOTE: If you want to remove an event from yourself, use index user`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":356,"author":{"gitId":"lululwtv"},"content":"`Example: rmschedule user type/module en/CS2103T Lecture`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":357,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":358,"author":{"gitId":"lululwtv"},"content":"If wrong command format is used (i.e missing prefixes, wrong event name):\\","lastModifiedDate":"2023-10-31"},{"lineNumber":359,"author":{"gitId":"lululwtv"},"content":"`Command format is invalid!`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":360,"author":{"gitId":"lululwtv"},"content":"`Parameters: INDEX`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":361,"author":{"gitId":"lululwtv"},"content":"`type/EVENT_TYPE`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":362,"author":{"gitId":"lululwtv"},"content":"`en/EVENT_NAME`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":363,"author":{"gitId":"lululwtv"},"content":"`Example: rmschedule 1 type/cca en/CS2103T Lecture`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":364,"author":{"gitId":"lululwtv"},"content":"`NOTE: If you want to remove an event from yourself, use index user`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":365,"author":{"gitId":"lululwtv"},"content":"`Example: rmschedule user type/cca en/CS2103T Lecture`\\","lastModifiedDate":"2023-10-31"},{"lineNumber":366,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":367,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2023-10-03"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"teozhengyang"},"content":"Clears all entries from TimetaBRO.","lastModifiedDate":"2023-10-03"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2023-10-03"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"teozhengyang"},"content":"Successful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"teozhengyang"},"content":"`All friends have been deleted`","lastModifiedDate":"2023-10-03"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2023-10-03"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2023-10-03"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":381,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2023-10-03"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":383,"author":{"gitId":"teozhengyang"},"content":"Successful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":384,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":385,"author":{"gitId":"teozhengyang"},"content":"The app closes after saving all data.","lastModifiedDate":"2023-10-03"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2023-10-03"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"teozhengyang"},"content":"TimetaBRO data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-03"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":391,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2023-10-03"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"teozhengyang"},"content":"TimetaBRO data are saved automatically as a JSON file `[JAR file location]/data/timetabro.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-03"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"teozhengyang"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003eCaution:","lastModifiedDate":"2023-10-03"},{"lineNumber":396,"author":{"gitId":"teozhengyang"},"content":"If your changes to the data file makes its format invalid, TimetaBRO will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-03"},{"lineNumber":397,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":399,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-03"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":401,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2023-10-03"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":403,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":404,"author":{"gitId":"teozhengyang"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous TimetaBRO home folder.","lastModifiedDate":"2023-10-03"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-03"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":408,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-10-03"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":410,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-10-03"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":412,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-03"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":414,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2023-10-03"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":416,"author":{"gitId":"teozhengyang"},"content":"| Action             | Format, Examples                                                                                                                                                                                                                                         |","lastModifiedDate":"2023-10-03"},{"lineNumber":417,"author":{"gitId":"andrefoo"},"content":"|--------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-27"},{"lineNumber":418,"author":{"gitId":"teozhengyang"},"content":"| **Add**            | `​add n/NAME u/NICKNAME p/PHONE_NUMBER t/TELEGRAM_HANDLE e/EMAIL [m/MODULE /from START_TIME /to END_TIME /day DAY] [t/TAG]…​` \u003cbr\u003e e.g., `add n/John Doe p/98765432 t/johndoe e/johnd@example.com m/CS2103T /from 1200 /to 1300 /day Wednesday t/police` |","lastModifiedDate":"2023-10-03"},{"lineNumber":419,"author":{"gitId":"teozhengyang"},"content":"| **Clear**          | `clear`                                                                                                                                                                                                                                                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":420,"author":{"gitId":"teozhengyang"},"content":"| **Delete**         | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                                                                      |","lastModifiedDate":"2023-10-03"},{"lineNumber":421,"author":{"gitId":"teozhengyang"},"content":"| **Edit**           | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [t/TELEGRAM_HANDLE] [e/EMAIL] [m/MODULE /from START_TIME /to END_TIME /day DAY] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                                                    |","lastModifiedDate":"2023-10-03"},{"lineNumber":422,"author":{"gitId":"teozhengyang"},"content":"| **List**           | `list`                                                                                                                                                                                                                                                   |","lastModifiedDate":"2023-10-03"},{"lineNumber":423,"author":{"gitId":"teozhengyang"},"content":"| **Help**           | `help`                                                                                                                                                                                                                                                   |","lastModifiedDate":"2023-10-03"},{"lineNumber":424,"author":{"gitId":"andrefoo"},"content":"| **CommonFreeTime** | `cft [n/NAME]`                                                                                                                                                                                                                                           |","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"teozhengyang":48,"owenyeo":22,"andrefoo":34,"lululwtv":192,"-":128}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"Class User","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"Class FreeTime","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"Class HalfHourBlocks","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"Class DatedEvent","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"package User as \"User\" {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserData\" as ReadOnlyUserData","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"Class UserPrefs","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"Class UserData","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"Class User","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"Model .right.\u003e ReadOnlyUserData","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"ModelManager -right-\u003e \"1\" UserData","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"UserData .up.|\u003e ReadOnlyUserData","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"UserData --\u003e \"1\" User","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"Person *--\u003e \"*\" FreeTime","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"FreeTime *--\u003e \"1\" HalfHourBlocks","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"FreeTime *--\u003e \"1\" DayOfWeek","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"User --\u003e Person","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"User *--\u003e \"*\" DatedEvent","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"owenyeo":6,"andrefoo":14,"-":53}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"package \"UserData Storage\" {","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserDataStorage\" as UserDataStorage","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"Class JsonUserDataStorage","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"Class JsonSerializableUserData","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"Class JsonAdaptedFreeTime","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"StorageManager -up-\u003e \"1\" UserDataStorage","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"Storage -right-|\u003e UserDataStorage","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"JsonUserDataStorage .up.|\u003e UserDataStorage","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"JsonUserDataStorage ..\u003e JsonSerializableUserData","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"JsonSerializableUserData --\u003e \"1\" JsonAdaptedPerson","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedFreeTime","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"andrefoo":15,"-":43}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"Class UserCard","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"MainWindow *-down-\u003e \"1\" UserCard","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"UserCard --|\u003e UiPart","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"UserCard -[hidden]left- HelpWindow","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"andrefoo":5,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"title: TimetaBRO","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W12-4/tp/actions)","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103-W12-4/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S1-CS2103-W12-4/tp)","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"**TimetaBRO is a desktop application for arranging meetups with busy friends.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"* If you are interested in using TimetaBRO, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"* If you are interested about developing TimetaBRO, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"andrefoo":5,"-":14}},{"path":"docs/team/andrefoo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"# Project Portfolio Page: TimetaBRO","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"## Overview","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"**Code contributed:** [Link to your code on tP Code Dashboard]","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"**Enhancements implemented:**","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"**Contributions to the User Guide (UG):**","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"**Contributions to the Developer Guide (DG):**","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"**Contributions to team-based tasks:**","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"**Contributions beyond the project team:**","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"andrefoo":28}},{"path":"docs/team/kristayeo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"# Project Portfolio Page: TimetaBRO","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"## Overview","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"**Code contributed:** [Link to your code on tP Code Dashboard]","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"**Enhancements implemented:**","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"**Contributions to the User Guide (UG):**","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"**Contributions to the Developer Guide (DG):**","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"**Contributions to team-based tasks:**","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"**Contributions beyond the project team:**","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"kristayeo":28}},{"path":"docs/team/lululwtv.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"# Project Portfolio Page: TimetaBRO","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"## Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"**Code contributed:** [Link to your code on tP Code Dashboard]","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"**Enhancements implemented:**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"**Contributions to the User Guide (UG):**","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"**Contributions to the Developer Guide (DG):**","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"**Contributions to team-based tasks:**","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"**Contributions beyond the project team:**","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"lululwtv":28}},{"path":"docs/team/owenyeo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"title: Owen Yeo\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"## Project: TimetaBRO","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"### Overview","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"TimetaBRO, your ultimate companion for managing your university life, social interactions, and schedules.","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"**Code contributed:** [Link to your code on tP Code Dashboard]","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"**Enhancements implemented:**","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"**Contributions to the User Guide (UG):**","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"**Contributions to the Developer Guide (DG):**","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"**Contributions to team-based tasks:**","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"**Contributions beyond the project team:**","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"owenyeo":19,"-":15}},{"path":"docs/team/teozhengyang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"# Teo Zheng Yang\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"## Project: TimetaBRO","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"### Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"TimetaBRO, your ultimate companion for managing your university life, social interactions, and schedules.","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"**Code contributed:** [Link to your code on tP Code Dashboard]","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"**Enhancements implemented:**","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"**Contributions to the User Guide (UG):**","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"**Contributions to the Developer Guide (DG):**","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"**Contributions to team-based tasks:**","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"**Contributions beyond the project team:**","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"teozhengyang":31}},{"path":"settings.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"/*","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":" *","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":" * The settings file is used to specify which projects to include in your build.","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":" *","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":" * in the user manual at https://docs.gradle.org/7.4.2/userguide/multi_project_builds.html","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"rootProject.name \u003d \u0027tp\u0027","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"lululwtv":10}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"import seedu.address.storage.JsonUserDataStorage;","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"import seedu.address.storage.UserDataStorage;","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.ui.Reminder;","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"        UserDataStorage userDataStorage \u003d new JsonUserDataStorage(userPrefs.getUserDataFilePath());","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, userDataStorage);","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"owenyeo"},"content":"        logger.info(\"Using data file : \" + storage.getUserDataFilePath());","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"owenyeo"},"content":"        Optional\u003cReadOnlyUserData\u003e userDataOptional;","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"owenyeo"},"content":"        ReadOnlyUserData userData;","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"owenyeo"},"content":"        try {","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"owenyeo"},"content":"            userDataOptional \u003d storage.readUserData();","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"owenyeo"},"content":"            if (!userDataOptional.isPresent()) {","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"owenyeo"},"content":"                logger.info(\"Creating a new data file \" + storage.getUserDataFilePath()","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"owenyeo"},"content":"                        + \" populated with a sample UserData.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"owenyeo"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"owenyeo"},"content":"            userData \u003d userDataOptional.orElseGet(SampleDataUtil::getSampleUserData);","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"owenyeo"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"owenyeo"},"content":"            logger.warning(\"Data file at \" + storage.getUserDataFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"owenyeo"},"content":"                    + \" Will be starting with an empty UserData.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":112,"author":{"gitId":"owenyeo"},"content":"            userData \u003d new UserData(SampleDataUtil.getSampleUser());","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"owenyeo"},"content":"        return new ModelManager(initialData, userPrefs, userData);","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":197,"author":{"gitId":"teozhengyang"},"content":"        Reminder.showReminder(model, primaryStage);","lastModifiedDate":"2023-10-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"teozhengyang":2,"owenyeo":26,"-":181}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"     * Retrieves the current logging level.","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"     * @return The current logging level as a {@link java.util.logging.Level} object.","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"    public static Level getCurrentLogLevel() {","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"        return currentLogLevel;","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"teozhengyang":8,"-":106}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"    Person getUser();","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"owenyeo":2,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"            storage.saveUserData(model.getUserData());","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"    public Person getUser() {","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"owenyeo"},"content":"        return model.getUser();","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"owenyeo":6,"-":88}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"                .append(\"; Free Times: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"                .append(person.getFreeTimes())","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lululwtv":2,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"            + PREFIX_BIRTHDAY + \"BIRTHDAY \"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"            + PREFIX_BIRTHDAY + \"2000-01-01 \"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"teozhengyang":3,"-":84}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":" * Represents a command to add a non-recurring event to the calendar.","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":" * The event can either be a dated event or a meetup event.","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":" * A dated event is an event that is added to a friend\u0027s schedule or the user\u0027s schedule.","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":" * A meetup event is an event that is added to the user\u0027s schedule and involves meeting up with a friend.","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":" * Inherits from the Command class.","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"    public static final String COMMAND_WORD \u003d \"addevent\";","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"        + \": Adds a non-recurring event to the calendar.\\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"        + \"INDEX \"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"        + \"type/EVENT_TYPE \"","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"        + \"en/EVENT_NAME \"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"        + \"h/[Date [YYYY-MM-DD] StarTime (HHMM) EndTime (HHMM)] \"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"        + \"r/[REMINDER: y/n] \\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"        + \"1 \"","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"        + \"type/dated \"","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"        + \"en/CS2103T Lecture \"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"        + \"h/2020-03-02 1400 1600 \"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"        + \"r/y \\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"        + \"\\n\\n Note: If you are adding a meetup event, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"        + \"then index refers to the index of the friend you are meeting with. \\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"        + \"If you are adding a dated event, then index should be the index of \"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"        + \"the friend you are adding the dated event to or \u0027user\u0027 \"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"        + \"if you would like to add the event to yourself \\n\";","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"    private final String eventName;","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"    private final String eventType;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"    private final Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"    private final String schedule;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"    private final String reminder;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: \";","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"    public AddEventCommand(String eventName, Index index, String schedule,","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"        String reminder, String eventType) {","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"        ","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"        requireAllNonNull(schedule);","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"        this.reminder \u003d reminder;","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"        this.eventType \u003d eventType.toLowerCase();","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"lululwtv"},"content":"    public AddEventCommand(String eventName, String schedule,","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"lululwtv"},"content":"        String reminder, String eventType) {","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"lululwtv"},"content":"        this(eventName, null, schedule, reminder, eventType);","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"lululwtv"},"content":"     * When successfully executed, it should add a new event to the user\u0027s timetable.","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"lululwtv"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"lululwtv"},"content":"     * @return A command result in the form of a string.","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"lululwtv"},"content":"     * @throws CommandException If the command is invalid.","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"lululwtv"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"lululwtv"},"content":"        Person friend;","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"lululwtv"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"lululwtv"},"content":"            if (this.index \u003d\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"lululwtv"},"content":"                friend \u003d model.getUser();","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"lululwtv"},"content":"            } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"lululwtv"},"content":"                friend \u003d model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"lululwtv"},"content":"            Schedule friendSchedule \u003d friend.getSchedule();","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"lululwtv"},"content":"            ","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"lululwtv"},"content":"            switch (eventType) {","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"lululwtv"},"content":"                case \"dated\":","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"lululwtv"},"content":"                    friendSchedule.addDatedEvent(eventName + \" \" + schedule + \" \" + reminder);","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"lululwtv"},"content":"                    return new CommandResult(MESSAGE_SUCCESS + \"\\nDated Event:\\n\" + eventName + \" \" + schedule + \" to \" + friend.getName());","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"lululwtv"},"content":"                case \"meetup\":","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"lululwtv"},"content":"                    if (friend.getName().toString().toLowerCase().equals(\"user\")) {","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"lululwtv"},"content":"                        throw new CommandException(\"You cannot add a meetup event with yourself! \\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"lululwtv"},"content":"                            + \"Please specify the friend you are meeting up with using the following format: \\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"lululwtv"},"content":"                            + \"addevent [index of friend] \");","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"lululwtv"},"content":"                    }","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"lululwtv"},"content":"                    Schedule userSchedule \u003d model.getUser().getSchedule();","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"lululwtv"},"content":"                    Schedule friendScedule \u003d friend.getSchedule();","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"lululwtv"},"content":"                    userSchedule.addMeetUpEvent(eventName.toLowerCase() + \" \" + schedule + \" \" + reminder, friend);","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"lululwtv"},"content":"                    friendScedule.addMeetUpEvent(eventName.toLowerCase() + \" \" + schedule + \" \" + reminder, model.getUser());","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"lululwtv"},"content":"                    return new CommandResult(MESSAGE_SUCCESS + \"\\nMeet up event\\n\" + eventName + \" \" + schedule + \" with \" + friend.getName());","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"lululwtv"},"content":"                default:","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"lululwtv"},"content":"                    throw new CommandException(\"Invalid event type!\"","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"lululwtv"},"content":"                        + \"\\n Event type can only be \u0027Dated\u0027 or \u0027Meetup\u0027\" );","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"lululwtv"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"lululwtv"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"lululwtv":110}},{"path":"src/main/java/seedu/address/logic/commands/AddScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":" * Represents a command to add a schedule to a specified contact.","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":" * Inherits from the Command class.","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"public class AddScheduleCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"    public static final String COMMAND_WORD \u003d \"addschedule\";","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a schedule to the specified contact.\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"            + \"INDEX\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"            + \"type/EVENT_TYPE\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"            + \"en/EVENT_NAME\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"            + \"h/[DAY_OF_WEEK START_TIME [HHMM] END_TIME [HHMM]]\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"            + \" 1\"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"            + \" type/cca\"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"            + \" en/CS2103T Lecture\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"            + \" h/Monday 1400 1600\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"            + \"NOTE: If you want to add an event to yourself, use index user\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"            + \" user\"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"            + \" type/cca\"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"            + \" en/CS2103T Lecture\"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"            + \" h/Monday 1400 1600\";","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"            ","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: \";","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"    private final String eventName;","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"    private final String eventType;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"    private final Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"    private final String schedule;","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"    public AddScheduleCommand(String eventName, String eventType, Index index, String schedule) {","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"        this.eventType \u003d eventType;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"    public AddScheduleCommand(String eventName, String eventType, String schedule) {","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"        this(eventName, eventType, null, schedule);","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"    ","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"        Person friend;","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"            if (this.index \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"                friend \u003d model.getUser();","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"            } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"                friend \u003d model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"lululwtv"},"content":"            Schedule friendSchedule \u003d friend.getSchedule();","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"lululwtv"},"content":"            ","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"lululwtv"},"content":"            switch (eventType) {","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"lululwtv"},"content":"                case \"cca\":","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"lululwtv"},"content":"                    friendSchedule.addCca(eventName + \" \" + schedule);","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"lululwtv"},"content":"                    return new CommandResult(MESSAGE_SUCCESS + \"\\nCCA:\\n\" + eventName + \" \" + schedule + \" to \" + friend.getName());","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"lululwtv"},"content":"                case \"module\":","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"lululwtv"},"content":"                    Schedule friendScedule \u003d friend.getSchedule();","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"lululwtv"},"content":"                    friendScedule.addModule(eventName + \" \" + schedule);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"lululwtv"},"content":"                    return new CommandResult(MESSAGE_SUCCESS + \"\\nModule:\\n\" + eventName + \" \" + schedule + \" to \" + friend.getName());","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"lululwtv"},"content":"                default:","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"lululwtv"},"content":"                    throw new CommandException(\"Invalid event type!\"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"lululwtv"},"content":"                        + \"\\n Event type can only be \u0027Module\u0027 or \u0027CCA\u0027\" );","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"lululwtv"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"lululwtv"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"lululwtv":82}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"    /** ","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"     * The application should check if it is editable.","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"    private final boolean edit;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"    /** ","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"     * The application should check if it is a commonfreetime.","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"    private final boolean commonFreetime;","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean edit, boolean cft) {","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"        this.edit \u003d edit;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"        this.commonFreetime \u003d cft;","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"        this(feedbackToUser, false, false, false, false);","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"    public CommandResult(String feedbacktoUser, boolean cft) {","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"        this(feedbacktoUser, false, false, false, cft);","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"kristayeo"},"content":"    public boolean isEdit() {","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"kristayeo"},"content":"        return edit;","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lululwtv":15,"kristayeo":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/CommonFreetimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.FreeTime;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":" * Represents a command that finds all contacts with the same free time as the User.","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":" * A CommonFreetimeCommand object can be created with or without a specified contact name.","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":" * If no name is specified, the command returns the user\u0027s common free time with all contacts.","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":" * If a name is specified, the command returns the user\u0027s common free time with the specified contact.","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":" * Inherits from the Command class and overrides its execute method.","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"public class CommonFreetimeCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"    public static final String COMMAND_WORD \u003d \"cft\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"            + \": Finds all contacts with the same free time as the User.\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    public static final String MESSAGE_COMMON_FREETIME_SUCCESS \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"            \"Here are the contacts with the same free time as you: \\n\";","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"    public static final String MESSAGE_NO_FREE_TIME \u003d \"You have no free time!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"    public static final String MESSAGE_NO_CONTACTS \u003d \"You have no contacts with the same free time as you!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    private Name name \u003d null; // name of person (user) to find common free time with","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"    public CommonFreetimeCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"    public CommonFreetimeCommand(Name name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"     * Executes the CommonFreetimeCommand to find common free time between user and person.","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"     * If no name is specified, the command returns the user\u0027s common free time with all contacts.","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"     * If a name is specified, the command returns the user\u0027s common free time with the specified contact.","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"     * @return a CommandResult object that contains the result of executing the command.","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"     * @throws CommandException if an error occurs during command execution.","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"        ArrayList\u003cPerson\u003e overlappingContacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"        Schedule userSchedule \u003d model.getUser().getSchedule();","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"        // If user has no free time, return error message","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"        if (!model.getUser().getSchedule().hasFreeTime()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"            throw new CommandException(MESSAGE_NO_FREE_TIME);","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"        // If no name is specified, return the user\u0027s common free time with all contacts","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"lululwtv"},"content":"        if (this.name \u003d\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"lululwtv"},"content":"            ObservableList\u003cPerson\u003e contacts \u003d model.getAddressBook().getPersonList();","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"lululwtv"},"content":"            ArrayList\u003cFreeTime\u003e commonFreeTime \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"lululwtv"},"content":"            getContactsWithFreeTime(contacts, commonFreeTime, overlappingContacts, userSchedule);","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"lululwtv"},"content":"            if (commonFreeTime.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"lululwtv"},"content":"                throw new CommandException(MESSAGE_NO_CONTACTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"lululwtv"},"content":"            } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"lululwtv"},"content":"                return new CommandResult(createCommonFreeTimeMessage(commonFreeTime, overlappingContacts).toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"lululwtv"},"content":"        } else {   ","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"lululwtv"},"content":"            try {         ","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"lululwtv"},"content":"                Person friend \u003d model.getPersonWithName(this.name);","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"lululwtv"},"content":"                return new CommandResult(createCommonFreeTimeMessage(model.getUser(), friend).toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"lululwtv"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"lululwtv"},"content":"                 throw new CommandException(\"There is no such contact in your contacts!\");","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"lululwtv"},"content":"            } ","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"lululwtv"},"content":"    public static String createNoOverlapFriendMessage(Person friend) {","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"lululwtv"},"content":"        return \"You and \" + friend.getName().toString() + \" have no common free time!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"lululwtv"},"content":"    public void getContactsWithFreeTime(ObservableList\u003cPerson\u003e contacts, ArrayList\u003cFreeTime\u003e commonFreeTime, ArrayList\u003cPerson\u003e overlappingContacts, Schedule userSchedule) {","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"lululwtv"},"content":"        for (Person contact : contacts) {","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"lululwtv"},"content":"            Schedule contactSchedule \u003d contact.getSchedule();","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"lululwtv"},"content":"            if (userSchedule.getThisWeeksFreeTimesWith(contactSchedule).equals(null)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"lululwtv"},"content":"                continue;","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"lululwtv"},"content":"            } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"lululwtv"},"content":"                overlappingContacts.add(contact);","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"lululwtv"},"content":"                commonFreeTime.addAll(userSchedule.getThisWeeksFreeTimesWith(contactSchedule));","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"lululwtv"},"content":"    public StringBuilder createCommonFreeTimeMessage(Person user, Person friend) throws CommandException {","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"lululwtv"},"content":"        Schedule userSchedule \u003d user.getSchedule();","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"lululwtv"},"content":"        Schedule friendSchedule \u003d friend.getSchedule();","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"lululwtv"},"content":"        List\u003cFreeTime\u003e commonFreeTimeWithFriend \u003d userSchedule.getThisWeeksFreeTimesWith(friendSchedule);","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"lululwtv"},"content":"        if (commonFreeTimeWithFriend.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"            throw new CommandException(createNoOverlapFriendMessage(friend));","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"lululwtv"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"lululwtv"},"content":"            StringBuilder sb \u003d new StringBuilder(\"You have common free times with \"","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"lululwtv"},"content":"                + friend.getName().toString()","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"lululwtv"},"content":"                + \" at:\\n\");","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"lululwtv"},"content":"            for (FreeTime cft : commonFreeTimeWithFriend) {","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"lululwtv"},"content":"                sb.append(cft.toString()).append(\"\\n\");","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"lululwtv"},"content":"            return sb;","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"lululwtv"},"content":"    public StringBuilder createCommonFreeTimeMessage(ArrayList\u003cFreeTime\u003e commonFreeTime, ArrayList\u003cPerson\u003e overlappingContacts) {","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"lululwtv"},"content":"        StringBuilder sb \u003d new StringBuilder(MESSAGE_COMMON_FREETIME_SUCCESS);","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"lululwtv"},"content":"        for (Person contactName : overlappingContacts) {","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"lululwtv"},"content":"            Name nameOfContact \u003d contactName.getName();","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"lululwtv"},"content":"            sb.append(nameOfContact).append(\" is free at \");","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"lululwtv"},"content":"            for (FreeTime freeTime : commonFreeTime) {","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"lululwtv"},"content":"                sb.append(freeTime.toString()).append(\"\\n\");","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"lululwtv"},"content":"        return sb;","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":127,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"lululwtv"},"content":"     * Returns a List\u003cFreeTime\u003e of common free times with specified contact","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"lululwtv"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"lululwtv"},"content":"     * @param contactName Name of contact to find common free time with","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"lululwtv"},"content":"     * @return List\u003cFreeTime\u003e of common free times with specified contact","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"lululwtv"},"content":"     * @throws CommandException if an error occurs during command execution.","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"lululwtv"},"content":"    public List\u003cFreeTime\u003e getCommonFreeTimeWith(Model model, Name contactName) throws CommandException {","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"lululwtv"},"content":"        Person friend \u003d model.getPersonWithName(contactName);","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"lululwtv"},"content":"        Schedule friendSchedule \u003d friend.getSchedule();","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"lululwtv"},"content":"        Schedule userSchedule \u003d model.getUser().getSchedule();","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"lululwtv"},"content":"        List\u003cFreeTime\u003e commonFreeTime \u003d userSchedule.getThisWeeksFreeTimesWith(friendSchedule);","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"lululwtv"},"content":"        if (commonFreeTime.isEmpty()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"lululwtv"},"content":"            throw new CommandException(createNoOverlapFriendMessage(friend));","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"lululwtv"},"content":"        } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"lululwtv"},"content":"            return commonFreeTime;","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":147,"author":{"gitId":"teozhengyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"teozhengyang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":149,"author":{"gitId":"teozhengyang"},"content":"            return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":150,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":152,"author":{"gitId":"teozhengyang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"teozhengyang"},"content":"        if (!(other instanceof CommonFreetimeCommand)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"teozhengyang"},"content":"            return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"teozhengyang"},"content":"        CommonFreetimeCommand otherCommonFreetimeCommand \u003d (CommonFreetimeCommand) other;","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"teozhengyang"},"content":"        return (name \u003d\u003d null \u0026\u0026 otherCommonFreetimeCommand.name \u003d\u003d null)","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"teozhengyang"},"content":"                || name.equals(otherCommonFreetimeCommand.name);","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":162,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"teozhengyang"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-21"},{"lineNumber":165,"author":{"gitId":"teozhengyang"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-21"},{"lineNumber":166,"author":{"gitId":"teozhengyang"},"content":"                .toString();","lastModifiedDate":"2023-10-21"},{"lineNumber":167,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"teozhengyang":29,"owenyeo":5,"lululwtv":134}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, false);","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"lululwtv":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false);","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lululwtv":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/RemoveEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":" * Represents a command to remove an event from a contact\u0027s calendar.","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":" * The event can either be a dated event or a meetup event.","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":" * If the index is \"user\", the event will be removed from the user\u0027s calendar.","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":" * Otherwise, the event will be removed from the specified contact\u0027s calendar.","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"public class RemoveEventCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"    public static final String COMMAND_WORD \u003d \"rmevent\";","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"    public static final String MESSAGE_USAGE \u003d ","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"        \"rmevent: Removes an event from the specified contact\u0027s calendar.\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"            + \"INDEX\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"            + \"type/EVENT_TYPE\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"            + \"en/EVENT_NAME\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"            + \" 1\"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"            + \" type/dated\"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"            + \" en/CS2103T Lecture\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"            + \"NOTE: If you want to remove an event from yourself, use index user\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"            + \" user\"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"            + \" type/dated\"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"            + \" en/CS2103T Lecture\";","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"    private final String eventName;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"    private final String eventType;","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"    private final Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"    public RemoveEventCommand(String eventName, String eventType, Index index) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"        this.eventType \u003d eventType;","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"        Schedule userSchedule \u003d model.getUser().getSchedule();","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"            switch (eventType) {","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"                case \"dated\":","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"                    if (index \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"                        userSchedule.deleteDatedEvent(eventName);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"                        return new CommandResult(\"Dated Event \u0027\" + eventName + \"\u0027\u0027 deleted from your calendar!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"                    } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"                        Person friend \u003d model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"                        friend.getSchedule().deleteDatedEvent(eventName);","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"                        return new CommandResult(\"Dated Event \u0027\" + eventName + \"\u0027\u0027 deleted from \"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"lululwtv"},"content":"                            + friend.getName().toString() + \"\u0027s calendar!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"lululwtv"},"content":"                    }","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"lululwtv"},"content":"                case \"meetup\":","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"lululwtv"},"content":"                    if (index \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"lululwtv"},"content":"                        userSchedule.deleteMeetUpEvent(eventName);","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"lululwtv"},"content":"                        return new CommandResult(\"Meetup Event \u0027\" + eventName + \"\u0027\u0027 deleted from your calendar!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"lululwtv"},"content":"                    } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"lululwtv"},"content":"                        Person friend \u003d model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"lululwtv"},"content":"                        friend.getSchedule().deleteMeetUpEvent(eventName);","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"lululwtv"},"content":"                        return new CommandResult(\"Meetup Event \u0027\" + eventName + \"\u0027\u0027 deleted from \"","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"lululwtv"},"content":"                            + friend.getName().toString() + \"\u0027s calendar!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"lululwtv"},"content":"                    }","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"lululwtv"},"content":"                default:","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"lululwtv"},"content":"                    throw new CommandException(\"Invalid event type!\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"lululwtv"},"content":"                        + \"Event type must either be \u0027dated\u0027 or \u0027meetup\u0027!\\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"lululwtv"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"lululwtv"},"content":"            throw new CommandException(\"Event \" + eventName + \" does not exist!\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"lululwtv"},"content":"                + \"Please check that you have entered the correct event name!\\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"lululwtv"},"content":"     * Returns a string representation of the given list of DatedEvents.","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"lululwtv"},"content":"     * Each event\u0027s string representation is separated by a newline character.","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"lululwtv"},"content":"     * @param events The list of DatedEvents to be converted to a string.","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"lululwtv"},"content":"     * @return A string representation of the given list of DatedEvents.","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"lululwtv"},"content":"    public String listEvents(List\u003cDatedEvent\u003e events) {","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"lululwtv"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"lululwtv"},"content":"        for (DatedEvent event : events) {","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"lululwtv"},"content":"            result +\u003d event.toString() + \"\\n\";","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"lululwtv"},"content":"        return result;","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"lululwtv":97}},{"path":"src/main/java/seedu/address/logic/commands/RemoveReminderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":" * Remove reminders of events in user\u0027s timetable that will be sent to user.","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"public class RemoveReminderCommand extends Command {","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    public static final String COMMAND_WORD \u003d \"rmReminder\";","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Remove reminders of events in user\u0027s timetable \\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"            + \"Example: \" + COMMAND_WORD + \" cs2103t lesson\";","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    public static final String MESSAGE_NO_EVENT \u003d \"No such event exists!\";","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    public static final String MESSAGE_REMOVE_REMINDER_SUCCESS \u003d \"Reminder removed for following event: \\n\";","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    private final String eventName;","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    public RemoveReminderCommand(String eventName) {","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        Optional\u003cDatedEvent\u003e event \u003d model.getUser().getDatedEvent(eventName);","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        if (event.isEmpty()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"            throw new CommandException(MESSAGE_NO_EVENT);","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"        } else {","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"            model.getUser().removeReminder(event.get());","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"            StringBuilder sb \u003d new StringBuilder(MESSAGE_REMOVE_REMINDER_SUCCESS);","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"            sb.append(model.getUser().getDatedEvent(eventName).get().getName());","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"            return new CommandResult(sb.toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"        if (!(other instanceof RemoveReminderCommand)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"        RemoveReminderCommand otherRemoveCommand \u003d (RemoveReminderCommand) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"        return eventName.equals(otherRemoveCommand.eventName);","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"                .add(\"Remove Reminder for\", eventName)","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"                .toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"teozhengyang":67}},{"path":"src/main/java/seedu/address/logic/commands/RemoveScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":" * Represents a command to remove an event from a contact\u0027s calendar.","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":" * The event can be either a dated event or a meetup event.","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":" * If the index is \"user\", the event will be removed from the user\u0027s calendar.","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":" * Otherwise, the event will be removed from the specified contact\u0027s calendar.","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"public class RemoveScheduleCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"    public static final String COMMAND_WORD \u003d \"rmschedule\";","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes an event from the specified contact\u0027s calendar.\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"            + \"INDEX\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"            + \"type/EVENT_TYPE\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"            + \"en/EVENT_NAME\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"            + \" 1\"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"            + \" type/dated\"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"            + \" en/CS2103T Lecture\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"            + \"NOTE: If you want to remove an event from yourself, use index user\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"            + \" user\"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"            + \" type/dated\"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"            + \" en/CS2103T Lecture\";","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"    private final String eventName;","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"    private final String eventType;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"    private final Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"    public RemoveScheduleCommand(String eventName, String eventType, Index index) {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"        this.eventType \u003d eventType;","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"    public RemoveScheduleCommand(String eventName, String eventType) {","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"        this(eventName, eventType, null);","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"        Schedule userSchedule \u003d model.getUser().getSchedule();","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"            switch (eventType) {","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"                case \"cca\":","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"                    if (index \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"                        userSchedule.deleteCca(eventName);","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"                        return new CommandResult(\"CCA \u0027\" + eventName + \"\u0027\u0027 deleted from your calendar!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"                    } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"                        Person friend \u003d model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"lululwtv"},"content":"                        friend.getSchedule().deleteCca(eventName);","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"lululwtv"},"content":"                        return new CommandResult(\"Dated Event \u0027\" + eventName + \"\u0027\u0027 deleted from \"","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"lululwtv"},"content":"                            + friend.getName().toString() + \"\u0027s calendar!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"lululwtv"},"content":"                    }","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"lululwtv"},"content":"                case \"module\":","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"lululwtv"},"content":"                    if (index \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"lululwtv"},"content":"                        userSchedule.deleteModule(eventName);","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"lululwtv"},"content":"                        return new CommandResult(\"Module\" + eventName + \"\u0027\u0027 deleted from your calendar!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"lululwtv"},"content":"                    } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"lululwtv"},"content":"                        Person friend \u003d model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"lululwtv"},"content":"                        friend.getSchedule().deleteModule(eventName);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"lululwtv"},"content":"                        return new CommandResult(\"Meetup Event \u0027\" + eventName + \"\u0027\u0027 deleted from \"","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"lululwtv"},"content":"                            + friend.getName().toString() + \"\u0027s calendar!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"lululwtv"},"content":"                    }","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"lululwtv"},"content":"                default:","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"lululwtv"},"content":"                    throw new CommandException(\"Invalid event type!\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"lululwtv"},"content":"                        + \"Event type must either be \u0027cca\u0027 or \u0027module\u0027!\\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"lululwtv"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"lululwtv"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"lululwtv"},"content":"    public String listEvents(List\u003cDatedEvent\u003e events) {","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"lululwtv"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"lululwtv"},"content":"        for (DatedEvent event : events) {","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"lululwtv"},"content":"            result +\u003d event.toString() + \"\\n\";","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"lululwtv"},"content":"        return result;","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"lululwtv":91}},{"path":"src/main/java/seedu/address/logic/commands/SetReminderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":" * Set reminders of events in user\u0027s timetable that will be sent to user.","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"public class SetReminderCommand extends Command {","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    public static final String COMMAND_WORD \u003d \"setReminder\";","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Set reminders of events in user\u0027s timetable\"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"            + \" that will be sent to user.\\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"            + \"Example: \" + COMMAND_WORD + \" cs2103 lesson\";","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    public static final String MESSAGE_NO_EVENT \u003d \"No such event exists!\";","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    public static final String MESSAGE_SET_REMINDER_SUCCESS \u003d \"Reminder set for following event: \\n\";","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"    private final String eventName;","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"    public SetReminderCommand(String eventName) {","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"        Optional\u003cDatedEvent\u003e event \u003d model.getUser().getDatedEvent(eventName);","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"        if (event.isEmpty()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"            throw new CommandException(MESSAGE_NO_EVENT);","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"        } else {","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"            model.getUser().setReminder(event.get());","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"            StringBuilder sb \u003d new StringBuilder(MESSAGE_SET_REMINDER_SUCCESS);","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"            sb.append(model.getUser().getDatedEvent(eventName).get().getName());","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"            return new CommandResult(sb.toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        if (!(other instanceof SetReminderCommand)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"        SetReminderCommand otherSetCommand \u003d (SetReminderCommand) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"        return eventName.equals(otherSetCommand.eventName);","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"                .add(\"Set Reminder for\", eventName)","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"                .toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"teozhengyang":71}},{"path":"src/main/java/seedu/address/logic/commands/edit/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.logic.commands.edit;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"            + \"[\" + PREFIX_BIRTHDAY + \"BIRTHDAY] \"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person %1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"kristayeo"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)),","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"lululwtv"},"content":"                false, false, true, false);","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"        Birthday updatedBirthday \u003d editPersonDescriptor.getBirthday().orElse(personToEdit.getBirthday());","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"lululwtv"},"content":"        Schedule updatedSchedule \u003d personToEdit.getSchedule();","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"teozhengyang"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBirthday,","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"lululwtv"},"content":"                updatedSchedule, updatedTags);","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"teozhengyang":5,"owenyeo":4,"lululwtv":5,"kristayeo":1,"-":121}},{"path":"src/main/java/seedu/address/logic/commands/edit/EditPersonDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.logic.commands.edit;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":" * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":" * corresponding field value of the person.","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"public class EditPersonDescriptor {","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"    private Name name;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    private Email email;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"    private Address address;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    private Birthday birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"    private Schedule schedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"    public EditPersonDescriptor() {}","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"     * Copy constructor.","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"    public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"        setName(toCopy.name);","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"        setPhone(toCopy.phone);","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"        setEmail(toCopy.email);","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"        setAddress(toCopy.address);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"        setBirthday(toCopy.birthday);","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"        setSchedule(toCopy.schedule);","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"        setTags(toCopy.tags);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"        return !CollectionUtil.isAnyNonNull(name, phone, email, address, birthday, schedule, tags);","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"    public void setName(Name name) {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"    public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"        return Optional.ofNullable(name);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"    public void setPhone(Phone phone) {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"    public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"        return Optional.ofNullable(phone);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"owenyeo"},"content":"    public void setEmail(Email email) {","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"owenyeo"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"owenyeo"},"content":"    public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"        return Optional.ofNullable(email);","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"owenyeo"},"content":"    public void setAddress(Address address) {","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"owenyeo"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"owenyeo"},"content":"    public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"owenyeo"},"content":"        return Optional.ofNullable(address);","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"     * Sets {@code birthday} to this object\u0027s {@code birthday}.","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"     * A defensive copy of {@code birthday} is used internally.","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"    public void setBirthday(Birthday birthday) {","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"     * Returns an unmodifiable birthday, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"     * Returns {@code Optional#empty()} if {@code birthday} is null.","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"    public Optional\u003cBirthday\u003e getBirthday() {","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"        return Optional.ofNullable(birthday);","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"owenyeo"},"content":"     * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"owenyeo"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"owenyeo"},"content":"    public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"owenyeo"},"content":"        this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"owenyeo"},"content":"     * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"owenyeo"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"owenyeo"},"content":"     * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"owenyeo"},"content":"    public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"owenyeo"},"content":"        return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"owenyeo"},"content":"     * Sets {@code freeTimes} to this object\u0027s {@code freeTimes}.","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"owenyeo"},"content":"     * A defensive copy of {@code freeTimes} is used internally.","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"lululwtv"},"content":"    public void setSchedule(Schedule schedule) {","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"teozhengyang"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"owenyeo"},"content":"     * Returns an unmodifiable freeTimes set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"owenyeo"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"owenyeo"},"content":"     * Returns {@code Optional#empty()} if {@code freeTimes} is null.","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"lululwtv"},"content":"    public Optional\u003cSchedule\u003e getSchedule() {","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"lululwtv"},"content":"        return (schedule !\u003d null) ? Optional.of(schedule) : Optional.empty();","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"owenyeo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"owenyeo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"owenyeo"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"owenyeo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"owenyeo"},"content":"        if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"owenyeo"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"owenyeo"},"content":"        EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"owenyeo"},"content":"        return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"owenyeo"},"content":"                \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"owenyeo"},"content":"                \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"owenyeo"},"content":"                \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"teozhengyang"},"content":"                \u0026\u0026 Objects.equals(birthday, otherEditPersonDescriptor.birthday)","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"lululwtv"},"content":"                \u0026\u0026 Objects.equals(schedule, otherEditPersonDescriptor.schedule)","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"owenyeo"},"content":"                \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"owenyeo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"owenyeo"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"owenyeo"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"owenyeo"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"owenyeo"},"content":"                .add(\"email\", email)","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"owenyeo"},"content":"                .add(\"address\", address)","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"teozhengyang"},"content":"                .add(\"birthday\", birthday)","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"lululwtv"},"content":"                .add(\"free times\", schedule)","lastModifiedDate":"2023-10-30"},{"lineNumber":168,"author":{"gitId":"owenyeo"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"owenyeo"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":171,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"teozhengyang":24,"owenyeo":138,"lululwtv":11}},{"path":"src/main/java/seedu/address/logic/commands/edit/EditUserCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.logic.commands.edit;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":" * Edits the details of the user of the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"public class EditUserCommand extends Command {","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"    public static final String COMMAND_WORD \u003d \"user\";","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"            + \": Edits your details. \"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"            + \"[\" + PREFIX_BIRTHDAY + \"BIRTHDAY]...\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"    public static final String MESSAGE_EDIT_USER_SUCCESS \u003d \"Edited Your Details: %1$s\";","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"    public static final String MESSAGE_DUPLICATE_USER \u003d \"No changes to user.\";","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"    private final EditUserDescriptor editUserDescriptor;","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"     * @param editUserDescriptor details to edit the user with","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"    public EditUserCommand(EditUserDescriptor editUserDescriptor) {","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"        requireNonNull(editUserDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"        this.editUserDescriptor \u003d new EditUserDescriptor(editUserDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"owenyeo"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"owenyeo"},"content":"        User userToEdit \u003d model.getUser();","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"owenyeo"},"content":"        User editedUser \u003d createEditedUser(userToEdit, editUserDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"        if (userToEdit.equals(editedUser)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_USER);","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"        model.setUser(editedUser);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_USER_SUCCESS, Messages.format(editedUser)));","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"     * Creates and returns a {@code Person} with the details of {@code userToEdit}","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"     * edited with {@code editUserDescriptor}.","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"owenyeo"},"content":"    private static User createEditedUser(User userToEdit, EditUserDescriptor editUserDescriptor) {","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"        assert userToEdit !\u003d null;","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"        Name updatedName \u003d editUserDescriptor.getName().orElse(userToEdit.getName());","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"        Phone updatedPhone \u003d editUserDescriptor.getPhone().orElse(userToEdit.getPhone());","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"        Email updatedEmail \u003d editUserDescriptor.getEmail().orElse(userToEdit.getEmail());","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"        Address updatedAddress \u003d editUserDescriptor.getAddress().orElse(userToEdit.getAddress());","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"        Birthday updatedBirthday \u003d editUserDescriptor.getBirthday().orElse(userToEdit.getBirthday());","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"lululwtv"},"content":"        Schedule schedule \u003d userToEdit.getSchedule();","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"        Set\u003cTag\u003e updatedTags \u003d editUserDescriptor.getTags().orElse(userToEdit.getTags());","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"owenyeo"},"content":"        ArrayList\u003cDatedEvent\u003e updatedDatedEvents \u003d editUserDescriptor.getDatedEvents()","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"owenyeo"},"content":"                .orElse(userToEdit.getDatedEvents());","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"        return new User(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBirthday,","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"lululwtv"},"content":"                schedule, updatedTags, updatedDatedEvents);","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"owenyeo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"owenyeo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"owenyeo"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"owenyeo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"teozhengyang"},"content":"        if (!(other instanceof EditUserCommand)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"owenyeo"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"owenyeo"},"content":"        EditUserCommand otherEditUserCommand \u003d (EditUserCommand) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"teozhengyang"},"content":"        return editUserDescriptor.equals(otherEditUserCommand.editUserDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"owenyeo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"owenyeo"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"teozhengyang"},"content":"                .add(\"editUserDescriptor\", editUserDescriptor)","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"owenyeo"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"teozhengyang":32,"owenyeo":83,"lululwtv":8}},{"path":"src/main/java/seedu/address/logic/commands/edit/EditUserDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.logic.commands.edit;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":" * Stores the details to edit the user with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":" * corresponding field value of the user.","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"public class EditUserDescriptor extends EditPersonDescriptor {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"    private ArrayList\u003cDatedEvent\u003e datedEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"    public EditUserDescriptor() {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"        super();","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"     * Copy constructor.","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"    public EditUserDescriptor(EditUserDescriptor toCopy) {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"        super(toCopy);","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"        setDatedEvents(toCopy.datedEvents);","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    public Optional\u003cArrayList\u003cDatedEvent\u003e\u003e getDatedEvents() {","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"        return Optional.ofNullable(datedEvents);","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"    public void setDatedEvents(ArrayList\u003cDatedEvent\u003e datedEvents) {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"        this.datedEvents \u003d (datedEvents !\u003d null) ? new ArrayList\u003c\u003e(datedEvents) : null;","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"        if (!(other instanceof EditUserDescriptor)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        // state check","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"        EditUserDescriptor e \u003d (EditUserDescriptor) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"        return super.equals(e)","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"                \u0026\u0026 datedEvents.equals(e.datedEvents);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"teozhengyang":17,"owenyeo":35}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"                    args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"                        PREFIX_BIRTHDAY, PREFIX_TAG);","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_BIRTHDAY)","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_BIRTHDAY);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"        Birthday birthday \u003d ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get());","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"        Person person \u003d new Person(name, phone, email, address, birthday, schedule, tagList);","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"teozhengyang":6,"owenyeo":1,"lululwtv":5,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENTNAME;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENTTYPE;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMINDER;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":" * Parses input arguments and creates a new AddEventCommand object.","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"     * Parses the given {@code String} of arguments in the context of the AddEventCommand","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"     * and returns an AddEventCommand object for execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EVENTNAME, PREFIX_EVENTTYPE, PREFIX_SCHEDULE, PREFIX_REMINDER);","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EVENTNAME, PREFIX_EVENTTYPE, PREFIX_SCHEDULE, PREFIX_REMINDER)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"            throw new ParseException(String.format(\"Command format is invalid! \\n\" + AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"        String indexString;","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"        String eventName \u003d argMultimap.getValue(PREFIX_EVENTNAME).get();","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"        String eventType \u003d argMultimap.getValue(PREFIX_EVENTTYPE).get();","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"        String schedule \u003d argMultimap.getValue(PREFIX_SCHEDULE).get();","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"        String reminder \u003d argMultimap.getValue(PREFIX_REMINDER).get();","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"        indexString \u003d argMultimap.getPreamble().toLowerCase();","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"        if (indexString.equals(\"user\")) {","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"            return new AddEventCommand(eventName, schedule, reminder, eventType);","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"        } else if (Integer.parseInt(indexString) \u003e 0) {","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"            return new AddEventCommand(eventName, ParserUtil.parseIndex(indexString), schedule, reminder, eventType);","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"        } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"            throw new ParseException(\"Invalid index!\\n\" ","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"                + \"Index can only be \u0027user\u0027 or a \u0027positive integer!\u0027 \\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"lululwtv":60}},{"path":"src/main/java/seedu/address/logic/parser/AddScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENTNAME;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENTTYPE;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.AddScheduleCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":" * Parses input arguments and creates a new AddScheduleCommand object.","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"public class AddScheduleCommandParser implements Parser\u003cAddScheduleCommand\u003e{","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"     * Parses the given {@code String} of arguments in the context of the AddScheduleCommand","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"     * and returns an AddScheduleCommand object for execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"    public AddScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EVENTNAME, PREFIX_EVENTTYPE, PREFIX_SCHEDULE);","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EVENTNAME, PREFIX_EVENTTYPE, PREFIX_SCHEDULE)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"            throw new ParseException(String.format(\"Command format is invalid! \\n\" + AddScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"        String indexString;","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"        String eventName \u003d argMultimap.getValue(PREFIX_EVENTNAME).get();","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"        String eventType \u003d argMultimap.getValue(PREFIX_EVENTTYPE).get().toLowerCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"        String schedule \u003d argMultimap.getValue(PREFIX_SCHEDULE).get();","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"        indexString \u003d argMultimap.getPreamble().toLowerCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"        if (indexString.equals(\"user\")) {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"            return new AddScheduleCommand(eventName, eventType, schedule);","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"        } else if (Integer.parseInt(indexString) \u003e 0) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"            return new AddScheduleCommand(eventName, eventType, ParserUtil.parseIndex(indexString), schedule);","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"        } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"            throw new ParseException(\"Invalid index!\\n\" ","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"                + \"Index can only be \u0027user\u0027 or a \u0027positive integer!\u0027 \\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"lululwtv":57}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.AddScheduleCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.CommonFreetimeCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.RemoveEventCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.commands.RemoveReminderCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.RemoveScheduleCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.commands.SetReminderCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.edit.EditCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.edit.EditUserCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":89,"author":{"gitId":"owenyeo"},"content":"        case EditUserCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"owenyeo"},"content":"            return new EditUserCommandParser().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"        case SetReminderCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"            return new SetReminderCommandParser().parse(arguments);","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"        case RemoveReminderCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"            return new RemoveReminderCommandParser().parse(arguments);","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"lululwtv"},"content":"        case CommonFreetimeCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"lululwtv"},"content":"            return arguments.contains(PREFIX_NAME.toString())","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"lululwtv"},"content":"                    ? new CommonFreetimeCommandParser().parse(arguments)","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"lululwtv"},"content":"                    : new CommonFreetimeCommand();","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"lululwtv"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"lululwtv"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"lululwtv"},"content":"        case RemoveEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"lululwtv"},"content":"            return new RemoveEventCommandParser().parse(arguments);","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"lululwtv"},"content":"        case AddScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"lululwtv"},"content":"            return new AddScheduleCommandParser().parse(arguments);","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"lululwtv"},"content":"        case RemoveScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"lululwtv"},"content":"            return new RemoveScheduleCommandParser().parse(arguments);","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"teozhengyang":8,"owenyeo":5,"lululwtv":23,"-":85}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    public static final Prefix PREFIX_BIRTHDAY \u003d new Prefix(\"b/\");","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"    public static final Prefix PREFIX_SCHEDULE \u003d new Prefix(\"h/\");","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"    public static final Prefix PREFIX_EVENTNAME \u003d new Prefix(\"en/\");","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"    public static final Prefix PREFIX_EVENTTYPE \u003d new Prefix(\"type/\");","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"    public static final Prefix PREFIX_REMINDER \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"teozhengyang":1,"lululwtv":4,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/CommonFreetimeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.CommonFreetimeCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":" * Parses input arguments and creates a new CommonFreetimeCommand object.","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"public class CommonFreetimeCommandParser implements Parser\u003cCommonFreetimeCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"     * Parses the given {@code String} of arguments in the context of the CommonFreetimeCommand","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"     * and returns a CommonFreetimeCommand object for execution.","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"    public CommonFreetimeCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"        Name name;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"                    ArgumentTokenizer.tokenize(userInput, PREFIX_NAME);","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"            name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"                    CommonFreetimeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"        return new CommonFreetimeCommand(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"teozhengyang":3,"lululwtv":35}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.edit.EditCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.edit.EditPersonDescriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"                        PREFIX_BIRTHDAY, PREFIX_SCHEDULE, PREFIX_TAG);","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_BIRTHDAY);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDAY).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"            editPersonDescriptor.setBirthday(ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"        if (editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"teozhengyang":8,"owenyeo":2,"lululwtv":2,"-":80}},{"path":"src/main/java/seedu/address/logic/parser/EditUserCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.edit.EditUserCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.edit.EditUserDescriptor;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.FreeTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"public class EditUserCommandParser implements Parser\u003cEditUserCommand\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    public EditUserCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"                        PREFIX_BIRTHDAY, PREFIX_TAG);","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditUserCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_BIRTHDAY);","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"        EditUserDescriptor editPersonDescriptor \u003d new EditUserDescriptor();","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDAY).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"            editPersonDescriptor.setBirthday(ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"        if (editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"            throw new ParseException(EditUserCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"        return new EditUserCommand(editPersonDescriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"owenyeo"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"owenyeo"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"owenyeo"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"owenyeo"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"owenyeo"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"owenyeo"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"owenyeo"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"teozhengyang":14,"owenyeo":72,"lululwtv":2}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.FreeTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"     * Parses a {@code String birthday} into a {@code Birthday}.","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"    public static Birthday parseBirthday(String date) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"teozhengyang"},"content":"        if (!Birthday.isValidBirthday(trimmedDate)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"            throw new ParseException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"teozhengyang"},"content":"        return new Birthday(trimmedDate);","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"andrefoo"},"content":"     * Parses a {@code String freeTime} into a {@code FreeTime}.","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"andrefoo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"andrefoo"},"content":"     * @throws ParseException if the given {@code freeTime} is invalid.","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"andrefoo"},"content":"    public static FreeTime parseFreeTime(String freeTime) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"andrefoo"},"content":"        requireNonNull(freeTime);","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"andrefoo"},"content":"        String trimmedFreeTime \u003d freeTime.trim();","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"andrefoo"},"content":"        if (!FreeTime.isValidFreeTime(trimmedFreeTime)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"andrefoo"},"content":"            throw new ParseException(FreeTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"andrefoo"},"content":"        return new FreeTime(trimmedFreeTime);","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"andrefoo"},"content":"     * Parses {@code Collection\u003cString\u003e freeTimes} into a {@code Set\u003cFreeTime\u003e}.","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"andrefoo"},"content":"    public static Set\u003cFreeTime\u003e parseFreeTimes(Collection\u003cString\u003e freeTimes) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"andrefoo"},"content":"        requireNonNull(freeTimes);","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"andrefoo"},"content":"        final Set\u003cFreeTime\u003e freeTimeSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"andrefoo"},"content":"        for (String freeTimeName : freeTimes) {","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"andrefoo"},"content":"            freeTimeSet.add(parseFreeTime(freeTimeName));","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"andrefoo"},"content":"        return freeTimeSet;","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"teozhengyang":15,"andrefoo":27,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/RemoveEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENTNAME;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENTTYPE;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.RemoveEventCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":" * Parses input arguments and creates a new DeleteEventCommand object","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"public class RemoveEventCommandParser implements Parser\u003cRemoveEventCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"    private static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"            + RemoveEventCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteEventCommand","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"     * and returns a DeleteEventCommand object for execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"    public RemoveEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EVENTNAME, PREFIX_EVENTTYPE);","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EVENTNAME, PREFIX_EVENTTYPE)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"            throw new ParseException(String.format(\"Command format is invalid! \\n\" + RemoveEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"            String indexString \u003d argMultimap.getPreamble().toLowerCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"            String eventName \u003d argMultimap.getValue(PREFIX_EVENTNAME).get().toLowerCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"            String eventType \u003d argMultimap.getValue(PREFIX_EVENTTYPE).get().toLowerCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"            if (indexString.equals(\"user\")) {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"                return new RemoveEventCommand(eventName, eventType, null);","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"            } else if (Integer.parseInt(indexString) \u003e 0) {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"                return new RemoveEventCommand(eventName, eventType, ParserUtil.parseIndex(indexString));","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"            } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"                throw new ParseException(\"Invalid index!\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"                        + \"Index must either be \u0027user\u0027 or a positive integer!\\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"        } catch (Exception pe) {","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"lululwtv":59}},{"path":"src/main/java/seedu/address/logic/parser/RemoveReminderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.commands.RemoveReminderCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":" * Parses input arguments and creates a new RemoveReminderCommand object","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"public class RemoveReminderCommandParser implements Parser\u003cRemoveReminderCommand\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveReminderCommand","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"     * and returns a RemoveReminderCommand object for execution.","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    public RemoveReminderCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"        return new RemoveReminderCommand(trimmedArgs);","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"teozhengyang":27}},{"path":"src/main/java/seedu/address/logic/parser/RemoveScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENTNAME;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENTTYPE;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.RemoveScheduleCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.RemoveScheduleCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":" * Parses input arguments and creates a new DeleteEventCommand object","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"public class RemoveScheduleCommandParser implements Parser\u003cRemoveScheduleCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"    private static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"            + RemoveScheduleCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteEventCommand","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"     * and returns a DeleteEventCommand object for execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"    public RemoveScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EVENTNAME, PREFIX_EVENTTYPE);","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EVENTNAME, PREFIX_EVENTTYPE)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"            throw new ParseException(String.format(\"Command format is invalid! \\n\" + RemoveScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"            String indexString \u003d argMultimap.getPreamble().toLowerCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"            String eventName \u003d argMultimap.getValue(PREFIX_EVENTNAME).get().toLowerCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"            String eventType \u003d argMultimap.getValue(PREFIX_EVENTTYPE).get().toLowerCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"            if (indexString.equals(\"user\")) {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"                return new RemoveScheduleCommand(eventName, eventType, null);","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"            } else if (Integer.parseInt(indexString) \u003e 0) {","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"                return new RemoveScheduleCommand(eventName, eventType, ParserUtil.parseIndex(indexString));","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"            } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"                throw new ParseException(\"Invalid index!\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"                        + \"Index must either be \u0027user\u0027 or a positive integer!\\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"        } catch (Exception pe) {","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveScheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"lululwtv":60}},{"path":"src/main/java/seedu/address/logic/parser/SetReminderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.commands.SetReminderCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":" * Parses input arguments and creates a new SetReminderCommand object","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"public class SetReminderCommandParser implements Parser\u003cSetReminderCommand\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"     * Parses the given {@code String} of arguments in the context of the SetReminderCommand","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"     * and returns a SetReminderCommand object for execution.","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    public SetReminderCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"        return new SetReminderCommand(trimmedArgs);","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"teozhengyang":26}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"     * Returns the person with the given name","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"     * @param name Name of the person to be retrieved.","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"    public Person getPersonWithName(Name name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"        return persons.getPersonWithName(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"teozhengyang"},"content":"    public String getBirthdayList() {","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"teozhengyang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"teozhengyang"},"content":"        for (Person person: persons) {","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"teozhengyang"},"content":"            if (person.getBirthday().date.getMonth().equals(LocalDate.now().getMonth()) \u0026\u0026","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"teozhengyang"},"content":"                    Objects.equals(person.getBirthday().date.getDayOfYear(), LocalDate.now().getDayOfYear())) {","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"teozhengyang"},"content":"                sb.append(person.getName() + \"\\n\");","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"teozhengyang"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"teozhengyang":13,"owenyeo":1,"lululwtv":9,"-":130}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_USER \u003d user -\u003e true;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"     * Replaces user data with the data in {@code userData}.","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"    void setUserData(ReadOnlyUserData userData);","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"     * Returns the user data.","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"    ReadOnlyUserData getUserData();","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"owenyeo"},"content":"     * Returns the user.","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"    User getUser();","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"owenyeo"},"content":"     * Sets the user.","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"owenyeo"},"content":"     * @param user","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"owenyeo"},"content":"    void setUser(User user);","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"teozhengyang"},"content":"    String getBirthdayList();","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"owenyeo"},"content":"    /** Returns an unmodifiable view of the user */","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"owenyeo"},"content":"    ObservableList\u003cUser\u003e getUserView();","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"lululwtv"},"content":"     * Returns the person in the address book with the given name.","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"lululwtv"},"content":"     * The name must be an exact match (case-insensitive).","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"lululwtv"},"content":"     * @param name The name of the person to retrieve.","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"lululwtv"},"content":"     * @return The person with the given name, or null if no such person exists.","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"lululwtv"},"content":"    Person getPersonWithName(Name name);","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"teozhengyang":2,"owenyeo":29,"lululwtv":10,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"    private final UserData userData;","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, ReadOnlyUserData userData) {","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"        logger.fine(\"Initializing with address book: \"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"            + addressBook + \" ,user prefs \" + userPrefs + \" and user data \" + userData);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"        this.userData \u003d new UserData(userData);","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"        this(new AddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"teozhengyang"},"content":"    public String getBirthdayList() {","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"teozhengyang"},"content":"        return addressBook.getBirthdayList();","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"owenyeo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserData \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":129,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"owenyeo"},"content":"    public void setUserData(ReadOnlyUserData userData) {","lastModifiedDate":"2023-10-05"},{"lineNumber":131,"author":{"gitId":"owenyeo"},"content":"        this.userData.resetData(userData);","lastModifiedDate":"2023-10-05"},{"lineNumber":132,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":133,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":134,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":135,"author":{"gitId":"owenyeo"},"content":"    public ReadOnlyUserData getUserData() {","lastModifiedDate":"2023-10-05"},{"lineNumber":136,"author":{"gitId":"owenyeo"},"content":"        return userData;","lastModifiedDate":"2023-10-05"},{"lineNumber":137,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":138,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":139,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"owenyeo"},"content":"    public User getUser() {","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"owenyeo"},"content":"        return userData.getUser();","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"owenyeo"},"content":"    public void setUser(User user) {","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"owenyeo"},"content":"        userData.setUser(user);","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":160,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"lululwtv"},"content":"    public Person getPersonWithName(Name name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"lululwtv"},"content":"        return addressBook.getPersonWithName(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":171,"author":{"gitId":"owenyeo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d User View Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":174,"author":{"gitId":"owenyeo"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"owenyeo"},"content":"     * {@code userData}","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"owenyeo"},"content":"    public ObservableList\u003cUser\u003e getUserView() {","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"owenyeo"},"content":"        return userData.getUserView();","lastModifiedDate":"2023-10-14"},{"lineNumber":180,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":181,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"teozhengyang":4,"owenyeo":45,"lululwtv":5,"-":144}},{"path":"src/main/java/seedu/address/model/person/Birthday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":" * Represents a Person\u0027s birthday in the address book.","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBirthday(String)}","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"public class Birthday {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"            \"Birthday should be in the format of YYYY-MM-DD OR YYYY-M-D and should be a valid date.\";","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"            \"^\\\\d{4}\\\\-(0?[1-9]|1[012])\\\\-(0?[1-9]|[12][0-9]|3[01])$\";","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    public final LocalDate date;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a {@code Birthday}.","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"     * @param birthday A valid birthday.","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    public Birthday(String birthday) {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"        checkArgument(isValidBirthday(birthday), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"        date \u003d LocalDate.parse(birthday);","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"    public static Boolean isValidBirthday(String test) {","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        return date.toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"        if (!(other instanceof Birthday)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"        Birthday otherBirthday \u003d (Birthday) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"        return date.equals(otherBirthday.date);","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        return date.hashCode();","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"teozhengyang":59}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.FreeTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    private final Birthday birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"    private final Schedule schedule;","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Birthday birthday, Schedule schedule, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"        requireAllNonNull(name, phone, email, address, birthday, tags);","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"     * Constructor for Person with default values.","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"    public Person() {","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"        this.name \u003d new Name(\"me\");","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"        this.phone \u003d new Phone(\"00000000\");","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"        this.email \u003d new Email(\"me@example.com\");","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"        this.address \u003d new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\");","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"        this.birthday \u003d new Birthday(\"2000-01-01\");","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"        this.schedule \u003d new Schedule();","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"    public Birthday getBirthday() {","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"        return birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"owenyeo"},"content":"    public Schedule getSchedule() {","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"owenyeo"},"content":"        return schedule;","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"owenyeo"},"content":"    public List\u003cFreeTime\u003e getFreeTimes() throws NullPointerException {","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"owenyeo"},"content":"        return schedule.getThisWeeksFreeTime();","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"    //TODO: person.getFreeTimesWith(otherPerson)","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"teozhengyang"},"content":"                \u0026\u0026 birthday.equals(otherPerson.birthday)","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"owenyeo"},"content":"                \u0026\u0026 schedule.equals(otherPerson.schedule)","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"owenyeo"},"content":"        return Objects.hash(name, phone, email, address, birthday, schedule, tags);","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"teozhengyang"},"content":"                .add(\"birthday\", birthday)","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"owenyeo"},"content":"                .add(\"free times\", schedule)","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"teozhengyang":16,"owenyeo":19,"andrefoo":7,"-":115}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"     * Returns the person with the given name.","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"     * @param name Name of the person to be retrieved.","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"    public Person getPersonWithName(Name name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"            if (person.getName().equals(name)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"                return person;","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"lululwtv"},"content":"        return null;","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lululwtv":15,"-":150}},{"path":"src/main/java/seedu/address/model/person/timetable/Cca.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package seedu.address.model.person.timetable;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":" * Represents a Co-Curricular Activity (CCA) in the address book.","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":" * Guarantees: immutability.","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"public class Cca extends TimeBlock {","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"            \"Cca name should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    private static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    private final String ccaName;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     * Constructs a CCA object.","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"     * @param name Name of the CCA.","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"     * @param timeBlockString String representation of the time block.","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    public Cca(String name, String timeBlockString) {","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"        super(timeBlockString);","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        checkArgument(isValidCcaName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"        this.ccaName \u003d name;","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"     * Factory method to create a new CCA object.","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"     * @param unparsedInput The input string containing CCA details.","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"     * @return A new CCA object.","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"    public static Cca newCca(String unparsedInput) {","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"        requireNonNull(unparsedInput);","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"        // Split the unparsed input string based on the last three whitespace occurrences","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"        String[] parts \u003d unparsedInput.split(\"\\\\s+\");","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"        // Check for valid number of parts (at least 4 parts are required)","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"        if (parts.length \u003c 4) {","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"            throw new IllegalArgumentException(\"Invalid CCA input format. Expected: CCA_NAME DAY HHMM HHMM\");","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"        // Extracting the last three parts for day, startTime, and endTime","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"        String day \u003d parts[parts.length - 3];","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"        String startTime \u003d parts[parts.length - 2];","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"        String endTime \u003d parts[parts.length - 1];","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"        // Constructing the CCA name by joining the earlier parts","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"        StringBuilder nameBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"        for (int i \u003d 0; i \u003c parts.length - 3; i++) {","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"            nameBuilder.append(parts[i]);","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"            if (i \u003c parts.length - 4) {","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"                nameBuilder.append(\" \"); // Add space between words in the CCA name","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"        String name \u003d nameBuilder.toString();","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"        String timeBlockString \u003d day + \" \" + startTime + \" \" + endTime;","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"        // Check for valid CCA name format","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"        if (!isValidCcaName(name)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"        // Further validations can be added (e.g., for valid day, startTime, endTime) if necessary","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"        return new Cca(name, timeBlockString);","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"     * Checks if the current TimeBlock object is a CCA.","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"     * @return Always true for Cca objects.","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"    public boolean isCca() {","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"        return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"andrefoo"},"content":"     * Validates if the given CCA name is in the correct format.","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"andrefoo"},"content":"     * @param test The CCA name to be tested.","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"andrefoo"},"content":"     * @return True if the name is valid, false otherwise.","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"andrefoo"},"content":"    public static boolean isValidCcaName(String test) {","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"andrefoo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"andrefoo"},"content":"    public String getName() {","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"andrefoo"},"content":"        return this.ccaName;","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"andrefoo"},"content":"        return \"Cca: [\" + ccaName + \"] \" + super.toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"andrefoo"},"content":"     * Converts the CCA object to its JSON string representation.","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"andrefoo"},"content":"     * @return JSON string representation of the CCA.","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"andrefoo"},"content":"    public String toJsonString() {","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"andrefoo"},"content":"        return \"{\"","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"andrefoo"},"content":"                + \"\\\"ccaName\\\": \\\"\" + ccaName + \"\\\",\"","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"andrefoo"},"content":"                + \"\\\"timeBlock\\\": \\\"\" + super.toString() + \"\\\"\"","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"andrefoo"},"content":"                + \"}\";","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"teozhengyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"teozhengyang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"teozhengyang"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"teozhengyang"},"content":"        if (!(other instanceof Cca)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"teozhengyang"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"teozhengyang"},"content":"        Cca otherCca \u003d (Cca) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"andrefoo"},"content":"        return otherCca.getName().equals(getName())","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"teozhengyang"},"content":"                \u0026\u0026 otherCca.getTimeBlockString().equals(getTimeBlockString());","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"andrefoo"},"content":"    public int hashCode() {","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"andrefoo"},"content":"        return toString().hashCode();","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"teozhengyang":13,"owenyeo":1,"andrefoo":121}},{"path":"src/main/java/seedu/address/model/person/timetable/DatedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package seedu.address.model.person.timetable;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":" * Represents a DatedEvent in the application.","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":" * Encapsulates an event that is not recurring on a weekly basis.","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":" * Contains details such as the event name, time block, date, and reminder settings.","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"public class DatedEvent extends TimeBlock {","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"            \"Input should be in the format \u0027name YYYY-MM-DD HHMM HHMM yes/no\u0027, \\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"                    + \"where:\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"                    + \"- \u0027name\u0027 represents the name and should not contain spaces.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"                    + \"- \u0027YYYY-MM-DD\u0027 represents a date (e.g., \u00272023-10-24\u0027).\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"                    + \"- \u0027HHMM\u0027 represents a valid 24-hour time format in half-hour blocks (e.g., 0000, 1230, 2300). \\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"                    + \"- The first \u0027HHMM\u0027 represents the starting time (e.g., \u00270830\u0027 for 08:30 AM).\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"                    + \"- The second \u0027HHMM\u0027 represents the ending time (e.g., \u00271730\u0027 for 05:30 PM).\\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"                    + \"- y/n represents whether you want a reminder for this event.\";","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"    public static final String DATE_TIME_VALIDATION_REGEX \u003d \"^\\\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\\\d|3[01])$\";","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    protected static final String DATE_TIME_FORMATTER_PATTERN \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"    private final String name;","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"    private final boolean hasReminder;","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"     * Initializes a new DatedEvent with the provided details.","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"     * @param name The name of the event.","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"     * @param timeBlockString The time block for the event.","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"     * @param dateString The date of the event in the format \"YYYY-MM-DD\".","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"    public DatedEvent(String name, String timeBlockString, String dateString, boolean reminder) {","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"        super(timeBlockString);","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"        checkArgument(isValidDateTimeString(dateString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"        this.date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(DATE_TIME_FORMATTER_PATTERN));","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"        this.hasReminder \u003d reminder;","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"     * Initializes a new DatedEvent with the provided details.","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"     * @param name The name of the event.","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"     * @param timeBlockString The time block for the event.","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"     * @param date The date of the event.","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"    public DatedEvent(String name, String timeBlockString, LocalDate date, boolean reminder) {","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"        super(timeBlockString);","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"        this.hasReminder \u003d reminder;","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"     * Factory method to create a new DatedEvent object from a given unparsed input string.","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"     * The expected format for the input is: \"EVENT_NAME DATE YYYY-MM-DD START_TIME END_TIME REMINDER_STATUS\"","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"     * Where:","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"     * \u003cul\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"     *   \u003cli\u003eEVENT_NAME is the name of the event and can contain spaces.\u003c/li\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"     *   \u003cli\u003eDATE in \u0027YYYY-MM-DD\u0027 format represents the date of the event.\u003c/li\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"     *   \u003cli\u003eSTART_TIME and END_TIME in \u0027HHMM\u0027 format represent the start and end times of the event respectively.\u003c/li\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"     *   \u003cli\u003eREMINDER_STATUS is \u0027y\u0027 if a reminder is set for the event, \u0027n\u0027 otherwise.\u003c/li\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"     * Example input: \"meet Andre 2023-10-10 1030 1130 y\"","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"     * @param unparsedInput The input string containing DatedEvent details.","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"     * @return A new DatedEvent object.","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"     * @throws IllegalArgumentException If the given input does not adhere to the expected format.","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"    public static DatedEvent newDatedEvent(String unparsedInput) { // e.g., \"meet Andre 2023-10-10 1030 1130 y\"","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"        requireNonNull(unparsedInput);","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"        // Regex to capture the name, date, start time, and end time","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"andrefoo"},"content":"        String regex \u003d \"^(.+) (\\\\d{4}-\\\\d{2}-\\\\d{2}) (\\\\d{4}) (\\\\d{4}) (y|n)$\";","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"andrefoo"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"andrefoo"},"content":"        Matcher matcher \u003d pattern.matcher(unparsedInput);","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"andrefoo"},"content":"        checkArgument(matcher.matches(), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"andrefoo"},"content":"        // Extracting components using the matcher","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"andrefoo"},"content":"        String nameString \u003d matcher.group(1); // event name","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"andrefoo"},"content":"        String dateString \u003d matcher.group(2); // date","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"        String startTime \u003d matcher.group(3); // start time","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"andrefoo"},"content":"        String endTime \u003d matcher.group(4); // end time","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"andrefoo"},"content":"        boolean reminder \u003d matcher.group(5).equals(\"y\"); // reminder status","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"        checkArgument(isValidDateTimeString(dateString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"andrefoo"},"content":"        // Parse the date","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"andrefoo"},"content":"        LocalDate date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(DATE_TIME_FORMATTER_PATTERN));","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"andrefoo"},"content":"        String dayOfWeek \u003d date.getDayOfWeek().name();","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"andrefoo"},"content":"        // Create the time block","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"andrefoo"},"content":"        String timeBlockString \u003d dayOfWeek + \" \" + startTime + \" \" + endTime;","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"andrefoo"},"content":"        return new DatedEvent(nameString, timeBlockString, dateString, reminder);","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"andrefoo"},"content":"     * Checks if the provided date time string is valid.","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"andrefoo"},"content":"     * @param test The date time string to check.","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"andrefoo"},"content":"     * @return true if the string is a valid date time format, false otherwise.","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"andrefoo"},"content":"    public static boolean isValidDateTimeString(String test) {","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"andrefoo"},"content":"        return test.matches(DATE_TIME_VALIDATION_REGEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"owenyeo"},"content":"     * Returns a format of DateTime that can be stored in a Json File.","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"owenyeo"},"content":"     * @return Json formatted String.","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"owenyeo"},"content":"    public String toJsonString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"owenyeo"},"content":"        return \"{\"","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"owenyeo"},"content":"                + \"\\\"name\\\": \\\"\" + name + \"\\\",\"","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"andrefoo"},"content":"                + \"\\\"date\\\": \\\"\" + date.format(DateTimeFormatter.ofPattern(DATE_TIME_FORMATTER_PATTERN)) + \"\\\",\"","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"andrefoo"},"content":"                + \"\\\"timeBlock\\\": \\\"\" + super.toString() + \"\\\",\"","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"andrefoo"},"content":"                + \"\\\"reminder\\\": \" + hasReminder","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"owenyeo"},"content":"                + \"}\";","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"andrefoo"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"andrefoo"},"content":"        return date;","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"andrefoo"},"content":"    public boolean isDatedEvent() {","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"andrefoo"},"content":"        return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"andrefoo"},"content":"    public boolean hasReminder() {","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"andrefoo"},"content":"        return hasReminder;","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"andrefoo"},"content":"        return \"DatedEvent: [\" + name + \"] on \" + date.format(DateTimeFormatter.ofPattern(DATE_TIME_FORMATTER_PATTERN))","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"andrefoo"},"content":"                + \" \" + super.toString() + \" Reminder: \" + (hasReminder ? \"Yes\" : \"No\");","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"teozhengyang"},"content":"    public String getName() {","lastModifiedDate":"2023-10-28"},{"lineNumber":155,"author":{"gitId":"teozhengyang"},"content":"        return name;","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"teozhengyang"},"content":"    public String getStringForReminder() {","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"andrefoo"},"content":"        return name + \" \" + super.getTimeBlockString();","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"teozhengyang"},"content":"    public boolean equals(Object e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"teozhengyang"},"content":"        if (e \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"teozhengyang"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"teozhengyang"},"content":"        } else if (!(e instanceof DatedEvent)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"teozhengyang"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"teozhengyang"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":169,"author":{"gitId":"teozhengyang"},"content":"            DatedEvent other \u003d (DatedEvent) e;","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"teozhengyang"},"content":"            return other.getName().equals(getName())","lastModifiedDate":"2023-11-01"},{"lineNumber":171,"author":{"gitId":"teozhengyang"},"content":"                    \u0026\u0026 other.getDate().equals(getDate())","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"teozhengyang"},"content":"                    \u0026\u0026 other.getTimeBlockString().equals(getTimeBlockString())","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"teozhengyang"},"content":"                    \u0026\u0026 other.hasReminder() \u003d\u003d hasReminder();","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":177,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"andrefoo"},"content":"    public int hashCode() {","lastModifiedDate":"2023-11-01"},{"lineNumber":179,"author":{"gitId":"andrefoo"},"content":"        return toString().hashCode();","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"teozhengyang":22,"owenyeo":26,"andrefoo":134}},{"path":"src/main/java/seedu/address/model/person/timetable/FreeTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.model.person.timetable;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":" * Represents a block of free time in a day, with a day of the week and start and end times.","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFreeTime(String)}","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"public class FreeTime implements Comparable\u003cFreeTime\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Input should be in the format \u0027DAY HHMM HHMM\u0027, \\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"            + \"where \u0027DAY\u0027 is a valid day of the week (e.g., Monday, tuesday, WEDNESDAY), \\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"            + \"and \u0027HHMM\u0027 represents a valid 24-hour time format in half-hour blocks (e.g., 0000, 1230, 2300). \\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"            + \"Day is case-insensitive.\";","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?i)(monday|tuesday|wednesday|thursday|friday|saturday|sunday) \"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"            + \"([01]?\\\\d|2[0-3])(00|30) ([01]?\\\\d|2[0-3])(00|30)$\"; //format: (case-insensitive) day 2359 2359","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    public final String freeTimeString;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    private final DayOfWeek day;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    private final HalfHourBlocks timeBlocks;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     * Constructs a {@code FreeTime}.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     * @param freeTime A valid time.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    public FreeTime(String freeTime) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"        requireNonNull(freeTime);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"        checkArgument(isValidFreeTime(freeTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"        String[] parts \u003d freeTime.split(\" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"        this.day \u003d DayOfWeek.valueOf(parts[0].toUpperCase());","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"        int startBlock \u003d Integer.parseInt(parts[1]) / 100 * 2 + (Integer.parseInt(parts[1]) % 100) / 30;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"        int endBlock \u003d Integer.parseInt(parts[2]) / 100 * 2 + (Integer.parseInt(parts[2]) % 100) / 30;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"        this.timeBlocks \u003d new HalfHourBlocks(startBlock, endBlock);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"        //Capitalize the first letter of the day","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"        String formattedDay \u003d parts[0].substring(0, 1).toUpperCase() + parts[0].substring(1).toLowerCase();","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"        this.freeTimeString \u003d formattedDay + \" \" + parts[1] + \" \" + parts[2];","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"    public static boolean isValidFreeTime(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"     * Compares this FreeTime instance with another instance.","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"     * The comparison is primarily based on the day of the week, followed by the start time, and then the end time.","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"     * @param other The other FreeTime instance to compare against.","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"     * @return A negative integer, zero, or a positive integer as this FreeTime is less than, equal to, or greater","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"     *      than the specified FreeTime.","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"    public int compareTo(FreeTime other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"        if (this.day.compareTo(other.day) !\u003d 0) {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"            return this.day.compareTo(other.day);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"        // You can further refine this if needed","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"        return this.timeBlocks.toString().compareTo(other.timeBlocks.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"     * Checks if the current FreeTime overlaps with another FreeTime.","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"     * If there\u0027s an overlap, returns a new FreeTime representing the overlapping period.","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"     * @param other The other FreeTime to check against.","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"     * @return An Optional containing the overlapping FreeTime if it exists, or an empty Optional otherwise.","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"lululwtv"},"content":"    public FreeTime overlap(FreeTime other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"        if (this.day !\u003d other.day) {","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"lululwtv"},"content":"            return null;","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"        if (this.timeBlocks.overlaps(other.timeBlocks)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"            HalfHourBlocks overlapBlocks \u003d this.timeBlocks.getOverlap(other.timeBlocks);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"            // You can convert overlapBlocks back to a string representation if needed","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"lululwtv"},"content":"            return new FreeTime(day + \" \" + overlapBlocks.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"lululwtv"},"content":"        return null;","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"andrefoo"},"content":"     * Checks if the current {@code FreeTime} overlaps with the specified {@code FreeTime}.","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"     * @param other The other {@code FreeTime} instance to check for overlap.","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"andrefoo"},"content":"     * @return {@code true} if the current {@code FreeTime} overlaps with the specified {@code FreeTime},","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"andrefoo"},"content":"     *         {@code false} otherwise.","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"lululwtv"},"content":"    public boolean isOverlap(FreeTime other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"lululwtv"},"content":"        if (this.day !\u003d other.day) {","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"lululwtv"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"andrefoo"},"content":"        return this.timeBlocks.overlaps(other.timeBlocks);","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"teozhengyang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"teozhengyang"},"content":"            return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"teozhengyang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"teozhengyang"},"content":"        if (!(other instanceof FreeTime)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"teozhengyang"},"content":"            return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"teozhengyang"},"content":"        FreeTime otherFreeTime \u003d (FreeTime) other;","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"teozhengyang"},"content":"        return freeTimeString.equals(otherFreeTime.freeTimeString);","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":122,"author":{"gitId":"teozhengyang"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"teozhengyang"},"content":"        return freeTimeString.hashCode();","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"andrefoo"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"andrefoo"},"content":"        return \u0027[\u0027 + freeTimeString + \u0027]\u0027;","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"teozhengyang":21,"andrefoo":98,"lululwtv":13}},{"path":"src/main/java/seedu/address/model/person/timetable/HalfHourBlocks.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.model.person.timetable;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":" * Represents the half-hour blocks within a day.","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":" * Each block is represented as a boolean value indicating if that half-hour block is free.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"public class HalfHourBlocks implements Comparable\u003cHalfHourBlocks\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"    private static final int BLOCKS_IN_DAY \u003d 48;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"    private final boolean[] blocks \u003d new boolean[BLOCKS_IN_DAY];","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"    private final int startHalfHour;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"    private final int endHalfHour;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"     * Constructs a new HalfHourBlocks with specified start and end half-hour blocks.","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     * @param startHalfHour The starting half-hour block (inclusive).","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"     * @param endHalfHour The ending half-hour block (exclusive).","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    public HalfHourBlocks(int startHalfHour, int endHalfHour) {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"        for (int i \u003d startHalfHour; i \u003c endHalfHour; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"            blocks[i] \u003d true;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"        this.startHalfHour \u003d startHalfHour;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        this.endHalfHour \u003d endHalfHour;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"     * Checks if the current HalfHourBlocks overlaps with another HalfHourBlocks.","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"     * @param other The other HalfHourBlocks to check against.","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"     * @return true if there\u0027s an overlap, false otherwise.","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"    public boolean overlaps(HalfHourBlocks other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"        for (int i \u003d 0; i \u003c BLOCKS_IN_DAY; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"            if (this.blocks[i] \u0026\u0026 other.blocks[i]) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"                return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"        return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"     * Returns a new HalfHourBlocks representing the overlap between the current and another HalfHourBlocks.","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"     * @param other The other HalfHourBlocks to check against.","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"     * @return A new HalfHourBlocks representing the overlap.","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"    public HalfHourBlocks getOverlap(HalfHourBlocks other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"        HalfHourBlocks overlap \u003d new HalfHourBlocks(0, 0);","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"        for (int i \u003d 0; i \u003c BLOCKS_IN_DAY; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"            overlap.blocks[i] \u003d this.blocks[i] \u0026\u0026 other.blocks[i];","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"        return overlap;","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"    public int compareTo(HalfHourBlocks other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"        assert(other.equals(other));","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"        return Integer.compare(this.startHalfHour, other.startHalfHour);","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"            return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"        if (other \u003d\u003d null || getClass() !\u003d other.getClass()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"            return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"        HalfHourBlocks that \u003d (HalfHourBlocks) other;","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"        return Arrays.equals(blocks, that.blocks);","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"        return Arrays.hashCode(blocks);","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"lululwtv"},"content":"     * Returns a string representation of the HalfHourBlocks object.","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"lululwtv"},"content":"     * The string contains the indices of the half-hour blocks that are marked as free time, separated by a hyphen.","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"lululwtv"},"content":"     * For example, if blocks 0, 2, and 4 are marked as free time, the string returned will be \"0-2-4-\".","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"lululwtv"},"content":"     * @return A string representation of the HalfHourBlocks object.","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"andrefoo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"andrefoo"},"content":"        String startTimeInt \u003d String.format(\"%04d\", startHalfHour / 2 * 100 + (startHalfHour % 2) * 30);","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"        String endTimeInt \u003d String.format(\"%04d\", endHalfHour / 2 * 100 + (endHalfHour % 2) * 30);","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"andrefoo"},"content":"        sb.append(startTimeInt).append(\" \").append(endTimeInt);","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"andrefoo"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"teozhengyang":21,"andrefoo":70,"lululwtv":7,"kristayeo":1}},{"path":"src/main/java/seedu/address/model/person/timetable/MeetUpEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package seedu.address.model.person.timetable;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":" * Represents a MeetUpEvent in the application.","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":" * A specialized event that includes a list of friends (attendees) for the meetup.","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"public class MeetUpEvent extends DatedEvent {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    private final Person friend;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"     * Initializes a new MeetUpEvent with the provided details and list of friends attending the meetup.","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"     * @param name The name of the meetup event.","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     * @param timeBlockString The time block for the event.","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     * @param dateString The date of the event in the format \"YYYY-MM-DD\".","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     * @param friend The friend attending the meetup.","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    public MeetUpEvent(String name, String timeBlockString,","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"                       String dateString, boolean reminder, Person friend) {","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"        super(name, timeBlockString, dateString, reminder);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"        this.friend \u003d friend;","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"     * Factory method to create a new MeetUpEvent object from a given unparsed input string and a Person object","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"     * representing a friend.","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"     * The expected format for the input string is: \"EVENT_NAME DATE YYYY-MM-DD START_TIME END_TIME REMINDER_STATUS\"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"     * Where:","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"     * \u003cul\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"     *   \u003cli\u003eEVENT_NAME is the name of the meetup event and can contain spaces.\u003c/li\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"     *   \u003cli\u003eDATE in \u0027YYYY-MM-DD\u0027 format represents the date of the meetup event.\u003c/li\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"     *   \u003cli\u003eSTART_TIME and END_TIME in \u0027HHMM\u0027 format represent the start and","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"     *   end times of the meetup event respectively.\u003c/li\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"     *   \u003cli\u003eREMINDER_STATUS is \u0027y\u0027 if a reminder is set for the meetup event, \u0027n\u0027 otherwise.\u003c/li\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"     * Example input: \"lunch with Alice 2023-11-10 1200 1330 y\"","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"     * @param unparsedInput The input string containing MeetUpEvent details.","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"     * @param friend The Person object representing a friend for the meetup.","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"     * @return A new MeetUpEvent object.","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"     * @throws IllegalArgumentException If the given input does not adhere to the expected format.","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"    public static MeetUpEvent newMeetUpEvent(String unparsedInput, Person friend) {","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"        requireNonNull(unparsedInput);","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"        // Regex to capture the name, date, start time, and end time","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"        String regex \u003d \"^(.+) (\\\\d{4}-\\\\d{2}-\\\\d{2}) (\\\\d{4}) (\\\\d{4}) (y|n)$\";","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"        Matcher matcher \u003d pattern.matcher(unparsedInput);","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"        checkArgument(matcher.matches(), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"        // Extracting components using the matcher","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"        String nameString \u003d matcher.group(1); // event name","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"        String dateString \u003d matcher.group(2); // date","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"        String startTime \u003d matcher.group(3); // start time","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"        String endTime \u003d matcher.group(4); // end time","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"        boolean reminder \u003d matcher.group(5).equals(\"y\"); // reminder status","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"        checkArgument(isValidDateTimeString(dateString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"        // Parse the date","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"        LocalDate date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(DATE_TIME_FORMATTER_PATTERN));","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"        String dayOfWeek \u003d date.getDayOfWeek().name();","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"        // Create the time block","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"        String timeBlockString \u003d dayOfWeek + \" \" + startTime + \" \" + endTime;","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"        return new MeetUpEvent(nameString, timeBlockString, dateString, reminder, friend);","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"owenyeo"},"content":"     * Returns the friend attending the meetup.","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"owenyeo"},"content":"     * @return The friend attending the meetup.","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"owenyeo"},"content":"    public Person getFriend() {","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"owenyeo"},"content":"        return friend;","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"andrefoo"},"content":"        return \"MeetUpEvent: [\" + super.getName() + \"] with \" + friend.getName()","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"andrefoo"},"content":"                + \" on \" + super.getDate().format(DateTimeFormatter.ofPattern(DATE_TIME_FORMATTER_PATTERN))","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"                + \" \" + super.toString() + \" Reminder: \" + (super.hasReminder() ? \"Yes\" : \"No\");","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"    public boolean equals(Object e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"        if (e \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"        } else if (!(e instanceof MeetUpEvent)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"teozhengyang"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"teozhengyang"},"content":"            MeetUpEvent other \u003d (MeetUpEvent) e;","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"teozhengyang"},"content":"            return super.equals(other) \u0026\u0026 friend.equals(other.friend);","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"andrefoo"},"content":"    public int hashCode() {","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"andrefoo"},"content":"        return toString().hashCode();","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"teozhengyang":12,"owenyeo":9,"andrefoo":96}},{"path":"src/main/java/seedu/address/model/person/timetable/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package seedu.address.model.person.timetable;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":" * Represents a Module in the application.","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":" * Contains information about the module name and its timings.","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"public class Module extends TimeBlock {","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Module Name should be in the format \u0027AANNNN\u0027, \\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"            + \"where \u0027AA\u0027 are any two alphabetic characters (e.g., CS, cS, Cs), \\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"            + \"and \u0027NNNN\u0027 represents a four-digit number (e.g., 2100, 1001, 0001). \\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"            + \"The alphabetic characters are case-insensitive.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    private static final String VALIDATION_REGEX \u003d \"^[a-zA-Z]{2}\\\\d{4}$\";","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"    private final String moduleName;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"     * Constructs a {@code Module} with the specified name and time block.","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"     * @param name The name of the module. Should follow the format described in MESSAGE_CONSTRAINTS.","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"     * @param timeBlockString The time block for the module. Expected format: DAY HHMM HHMM.","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    public Module(String name, String timeBlockString) { //name \u003d name, timeBlockString \u003d DAY HHMM HHMM","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"        super(timeBlockString);","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"        checkArgument(isValidModuleName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"        this.moduleName \u003d name;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"     * Factory method to create a new Module object from a given unparsed input string.","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"     * Expected format for the input string: NAME DAY HHMM HHMM.","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"     * @param unparsedInput The input string containing module details.","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"     * @return A new Module object.","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"     * @throws IllegalArgumentException If the given input does not adhere to the expected format.","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"    public static Module newModule(String unparsedInput) {","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"        requireNonNull(unparsedInput);","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"        // Split the unparsed input string by whitespace","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"        String[] parts \u003d unparsedInput.split(\"\\\\s+\");","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"        // Check for valid number of parts","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"        if (parts.length !\u003d 4) {","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"            throw new IllegalArgumentException(\"Invalid module input format. Expected: NAME DAY HHMM HHMM\");","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"        String name \u003d parts[0];","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"        String day \u003d parts[1];","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"        String startTime \u003d parts[2];","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"        String endTime \u003d parts[3];","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"        String timeBlockString \u003d day + \" \" + startTime + \" \" + endTime;","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"        // Check for valid module name format","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"        if (!isValidModuleName(name)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"        return new Module(name, timeBlockString);","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"     * Creates a new Module object with the given name while retaining the timings from the original module.","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"     * @param newName The new name for the module.","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"     * @return A new Module object with the updated name.","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"     * @throws IllegalArgumentException If the given new name does not adhere to the module naming constraints.","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"    public Module editName(String newName) {","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"        requireNonNull(newName);","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"        checkArgument(isValidModuleName(newName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"        return new Module(newName, super.getTimeBlockString());","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"    public String getName() {","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"        return moduleName;","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"     * Checks if the given module name is valid.","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"andrefoo"},"content":"     * @param test The module name to check.","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"andrefoo"},"content":"     * @return true if the module name is valid, false otherwise.","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"owenyeo"},"content":"    public static boolean isValidModuleName(String test) {","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"andrefoo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"     * Checks if the current event is a module.","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"andrefoo"},"content":"     * @return True since it is a module.","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"    public boolean isModule() {","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"andrefoo"},"content":"        return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"andrefoo"},"content":"     * Returns a Json readable string representation of the instance of the module.","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"andrefoo"},"content":"     * @return String that is readable by JsonAdaptableModule.","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"owenyeo"},"content":"    public String toJsonString() {","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"owenyeo"},"content":"        return \"{\"","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"owenyeo"},"content":"                + \"\\\"name\\\": \\\"\" + moduleName + \"\\\",\"","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"owenyeo"},"content":"                + \"\\\"timeBlock\\\": \\\"\" + super.toString() + \"\\\"\"","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"owenyeo"},"content":"                + \"}\";","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"andrefoo"},"content":"        return \"Module: [\" + moduleName + \"] \" + super.toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"teozhengyang"},"content":"    public boolean equals(Object e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"teozhengyang"},"content":"        if (e \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"teozhengyang"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"teozhengyang"},"content":"        } else if (!(e instanceof Module)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"teozhengyang"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"teozhengyang"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"teozhengyang"},"content":"            Module other \u003d (Module) e;","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"teozhengyang"},"content":"            return this.moduleName.equals(other.moduleName)","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"teozhengyang"},"content":"                    \u0026\u0026 this.getTimeBlockString().equals(other.getTimeBlockString());","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"andrefoo"},"content":"    public int hashCode() {","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"andrefoo"},"content":"        return toString().hashCode();","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"teozhengyang":12,"owenyeo":8,"andrefoo":117}},{"path":"src/main/java/seedu/address/model/person/timetable/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package seedu.address.model.person.timetable;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":" * Represents a schedule consisting of modules, CCAs (Co-Curricular Activities), and dated events.","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"public class Schedule {","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"    private final List\u003cModule\u003e modulesList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"    private final List\u003cCca\u003e ccasList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"    private final List\u003cDatedEvent\u003e datedEventsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"    private final List\u003cMeetUpEvent\u003e meetUpEventsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"    public Schedule() {}","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"     * Creates a new Schedule object.","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    public Schedule(List\u003cModule\u003e modulesList, List\u003cCca\u003e ccasList,","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"                    List\u003cDatedEvent\u003e datedEventsList, List\u003cMeetUpEvent\u003e meetUpEventsList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"        this.modulesList.addAll(modulesList);","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"        this.ccasList.addAll(ccasList);","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"        this.datedEventsList.addAll(datedEventsList);","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"        this.meetUpEventsList.addAll(meetUpEventsList);","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"     * Retrieves the list of time blocks scheduled for the current week.","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"     * @return A list of time blocks for the current week.","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"    public List\u003cTimeBlock\u003e getThisWeeksSchedule() {","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"        LocalDate startOfThisWeek \u003d today.minusDays(today.getDayOfWeek().getValue() - DayOfWeek.MONDAY.getValue());","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"        LocalDate endOfThisWeek \u003d startOfThisWeek.plusDays(6);","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"        List\u003cTimeBlock\u003e thisWeeksSchedule \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"        thisWeeksSchedule.addAll(modulesList);","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"        thisWeeksSchedule.addAll(ccasList);","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"        for (DatedEvent event : datedEventsList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"            if (event.getDate().isAfter(startOfThisWeek.minusDays(1))","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"                    \u0026\u0026 event.getDate().isBefore(endOfThisWeek.plusDays(1))) {","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"                thisWeeksSchedule.add(event);","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"        for (MeetUpEvent event : meetUpEventsList) {","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"            if (event.getDate().isAfter(startOfThisWeek.minusDays(1))","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"                    \u0026\u0026 event.getDate().isBefore(endOfThisWeek.plusDays(1))) {","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"                thisWeeksSchedule.add(event);","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"        return thisWeeksSchedule;","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"    public List\u003cTimeBlock\u003e getScheduleForDayOfWeek(int day) {","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"        List\u003cTimeBlock\u003e weekSchedule \u003d getThisWeeksSchedule();","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"        List\u003cTimeBlock\u003e daySchedule \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"        for (TimeBlock timeBlock : weekSchedule) {","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"            if (timeBlock.isOnDay(day)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"                daySchedule.add(timeBlock);","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"        //sort the list","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"        Collections.sort(daySchedule, (tb1, tb2) -\u003e tb1.compareByStartTime(tb2));","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"        return daySchedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"     * Retrieves the list of dated events scheduled for the current week that have reminders.","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"     * @return A list of dated events with reminders for the current week.","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"    public List\u003cDatedEvent\u003e getThisWeeksDatedEventsWithReminder() {","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"        LocalDate startOfThisWeek \u003d today.minusDays(today.getDayOfWeek().getValue() - DayOfWeek.MONDAY.getValue());","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"        LocalDate endOfThisWeek \u003d startOfThisWeek.plusDays(6);","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"andrefoo"},"content":"        List\u003cDatedEvent\u003e thisWeeksDatedEventsWithReminder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"andrefoo"},"content":"        for (DatedEvent event : datedEventsList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"andrefoo"},"content":"            if (event.getDate().isAfter(startOfThisWeek.minusDays(1))","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"andrefoo"},"content":"                    \u0026\u0026 event.getDate().isBefore(endOfThisWeek.plusDays(1))","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"andrefoo"},"content":"                    \u0026\u0026 event.hasReminder()) { // This checks if the event has a reminder set.","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"andrefoo"},"content":"                thisWeeksDatedEventsWithReminder.add(event);","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"andrefoo"},"content":"        return thisWeeksDatedEventsWithReminder;","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"andrefoo"},"content":"     * Retrieves the list of meet up events scheduled for the current week that have reminders.","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"     * @return A list of meet up events with reminders for the current week.","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"andrefoo"},"content":"    public List\u003cMeetUpEvent\u003e getThisWeeksMeetUpEventsWithReminder() {","lastModifiedDate":"2023-10-29"},{"lineNumber":102,"author":{"gitId":"andrefoo"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-10-29"},{"lineNumber":103,"author":{"gitId":"andrefoo"},"content":"        LocalDate startOfThisWeek \u003d today.minusDays(today.getDayOfWeek().getValue() - DayOfWeek.MONDAY.getValue());","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"andrefoo"},"content":"        LocalDate endOfThisWeek \u003d startOfThisWeek.plusDays(6);","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"andrefoo"},"content":"        List\u003cMeetUpEvent\u003e thisWeeksMeetUpEventsWithReminder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"andrefoo"},"content":"        for (MeetUpEvent event : meetUpEventsList) {","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"andrefoo"},"content":"            if (event.getDate().isAfter(startOfThisWeek.minusDays(1))","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"andrefoo"},"content":"                    \u0026\u0026 event.getDate().isBefore(endOfThisWeek.plusDays(1))","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"andrefoo"},"content":"                    \u0026\u0026 event.hasReminder()) { // This checks if the event has a reminder set.","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"andrefoo"},"content":"                thisWeeksMeetUpEventsWithReminder.add(event);","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"andrefoo"},"content":"        return thisWeeksMeetUpEventsWithReminder;","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":116,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"andrefoo"},"content":"     * Computes the free time slots for the current week.","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"andrefoo"},"content":"     * @return A list of free time slots for the current week.","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"andrefoo"},"content":"    public List\u003cFreeTime\u003e getThisWeeksFreeTime() {","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"andrefoo"},"content":"        boolean[][] timeSlots \u003d new boolean[7][48];","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"andrefoo"},"content":"        List\u003cFreeTime\u003e freeTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"andrefoo"},"content":"        List\u003cTimeBlock\u003e thisWeeksScheduleList \u003d getThisWeeksSchedule();","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"andrefoo"},"content":"        // Step 2: Mark occupied slots","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"andrefoo"},"content":"        for (TimeBlock tb : thisWeeksScheduleList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"andrefoo"},"content":"            markSlots(timeSlots, tb);","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"andrefoo"},"content":"        // Step 3: Identify free time slots","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"andrefoo"},"content":"        for (int day \u003d 0; day \u003c 7; day++) {","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"andrefoo"},"content":"            int startSlot \u003d -1;","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"andrefoo"},"content":"            for (int slot \u003d 0; slot \u003c 48; slot++) {","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"andrefoo"},"content":"                if (!timeSlots[day][slot] \u0026\u0026 startSlot \u003d\u003d -1) {","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"andrefoo"},"content":"                    // Start of a free time slot","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"andrefoo"},"content":"                    startSlot \u003d slot;","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"andrefoo"},"content":"                } else if (timeSlots[day][slot] \u0026\u0026 startSlot !\u003d -1) {","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"andrefoo"},"content":"                    // End of a free time slot","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"andrefoo"},"content":"                    freeTimes.add(createFreeTime(day, startSlot, slot - 1));","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"andrefoo"},"content":"                    startSlot \u003d -1;","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"andrefoo"},"content":"            if (startSlot !\u003d -1) {","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"andrefoo"},"content":"                // Free time slot goes until the end of the day","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"andrefoo"},"content":"                freeTimes.add(createFreeTime(day, startSlot, 47));","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"andrefoo"},"content":"        return freeTimes;","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"lululwtv"},"content":"    public boolean hasFreeTime() {","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"lululwtv"},"content":"        return !getThisWeeksFreeTime().isEmpty();","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":157,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"andrefoo"},"content":"     * Marks the time slots corresponding to a given time block as occupied.","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"andrefoo"},"content":"     * @param timeSlots 2D array representing the occupied time slots.","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"andrefoo"},"content":"     * @param tb The time block to be marked.","lastModifiedDate":"2023-10-28"},{"lineNumber":163,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":164,"author":{"gitId":"andrefoo"},"content":"    private void markSlots(boolean[][] timeSlots, TimeBlock tb) {","lastModifiedDate":"2023-10-28"},{"lineNumber":165,"author":{"gitId":"andrefoo"},"content":"        int dayIndex \u003d tb.getDay().getValue() - 1;","lastModifiedDate":"2023-10-28"},{"lineNumber":166,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"andrefoo"},"content":"        // Convert start and end times to slot indices","lastModifiedDate":"2023-10-28"},{"lineNumber":168,"author":{"gitId":"andrefoo"},"content":"        int startSlot \u003d convertTimeToSlot(tb.getStartTime());","lastModifiedDate":"2023-10-28"},{"lineNumber":169,"author":{"gitId":"andrefoo"},"content":"        int endSlot \u003d convertTimeToSlot(tb.getEndTime());","lastModifiedDate":"2023-10-28"},{"lineNumber":170,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":171,"author":{"gitId":"andrefoo"},"content":"        // Mark all slots between start and end as occupied","lastModifiedDate":"2023-10-28"},{"lineNumber":172,"author":{"gitId":"andrefoo"},"content":"        for (int slot \u003d startSlot; slot \u003c endSlot; slot++) {","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"andrefoo"},"content":"            timeSlots[dayIndex][slot] \u003d true;","lastModifiedDate":"2023-10-28"},{"lineNumber":174,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":177,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":178,"author":{"gitId":"andrefoo"},"content":"     * Converts a given time in HHMM format to its corresponding slot index.","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":180,"author":{"gitId":"andrefoo"},"content":"     * @param time Time in HHMM format.","lastModifiedDate":"2023-10-28"},{"lineNumber":181,"author":{"gitId":"andrefoo"},"content":"     * @return Slot index corresponding to the time.","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"andrefoo"},"content":"    private int convertTimeToSlot(String time) {","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"andrefoo"},"content":"        int hour \u003d Integer.parseInt(time.substring(0, 2));","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"andrefoo"},"content":"        int minute \u003d Integer.parseInt(time.substring(2));","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"andrefoo"},"content":"        return hour * 2 + minute / 30;","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":189,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":190,"author":{"gitId":"andrefoo"},"content":"     * Converts a given slot index to its corresponding time in HHMM format.","lastModifiedDate":"2023-10-28"},{"lineNumber":191,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":192,"author":{"gitId":"andrefoo"},"content":"     * @param slot Slot index.","lastModifiedDate":"2023-10-28"},{"lineNumber":193,"author":{"gitId":"andrefoo"},"content":"     * @return Time in HHMM format corresponding to the slot.","lastModifiedDate":"2023-10-28"},{"lineNumber":194,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":195,"author":{"gitId":"andrefoo"},"content":"    private String convertSlotToTime(int slot) {","lastModifiedDate":"2023-10-28"},{"lineNumber":196,"author":{"gitId":"andrefoo"},"content":"        int hour \u003d slot / 2; // each slot represents 30 minutes, so 2 slots represent 1 hour","lastModifiedDate":"2023-10-28"},{"lineNumber":197,"author":{"gitId":"andrefoo"},"content":"        int minute \u003d (slot % 2) * 30; // remainder will be either 0 or 1, representing either 0 or 30 minutes","lastModifiedDate":"2023-10-28"},{"lineNumber":198,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":199,"author":{"gitId":"andrefoo"},"content":"        // Convert to HHMM format","lastModifiedDate":"2023-10-28"},{"lineNumber":200,"author":{"gitId":"andrefoo"},"content":"        String hourString \u003d (hour \u003c 10) ? \"0\" + hour : String.valueOf(hour);","lastModifiedDate":"2023-10-28"},{"lineNumber":201,"author":{"gitId":"andrefoo"},"content":"        String minuteString \u003d (minute \u003d\u003d 0) ? \"00\" : \"30\";","lastModifiedDate":"2023-10-28"},{"lineNumber":202,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":203,"author":{"gitId":"andrefoo"},"content":"        return hourString + minuteString;","lastModifiedDate":"2023-10-28"},{"lineNumber":204,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":205,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":206,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":207,"author":{"gitId":"andrefoo"},"content":"     * Creates a FreeTime object representing a free time slot.","lastModifiedDate":"2023-10-28"},{"lineNumber":208,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":209,"author":{"gitId":"andrefoo"},"content":"     * @param day Day index (0-6).","lastModifiedDate":"2023-10-28"},{"lineNumber":210,"author":{"gitId":"andrefoo"},"content":"     * @param startSlot Start slot index of the free time.","lastModifiedDate":"2023-10-28"},{"lineNumber":211,"author":{"gitId":"andrefoo"},"content":"     * @param endSlot End slot index of the free time.","lastModifiedDate":"2023-10-28"},{"lineNumber":212,"author":{"gitId":"andrefoo"},"content":"     * @return A FreeTime object.","lastModifiedDate":"2023-10-28"},{"lineNumber":213,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":214,"author":{"gitId":"andrefoo"},"content":"    private FreeTime createFreeTime(int day, int startSlot, int endSlot) {","lastModifiedDate":"2023-10-28"},{"lineNumber":215,"author":{"gitId":"andrefoo"},"content":"        // Convert day and slot indices back to a string representation","lastModifiedDate":"2023-10-28"},{"lineNumber":216,"author":{"gitId":"andrefoo"},"content":"        DayOfWeek dayOfWeek \u003d DayOfWeek.of(day + 1);","lastModifiedDate":"2023-10-28"},{"lineNumber":217,"author":{"gitId":"andrefoo"},"content":"        String startTime \u003d convertSlotToTime(startSlot);","lastModifiedDate":"2023-10-28"},{"lineNumber":218,"author":{"gitId":"andrefoo"},"content":"        String endTime \u003d convertSlotToTime(endSlot);","lastModifiedDate":"2023-10-28"},{"lineNumber":219,"author":{"gitId":"andrefoo"},"content":"        return new FreeTime(dayOfWeek.name() + \" \" + startTime + \" \" + endTime);","lastModifiedDate":"2023-10-28"},{"lineNumber":220,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":221,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":222,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":223,"author":{"gitId":"andrefoo"},"content":"     * Returns an unmodifiable list of dated events in the schedule.","lastModifiedDate":"2023-10-28"},{"lineNumber":224,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":225,"author":{"gitId":"andrefoo"},"content":"     * @return List of dated events.","lastModifiedDate":"2023-10-28"},{"lineNumber":226,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":227,"author":{"gitId":"andrefoo"},"content":"    public List\u003cDatedEvent\u003e getDatedEventsList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":228,"author":{"gitId":"andrefoo"},"content":"        return Collections.unmodifiableList(datedEventsList);","lastModifiedDate":"2023-10-28"},{"lineNumber":229,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":230,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":231,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":232,"author":{"gitId":"andrefoo"},"content":"     * Returns an unmodifiable list of meet up events in the schedule.","lastModifiedDate":"2023-10-29"},{"lineNumber":233,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":234,"author":{"gitId":"andrefoo"},"content":"     * @return List of meet up events.","lastModifiedDate":"2023-10-29"},{"lineNumber":235,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":236,"author":{"gitId":"andrefoo"},"content":"    public List\u003cMeetUpEvent\u003e getMeetUpEventsList() {","lastModifiedDate":"2023-10-29"},{"lineNumber":237,"author":{"gitId":"andrefoo"},"content":"        return Collections.unmodifiableList(meetUpEventsList);","lastModifiedDate":"2023-10-29"},{"lineNumber":238,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":239,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":240,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":241,"author":{"gitId":"owenyeo"},"content":"     * Returns an unmodifiable list of modules in the schedule.","lastModifiedDate":"2023-10-29"},{"lineNumber":242,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":243,"author":{"gitId":"owenyeo"},"content":"     * @return List of modules.","lastModifiedDate":"2023-10-29"},{"lineNumber":244,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":245,"author":{"gitId":"owenyeo"},"content":"    public List\u003cModule\u003e getModulesList() {","lastModifiedDate":"2023-10-29"},{"lineNumber":246,"author":{"gitId":"owenyeo"},"content":"        return Collections.unmodifiableList(modulesList);","lastModifiedDate":"2023-10-29"},{"lineNumber":247,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":248,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":249,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":250,"author":{"gitId":"owenyeo"},"content":"     * Returns an unmodifiable list of CCAs in the schedule.","lastModifiedDate":"2023-10-29"},{"lineNumber":251,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":252,"author":{"gitId":"owenyeo"},"content":"     * @return List of CCAs.","lastModifiedDate":"2023-10-29"},{"lineNumber":253,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":254,"author":{"gitId":"owenyeo"},"content":"    public List\u003cCca\u003e getCcasList() {","lastModifiedDate":"2023-10-29"},{"lineNumber":255,"author":{"gitId":"owenyeo"},"content":"        return Collections.unmodifiableList(ccasList);","lastModifiedDate":"2023-10-29"},{"lineNumber":256,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":257,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":258,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":259,"author":{"gitId":"andrefoo"},"content":"     * Computes overlapping free time slots with another schedule.","lastModifiedDate":"2023-10-28"},{"lineNumber":260,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":261,"author":{"gitId":"andrefoo"},"content":"     * @param otherSchedule The other schedule to compare with.","lastModifiedDate":"2023-10-28"},{"lineNumber":262,"author":{"gitId":"andrefoo"},"content":"     * @return A list of overlapping free time slots.","lastModifiedDate":"2023-10-28"},{"lineNumber":263,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":264,"author":{"gitId":"andrefoo"},"content":"    public List\u003cFreeTime\u003e getThisWeeksFreeTimesWith(Schedule otherSchedule) {","lastModifiedDate":"2023-10-28"},{"lineNumber":265,"author":{"gitId":"andrefoo"},"content":"        List\u003cFreeTime\u003e myFreeTimes \u003d getThisWeeksFreeTime();","lastModifiedDate":"2023-10-28"},{"lineNumber":266,"author":{"gitId":"andrefoo"},"content":"        List\u003cFreeTime\u003e otherFreeTimes \u003d otherSchedule.getThisWeeksFreeTime();","lastModifiedDate":"2023-10-28"},{"lineNumber":267,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":268,"author":{"gitId":"andrefoo"},"content":"        List\u003cFreeTime\u003e overlappingFreeTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":269,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":270,"author":{"gitId":"andrefoo"},"content":"        for (FreeTime myFreeTime : myFreeTimes) {","lastModifiedDate":"2023-10-28"},{"lineNumber":271,"author":{"gitId":"andrefoo"},"content":"            for (FreeTime otherFreeTime : otherFreeTimes) {","lastModifiedDate":"2023-10-28"},{"lineNumber":272,"author":{"gitId":"andrefoo"},"content":"                if (myFreeTime.isOverlap(otherFreeTime)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":273,"author":{"gitId":"andrefoo"},"content":"                    overlappingFreeTimes.add(myFreeTime.overlap(otherFreeTime));","lastModifiedDate":"2023-10-28"},{"lineNumber":274,"author":{"gitId":"andrefoo"},"content":"                }","lastModifiedDate":"2023-10-28"},{"lineNumber":275,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":276,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":277,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":278,"author":{"gitId":"andrefoo"},"content":"        return overlappingFreeTimes;","lastModifiedDate":"2023-10-28"},{"lineNumber":279,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":280,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":281,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":282,"author":{"gitId":"andrefoo"},"content":"     * Adds a module to the schedule.","lastModifiedDate":"2023-10-28"},{"lineNumber":283,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":284,"author":{"gitId":"andrefoo"},"content":"     * @param moduleString String representation of the module.","lastModifiedDate":"2023-10-28"},{"lineNumber":285,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":286,"author":{"gitId":"andrefoo"},"content":"    public void addModule(String moduleString) {","lastModifiedDate":"2023-10-28"},{"lineNumber":287,"author":{"gitId":"andrefoo"},"content":"        modulesList.add(Module.newModule(moduleString));","lastModifiedDate":"2023-10-28"},{"lineNumber":288,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":289,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":290,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":291,"author":{"gitId":"owenyeo"},"content":"     * Adds a module to the schedule.","lastModifiedDate":"2023-10-31"},{"lineNumber":292,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":293,"author":{"gitId":"owenyeo"},"content":"     * @param module Module to be added.","lastModifiedDate":"2023-10-31"},{"lineNumber":294,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":295,"author":{"gitId":"owenyeo"},"content":"    public void addModule(Module module) {","lastModifiedDate":"2023-10-31"},{"lineNumber":296,"author":{"gitId":"owenyeo"},"content":"        modulesList.add(module);","lastModifiedDate":"2023-10-31"},{"lineNumber":297,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":298,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":299,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":300,"author":{"gitId":"andrefoo"},"content":"     * Edits a module in the schedule.","lastModifiedDate":"2023-10-28"},{"lineNumber":301,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":302,"author":{"gitId":"andrefoo"},"content":"     * @param moduleName Name of the module to be edited.","lastModifiedDate":"2023-10-28"},{"lineNumber":303,"author":{"gitId":"andrefoo"},"content":"     * @param timeBlockString String representation of the new module time block.","lastModifiedDate":"2023-10-28"},{"lineNumber":304,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":305,"author":{"gitId":"andrefoo"},"content":"    public void editModule(String moduleName, String timeBlockString) {","lastModifiedDate":"2023-10-28"},{"lineNumber":306,"author":{"gitId":"andrefoo"},"content":"        // Remove all instances of the module with the given name","lastModifiedDate":"2023-10-28"},{"lineNumber":307,"author":{"gitId":"andrefoo"},"content":"        modulesList.removeIf(module -\u003e module.getName().equals(moduleName));","lastModifiedDate":"2023-10-28"},{"lineNumber":308,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":309,"author":{"gitId":"andrefoo"},"content":"        // Add the new module","lastModifiedDate":"2023-10-28"},{"lineNumber":310,"author":{"gitId":"andrefoo"},"content":"        modulesList.add(Module.newModule(timeBlockString));","lastModifiedDate":"2023-10-28"},{"lineNumber":311,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":312,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":313,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":314,"author":{"gitId":"owenyeo"},"content":"     * Removes a module from the schedule.","lastModifiedDate":"2023-10-31"},{"lineNumber":315,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":316,"author":{"gitId":"owenyeo"},"content":"     * @param moduleName Name of the module to be removed.","lastModifiedDate":"2023-10-31"},{"lineNumber":317,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":318,"author":{"gitId":"owenyeo"},"content":"    public void deleteModule(String moduleName) {","lastModifiedDate":"2023-10-31"},{"lineNumber":319,"author":{"gitId":"lululwtv"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":320,"author":{"gitId":"lululwtv"},"content":"        for (Module module : modulesList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":321,"author":{"gitId":"lululwtv"},"content":"            if (module.getName().equals(moduleName)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":322,"author":{"gitId":"lululwtv"},"content":"                modulesList.remove(module);","lastModifiedDate":"2023-10-31"},{"lineNumber":323,"author":{"gitId":"lululwtv"},"content":"                isFound \u003d true;","lastModifiedDate":"2023-10-31"},{"lineNumber":324,"author":{"gitId":"lululwtv"},"content":"                break; // Exit the loop after the first matching module is removed","lastModifiedDate":"2023-10-31"},{"lineNumber":325,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":326,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":327,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":328,"author":{"gitId":"lululwtv"},"content":"        if (!isFound) {","lastModifiedDate":"2023-10-31"},{"lineNumber":329,"author":{"gitId":"lululwtv"},"content":"            throw new IllegalArgumentException(\"Module \" + moduleName + \" does not exist!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":330,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":331,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":332,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":333,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":334,"author":{"gitId":"andrefoo"},"content":"     * Adds a CCA to the schedule.","lastModifiedDate":"2023-10-28"},{"lineNumber":335,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":336,"author":{"gitId":"andrefoo"},"content":"     * @param ccaString String representation of the CCA.","lastModifiedDate":"2023-10-28"},{"lineNumber":337,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":338,"author":{"gitId":"andrefoo"},"content":"    public void addCca(String ccaString) {","lastModifiedDate":"2023-10-28"},{"lineNumber":339,"author":{"gitId":"andrefoo"},"content":"        ccasList.add(Cca.newCca(ccaString));","lastModifiedDate":"2023-10-28"},{"lineNumber":340,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":341,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":342,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":343,"author":{"gitId":"owenyeo"},"content":"     * Adds a CCA in the schedule.","lastModifiedDate":"2023-10-31"},{"lineNumber":344,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":345,"author":{"gitId":"owenyeo"},"content":"     * @param cca CCA to be added.","lastModifiedDate":"2023-10-31"},{"lineNumber":346,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":347,"author":{"gitId":"owenyeo"},"content":"    public void addCca(Cca cca) {","lastModifiedDate":"2023-10-31"},{"lineNumber":348,"author":{"gitId":"owenyeo"},"content":"        ccasList.add(cca);","lastModifiedDate":"2023-10-31"},{"lineNumber":349,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":350,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":351,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":352,"author":{"gitId":"andrefoo"},"content":"     * Edits a CCA in the schedule.","lastModifiedDate":"2023-10-28"},{"lineNumber":353,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":354,"author":{"gitId":"andrefoo"},"content":"     * @param ccaName Name of the CCA to be edited.","lastModifiedDate":"2023-10-28"},{"lineNumber":355,"author":{"gitId":"andrefoo"},"content":"     * @param unparsedInput String representation of the new CCA.","lastModifiedDate":"2023-10-28"},{"lineNumber":356,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":357,"author":{"gitId":"andrefoo"},"content":"    public void editCca(String ccaName, String unparsedInput) {","lastModifiedDate":"2023-10-28"},{"lineNumber":358,"author":{"gitId":"andrefoo"},"content":"        // Remove all instances of the CCA with the given name","lastModifiedDate":"2023-10-28"},{"lineNumber":359,"author":{"gitId":"andrefoo"},"content":"        ccasList.removeIf(cca -\u003e cca.getName().equals(ccaName));","lastModifiedDate":"2023-11-01"},{"lineNumber":360,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":361,"author":{"gitId":"andrefoo"},"content":"        // Add the new CCA","lastModifiedDate":"2023-10-28"},{"lineNumber":362,"author":{"gitId":"andrefoo"},"content":"        ccasList.add(Cca.newCca(unparsedInput));","lastModifiedDate":"2023-10-28"},{"lineNumber":363,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":364,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":365,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":366,"author":{"gitId":"andrefoo"},"content":"     * Removes a CCA from the schedule.","lastModifiedDate":"2023-10-28"},{"lineNumber":367,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":368,"author":{"gitId":"andrefoo"},"content":"     * @param ccaName Name of the CCA to be removed.","lastModifiedDate":"2023-10-28"},{"lineNumber":369,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":370,"author":{"gitId":"andrefoo"},"content":"    public void deleteCca(String ccaName) {","lastModifiedDate":"2023-10-28"},{"lineNumber":371,"author":{"gitId":"lululwtv"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":372,"author":{"gitId":"lululwtv"},"content":"        for (Cca cca : ccasList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":373,"author":{"gitId":"andrefoo"},"content":"            if (cca.getName().equals(ccaName)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":374,"author":{"gitId":"lululwtv"},"content":"                ccasList.remove(cca);","lastModifiedDate":"2023-10-31"},{"lineNumber":375,"author":{"gitId":"lululwtv"},"content":"                isFound \u003d true;","lastModifiedDate":"2023-10-31"},{"lineNumber":376,"author":{"gitId":"lululwtv"},"content":"                break; // Exit the loop after the first matching CCA is removed","lastModifiedDate":"2023-10-31"},{"lineNumber":377,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":378,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":379,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":380,"author":{"gitId":"lululwtv"},"content":"        if (!isFound) {","lastModifiedDate":"2023-10-31"},{"lineNumber":381,"author":{"gitId":"lululwtv"},"content":"            throw new IllegalArgumentException(\"CCA \" + ccaName + \" does not exist!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":382,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":383,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":384,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":385,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":386,"author":{"gitId":"owenyeo"},"content":"     * Adds a dated event to the schedule.","lastModifiedDate":"2023-10-31"},{"lineNumber":387,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":388,"author":{"gitId":"owenyeo"},"content":"     * @param eventString String representation of the dated event.","lastModifiedDate":"2023-10-31"},{"lineNumber":389,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":390,"author":{"gitId":"owenyeo"},"content":"    public void addDatedEvent(String eventString) {","lastModifiedDate":"2023-10-31"},{"lineNumber":391,"author":{"gitId":"owenyeo"},"content":"        datedEventsList.add(DatedEvent.newDatedEvent(eventString));","lastModifiedDate":"2023-10-31"},{"lineNumber":392,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":393,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":394,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":395,"author":{"gitId":"andrefoo"},"content":"     * Adds a dated event to the schedule.","lastModifiedDate":"2023-10-28"},{"lineNumber":396,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":397,"author":{"gitId":"owenyeo"},"content":"     * @param event Dated event to be added.","lastModifiedDate":"2023-10-31"},{"lineNumber":398,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":399,"author":{"gitId":"owenyeo"},"content":"    public void addDatedEvent(DatedEvent event) {","lastModifiedDate":"2023-10-31"},{"lineNumber":400,"author":{"gitId":"owenyeo"},"content":"        datedEventsList.add(event);","lastModifiedDate":"2023-10-31"},{"lineNumber":401,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":402,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":403,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":404,"author":{"gitId":"andrefoo"},"content":"     * Edits a dated event in the schedule.","lastModifiedDate":"2023-10-28"},{"lineNumber":405,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":406,"author":{"gitId":"andrefoo"},"content":"     * @param eventName Name of the dated event to be edited.","lastModifiedDate":"2023-10-28"},{"lineNumber":407,"author":{"gitId":"andrefoo"},"content":"     * @param unparsedInput String representation of the new dated event.","lastModifiedDate":"2023-10-28"},{"lineNumber":408,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":409,"author":{"gitId":"andrefoo"},"content":"    public void editDatedEvent(String eventName, String unparsedInput) {","lastModifiedDate":"2023-10-28"},{"lineNumber":410,"author":{"gitId":"andrefoo"},"content":"        // Remove all instances of the dated event with the given name","lastModifiedDate":"2023-10-28"},{"lineNumber":411,"author":{"gitId":"andrefoo"},"content":"        datedEventsList.removeIf(event -\u003e event.getName().equals(eventName));","lastModifiedDate":"2023-10-28"},{"lineNumber":412,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":413,"author":{"gitId":"andrefoo"},"content":"        // Add the new dated event","lastModifiedDate":"2023-10-28"},{"lineNumber":414,"author":{"gitId":"andrefoo"},"content":"        datedEventsList.add(DatedEvent.newDatedEvent(unparsedInput));","lastModifiedDate":"2023-10-28"},{"lineNumber":415,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":416,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":417,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":418,"author":{"gitId":"andrefoo"},"content":"     * Removes a dated event from the schedule.","lastModifiedDate":"2023-10-28"},{"lineNumber":419,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":420,"author":{"gitId":"andrefoo"},"content":"     * @param eventName Name of the dated event to be removed.","lastModifiedDate":"2023-10-28"},{"lineNumber":421,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":422,"author":{"gitId":"lululwtv"},"content":"    public void deleteDatedEvent(String eventName) throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":423,"author":{"gitId":"lululwtv"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":424,"author":{"gitId":"lululwtv"},"content":"        for (DatedEvent event : datedEventsList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":425,"author":{"gitId":"lululwtv"},"content":"            if (event.getName().equals(eventName)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":426,"author":{"gitId":"lululwtv"},"content":"                datedEventsList.remove(event);","lastModifiedDate":"2023-10-31"},{"lineNumber":427,"author":{"gitId":"lululwtv"},"content":"                isFound \u003d true;","lastModifiedDate":"2023-10-31"},{"lineNumber":428,"author":{"gitId":"lululwtv"},"content":"                break; // Exit the loop after the first matching event is removed","lastModifiedDate":"2023-10-31"},{"lineNumber":429,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":430,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":431,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":432,"author":{"gitId":"lululwtv"},"content":"        if (!isFound) {","lastModifiedDate":"2023-10-31"},{"lineNumber":433,"author":{"gitId":"lululwtv"},"content":"            throw new Exception(\"Meet-up event \" + eventName + \" does not exist!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":434,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":435,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":436,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":437,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":438,"author":{"gitId":"andrefoo"},"content":"     * Adds a meet-up event to the schedule.","lastModifiedDate":"2023-10-28"},{"lineNumber":439,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":440,"author":{"gitId":"andrefoo"},"content":"     * @param meetUpEventString String representation of the meet-up event.","lastModifiedDate":"2023-10-28"},{"lineNumber":441,"author":{"gitId":"lululwtv"},"content":"     * @param friend The friend to meet up with.","lastModifiedDate":"2023-10-30"},{"lineNumber":442,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":443,"author":{"gitId":"andrefoo"},"content":"    public void addMeetUpEvent(String meetUpEventString, Person friend) {","lastModifiedDate":"2023-10-28"},{"lineNumber":444,"author":{"gitId":"andrefoo"},"content":"        meetUpEventsList.add(MeetUpEvent.newMeetUpEvent(meetUpEventString, friend));","lastModifiedDate":"2023-10-29"},{"lineNumber":445,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":446,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":447,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":448,"author":{"gitId":"owenyeo"},"content":"     * Adds a meet-up event to the schedule.","lastModifiedDate":"2023-10-31"},{"lineNumber":449,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":450,"author":{"gitId":"owenyeo"},"content":"     * @param meetUpEvent Meet-up event to be added.","lastModifiedDate":"2023-10-31"},{"lineNumber":451,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":452,"author":{"gitId":"owenyeo"},"content":"    public void addMeetUpEvent(MeetUpEvent meetUpEvent) {","lastModifiedDate":"2023-10-31"},{"lineNumber":453,"author":{"gitId":"owenyeo"},"content":"        meetUpEventsList.add(meetUpEvent);","lastModifiedDate":"2023-10-31"},{"lineNumber":454,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":455,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":456,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":457,"author":{"gitId":"andrefoo"},"content":"     * Removes a meet-up event from the schedule.","lastModifiedDate":"2023-10-28"},{"lineNumber":458,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":459,"author":{"gitId":"andrefoo"},"content":"     * @param meetUpEventName Name of the meet-up event to be removed.","lastModifiedDate":"2023-10-28"},{"lineNumber":460,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":461,"author":{"gitId":"lululwtv"},"content":"    public void deleteMeetUpEvent(String meetUpEventName) throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":462,"author":{"gitId":"lululwtv"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":463,"author":{"gitId":"lululwtv"},"content":"        for (MeetUpEvent event : meetUpEventsList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":464,"author":{"gitId":"lululwtv"},"content":"            if (event.getName().equals(meetUpEventName)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":465,"author":{"gitId":"lululwtv"},"content":"                meetUpEventsList.remove(event);","lastModifiedDate":"2023-10-31"},{"lineNumber":466,"author":{"gitId":"lululwtv"},"content":"                isFound \u003d true;","lastModifiedDate":"2023-10-31"},{"lineNumber":467,"author":{"gitId":"lululwtv"},"content":"                break; // Exit the loop after the first matching event is removed","lastModifiedDate":"2023-10-31"},{"lineNumber":468,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":469,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":470,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":471,"author":{"gitId":"lululwtv"},"content":"        if (!isFound) {","lastModifiedDate":"2023-10-31"},{"lineNumber":472,"author":{"gitId":"lululwtv"},"content":"            throw new Exception(\"Meet-up event \" + meetUpEventName + \" does not exist!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":473,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":474,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":475,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":476,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":477,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":478,"author":{"gitId":"andrefoo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-31"},{"lineNumber":479,"author":{"gitId":"andrefoo"},"content":"        sb.append(\"Schedule:\\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":480,"author":{"gitId":"andrefoo"},"content":"        if (!modulesList.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":481,"author":{"gitId":"andrefoo"},"content":"            sb.append(\"- Modules:\\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":482,"author":{"gitId":"andrefoo"},"content":"            for (Module module : modulesList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":483,"author":{"gitId":"andrefoo"},"content":"                sb.append(\"  \").append(module.toString()).append(\"\\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":484,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":485,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":486,"author":{"gitId":"andrefoo"},"content":"        if (!ccasList.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":487,"author":{"gitId":"andrefoo"},"content":"            sb.append(\"- CCAs:\\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":488,"author":{"gitId":"andrefoo"},"content":"            for (Cca cca : ccasList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":489,"author":{"gitId":"andrefoo"},"content":"                sb.append(\"  \").append(cca.toString()).append(\"\\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":490,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":491,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":492,"author":{"gitId":"andrefoo"},"content":"        if (!datedEventsList.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":493,"author":{"gitId":"andrefoo"},"content":"            sb.append(\"- Dated Events:\\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":494,"author":{"gitId":"andrefoo"},"content":"            for (DatedEvent event : datedEventsList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":495,"author":{"gitId":"andrefoo"},"content":"                sb.append(\"  \").append(event.toString()).append(\"\\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":496,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":497,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":498,"author":{"gitId":"andrefoo"},"content":"        if (!meetUpEventsList.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":499,"author":{"gitId":"andrefoo"},"content":"            sb.append(\"- MeetUp Events:\\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":500,"author":{"gitId":"andrefoo"},"content":"            for (MeetUpEvent event : meetUpEventsList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":501,"author":{"gitId":"andrefoo"},"content":"                sb.append(\"  \").append(event.toString()).append(\"\\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":502,"author":{"gitId":"andrefoo"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":503,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":504,"author":{"gitId":"andrefoo"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":505,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":506,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":507,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":508,"author":{"gitId":"teozhengyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":509,"author":{"gitId":"teozhengyang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":510,"author":{"gitId":"teozhengyang"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":511,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":512,"author":{"gitId":"teozhengyang"},"content":"        if (!(other instanceof Schedule)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":513,"author":{"gitId":"teozhengyang"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":514,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":515,"author":{"gitId":"teozhengyang"},"content":"        Schedule otherSchedule \u003d (Schedule) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":516,"author":{"gitId":"teozhengyang"},"content":"        return modulesList.equals(otherSchedule.modulesList)","lastModifiedDate":"2023-11-01"},{"lineNumber":517,"author":{"gitId":"teozhengyang"},"content":"                \u0026\u0026 ccasList.equals(otherSchedule.ccasList)","lastModifiedDate":"2023-11-01"},{"lineNumber":518,"author":{"gitId":"teozhengyang"},"content":"                \u0026\u0026 datedEventsList.equals(otherSchedule.datedEventsList)","lastModifiedDate":"2023-11-01"},{"lineNumber":519,"author":{"gitId":"teozhengyang"},"content":"                \u0026\u0026 meetUpEventsList.equals(otherSchedule.meetUpEventsList);","lastModifiedDate":"2023-11-01"},{"lineNumber":520,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":521,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":522,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":523,"author":{"gitId":"andrefoo"},"content":"    public int hashCode() {","lastModifiedDate":"2023-11-01"},{"lineNumber":524,"author":{"gitId":"andrefoo"},"content":"        return toString().hashCode();","lastModifiedDate":"2023-11-01"},{"lineNumber":525,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":526,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"teozhengyang":13,"owenyeo":69,"andrefoo":390,"lululwtv":54}},{"path":"src/main/java/seedu/address/model/person/timetable/TimeBlock.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package seedu.address.model.person.timetable;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":" * Represents a block of time in a day, with a day of the week and start and end times.","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTimeBlock(String)}}","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"public abstract class TimeBlock implements Comparable\u003cTimeBlock\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Timing input should be in the format \u0027DAY HHMM HHMM\u0027, \\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"            + \"where \u0027DAY\u0027 is a valid day of the week (e.g., Monday, tuesday, WEDNESDAY), \\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"            + \"and \u0027HHMM\u0027 represents a valid 24-hour time format in half-hour blocks (e.g., 0000, 1230, 2300). \\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"            + \"Day is case-insensitive. The start time must be before the end time.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?i)(monday|tuesday|wednesday|thursday|friday|saturday|sunday) \"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"            + \"([01]?\\\\d|2[0-3])(00|30) ([01]?\\\\d|2[0-3])(00|30)$\"; //format: (case-insensitive) day 2359 2359","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    private String timeBlockString;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    private final DayOfWeek day;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    private final HalfHourBlocks timeBlocks;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"     * Constructs a {@code TimeBlock}.","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"     * @param timeBlockString A valid time.","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    public TimeBlock(String timeBlockString) {","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"        requireNonNull(timeBlockString);","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"        checkArgument(isValidTimeBlock(timeBlockString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"        String[] parts \u003d timeBlockString.split(\" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"        this.day \u003d DayOfWeek.valueOf(parts[0].toUpperCase());","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"        int startBlock \u003d Integer.parseInt(parts[1]) / 100 * 2 + (Integer.parseInt(parts[1]) % 100) / 30;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"        int endBlock \u003d Integer.parseInt(parts[2]) / 100 * 2 + (Integer.parseInt(parts[2]) % 100) / 30;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"        this.timeBlocks \u003d new HalfHourBlocks(startBlock, endBlock);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"        //Capitalize the first letter of the day","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"        String formattedDay \u003d parts[0].substring(0, 1).toUpperCase() + parts[0].substring(1).toLowerCase();","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"        this.timeBlockString \u003d formattedDay + \" \" + parts[1] + \" \" + parts[2];","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"     * Returns true if a given string is a valid TimeBlock.","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"    public static boolean isValidTimeBlock(String test) {","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"        if (!test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"andrefoo"},"content":"        String[] parts \u003d test.split(\" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"andrefoo"},"content":"        int startTime \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"andrefoo"},"content":"        int endTime \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"andrefoo"},"content":"        return startTime \u003c endTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"     * Compares this TimeBlock instance with another instance.","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"     * The comparison is primarily based on the day of the week, followed by the start time, and then the end time.","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"andrefoo"},"content":"     * @param other The other TimeBlock instance to compare against.","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"andrefoo"},"content":"     * @return A negative integer, zero, or a positive integer as this TimeBlock is less than, equal to, or greater","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"andrefoo"},"content":"     *      than the specified TimeBlock.","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"andrefoo"},"content":"    public int compareTo(TimeBlock other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"andrefoo"},"content":"        if (this.day.compareTo(other.day) !\u003d 0) {","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"andrefoo"},"content":"            return this.day.compareTo(other.day);","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"andrefoo"},"content":"        // You can further refine this if needed","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"andrefoo"},"content":"        return this.timeBlocks.toString().compareTo(other.timeBlocks.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"     * Compares the start time of this TimeBlock with another TimeBlock\u0027s start time.","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"     * @param other The other TimeBlock instance to compare against.","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"andrefoo"},"content":"     * @return A negative integer, zero, or a positive integer as this TimeBlock\u0027s start time is less than,","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"andrefoo"},"content":"     *         equal to, or greater than the specified TimeBlock\u0027s start time.","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"andrefoo"},"content":"    public int compareByStartTime(TimeBlock other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"andrefoo"},"content":"        return this.timeBlocks.compareTo(other.timeBlocks);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"andrefoo"},"content":"     * Checks if the current {@code TimeBlock} overlaps with the specified {@code TimeBlock}.","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"andrefoo"},"content":"     * @param other The other {@code TimeBlock} instance to check for overlap.","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"andrefoo"},"content":"     * @return {@code true} if the current {@code TimeBlock} overlaps with the specified {@code TimeBlock},","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"andrefoo"},"content":"     *         {@code false} otherwise.","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"andrefoo"},"content":"    public boolean isOverlap(TimeBlock other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"andrefoo"},"content":"        if (this.day !\u003d other.day) {","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"andrefoo"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"andrefoo"},"content":"        return this.timeBlocks.overlaps(other.timeBlocks);","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"andrefoo"},"content":"    public abstract String getName();","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"andrefoo"},"content":"    public boolean isModule() {","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"andrefoo"},"content":"        return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"andrefoo"},"content":"    public boolean isCca() {","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"andrefoo"},"content":"        return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"andrefoo"},"content":"    public boolean isFreeTime() {","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"andrefoo"},"content":"        return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"andrefoo"},"content":"    public boolean isDatedEvent() {","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"andrefoo"},"content":"        return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"andrefoo"},"content":"    public String getTimeBlockString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"andrefoo"},"content":"        return timeBlockString;","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"andrefoo"},"content":"    protected DayOfWeek getDay() {","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"andrefoo"},"content":"        return day;","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"andrefoo"},"content":"     * Returns the start time of the TimeBlock in 24H format HHMM.","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"andrefoo"},"content":"     * @return A string representing the start time.","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"andrefoo"},"content":"    public String getStartTime() {","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"andrefoo"},"content":"        String[] parts \u003d timeBlockString.split(\" \");","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"andrefoo"},"content":"        return parts[1];","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"andrefoo"},"content":"     * Returns the end time of the TimeBlock in 24H format HHMM.","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"andrefoo"},"content":"     * @return A string representing the end time.","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"andrefoo"},"content":"    public String getEndTime() {","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"andrefoo"},"content":"        String[] parts \u003d timeBlockString.split(\" \");","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"andrefoo"},"content":"        return parts[2];","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"andrefoo"},"content":"     * Checks if the current TimeBlock is on the specified day.","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"andrefoo"},"content":"     * @param day The day to check (e.g., 1 for Monday, 2 for Tuesday, etc.)","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"andrefoo"},"content":"     * @return True if the TimeBlock is on the given day, false otherwise.","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"andrefoo"},"content":"    public boolean isOnDay(int day) {","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"andrefoo"},"content":"        return day \u003d\u003d this.day.getValue();","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"andrefoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"andrefoo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"andrefoo"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"andrefoo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"andrefoo"},"content":"        if (!(other instanceof FreeTime)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"andrefoo"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"andrefoo"},"content":"        TimeBlock otherTimeBlock \u003d (TimeBlock) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"andrefoo"},"content":"        return timeBlockString.equals(otherTimeBlock.timeBlockString);","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"andrefoo"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"andrefoo"},"content":"        return timeBlockString.hashCode();","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"andrefoo"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"andrefoo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"andrefoo"},"content":"        return \u0027[\u0027 + timeBlockString + \u0027]\u0027;","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"andrefoo":181}},{"path":"src/main/java/seedu/address/model/user/ReadOnlyUserData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.model.user;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":" * Unmodifiable view of user data.","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"public interface ReadOnlyUserData {","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"     * Returns the user.","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"     * @return","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"    User getUser();","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"     * Returns the dated events.","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"     * @return","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"    ArrayList\u003cDatedEvent\u003e getDatedEvents();","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"owenyeo":23}},{"path":"src/main/java/seedu/address/model/user/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.model.user;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"    Path getUserDataFilePath();","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"owenyeo":3,"-":15}},{"path":"src/main/java/seedu/address/model/user/User.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.model.user;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":" * Represents a User in the address book.","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"public class User extends Person {","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"    private ArrayList\u003cDatedEvent\u003e datedEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    public User(Name name, Phone phone, Email email, Address address, Birthday birthday,","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"                Schedule schedule, Set\u003cTag\u003e tags, ArrayList\u003cDatedEvent\u003e datedEvents) {","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"        super(name, phone, email, address, birthday, schedule, tags);","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"        this.datedEvents \u003d datedEvents;","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"    };","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    public User() {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"        super();","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"     * Constructor for User with a person and dated events.","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"    public User(Person user, ArrayList\u003cDatedEvent\u003e datedEvents) {","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"        super(user.getName(), user.getPhone(), user.getEmail(), user.getAddress(), user.getBirthday(),","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"                user.getSchedule(), user.getTags());","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"        this.datedEvents \u003d datedEvents;","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"     * Constructor for User with a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"    public User(User user) {","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"        super(user.getName(), user.getPhone(), user.getEmail(), user.getAddress(), user.getBirthday(),","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"                user.getSchedule(), user.getTags());","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"        this.datedEvents \u003d user.getDatedEvents();","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"    public ArrayList\u003cDatedEvent\u003e getDatedEvents() {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"        return datedEvents;","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"    public void setDatedEvents(ArrayList\u003cDatedEvent\u003e datedEvents) {","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"        this.datedEvents \u003d datedEvents;","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"    public Optional\u003cDatedEvent\u003e getDatedEvent(String name) {","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"        for (DatedEvent event: datedEvents) {","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"            if (event.getName().toLowerCase().equals(name.toLowerCase())) {","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"                return Optional.of(event);","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"        return Optional.empty();","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"     * Sets the reminder for the given event.","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"    public void setReminder(DatedEvent event) {","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"        datedEvents.add(new DatedEvent(event.getName(), event.getTimeBlockString(),","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"                event.getDate().toString(), true));","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"        datedEvents.remove(event);","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"     * Removes the reminder for the given event.","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"    public void removeReminder(DatedEvent event) {","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"        datedEvents.add(new DatedEvent(event.getName(), event.getTimeBlockString(),","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"                event.getDate().toString(), false));","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"        datedEvents.remove(event);","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string of the events that are happening today and have reminders.","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"    public String returnRemindedEvent() {","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"        for (DatedEvent event: datedEvents) {","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"            if (event.hasReminder() \u0026\u0026 event.getDate().equals(LocalDate.now())) {","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"                sb.append(event.getStringForReminder() + \"\\n\");","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"teozhengyang":49,"owenyeo":54}},{"path":"src/main/java/seedu/address/model/user/UserData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.model.user;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":" * Represents a User in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"public class UserData implements ReadOnlyUserData {","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"    private User user \u003d new User();","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    private final ObservableList\u003cUser\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"    private final ObservableList\u003cUser\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"    public UserData() {};","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"    public UserData(User user) {","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"        this.user \u003d user;","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"    public UserData(ReadOnlyUserData userData) {","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"        this(userData.getUser());","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    public void setUser(User user) {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"        this.user \u003d user;","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"    public void setDatedEvents(ArrayList\u003cDatedEvent\u003e datedEvents) {","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"        this.user.setDatedEvents(datedEvents);","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"     * Replaces the contents of the user with {@code neData}.","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"     * {@code newData} must not be null.","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"    public void resetData(ReadOnlyUserData newData) {","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"        this.setUser(newData.getUser());","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"        this.setDatedEvents(newData.getDatedEvents());","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"    public ObservableList\u003cUser\u003e getUserView() {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"    public User getUser() {","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"        return user;","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"    public ArrayList\u003cDatedEvent\u003e getDatedEvents() {","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"        return user.getDatedEvents();","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"            return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"        if (!(other instanceof UserData)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"            return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"        UserData otherUserData \u003d (UserData) other;","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"        return user.equals(otherUserData.user);","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"        sb.append(\"User : \" + user.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"teozhengyang":31,"owenyeo":56}},{"path":"src/main/java/seedu/address/model/user/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.model.user;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    private Path userDataFilePath \u003d Paths.get(\"data\" , \"userdata.json\");","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"        setUserDataFilePath(newUserPrefs.getUserDataFilePath());","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"    public Path getUserDataFilePath() {","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"        return userDataFilePath;","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"    public void setUserDataFilePath(Path userDataFilePath) {","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"        requireNonNull(userDataFilePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"        this.userDataFilePath \u003d userDataFilePath;","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"owenyeo":12,"-":87}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Cca;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.FreeTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.MeetUpEvent;","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Module;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Birthday(\"2001-11-01\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"                new Schedule(),","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"                 getTagSet(\"friends\")),","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Birthday(\"2001-11-01\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"                new Schedule(),","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Birthday(\"2000-01-01\"),","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"                new Schedule(),","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Birthday(\"2000-01-01\"),","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"                new Schedule(),","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Birthday(\"2000-01-01\"),","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"                new Schedule(),","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Birthday(\"2000-01-01\"),","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"                new Schedule(),","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"    public static List\u003cModule\u003e getSampleModules() {","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"        List\u003cModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"        modules.add(new Module(\"CS2103\", \"Wednesday 1200 1300\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"        modules.add(new Module(\"CS2101\", \"Tuesday 1200 1400\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"        modules.add(new Module(\"CS2100\", \"Monday 1400 1500\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"        return modules;","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"    public static List\u003cCca\u003e getSampleCcas() {","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"owenyeo"},"content":"        List\u003cCca\u003e ccas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"owenyeo"},"content":"        ccas.add(new Cca(\"Basketball\", \"Monday 1800 2000\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"owenyeo"},"content":"        ccas.add(new Cca(\"Soccer\", \"Tuesday 1800 2000\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"        ccas.add(new Cca(\"Tennis\", \"Wednesday 1800 2000\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"        return ccas;","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"    public static ArrayList\u003cDatedEvent\u003e getSampleDatedEvents() {","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"        ArrayList\u003cDatedEvent\u003e datedEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"owenyeo"},"content":"        datedEvents.add(DatedEvent.newDatedEvent(\"CS2103 Meeting 2023-10-10 1030 1130 y\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"owenyeo"},"content":"        datedEvents.add(DatedEvent.newDatedEvent(\"Walk Dog 2023-10-10 1030 1130 n\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"owenyeo"},"content":"        datedEvents.add(DatedEvent.newDatedEvent(\"Competitive sleeping 2023-10-10 1030 1130 y\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"owenyeo"},"content":"        return datedEvents;","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"owenyeo"},"content":"    public static List\u003cMeetUpEvent\u003e getSampleMeetUpEvents() {","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"owenyeo"},"content":"        List\u003cMeetUpEvent\u003e meetUpEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"owenyeo"},"content":"        meetUpEvents.add(MeetUpEvent.newMeetUpEvent(\"CS2103 Meeting 2023-10-10 1030 1130 y\", getSamplePersons()[0]));","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"owenyeo"},"content":"        meetUpEvents.add(MeetUpEvent.newMeetUpEvent(\"Walk Dog 2023-10-10 1030 1130 n\", getSamplePersons()[1]));","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"owenyeo"},"content":"        meetUpEvents.add(MeetUpEvent.newMeetUpEvent(\"Competitive sleeping 2023-10-10 1030 1130 y\",","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"owenyeo"},"content":"                getSamplePersons()[2]));","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"owenyeo"},"content":"        return meetUpEvents;","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"owenyeo"},"content":"    public static Schedule getSampleSchedule() {","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"owenyeo"},"content":"        return new Schedule(getSampleModules(), getSampleCcas(), getSampleDatedEvents(), getSampleMeetUpEvents());","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"owenyeo"},"content":"    public static User getSampleUser() {","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"owenyeo"},"content":"        return new User(new Name(\"Me\"), new Phone(\"00000000\"), new Email(\"me@example.com\"),","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"            new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Birthday(\"2000-01-01\"),","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"owenyeo"},"content":"                new Schedule(),","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"owenyeo"},"content":"                 getTagSet(\"me\"), new ArrayList\u003cDatedEvent\u003e());","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"owenyeo"},"content":"    public static ReadOnlyUserData getSampleUserData() {","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"owenyeo"},"content":"        return new UserData(getSampleUser());","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":117,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"andrefoo"},"content":"     * Returns a set of free times containing the list of strings given.","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"andrefoo"},"content":"    public static Set\u003cFreeTime\u003e getFreeTimeSet(String... strings) {","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"andrefoo"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"andrefoo"},"content":"                .map(FreeTime::new)","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"andrefoo"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"teozhengyang":12,"owenyeo":61,"andrefoo":9,"-":53}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedFreeTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.FreeTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":" * Jackson-friendly version of {@link FreeTime}.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"public class JsonAdaptedFreeTime {","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"    private final String freeTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"     * Constructs a {@code JsonAdaptedFreeTime} with the given {@code freeTimeName}.","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"    public JsonAdaptedFreeTime(String freeTimeName) {","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"        this.freeTime \u003d freeTimeName;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"     * Converts a given {@code FreeTime} into this class for Jackson use.","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"    public JsonAdaptedFreeTime(FreeTime source) {","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"        freeTime \u003d source.freeTimeString;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"andrefoo"},"content":"    @JsonValue","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"andrefoo"},"content":"    public String getFreeTime() {","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"andrefoo"},"content":"        return freeTime;","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"andrefoo"},"content":"     * Converts this Jackson-friendly adapted FreeTime object into the model\u0027s {@code FreeTime} object.","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted freeTime.","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"    public FreeTime toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"        if (!FreeTime.isValidFreeTime(freeTime)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"            throw new IllegalValueException(FreeTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"andrefoo"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"        return new FreeTime(freeTime);","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"teozhengyang":1,"owenyeo":1,"andrefoo":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"import seedu.address.storage.timetable.JsonAdaptedSchedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"public class JsonAdaptedPerson {","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"    private final String birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"    private final JsonAdaptedSchedule schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"            @JsonProperty(\"birthday\") String birthday,","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"            @JsonProperty(\"schedule\") JsonAdaptedSchedule schedule,","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"        birthday \u003d source.getBirthday().toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"        schedule \u003d new JsonAdaptedSchedule(source.getSchedule());","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"        ","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"teozhengyang"},"content":"        if (birthday \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"teozhengyang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Birthday\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"teozhengyang"},"content":"        if (!Birthday.isValidBirthday(birthday)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"teozhengyang"},"content":"            throw new IllegalValueException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"teozhengyang"},"content":"        final Birthday modelBirthday \u003d new Birthday(birthday);","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"owenyeo"},"content":"        if (schedule \u003d\u003d null) {","lastModifiedDate":"2023-10-29"},{"lineNumber":126,"author":{"gitId":"owenyeo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Schedule\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":127,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":128,"author":{"gitId":"owenyeo"},"content":"        final Schedule modelSchedule \u003d schedule.toModelType();","lastModifiedDate":"2023-10-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"owenyeo"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelBirthday, modelSchedule, modelTags);","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"teozhengyang":13,"owenyeo":13,"-":108}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"public class JsonAdaptedTag {","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"owenyeo":1,"-":47}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedUser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"import seedu.address.storage.timetable.JsonAdaptedDatedEvent;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"import seedu.address.storage.timetable.JsonAdaptedSchedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":" * Jackson-friendly version of {@link User}.","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"public class JsonAdaptedUser {","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"User\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    private final String name;","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"    private final String phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"    private final String email;","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"    private final String address;","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"    private final String birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"    private final JsonAdaptedSchedule schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"    private final List\u003cJsonAdaptedDatedEvent\u003e datedEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"     * Constructs a {@code JsonAdaptedUser} with the given person details.","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"    public JsonAdaptedUser(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"                           @JsonProperty(\"birthday\") String birthday,","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"            @JsonProperty(\"schedule\") JsonAdaptedSchedule schedule,","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"            @JsonProperty(\"datedEvents\") List\u003cJsonAdaptedDatedEvent\u003e datedEvents) {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"        if (datedEvents !\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"            this.datedEvents.addAll(datedEvents);","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"     * Converts a given {@code User} into this class for Jackson use.","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"owenyeo"},"content":"    public JsonAdaptedUser(User source) {","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"owenyeo"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"owenyeo"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"        birthday \u003d source.getBirthday().toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"        schedule \u003d new JsonAdaptedSchedule(source.getSchedule());","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"owenyeo"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"owenyeo"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"owenyeo"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"owenyeo"},"content":"        datedEvents.addAll(source.getDatedEvents().stream()","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"owenyeo"},"content":"                .map(JsonAdaptedDatedEvent::new)","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"owenyeo"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"owenyeo"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code User} object.","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"owenyeo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"owenyeo"},"content":"    public User toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"owenyeo"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"owenyeo"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"owenyeo"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"owenyeo"},"content":"        }       ","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"owenyeo"},"content":"        final List\u003cDatedEvent\u003e personDatedEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"owenyeo"},"content":"        for (JsonAdaptedDatedEvent datedEvent : datedEvents) {","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"owenyeo"},"content":"            personDatedEvents.add(datedEvent.toModelType());","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"owenyeo"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"owenyeo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"owenyeo"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"owenyeo"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"owenyeo"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"owenyeo"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"owenyeo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"owenyeo"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"owenyeo"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"owenyeo"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"owenyeo"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"owenyeo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"owenyeo"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"owenyeo"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"owenyeo"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"owenyeo"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"owenyeo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"owenyeo"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"owenyeo"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"owenyeo"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"teozhengyang"},"content":"        if (birthday \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"teozhengyang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"teozhengyang"},"content":"                    Birthday.class.getSimpleName()));","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"teozhengyang"},"content":"        if (!Birthday.isValidBirthday(birthday)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"teozhengyang"},"content":"            throw new IllegalValueException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"teozhengyang"},"content":"        final Birthday modelBirthday \u003d new Birthday(birthday);","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"owenyeo"},"content":"        if (schedule \u003d\u003d null) {","lastModifiedDate":"2023-10-29"},{"lineNumber":143,"author":{"gitId":"owenyeo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Schedule\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":144,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"owenyeo"},"content":"        final Schedule modelSchedule \u003d schedule.toModelType();","lastModifiedDate":"2023-10-29"},{"lineNumber":146,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":147,"author":{"gitId":"owenyeo"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"owenyeo"},"content":"        final ArrayList\u003cDatedEvent\u003e modelDatedEvents \u003d new ArrayList\u003c\u003e(personDatedEvents);","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"owenyeo"},"content":"        return new User(modelName, modelPhone, modelEmail, modelAddress, modelBirthday, modelSchedule,","lastModifiedDate":"2023-10-29"},{"lineNumber":151,"author":{"gitId":"teozhengyang"},"content":"                modelTags, modelDatedEvents);","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"teozhengyang":16,"owenyeo":139}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"public class JsonSerializableAddressBook {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"owenyeo":1,"-":59}},{"path":"src/main/java/seedu/address/storage/JsonSerializableUserData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":" * An Immutable UserData that is serializable to JSON format.","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"@JsonRootName(value \u003d \"userdata\")","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"public class JsonSerializableUserData {","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"    private final JsonAdaptedUser user;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"     * Constructs a {@code JsonSerializableUserData} with the given persons.","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"    public JsonSerializableUserData(@JsonProperty(\"user\") JsonAdaptedUser user) {","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"        this.user \u003d user;","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableUserData}.","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"    public JsonSerializableUserData(ReadOnlyUserData source) {","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"        user \u003d new JsonAdaptedUser(source.getUser());","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"     * Converts this address book into the model\u0027s {@code UserData} object.","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"    public UserData toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"        UserData userData \u003d new UserData(this.user.toModelType());","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"        return userData;","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"owenyeo":45}},{"path":"src/main/java/seedu/address/storage/JsonUserDataStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"public class JsonUserDataStorage implements UserDataStorage {","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUserDataStorage.class);","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    public JsonUserDataStorage(Path filePath) {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"    public Path getUserDataFilePath() {","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"        return filePath;","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"    public Optional\u003cReadOnlyUserData\u003e readUserData() throws DataLoadingException {","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"        return readUserData(filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"     * Similar to {@link #readUserData()}.","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"    public Optional\u003cReadOnlyUserData\u003e readUserData(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"        Optional\u003cJsonSerializableUserData\u003e jsonUserData \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"                filePath, JsonSerializableUserData.class);","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"        if (!jsonUserData.isPresent()) {","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"        try {","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"            return Optional.of(jsonUserData.get().toModelType());","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"    public void saveUserData(ReadOnlyUserData userData) throws IOException {","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"        saveUserData(userData, filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"     * Similar to {@link #saveUserData(ReadOnlyUserData)}.","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"owenyeo"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"owenyeo"},"content":"    public void saveUserData(ReadOnlyUserData userData, Path filePath) throws IOException {","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"        requireNonNull(userData);","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"owenyeo"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableUserData(userData), filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"owenyeo":81}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"owenyeo":2,"-":45}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, UserDataStorage {","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"    Optional\u003cReadOnlyUserData\u003e readUserData() throws DataLoadingException;","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"    void saveUserData(ReadOnlyUserData userData) throws IOException;","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"owenyeo":10,"-":29}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"    private UserDataStorage userDataStorage;","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    public StorageManager(AddressBookStorage addressBookStorage,","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"        UserPrefsStorage userPrefsStorage, UserDataStorage userDataStorage) {","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"        this.userDataStorage \u003d userDataStorage;","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"owenyeo"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserData methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"owenyeo"},"content":"    public Path getUserDataFilePath() {","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"owenyeo"},"content":"        return userDataStorage.getUserDataFilePath();","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"owenyeo"},"content":"    public Optional\u003cReadOnlyUserData\u003e readUserData() throws DataLoadingException {","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"owenyeo"},"content":"        return readUserData(userDataStorage.getUserDataFilePath());","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"owenyeo"},"content":"    public Optional\u003cReadOnlyUserData\u003e readUserData(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"owenyeo"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"owenyeo"},"content":"        return userDataStorage.readUserData(filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"owenyeo"},"content":"    public void saveUserData(ReadOnlyUserData userData) throws IOException {","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"owenyeo"},"content":"        saveUserData(userData, userDataStorage.getUserDataFilePath());","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"owenyeo"},"content":"    public void saveUserData(ReadOnlyUserData userData, Path filePath) throws IOException {","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"owenyeo"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"owenyeo"},"content":"        userDataStorage.saveUserData(userData, filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"owenyeo":36,"-":75}},{"path":"src/main/java/seedu/address/storage/UserDataStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"public interface UserDataStorage {","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    Path getUserDataFilePath();","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"     * Returns UserData data as a {@link ReadOnlyUserData}.","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    Optional\u003cReadOnlyUserData\u003e readUserData() throws DataLoadingException;","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"     * @see #getUserDataFilePath()","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"    Optional\u003cReadOnlyUserData\u003e readUserData(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"     * Saves the given {@link ReadOnlyUserData \\} to the storage.","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"     * @param userData cannot be null.","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"    void saveUserData(ReadOnlyUserData userData) throws IOException;","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"     * @see #saveUserData(ReadOnlyUserData)","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"    void saveUserData(ReadOnlyUserData userData, Path filePath) throws IOException;","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"owenyeo":46}},{"path":"src/main/java/seedu/address/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":" * Represents a storage for {@link seedu.address.model.user.UserPrefs}.","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"     * Saves the given {@link seedu.address.model.user.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"owenyeo":4,"-":32}},{"path":"src/main/java/seedu/address/storage/timetable/JsonAdaptedCca.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage.timetable;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Cca;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.TimeBlock;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"public class JsonAdaptedCca {","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"    private final String name;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"    private final String timeBlockString;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"    public JsonAdaptedCca(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"        @JsonProperty(\"timeblock\") String timeBlockString) {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"        this.timeBlockString \u003d timeBlockString;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"    public JsonAdaptedCca(Cca source) {","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"        name \u003d source.getName();","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"        timeBlockString \u003d source.getTimeBlockString();","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"    ","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    public Cca toModelType() throws IllegalValueException {","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"            throw new IllegalValueException(\"CCA name should not be null\");","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        if (timeBlockString \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"            throw new IllegalValueException(\"Time block should not be null\");","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"        return new Cca(name, timeBlockString);","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"teozhengyang":8,"owenyeo":29,"andrefoo":1}},{"path":"src/main/java/seedu/address/storage/timetable/JsonAdaptedDatedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage.timetable;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.TimeBlock;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":" * Jackson-friendly version of {@link DatedEvent}.","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"public class JsonAdaptedDatedEvent {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"    private final String name;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    private final String timeBlockString;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"    private final String localDateString;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"    private final boolean reminder;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"     * Constructs a {@code JsonAdaptedDatedEvent} with the given {@code DatedEventName}.","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    public JsonAdaptedDatedEvent(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"            @JsonProperty(\"timeblock\") String timeBlockString,","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"            @JsonProperty(\"date\") String localDateString,","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"            @JsonProperty(\"reminder\") boolean reminder) {","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"        this.timeBlockString \u003d timeBlockString;","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"        this.localDateString \u003d localDateString;","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"        this.reminder \u003d reminder;","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"     * Converts a given {@code DatedEvent} into this class for Jackson use.","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"    public JsonAdaptedDatedEvent(DatedEvent source) {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"        name \u003d source.getName();","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"        timeBlockString \u003d source.getTimeBlockString();","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"        LocalDate date \u003d source.getDate();","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"        localDateString \u003d date.toString();","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"        reminder \u003d source.hasReminder();","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"     * Converts this Jackson-friendly adapted DatedEvent object into the model\u0027s {@code DatedEvent} object.","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted datedEvent.","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"    public DatedEvent toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"        if (!DatedEvent.isValidDateTimeString(localDateString) || !TimeBlock.isValidTimeBlock(timeBlockString)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"            throw new IllegalValueException(DatedEvent.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"        LocalDate date \u003d LocalDate.parse(localDateString);","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"        return new DatedEvent(name, timeBlockString, date, reminder);","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"teozhengyang":1,"owenyeo":61}},{"path":"src/main/java/seedu/address/storage/timetable/JsonAdaptedMeetUpEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage.timetable;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.MeetUpEvent;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.TimeBlock;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.storage.JsonAdaptedPerson;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":" * Jackson-friendly version of {@link MeetUpEvent}.","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"public class JsonAdaptedMeetUpEvent {","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    private final String name;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"    private final String timeBlockString;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"    private final String localDateString;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"    private final boolean reminder;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"    private final JsonAdaptedPerson friend;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"     * Constructs a {@code JsonAdaptedMeetUpEvent} with the given {@code MeetUpEventName}.","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    public JsonAdaptedMeetUpEvent(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"            @JsonProperty(\"timeblock\") String timeBlockString,","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"            @JsonProperty(\"date\") String localDateString,","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"            @JsonProperty(\"reminder\") boolean reminder,","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"            @JsonProperty(\"friend\") JsonAdaptedPerson friend) {","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"        this.timeBlockString \u003d timeBlockString;","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"        this.localDateString \u003d localDateString;","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"        this.reminder \u003d reminder;","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"        this.friend \u003d friend;","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"     * Converts a given {@code MeetUpEvent} into this class for Jackson use.","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"    public JsonAdaptedMeetUpEvent(MeetUpEvent source) {","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"        name \u003d source.getName();","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"        timeBlockString \u003d source.getTimeBlockString();","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"        LocalDate date \u003d source.getDate();","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"        localDateString \u003d date.toString();","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"        reminder \u003d source.hasReminder();","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"        friend \u003d new JsonAdaptedPerson(source.getFriend());","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"     * Converts this Jackson-friendly adapted MeetUpEvent object into the model\u0027s {@code MeetUpEvent} object.","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted MeetUpEvent.","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"    public MeetUpEvent toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"        if (!MeetUpEvent.isValidDateTimeString(localDateString) || !TimeBlock.isValidTimeBlock(timeBlockString)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"            throw new IllegalValueException(MeetUpEvent.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"        LocalDate date \u003d LocalDate.parse(localDateString);","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"        return new MeetUpEvent(name, timeBlockString, date.toString(), reminder, friend.toModelType());","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"teozhengyang":1,"owenyeo":66}},{"path":"src/main/java/seedu/address/storage/timetable/JsonAdaptedModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage.timetable;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.Cca;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Module;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.TimeBlock;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"public class JsonAdaptedModule {","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"    private final String name;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"    private final String timeBlockString;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"    public JsonAdaptedModule(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"        @JsonProperty(\"timeblock\") String timeBlockString) {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"        this.timeBlockString \u003d timeBlockString;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"    public JsonAdaptedModule(Module source) {","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"        name \u003d source.getName();","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"        timeBlockString \u003d source.getTimeBlockString();","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"    ","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    public Module toModelType() throws IllegalValueException {","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"            throw new IllegalValueException(\"Module name should not be null\");","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        if (timeBlockString \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"            throw new IllegalValueException(\"Time block should not be null\");","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"        return new Module(name, timeBlockString);","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"teozhengyang":8,"owenyeo":30}},{"path":"src/main/java/seedu/address/storage/timetable/JsonAdaptedSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage.timetable;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Cca;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.MeetUpEvent;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Module;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"public class JsonAdaptedSchedule {","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"    List\u003cJsonAdaptedDatedEvent\u003e datedEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    List\u003cJsonAdaptedModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"    List\u003cJsonAdaptedCca\u003e ccas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"    List\u003cJsonAdaptedMeetUpEvent\u003e meetUpEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"    public JsonAdaptedSchedule(@JsonProperty(\"datedEvents\") List\u003cJsonAdaptedDatedEvent\u003e datedEvents,","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"                               @JsonProperty(\"modules\") List\u003cJsonAdaptedModule\u003e modules,","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"                               @JsonProperty(\"cca\") List\u003cJsonAdaptedCca\u003e cca,","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"                               @JsonProperty(\"meetupevents\") List\u003cJsonAdaptedMeetUpEvent\u003e meetUpEvents) {","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"        this.datedEvents \u003d datedEvents;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"        this.ccas \u003d cca;","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"        this.meetUpEvents \u003d meetUpEvents;","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    public JsonAdaptedSchedule(Schedule source) {","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"        List\u003cDatedEvent\u003e datedEventList \u003d source.getDatedEventsList();","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"        List\u003cModule\u003e modulesList \u003d source.getModulesList();","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"        List\u003cCca\u003e ccaList \u003d source.getCcasList();","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"        List\u003cMeetUpEvent\u003e meetUpEventList \u003d source.getMeetUpEventsList();","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"        for (DatedEvent datedEvent : datedEventList) {","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"            datedEvents.add(new JsonAdaptedDatedEvent(datedEvent));","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"        for (Module module : modulesList) {","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"            modules.add(new JsonAdaptedModule(module));","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"        for (Cca cca : ccaList) {","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"            ccas.add(new JsonAdaptedCca(cca));","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"        for (MeetUpEvent meetUpEvent : meetUpEventList) {","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"            meetUpEvents.add(new JsonAdaptedMeetUpEvent(meetUpEvent));","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"    public List\u003cDatedEvent\u003e toModelTypeDatedEventList() throws IllegalValueException {","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"        List\u003cDatedEvent\u003e datedEventList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"        for (JsonAdaptedDatedEvent datedEvent : datedEvents) {","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"            datedEventList.add(datedEvent.toModelType());","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"        return datedEventList;","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"    public List\u003cModule\u003e toModelTypeModuleList() throws IllegalValueException {","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"        List\u003cModule\u003e modulesList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"        for (JsonAdaptedModule module : modules) {","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"            modulesList.add(module.toModelType());","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"        return modulesList;","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"    public List\u003cCca\u003e toModelTypeCcaList() throws IllegalValueException {","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"        List\u003cCca\u003e ccaList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"        for (JsonAdaptedCca cca : ccas) {","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"owenyeo"},"content":"            ccaList.add(cca.toModelType());","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"        return ccaList;","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"    public List\u003cMeetUpEvent\u003e toModelTypeMeetUpEventList() throws IllegalValueException {","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"        List\u003cMeetUpEvent\u003e meetUpEventList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"owenyeo"},"content":"        for (JsonAdaptedMeetUpEvent meetUpEvent : meetUpEvents) {","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"owenyeo"},"content":"            meetUpEventList.add(meetUpEvent.toModelType());","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"        return meetUpEventList;","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"    public Schedule toModelType() throws IllegalValueException {","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"        List\u003cDatedEvent\u003e datedEventList \u003d toModelTypeDatedEventList();","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"        List\u003cModule\u003e modulesList \u003d toModelTypeModuleList();","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"        List\u003cCca\u003e ccaList \u003d toModelTypeCcaList();","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"        List\u003cMeetUpEvent\u003e meetUpEventList \u003d toModelTypeMeetUpEventList();","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"owenyeo"},"content":"        return new Schedule(modulesList, ccaList, datedEventList, meetUpEventList);","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"teozhengyang":21,"owenyeo":76}},{"path":"src/main/java/seedu/address/ui/ListCellSelectedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import javafx.event.Event;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"import javafx.event.EventType;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":" * The {@code ListCellSelectedEvent} class represents an event that is fired when a list cell is selected.","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":" * It provides information about the selected person.","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"public class ListCellSelectedEvent extends Event {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"     * The event type for list cell selected events.","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"    public static final EventType\u003cListCellSelectedEvent\u003e LIST_CELL_SELECTED \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"            new EventType\u003c\u003e(Event.ANY, \"LIST_CELL_SELECTED\");","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"    private final Person selectedPerson;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"     * Constructs a new {@code ListCellSelectedEvent} with the specified selected person.","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"     * @param selectedPerson The selected person.","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"    public ListCellSelectedEvent(Person selectedPerson) {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"        super(LIST_CELL_SELECTED);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"        this.selectedPerson \u003d selectedPerson;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"     * Gets the selected person associated with this event.","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"     * @return The selected person.","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"    public Person getSelectedPerson() {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"        return selectedPerson;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kristayeo":38}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"    private UserCard userProfile;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"    private Person selectedPerson;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"    private int selectedPersonPos;","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"    private SelectedFriendCard friendProfile;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"    private StackPane userProfilePlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"kristayeo"},"content":"    private StackPane selectedFriendPlaceholder;","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"kristayeo"},"content":"        userProfile \u003d new UserCard(logic.getUser());","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"kristayeo"},"content":"        userProfilePlaceholder.getChildren().add(userProfile.getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"kristayeo"},"content":"        Scene scene \u003d primaryStage.getScene();","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"kristayeo"},"content":"        if (scene !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"kristayeo"},"content":"            scene.addEventFilter(ListCellSelectedEvent.LIST_CELL_SELECTED, event -\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"kristayeo"},"content":"                selectedPerson \u003d event.getSelectedPerson();","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"kristayeo"},"content":"                if (selectedPerson !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"kristayeo"},"content":"                    friendProfile \u003d new SelectedFriendCard(selectedPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"kristayeo"},"content":"                    selectedFriendPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"kristayeo"},"content":"                    selectedFriendPlaceholder.getChildren().add(friendProfile.getRoot());","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"kristayeo"},"content":"                    selectedPersonPos \u003d logic.getFilteredPersonList().indexOf(selectedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"kristayeo"},"content":"                }","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"kristayeo"},"content":"            });","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"kristayeo"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"kristayeo"},"content":"            if (selectedPerson !\u003d null \u0026\u0026 commandResult.isEdit()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"kristayeo"},"content":"                friendProfile \u003d new SelectedFriendCard(logic.getFilteredPersonList().get(selectedPersonPos));","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"kristayeo"},"content":"                selectedFriendPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"kristayeo"},"content":"                selectedFriendPlaceholder.getChildren().add(friendProfile.getRoot());","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"kristayeo"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kristayeo":39,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"    private Label birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"    private FlowPane freeTimes;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"        birthday.setText(\"Birthday: \" + person.getBirthday().toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"        person.getFreeTimes().stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"andrefoo"},"content":"                .sorted(Comparator.comparing(freeTime -\u003e freeTime.freeTimeString))","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"                .forEach(freeTime -\u003e freeTimes.getChildren().add(new Label(freeTime.freeTimeString)));","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"teozhengyang":3,"andrefoo":2,"kristayeo":3,"-":59}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"                setOnMouseClicked(event -\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"                    if (event.getClickCount() \u003d\u003d 1) {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"                        Person selectedPerson \u003d getItem();","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"                        fireEvent(new ListCellSelectedEvent(selectedPerson));","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"                    }","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"                });","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kristayeo":9,"-":47}},{"path":"src/main/java/seedu/address/ui/Reminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import javafx.geometry.Rectangle2D;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import javafx.scene.control.*;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import javafx.stage.Screen;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import javafx.stage.Window;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"public class Reminder {","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    public static void showReminder(Model model, Stage primaryStage) {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"        Dialog\u003cButtonType\u003e dialog \u003d new Dialog\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"        dialog.setTitle(\"Reminders\");","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"        String remindedEvents \u003d model.getUser().returnRemindedEvent();","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"        String remindedBirthday \u003d model.getBirthdayList();","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"        // Create the first header label and content","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"        Label header1 \u003d new Label(\"Birthday\");","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        header1.setStyle(\"-fx-font-size: 16px; -fx-font-weight: bold; -fx-text-fill: white;\");","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"        TextArea content1 \u003d new TextArea(remindedBirthday);","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        content1.setStyle(\"-fx-font-size: 12px;\");","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        content1.setEditable(false);","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        content1.setPrefColumnCount(25); // Adjust the preferred column count","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"        content1.setPrefRowCount(3);    // Adjust the preferred row count","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        // Create the second header label and content","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        Label header2 \u003d new Label(\"Schedule\");","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        header2.setStyle(\"-fx-font-size: 16px; -fx-font-weight: bold; -fx-text-fill: white;\");","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"        TextArea content2 \u003d new TextArea(remindedEvents);","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"        content2.setStyle(\"-fx-font-size: 12px;\");","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"        content2.setEditable(false);","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"        content2.setPrefColumnCount(25); // Adjust the preferred column count","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"        content2.setPrefRowCount(8);    // Adjust the preferred row count","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        // Create a VBox to hold the components","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"        VBox dialogVBox \u003d new VBox(header1, content1, header2, content2);","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        dialog.getDialogPane().setContent(dialogVBox);","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"        // Add OK and Cancel buttons","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"        dialog.getDialogPane().getButtonTypes().addAll(ButtonType.OK, ButtonType.CANCEL);","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"        // Get the primary screen dimensions","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"        Screen screen \u003d Screen.getPrimary();","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"        Rectangle2D bounds \u003d screen.getVisualBounds();","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"        // Calculate the position for the bottom right corner","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        double x \u003d bounds.getMaxX() - dialog.getDialogPane().getPrefWidth() - 340;","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        double y \u003d bounds.getMaxY() - dialog.getDialogPane().getPrefHeight() - 390;","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"        // Ensure the dialog stays within the screen boundaries","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"        if (x \u003c bounds.getMinX()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"            x \u003d bounds.getMinX();","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"        if (y \u003c bounds.getMinY()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"            y \u003d bounds.getMinY();","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"        // Set the dialog\u0027s position","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"        dialog.initOwner(primaryStage);","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"        Window window \u003d dialog.getDialogPane().getScene().getWindow();","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"        window.setX(x);","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"        window.setY(y);","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"        // Show the dialog","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"        dialog.showAndWait();","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"teozhengyang":76}},{"path":"src/main/java/seedu/address/ui/SelectedFriendCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":" * The {@code SelectedFriendCard} class represents a card that displays detailed information","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":" * about a selected friend (person).","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":" * It is typically used to display the information of a friend when selected in the user interface.","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"public class SelectedFriendCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"    private static final String FXML \u003d \"SelectedFriendCard.fxml\";","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"    public final Person selectedFriend;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"    private Label userName;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"    private Label phone;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"    private Label address;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"    private Label email;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"    private FlowPane freeTimes;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"     * Constructs a new {@code SelectedFriendCard} with the specified selected friend.","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"     * @param selectedFriend The selected friend whose information is to be displayed on this card.","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"    public SelectedFriendCard(Person selectedFriend) {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"        super(FXML);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"        this.selectedFriend \u003d selectedFriend;","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"        userName.setText(selectedFriend.getName().fullName);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"        phone.setText(selectedFriend.getPhone().value);","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"        address.setText(selectedFriend.getAddress().value);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"        email.setText(selectedFriend.getEmail().value);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"        selectedFriend.getFreeTimes().stream()","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"                .sorted(Comparator.comparing(freeTime -\u003e freeTime.freeTimeString))","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"                .forEach(freeTime -\u003e freeTimes.getChildren().add(new Label(freeTime.freeTimeString)));","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"        selectedFriend.getTags().stream()","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kristayeo":53}},{"path":"src/main/java/seedu/address/ui/UserCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":" * Represents a user card in the GUI.","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":" * Displays the user\u0027s name, phone number, address, email, free times, and tags.","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"public class UserCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"    private static final String FXML \u003d \"UserCard.fxml\";","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"    public final Person user;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"    private Label userName;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"    private Label phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"    private Label address;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"    private Label email;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"    private Label birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"    private FlowPane freeTimes;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"     * Creates a new UserCard with the given Person object.","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"     * @param user The Person object to display in the card.","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"    public UserCard(Person user) {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"        this.user \u003d user;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"        userName.setText(user.getName().fullName);","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"        phone.setText(user.getPhone().value);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"        address.setText(user.getAddress().value);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"        email.setText(user.getEmail().value);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"        birthday.setText(\"Birthday: \" + user.getBirthday().toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"        user.getFreeTimes().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"                .sorted(Comparator.comparing(freeTime -\u003e freeTime.freeTimeString))","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"                .forEach(freeTime -\u003e freeTimes.getChildren().add(new Label(freeTime.freeTimeString)));","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"        user.getTags().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"teozhengyang":3,"andrefoo":2,"lululwtv":8,"kristayeo":43}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":354,"author":{"gitId":"kristayeo"},"content":"#freeTimes {","lastModifiedDate":"2023-10-17"},{"lineNumber":355,"author":{"gitId":"kristayeo"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-17"},{"lineNumber":356,"author":{"gitId":"kristayeo"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-17"},{"lineNumber":357,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":358,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":359,"author":{"gitId":"kristayeo"},"content":"#freeTimes .label {","lastModifiedDate":"2023-10-17"},{"lineNumber":360,"author":{"gitId":"kristayeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-17"},{"lineNumber":361,"author":{"gitId":"kristayeo"},"content":"    -fx-background-color: #6b358c;","lastModifiedDate":"2023-10-17"},{"lineNumber":362,"author":{"gitId":"kristayeo"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-17"},{"lineNumber":363,"author":{"gitId":"kristayeo"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-17"},{"lineNumber":364,"author":{"gitId":"kristayeo"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-17"},{"lineNumber":365,"author":{"gitId":"kristayeo"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-17"},{"lineNumber":366,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":367,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":368,"author":{"gitId":"kristayeo"},"content":"#userProfilePlaceholder .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":369,"author":{"gitId":"kristayeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":370,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":371,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":372,"author":{"gitId":"kristayeo"},"content":".ListView {","lastModifiedDate":"2023-10-25"},{"lineNumber":373,"author":{"gitId":"kristayeo"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-25"},{"lineNumber":374,"author":{"gitId":"kristayeo"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-25"},{"lineNumber":375,"author":{"gitId":"kristayeo"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-25"},{"lineNumber":376,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":377,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":378,"author":{"gitId":"kristayeo"},"content":"#selectedFriendPlaceholder .label {","lastModifiedDate":"2023-10-25"},{"lineNumber":379,"author":{"gitId":"kristayeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-25"},{"lineNumber":380,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":381,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":382,"author":{"gitId":"kristayeo"},"content":".display_small_label {","lastModifiedDate":"2023-10-25"},{"lineNumber":383,"author":{"gitId":"kristayeo"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-25"},{"lineNumber":384,"author":{"gitId":"kristayeo"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-25"},{"lineNumber":385,"author":{"gitId":"kristayeo"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-25"},{"lineNumber":386,"author":{"gitId":"kristayeo"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":387,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kristayeo":35,"-":352}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"         title\u003d\"TimetaBRO\" minWidth\u003d\"1200\" minHeight\u003d\"800\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"    \u003cImage url\u003d\"@/images/calendar.png\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"          \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                     minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"kristayeo"},"content":"        \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"800\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"kristayeo"},"content":"          \u003crowConstraints\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"kristayeo"},"content":"            \u003cRowConstraints percentHeight\u003d\"50\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"kristayeo"},"content":"            \u003cRowConstraints percentHeight\u003d\"50\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"kristayeo"},"content":"          \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"kristayeo"},"content":"          \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"kristayeo"},"content":"            \u003cColumnConstraints percentWidth\u003d\"100\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"kristayeo"},"content":"          \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"kristayeo"},"content":"          \u003cVBox styleClass\u003d\"pane-with-border\" GridPane.rowIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"kristayeo"},"content":"            \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"userProfilePlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"kristayeo"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"kristayeo"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"kristayeo"},"content":"          \u003cVBox styleClass\u003d\"pane-with-border\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"kristayeo"},"content":"            \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"selectedFriendPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"kristayeo"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"kristayeo"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"kristayeo"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"kristayeo"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"kristayeo":35,"-":57}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"      \u003cLabel fx:id\u003d\"birthday\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthday\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"      \u003cFlowPane fx:id\u003d\"freeTimes\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"teozhengyang":1,"kristayeo":1,"-":36}},{"path":"src/main/resources/view/SelectedFriendCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.shape.Line?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.control.skin.TableHeaderRow?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.control.TableColumn?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" \u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"            \u003cLabel fx:id\u003d\"userName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"\u003e\u003c/Label\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"            \u003cSeparator\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"                    \u003cInsets bottom\u003d\"5\" top\u003d\"5\" right\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"            \u003c/Separator\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"display_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"display_small_label\" text\u003d\"\\$address\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"display_small_label\" text\u003d\"\\$email\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"kristayeo"},"content":"            \u003cFlowPane fx:id\u003d\"freeTimes\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"kristayeo"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"kristayeo"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"kristayeo"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"kristayeo"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kristayeo":65}},{"path":"src/main/resources/view/UserCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.shape.Line?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.control.skin.TableHeaderRow?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"\u003c?import javafx.scene.control.TableColumn?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" \u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"            \u003cLabel styleClass\u003d\"cell_big_label\"\u003eMy Profile\u003c/Label\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"            \u003cSeparator\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kristayeo"},"content":"                    \u003cInsets bottom\u003d\"3\" top\u003d\"5\" right\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kristayeo"},"content":"            \u003c/Separator\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"kristayeo"},"content":"            \u003cLabel fx:id\u003d\"userName\" text\u003d\"\\$first\" styleClass\u003d\"display_small_label\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"kristayeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"kristayeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"kristayeo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"kristayeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"kristayeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"kristayeo"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"display_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"kristayeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"kristayeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"kristayeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"display_small_label\" text\u003d\"\\$address\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"kristayeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"kristayeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"kristayeo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"kristayeo"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"display_small_label\" text\u003d\"\\$email\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"kristayeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"kristayeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"kristayeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"kristayeo"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"            \u003cLabel fx:id\u003d\"birthday\" styleClass\u003d\"display_small_label\" text\u003d\"\\$birthday\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"kristayeo"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"kristayeo"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"kristayeo"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"            \u003cFlowPane fx:id\u003d\"freeTimes\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"                    \u003cInsets bottom\u003d\"2\" top\u003d\"2\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"kristayeo"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"kristayeo"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"kristayeo"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"teozhengyang":8,"kristayeo":69}},{"path":"src/test/java/seedu/address/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2018-04-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"        AppParameters appParameters1 \u003d new AppParameters();","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"        AppParameters appParameters2 \u003d new AppParameters();","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"        // Set the same configPath for both objects","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"        appParameters1.setConfigPath(Paths.get(\"test_config_path\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"        appParameters2.setConfigPath(Paths.get(\"test_config_path\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(appParameters1.hashCode(), appParameters2.hashCode(),","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"                \"Hash codes of equal AppParameters should be the same\");","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"teozhengyang":13,"-":89}},{"path":"src/test/java/seedu/address/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    public void testEqualsWithNull() {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"        Config config1 \u003d new Config();","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        Config config2 \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(config1.equals(config2));","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        Config config1 \u003d new Config();","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        Config config2 \u003d new Config();","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"        int hashCode1 \u003d config1.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"        int hashCode2 \u003d config2.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(hashCode1, hashCode2, \"Hash codes should be equal for equal objects\");","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"teozhengyang":20,"-":27}},{"path":"src/test/java/seedu/address/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2019-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    public void testEqualsWithNull() {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"        GuiSettings settings \u003d new GuiSettings();","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(settings.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"        GuiSettings settings1 \u003d new GuiSettings();","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"        GuiSettings settings2 \u003d new GuiSettings();","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"        int hashCode1 \u003d settings1.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        int hashCode2 \u003d settings2.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(hashCode1, hashCode2, \"Hash codes should be equal for equal objects\");","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"teozhengyang":18,"-":16}},{"path":"src/test/java/seedu/address/commons/core/LogsCenterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"public class LogsCenterTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    public void testInit() {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(Level.INFO, LogsCenter.getCurrentLogLevel());","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"teozhengyang":19}},{"path":"src/test/java/seedu/address/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"teozhengyang"},"content":"    public void testCompareToMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"teozhengyang"},"content":"        Version version1 \u003d new Version(2, 1, 4, false);","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"teozhengyang"},"content":"        Version version2 \u003d new Version(2, 1, 4, false);","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"teozhengyang"},"content":"        Version version3 \u003d new Version(2, 1, 3, false);","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"teozhengyang"},"content":"        Version version4 \u003d new Version(1, 2, 3, true);","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"teozhengyang"},"content":"        int result1 \u003d version1.compareTo(version2); // Should return 0 (equal)","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"teozhengyang"},"content":"        int result2 \u003d version1.compareTo(version3); // Should return 1 (greater)","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"teozhengyang"},"content":"        int result3 \u003d version1.compareTo(version4); // Should return 1 (greater)","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"teozhengyang"},"content":"        int result4 \u003d version3.compareTo(version1); // Should return -1 (smaller)","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(0, result1, \"compareTo should return 0 when versions are equal\");","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(1, result2, \"compareTo should return 1 when version1 is greater\");","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(1, result3, \"compareTo should return 1 when version1 is greater\");","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(-1, result4, \"compareTo should return -1 when version3 is smaller\");","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"teozhengyang"},"content":"    public void testEqualsMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"teozhengyang"},"content":"        Version version1 \u003d new Version(2, 1, 4, false);","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"teozhengyang"},"content":"        Version version2 \u003d new Version(2, 1, 4, false);","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"teozhengyang"},"content":"        Version version3 \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(version1.equals(version1), \"A version should be equal to itself\");","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(version1.equals(version2), \"Two versions with the same values should be equal\");","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(version1.equals(version3), \"Two different versions should not be equal\");","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"teozhengyang":30,"-":135}},{"path":"src/test/java/seedu/address/commons/util/ToStringBuilderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"public class ToStringBuilderTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"    private ToStringBuilder builder;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"        builder \u003d new ToStringBuilder(\"TestObject\");","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    public void addField_singleField_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"        builder.add(\"fieldName\", \"fieldValue\");","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \"TestObject{\" + \"fieldName\u003dfieldValue\" + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, builder.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    public void addField_multipleFields_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"        builder.add(\"field1\", \"value1\")","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"                .add(\"field2\", \"value2\")","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"                .add(\"field3\", \"value3\");","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \"TestObject{\" + \"field1\u003dvalue1, field2\u003dvalue2, field3\u003dvalue3\" + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, builder.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    public void addField_emptyBuilder_noFields() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \"TestObject{}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, builder.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"    public void addFieldWithNullValue_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"        builder.add(\"nullField\", null);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \"TestObject{\" + \"nullField\u003dnull\" + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, builder.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"    public void addFieldWithSpecialCharacters_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"        builder.add(\"specialField\", \"#$%^\u0026*\");","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \"TestObject{\" + \"specialField\u003d#$%^\u0026*\" + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, builder.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"    public void addFieldWithSpaces_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"        builder.add(\"spaceField\", \"This is a value with spaces\");","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \"TestObject{\" + \"spaceField\u003dThis is a value with spaces\" + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, builder.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"teozhengyang":60}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"import seedu.address.storage.JsonUserDataStorage;","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"        JsonUserDataStorage userDataStorage \u003d new JsonUserDataStorage(temporaryFolder.resolve(\"userData.json\"));","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, userDataStorage);","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"owenyeo"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"teozhengyang"},"content":"        JsonUserDataStorage userDataStorage \u003d new JsonUserDataStorage(temporaryFolder","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"teozhengyang"},"content":"                .resolve(\"ExceptionUserData.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"owenyeo"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, userDataStorage);","lastModifiedDate":"2023-10-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"teozhengyang"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + BIRTHDAY_DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":182,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":183,"author":{"gitId":"teozhengyang"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2023-10-21"},{"lineNumber":184,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(model.getAddressBookFilePath(), logic.getAddressBookFilePath());","lastModifiedDate":"2023-10-21"},{"lineNumber":185,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":187,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":188,"author":{"gitId":"teozhengyang"},"content":"    public void getAddressBook() {","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(model.getAddressBook(), logic.getAddressBook());","lastModifiedDate":"2023-10-21"},{"lineNumber":190,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":191,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":192,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":193,"author":{"gitId":"teozhengyang"},"content":"    public void getUser() {","lastModifiedDate":"2023-10-21"},{"lineNumber":194,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(model.getUser(), logic.getUser());","lastModifiedDate":"2023-10-21"},{"lineNumber":195,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":196,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":197,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":198,"author":{"gitId":"teozhengyang"},"content":"    public void setGuiSettings() {","lastModifiedDate":"2023-10-21"},{"lineNumber":199,"author":{"gitId":"teozhengyang"},"content":"        model.setGuiSettings(new GuiSettings());","lastModifiedDate":"2023-10-21"},{"lineNumber":200,"author":{"gitId":"teozhengyang"},"content":"        logic.setGuiSettings(new GuiSettings());","lastModifiedDate":"2023-10-21"},{"lineNumber":201,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(model.getGuiSettings(), logic.getGuiSettings());","lastModifiedDate":"2023-10-21"},{"lineNumber":202,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"teozhengyang":27,"owenyeo":6,"-":170}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"owenyeo":4,"-":45}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"teozhengyang"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"teozhengyang"},"content":"        public String getBirthdayList() {","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"teozhengyang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":169,"author":{"gitId":"owenyeo"},"content":"        @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":170,"author":{"gitId":"owenyeo"},"content":"        public void setUserData(ReadOnlyUserData userData) {","lastModifiedDate":"2023-10-05"},{"lineNumber":171,"author":{"gitId":"owenyeo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":172,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":173,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":174,"author":{"gitId":"owenyeo"},"content":"        @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":175,"author":{"gitId":"owenyeo"},"content":"        public ReadOnlyUserData getUserData() {","lastModifiedDate":"2023-10-05"},{"lineNumber":176,"author":{"gitId":"owenyeo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":177,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":178,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":179,"author":{"gitId":"owenyeo"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":180,"author":{"gitId":"owenyeo"},"content":"        public User getUser() {","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"owenyeo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"owenyeo"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":185,"author":{"gitId":"owenyeo"},"content":"        public void setUser(User user) {","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"owenyeo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":187,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":188,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":189,"author":{"gitId":"owenyeo"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":190,"author":{"gitId":"owenyeo"},"content":"        public ObservableList\u003cUser\u003e getUserView() {","lastModifiedDate":"2023-10-27"},{"lineNumber":191,"author":{"gitId":"owenyeo"},"content":"            throw new UnsupportedOperationException(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":192,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":193,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"teozhengyang"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"teozhengyang"},"content":"        public Person getPersonWithName(Name name) {","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"teozhengyang"},"content":"            return null;","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"teozhengyang":12,"owenyeo":28,"-":203}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"owenyeo":4,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false)));","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false, false)));","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false, false)));","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false, false).hashCode());","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false, false).hashCode());","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"teozhengyang":5,"-":58}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalSchedule.NORMAL_SCHEDULE;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalDatedEvents.NORMAL_DATEDEVENTS;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.edit.EditPersonDescriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.edit.EditUserDescriptor;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"import seedu.address.testutil.EditUserDescriptorBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"    public static final String VALID_BIRTHDAY_AMY \u003d \"2000-01-01\";","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"    public static final String VALID_BIRTHDAY_BOB \u003d \"2000-02-02\";","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"    public static final String BIRTHDAY_DESC_AMY \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"    public static final String BIRTHDAY_DESC_BOB \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"    public static final String INVALID_BIRTHDAY_DESC \u003d \" \" + PREFIX_BIRTHDAY; // empty string not allowed for addresses","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"owenyeo"},"content":"    public static final EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"owenyeo"},"content":"    public static final EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"    public static final EditUserDescriptor DESC_USER_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"    public static final EditUserDescriptor DESC_USER_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"                .withSchedule().withBirthday(VALID_BIRTHDAY_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"                .withSchedule(NORMAL_SCHEDULE).withBirthday(VALID_BIRTHDAY_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"owenyeo"},"content":"        DESC_USER_AMY \u003d new EditUserDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"owenyeo"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"                .withSchedule().withBirthday(VALID_BIRTHDAY_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"owenyeo"},"content":"        DESC_USER_BOB \u003d new EditUserDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"owenyeo"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"                .withSchedule(NORMAL_SCHEDULE).withBirthday(VALID_BIRTHDAY_BOB)","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withDatedEvents(NORMAL_DATEDEVENTS).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"andrefoo"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Collections.singletonList(splitName[0])));","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"teozhengyang":13,"owenyeo":11,"andrefoo":2,"-":122}},{"path":"src/test/java/seedu/address/logic/commands/CommonFreetimeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalPersons.*;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalUsers.*;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":" * Contains integration tests (interaction with the Model) for {@code CommonFreeTimeCommand}.","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"public class CommonFreetimeCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        model.setUser(JANE);","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"        expectedModel.setUser(JANE);","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    public void execute_userNoFreetime_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"        model.setUser(JAMES);","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        expectedModel.setUser(JAMES);","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        CommonFreetimeCommand commonFreetimeCommand \u003d new CommonFreetimeCommand();","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        assertCommandFailure(commonFreetimeCommand, model, CommonFreetimeCommand.MESSAGE_NO_FREE_TIME);","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"    public void execute_nameNull_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"        CommonFreetimeCommand commonFreetimeCommand \u003d new CommonFreetimeCommand();","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"        String expectedMessage \u003d CommonFreetimeCommand.MESSAGE_COMMON_FREETIME_SUCCESS","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"                + ALICE.getName().toString() + \" is free at \" + \"[Monday 1200 1300]\" + \"\\n\"","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"                + BENSON.getName().toString() + \" is free at \" + \"[Monday 1200 1300]\" + \"\\n\"","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"                + CARL.getName().toString() + \" is free at \" + \"[Monday 1200 1300]\" + \"\\n\"","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"                + DANIEL.getName().toString() + \" is free at \" + \"[Monday 1200 1300]\" + \"\\n\"","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"                + ELLE.getName().toString() + \" is free at \" + \"[Monday 1200 1300]\" + \"\\n\"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"                + FIONA.getName().toString() + \" is free at \" + \"[Monday 1200 1300]\" + \"\\n\"","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"                + GEORGE.getName().toString() + \" is free at \" + \"[Monday 1200 1300]\" + \"\\n\";","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"        assertCommandSuccess(commonFreetimeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"    public void execute_nameFriend_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        CommonFreetimeCommand commonFreetimeCommand \u003d new CommonFreetimeCommand(ALICE.getName());","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        String expectedMessage \u003d CommonFreetimeCommand.MESSAGE_COMMON_FREETIME_SUCCESS","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"                + ALICE.getName().toString() + \" is free at \" + \"[Monday 1200 1300]\" + \"\\n\";","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"        assertCommandSuccess(commonFreetimeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"    public void execute_noOverlapContact_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"        CommonFreetimeCommand commonFreetimeCommand \u003d new CommonFreetimeCommand();","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"        assertCommandFailure(commonFreetimeCommand, model, CommonFreetimeCommand.MESSAGE_NO_CONTACTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"    public void execute_noOverlapFriend_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"        CommonFreetimeCommand commonFreetimeCommand \u003d new CommonFreetimeCommand(ALICE.getName());","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"        assertCommandFailure(commonFreetimeCommand, model, CommonFreetimeCommand.createNoOverlapFriendMessage(ALICE));","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"        final CommonFreetimeCommand standardCommand \u003d new CommonFreetimeCommand(AMY.getName());","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"        final CommonFreetimeCommand standardAllCommand \u003d new CommonFreetimeCommand();","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"        CommonFreetimeCommand commandWithSameValues \u003d new CommonFreetimeCommand(AMY.getName());","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(new CommonFreetimeCommand(), standardAllCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(standardCommand, new CommonFreetimeCommand(ALICE.getName()));","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"        CommonFreetimeCommand commonFreetimeCommandAlice \u003d new CommonFreetimeCommand(ALICE.getName());","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d CommonFreetimeCommand.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \"}\";","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, commonFreetimeCommandAlice.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"teozhengyang":104}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"owenyeo":5,"-":116}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"teozhengyang":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"owenyeo":4,"-":88}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"teozhengyang":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"owenyeo":4,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/RemoveReminderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.testutil.UserBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"public class RemoveReminderCommandTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    public void execute_validEvent_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"        User newUser \u003d new UserBuilder().build();","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"        model.setUser(newUser);","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"        RemoveReminderCommand removeReminderCommand \u003d new RemoveReminderCommand(\"CS2103 Meeting\");","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"        String expectedMessage \u003d RemoveReminderCommand.MESSAGE_REMOVE_REMINDER_SUCCESS + \"CS2103 Meeting\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"                new UserPrefs(), new UserData());","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        expectedModel.setUser(newUser);","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        assertCommandSuccess(removeReminderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    public void execute_noSuchEvent_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        User newUser \u003d new UserBuilder().build();","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        model.setUser(newUser);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        RemoveReminderCommand removeReminderCommand \u003d new RemoveReminderCommand(\"CS2101 Meeting\");","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"        String expectedMessage \u003d RemoveReminderCommand.MESSAGE_NO_EVENT;","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"        assertCommandFailure(removeReminderCommand, model, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"        model.setUser(new UserBuilder().build());","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        final RemoveReminderCommand standardCommand \u003d new RemoveReminderCommand(\"CS2103 Meeting\");","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(standardCommand, new RemoveReminderCommand(\"Walk Dog\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"        RemoveReminderCommand removeReminderCommand \u003d new RemoveReminderCommand(\"CS2103 Meeting\");","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d RemoveReminderCommand.class.getCanonicalName() + \"{\" + \"Remove Reminder for\u003d\"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"                + \"CS2103 Meeting\" + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, removeReminderCommand.toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"teozhengyang":68}},{"path":"src/test/java/seedu/address/logic/commands/SetReminderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.testutil.UserBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"public class SetReminderCommandTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    public void execute_validEvent_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"        User newUser \u003d new UserBuilder().build();","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"        model.setUser(newUser);","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"        SetReminderCommand setReminderCommand \u003d new SetReminderCommand(\"CS2103 Meeting\");","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"        String expectedMessage \u003d SetReminderCommand.MESSAGE_SET_REMINDER_SUCCESS + \"CS2103 Meeting\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"                new UserPrefs(), new UserData());","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        expectedModel.setUser(newUser);","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        assertCommandSuccess(setReminderCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    public void execute_noSuchEvent_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        User newUser \u003d new UserBuilder().build();","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        model.setUser(newUser);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        SetReminderCommand setReminderCommand \u003d new SetReminderCommand(\"CS2101 Meeting\");","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"        String expectedMessage \u003d SetReminderCommand.MESSAGE_NO_EVENT;","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"        assertCommandFailure(setReminderCommand, model, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"        model.setUser(new UserBuilder().build());","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        final SetReminderCommand standardCommand \u003d new SetReminderCommand(\"CS2103 Meeting\");","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(standardCommand, new SetReminderCommand(\"Walk Dog\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"        SetReminderCommand setReminderCommand \u003d new SetReminderCommand(\"CS2103 Meeting\");","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d SetReminderCommand.class.getCanonicalName() + \"{\" + \"Set Reminder for\u003d\"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"                + \"CS2103 Meeting\" + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, setReminderCommand.toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"teozhengyang":68}},{"path":"src/test/java/seedu/address/logic/commands/edit/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.logic.commands.edit;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"                new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"                new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"                new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"                new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(standardCommand, new EditCommand(INDEX_SECOND_PERSON, DESC_AMY));","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(standardCommand, new EditCommand(INDEX_FIRST_PERSON, DESC_BOB));","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"teozhengyang"},"content":"    public void toStringMethod_nullEditPersonDescriptor() {","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"teozhengyang"},"content":"    public void toStringMethod_filledEditPersonDescriptor() {","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"teozhengyang"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"teozhengyang"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"teozhengyang"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"teozhengyang"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"teozhengyang":29,"owenyeo":2,"-":168}},{"path":"src/test/java/seedu/address/logic/commands/edit/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.logic.commands.edit;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalSchedule.NORMAL_SCHEDULE;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"        assertEquals(DESC_AMY, descriptorWithSameValues);","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"        assertEquals(DESC_AMY, DESC_AMY);","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(VALID_ADDRESS_BOB, DESC_AMY);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"andrefoo"},"content":"        assertNotEquals(DESC_AMY, DESC_BOB);","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"andrefoo"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"andrefoo"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"andrefoo"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"        // different birthday -\u003e return false","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withBirthday(\"1990-01-01\").build();","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        // different free times -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withSchedule(NORMAL_SCHEDULE).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"andrefoo"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"    public void equals_null() {","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(editPersonDescriptor, editPersonDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(editPersonDescriptor, null);","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"    public void toStringMethod_null() {","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"                + editPersonDescriptor.getBirthday().orElse(null) + \", birthday\u003d\"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", free times\u003d\"","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"lululwtv"},"content":"                + editPersonDescriptor.getSchedule().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"    public void toStringMethod_filled() {","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor(DESC_BOB);","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", birthday\u003d\"","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"                + editPersonDescriptor.getBirthday().orElse(null) + \", free times\u003d\"","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"lululwtv"},"content":"                + editPersonDescriptor.getSchedule().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"teozhengyang":34,"andrefoo":10,"lululwtv":2,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/edit/EditUserCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.logic.commands.edit;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_USER_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_USER_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"import seedu.address.testutil.EditUserDescriptorBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"import seedu.address.testutil.UserBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"public class EditUserCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    public void execute_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"        User newUser \u003d new UserBuilder().build();","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"        EditUserDescriptor descriptor \u003d new EditUserDescriptorBuilder(newUser).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"        EditUserCommand editUserCommand \u003d new EditUserCommand(descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        String expectedMessage \u003d String.format(EditUserCommand.MESSAGE_EDIT_USER_SUCCESS, Messages.format(newUser));","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"                new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"        expectedModel.setUser(newUser);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"        assertCommandSuccess(editUserCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"    public void execute_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"        User newUser \u003d new UserBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"        EditUserDescriptor descriptor \u003d new EditUserDescriptorBuilder(newUser).withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"        EditUserCommand editUserCommand \u003d new EditUserCommand(descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"        String expectedMessage \u003d String.format(EditUserCommand.MESSAGE_EDIT_USER_SUCCESS, Messages.format(newUser));","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"                new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        expectedModel.setUser(newUser);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"        assertCommandSuccess(editUserCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"    public void execute_duplicateUser_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"        User user \u003d model.getUser();","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"        EditUserDescriptor descriptor \u003d new EditUserDescriptorBuilder(user).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"        EditUserCommand editUserCommand \u003d new EditUserCommand(descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"        assertCommandFailure(editUserCommand, model, EditUserCommand.MESSAGE_DUPLICATE_USER);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"        final EditUserCommand standardCommand \u003d new EditUserCommand(DESC_USER_AMY);","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"        EditUserDescriptor copyDescriptor \u003d new EditUserDescriptor(DESC_USER_AMY);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"        EditUserCommand commandWithSameValues \u003d new EditUserCommand(copyDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"owenyeo"},"content":"        assertNotEquals(standardCommand, new EditUserCommand(DESC_USER_BOB));","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"    public void toStringMethod_nullEditUserDescriptor() {","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"owenyeo"},"content":"        EditUserDescriptor editUserDescriptor \u003d new EditUserDescriptor();","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"        EditUserCommand editUserCommand \u003d new EditUserCommand(editUserDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d EditUserCommand.class.getCanonicalName() + \"{\" + \"editUserDescriptor\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"                + editUserDescriptor + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, editUserCommand.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"    public void toStringMethod_filledEditPersonDescriptor() {","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"owenyeo"},"content":"        EditUserDescriptor editUserDescriptor \u003d DESC_USER_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"        EditUserCommand editUserCommand \u003d new EditUserCommand(editUserDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d EditUserCommand.class.getCanonicalName() + \"{\" + \"editUserDescriptor\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"                + editUserDescriptor + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, editUserCommand.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"teozhengyang":95,"owenyeo":16}},{"path":"src/test/java/seedu/address/logic/commands/edit/EditUserDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.logic.commands.edit;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"public class EditUserDescriptorTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"        EditUserDescriptor editUserDescriptor \u003d new EditUserDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(editUserDescriptor, editUserDescriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(editUserDescriptor, null);","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"teozhengyang":18}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTHDAY_DESC;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"                + ADDRESS_DESC_AMY + BIRTHDAY_DESC_AMY + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(AMY).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"                NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + BIRTHDAY_DESC_AMY","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"        // multiple birthdays","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, BIRTHDAY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BIRTHDAY));","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"                        + BIRTHDAY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE,","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"                        PREFIX_BIRTHDAY));","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"teozhengyang"},"content":"        // invalid birthday","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, INVALID_BIRTHDAY_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"teozhengyang"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BIRTHDAY));","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"teozhengyang"},"content":"        // invalid birthday","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_BIRTHDAY_DESC,","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"teozhengyang"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BIRTHDAY));","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"teozhengyang"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"teozhengyang"},"content":"                + BIRTHDAY_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"teozhengyang"},"content":"                + BIRTHDAY_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"teozhengyang"},"content":"                + BIRTHDAY_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"teozhengyang"},"content":"                + BIRTHDAY_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"teozhengyang"},"content":"                + BIRTHDAY_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"teozhengyang"},"content":"        // missing birthday prefix","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"teozhengyang"},"content":"                + ADDRESS_DESC_BOB + VALID_BIRTHDAY_BOB, expectedMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"teozhengyang"},"content":"                + VALID_BIRTHDAY_BOB, expectedMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"teozhengyang"},"content":"                + BIRTHDAY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":197,"author":{"gitId":"teozhengyang"},"content":"                + BIRTHDAY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":201,"author":{"gitId":"teozhengyang"},"content":"                + BIRTHDAY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":205,"author":{"gitId":"teozhengyang"},"content":"                + BIRTHDAY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"teozhengyang"},"content":"        // invalid birthday","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"teozhengyang"},"content":"                + INVALID_BIRTHDAY_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":213,"author":{"gitId":"teozhengyang"},"content":"                + BIRTHDAY_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"teozhengyang"},"content":"                + INVALID_ADDRESS_DESC + BIRTHDAY_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":221,"author":{"gitId":"teozhengyang"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"teozhengyang":56,"-":168}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.commands.CommonFreetimeCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.edit.EditCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.edit.EditPersonDescriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.commands.edit.EditUserCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.edit.EditUserDescriptor;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"import seedu.address.testutil.EditUserDescriptorBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"import seedu.address.testutil.UserBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"    public void parseCommand_editUser() throws Exception {","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"        User user \u003d new UserBuilder().build();","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"        EditUserDescriptor descriptor \u003d new EditUserDescriptorBuilder(user).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"        EditUserCommand command \u003d (EditUserCommand) parser.parseCommand(EditUserCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"                + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(new EditUserCommand(descriptor), command);","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"    public void parseCommand_commonFreetime_validArgs() throws Exception {","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"        CommonFreetimeCommand command \u003d (CommonFreetimeCommand) parser.parseCommand(","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"                CommonFreetimeCommand.COMMAND_WORD + \" \" + \"n/\" + person.getName());","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(new CommonFreetimeCommand(person.getName()), command);","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"    public void parseCommand_commonFreetime_all() throws Exception {","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"        CommonFreetimeCommand command \u003d (CommonFreetimeCommand) parser.parseCommand(","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"                CommonFreetimeCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(new CommonFreetimeCommand(), command);","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"teozhengyang":25,"owenyeo":8,"-":99}},{"path":"src/test/java/seedu/address/logic/parser/CommonFreetimeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.commands.CommonFreetimeCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"public class CommonFreetimeCommandParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    private CommonFreetimeCommandParser parser \u003d new CommonFreetimeCommandParser();","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"    public void parse_emptyArg_returnsCommonFreetimeCommand() {","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CommonFreetimeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    public void parse_validArgs_returnsCommonFreetimeCommand() throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"        assertParseSuccess(parser, \" n/Alice Pauline\",","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"                new CommonFreetimeCommand(ParserUtil.parseName(\"Alice Pauline\")));","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"teozhengyang":27}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.edit.EditCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.edit.EditPersonDescriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.FreeTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"                        + VALID_ADDRESS_AMY + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"teozhengyang":4,"owenyeo":2,"-":204}},{"path":"src/test/java/seedu/address/logic/parser/EditUserCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.commands.edit.EditUserCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.edit.EditUserDescriptor;","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.FreeTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"import seedu.address.testutil.EditUserDescriptorBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"public class EditUserCommandParserTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditUserCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"    private EditUserCommandParser parser \u003d new EditUserCommandParser();","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        // no field specified","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, \"\", EditUserCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"        // wrong format","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"                        + VALID_ADDRESS_AMY + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"        String userInput \u003d PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"owenyeo"},"content":"        EditUserDescriptor descriptor \u003d new EditUserDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"        EditUserCommand expectedCommand \u003d new EditUserCommand(descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"teozhengyang"},"content":"        String userInput \u003d PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"owenyeo"},"content":"        EditUserDescriptor descriptor \u003d new EditUserDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"teozhengyang"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"teozhengyang"},"content":"        EditUserCommand expectedCommand \u003d new EditUserCommand(descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"teozhengyang"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"teozhengyang"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"teozhengyang"},"content":"        String userInput \u003d NAME_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"owenyeo"},"content":"        EditUserDescriptor descriptor \u003d new EditUserDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"teozhengyang"},"content":"        EditUserCommand expectedCommand \u003d new EditUserCommand(descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":122,"author":{"gitId":"teozhengyang"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"teozhengyang"},"content":"        // phone","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"teozhengyang"},"content":"        userInput \u003d PHONE_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"owenyeo"},"content":"        descriptor \u003d new EditUserDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"teozhengyang"},"content":"        expectedCommand \u003d new EditUserCommand(descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":128,"author":{"gitId":"teozhengyang"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":129,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":130,"author":{"gitId":"teozhengyang"},"content":"        // email","lastModifiedDate":"2023-10-21"},{"lineNumber":131,"author":{"gitId":"teozhengyang"},"content":"        userInput \u003d EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":132,"author":{"gitId":"owenyeo"},"content":"        descriptor \u003d new EditUserDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"teozhengyang"},"content":"        expectedCommand \u003d new EditUserCommand(descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"teozhengyang"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":135,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":136,"author":{"gitId":"teozhengyang"},"content":"        // address","lastModifiedDate":"2023-10-21"},{"lineNumber":137,"author":{"gitId":"teozhengyang"},"content":"        userInput \u003d ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":138,"author":{"gitId":"owenyeo"},"content":"        descriptor \u003d new EditUserDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"teozhengyang"},"content":"        expectedCommand \u003d new EditUserCommand(descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":140,"author":{"gitId":"teozhengyang"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":141,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":142,"author":{"gitId":"teozhengyang"},"content":"        // tags","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"teozhengyang"},"content":"        userInput \u003d TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-21"},{"lineNumber":144,"author":{"gitId":"owenyeo"},"content":"        descriptor \u003d new EditUserDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"teozhengyang"},"content":"        expectedCommand \u003d new EditUserCommand(descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":146,"author":{"gitId":"teozhengyang"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":147,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":149,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":150,"author":{"gitId":"teozhengyang"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"teozhengyang"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-21"},{"lineNumber":152,"author":{"gitId":"teozhengyang"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"teozhengyang"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"teozhengyang"},"content":"        String userInput \u003d INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"teozhengyang"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-21"},{"lineNumber":160,"author":{"gitId":"teozhengyang"},"content":"        userInput \u003d PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":162,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"teozhengyang"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-10-21"},{"lineNumber":165,"author":{"gitId":"teozhengyang"},"content":"        userInput \u003d PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-21"},{"lineNumber":166,"author":{"gitId":"teozhengyang"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-21"},{"lineNumber":167,"author":{"gitId":"teozhengyang"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":168,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"teozhengyang"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"teozhengyang"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-21"},{"lineNumber":173,"author":{"gitId":"teozhengyang"},"content":"        userInput \u003d INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-21"},{"lineNumber":174,"author":{"gitId":"teozhengyang"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":175,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":176,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-21"},{"lineNumber":177,"author":{"gitId":"teozhengyang"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-10-21"},{"lineNumber":178,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":179,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":180,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":181,"author":{"gitId":"teozhengyang"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":182,"author":{"gitId":"teozhengyang"},"content":"        String userInput \u003d TAG_EMPTY;","lastModifiedDate":"2023-10-21"},{"lineNumber":183,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":184,"author":{"gitId":"owenyeo"},"content":"        EditUserDescriptor descriptor \u003d new EditUserDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"teozhengyang"},"content":"        EditUserCommand expectedCommand \u003d new EditUserCommand(descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":187,"author":{"gitId":"teozhengyang"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":188,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":190,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"teozhengyang":180,"owenyeo":10}},{"path":"src/test/java/seedu/address/logic/parser/RemoveReminderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.commands.RemoveReminderCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"public class RemoveReminderCommandParserTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    private RemoveReminderCommandParser parser \u003d new RemoveReminderCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    public void parse_validArgs_returnsRemoveReminderCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"        RemoveReminderCommand expectedRemoveReminderCommand \u003d new RemoveReminderCommand(\"CS2103 Meeting\");","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"        assertParseSuccess(parser, \"CS2103 Meeting\", expectedRemoveReminderCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"        assertParseSuccess(parser, \" \\n CS2103 Meeting  \\t\", expectedRemoveReminderCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"teozhengyang":29}},{"path":"src/test/java/seedu/address/logic/parser/SetReminderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.commands.SetReminderCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"public class SetReminderCommandParserTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"    private SetReminderCommandParser parser \u003d new SetReminderCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    public void parse_validArgs_returnsRemoveReminderCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"        SetReminderCommand expectedSetReminderCommand \u003d new SetReminderCommand(\"CS2103 Meeting\");","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"        assertParseSuccess(parser, \"CS2103 Meeting\", expectedSetReminderCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"        assertParseSuccess(parser, \" \\n CS2103 Meeting  \\t\", expectedSetReminderCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"teozhengyang":28}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"        AddressBook addressBook2 \u003d new AddressBook();","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(addressBook.equals(addressBook2));","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(addressBook.equals(addressBook2));","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(addressBook.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"        AddressBook addressBook2 \u003d new AddressBook();","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(addressBook.hashCode(), addressBook2.hashCode());","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"teozhengyang":17,"-":108}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"owenyeo"},"content":"        UserData userData \u003d new UserData();","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"owenyeo"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, userData);","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"owenyeo"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, userData);","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(null, modelManager);","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(5, modelManager);","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(modelManager, new ModelManager(differentAddressBook, userPrefs, userData));","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":128,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, userPrefs, userData));","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":136,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, differentUserPrefs, userData));","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":140,"author":{"gitId":"teozhengyang"},"content":"    public void getUserView() {","lastModifiedDate":"2023-10-21"},{"lineNumber":141,"author":{"gitId":"teozhengyang"},"content":"        UserData userData \u003d new UserData();","lastModifiedDate":"2023-10-21"},{"lineNumber":142,"author":{"gitId":"teozhengyang"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"owenyeo"},"content":"        ObservableList\u003cUser\u003e userView \u003d userData.getUserView();","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"teozhengyang"},"content":"        modelManager.setUser(userData.getUser());","lastModifiedDate":"2023-10-21"},{"lineNumber":145,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(modelManager.getUserView(), userView);","lastModifiedDate":"2023-10-21"},{"lineNumber":146,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":147,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":149,"author":{"gitId":"teozhengyang"},"content":"    public void setUserData() {","lastModifiedDate":"2023-10-21"},{"lineNumber":150,"author":{"gitId":"teozhengyang"},"content":"        UserData userData \u003d new UserData();","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"teozhengyang"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-21"},{"lineNumber":152,"author":{"gitId":"teozhengyang"},"content":"        modelManager.setUserData(userData);","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(modelManager.getUserData(), userData);","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"teozhengyang":24,"owenyeo":7,"-":124}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(address.hashCode(), new Address(\"Valid Address\").hashCode());","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"teozhengyang":7,"-":56}},{"path":"src/test/java/seedu/address/model/person/BirthdayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"public class BirthdayTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"teozhengyang":4}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(email.hashCode(), new Email(\"valid@email\").hashCode());","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"teozhengyang":8,"-":88}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"        Person alice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(alice.hashCode(), new PersonBuilder(ALICE).build().hashCode());","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"                + \", birthday\u003d\" + ALICE.getBirthday() + \", free times\u003d\" + ALICE.getSchedule()","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"teozhengyang":9,"-":98}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(phone.hashCode(), new Phone(\"999\").hashCode());","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"teozhengyang":7,"-":60}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"    public void getPersonWithName_nameNotInList_returnNull() {","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"        assertNull(uniquePersonList.getPersonWithName(new Name(\"Edric\")));","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"    public void getPersonWithName_nameInList_returnNull() {","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(ALICE, uniquePersonList.getPersonWithName(ALICE.getName()));","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":183,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":184,"author":{"gitId":"teozhengyang"},"content":"    public void iterator() {","lastModifiedDate":"2023-10-21"},{"lineNumber":185,"author":{"gitId":"teozhengyang"},"content":"        UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"teozhengyang"},"content":"        Person alice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":187,"author":{"gitId":"teozhengyang"},"content":"        Person bob \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":188,"author":{"gitId":"teozhengyang"},"content":"        uniquePersonList.add(alice);","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"teozhengyang"},"content":"        uniquePersonList.add(bob);","lastModifiedDate":"2023-10-21"},{"lineNumber":190,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":191,"author":{"gitId":"teozhengyang"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-10-21"},{"lineNumber":192,"author":{"gitId":"teozhengyang"},"content":"        for (Person person : uniquePersonList) {","lastModifiedDate":"2023-10-21"},{"lineNumber":193,"author":{"gitId":"teozhengyang"},"content":"            if (count \u003d\u003d 0) {","lastModifiedDate":"2023-10-21"},{"lineNumber":194,"author":{"gitId":"teozhengyang"},"content":"                assertEquals(alice, person);","lastModifiedDate":"2023-10-21"},{"lineNumber":195,"author":{"gitId":"teozhengyang"},"content":"            } else if (count \u003d\u003d 1) {","lastModifiedDate":"2023-10-21"},{"lineNumber":196,"author":{"gitId":"teozhengyang"},"content":"                assertEquals(bob, person);","lastModifiedDate":"2023-10-21"},{"lineNumber":197,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-10-21"},{"lineNumber":198,"author":{"gitId":"teozhengyang"},"content":"            count++;","lastModifiedDate":"2023-10-21"},{"lineNumber":199,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":200,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(2, count);","lastModifiedDate":"2023-10-21"},{"lineNumber":201,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":202,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":203,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":204,"author":{"gitId":"teozhengyang"},"content":"    public void testEquals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":205,"author":{"gitId":"teozhengyang"},"content":"        UniquePersonList uniquePersonList1 \u003d new UniquePersonList();","lastModifiedDate":"2023-10-21"},{"lineNumber":206,"author":{"gitId":"teozhengyang"},"content":"        UniquePersonList uniquePersonList2 \u003d new UniquePersonList();","lastModifiedDate":"2023-10-21"},{"lineNumber":207,"author":{"gitId":"teozhengyang"},"content":"        Person alice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":208,"author":{"gitId":"teozhengyang"},"content":"        Person bob \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":209,"author":{"gitId":"teozhengyang"},"content":"        uniquePersonList1.add(alice);","lastModifiedDate":"2023-10-21"},{"lineNumber":210,"author":{"gitId":"teozhengyang"},"content":"        uniquePersonList1.add(bob);","lastModifiedDate":"2023-10-21"},{"lineNumber":211,"author":{"gitId":"teozhengyang"},"content":"        uniquePersonList2.add(alice);","lastModifiedDate":"2023-10-21"},{"lineNumber":212,"author":{"gitId":"teozhengyang"},"content":"        uniquePersonList2.add(bob);","lastModifiedDate":"2023-10-21"},{"lineNumber":213,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":214,"author":{"gitId":"teozhengyang"},"content":"        // Test hashCode method","lastModifiedDate":"2023-10-21"},{"lineNumber":215,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(uniquePersonList1.hashCode(), uniquePersonList2.hashCode());","lastModifiedDate":"2023-10-21"},{"lineNumber":216,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":217,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":218,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":219,"author":{"gitId":"teozhengyang"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-21"},{"lineNumber":220,"author":{"gitId":"teozhengyang"},"content":"        UniquePersonList uniquePersonList1 \u003d new UniquePersonList();","lastModifiedDate":"2023-10-21"},{"lineNumber":221,"author":{"gitId":"teozhengyang"},"content":"        UniquePersonList uniquePersonList2 \u003d new UniquePersonList();","lastModifiedDate":"2023-10-21"},{"lineNumber":222,"author":{"gitId":"teozhengyang"},"content":"        Person alice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":223,"author":{"gitId":"teozhengyang"},"content":"        Person bob \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":224,"author":{"gitId":"teozhengyang"},"content":"        uniquePersonList1.add(alice);","lastModifiedDate":"2023-10-21"},{"lineNumber":225,"author":{"gitId":"teozhengyang"},"content":"        uniquePersonList1.add(bob);","lastModifiedDate":"2023-10-21"},{"lineNumber":226,"author":{"gitId":"teozhengyang"},"content":"        uniquePersonList2.add(alice);","lastModifiedDate":"2023-10-21"},{"lineNumber":227,"author":{"gitId":"teozhengyang"},"content":"        uniquePersonList2.add(bob);","lastModifiedDate":"2023-10-21"},{"lineNumber":228,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":229,"author":{"gitId":"teozhengyang"},"content":"        // Test hashCode method","lastModifiedDate":"2023-10-21"},{"lineNumber":230,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(uniquePersonList1.hashCode(), uniquePersonList2.hashCode());","lastModifiedDate":"2023-10-21"},{"lineNumber":231,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":232,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":237,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":238,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"teozhengyang":64,"-":175}},{"path":"src/test/java/seedu/address/model/person/timetable/FreeTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.model.person.timetable;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"public class FreeTimeTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    public void createValidFreeTime() {","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"        // Test creating a valid FreeTime object","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime \u003d new FreeTime(\"Monday 0800 1000\");","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"[Monday 0800 1000]\", freeTime.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    public void createValidFreeTimeCaseInsensitive() {","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"        // Test creating a valid FreeTime object with case-insensitive day","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime \u003d new FreeTime(\"tuesday 1400 1500\");","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"[Tuesday 1400 1500]\", freeTime.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    public void isValidFreeTime() {","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(FreeTime.isValidFreeTime(\"\")); // empty string","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(FreeTime.isValidFreeTime(\"Monday 0800 1000\")); // valid FreeTime","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    public void compareTo() {","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime1 \u003d new FreeTime(\"Monday 0800 1000\");","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime2 \u003d new FreeTime(\"Monday 0900 1100\");","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime3 \u003d new FreeTime(\"Tuesday 0900 1100\");","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"        // Test compareTo","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(freeTime1.compareTo(freeTime2) \u003c 0);","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(freeTime2.compareTo(freeTime1) \u003e 0);","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(freeTime1.compareTo(freeTime3) \u003c 0);","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"    public void overlap() {","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime1 \u003d new FreeTime(\"Monday 0800 1000\");","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime2 \u003d new FreeTime(\"Monday 0900 1100\");","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime3 \u003d new FreeTime(\"Tuesday 0900 1100\");","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime4 \u003d new FreeTime(\"Monday 1200 1300\");","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"        // Test overlap","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"        FreeTime overlap \u003d freeTime1.overlap(freeTime2);","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"[Monday 0900 1000]\", overlap.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        overlap \u003d freeTime1.overlap(freeTime3);","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        assertNull(overlap);","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"        overlap \u003d freeTime1.overlap(freeTime4);","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"        assertNull(overlap);","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"    public void isOverlap() {","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime1 \u003d new FreeTime(\"Monday 0800 1000\");","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime2 \u003d new FreeTime(\"Monday 0900 1100\");","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime3 \u003d new FreeTime(\"Tuesday 0900 1100\");","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"        // Test isOverlap","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(freeTime1.isOverlap(freeTime2));","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(freeTime1.isOverlap(freeTime3));","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime1 \u003d new FreeTime(\"Monday 0800 1000\");","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime2 \u003d new FreeTime(\"Monday 0800 1000\");","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime3 \u003d new FreeTime(\"Tuesday 0900 1100\");","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"        // Test equals","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(freeTime1.equals(freeTime1));","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(freeTime1.equals(freeTime2));","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(freeTime1.equals(freeTime3));","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(freeTime1.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime1 \u003d new FreeTime(\"Monday 0800 1000\");","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime2 \u003d new FreeTime(\"Monday 0800 1000\");","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime3 \u003d new FreeTime(\"Tuesday 0900 1100\");","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"        // Test hashCode","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(freeTime1.hashCode(), freeTime2.hashCode());","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(freeTime1.hashCode(), freeTime3.hashCode());","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"        FreeTime freeTime1 \u003d new FreeTime(\"Monday 0800 1000\");","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"        // Test toString","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"[Monday 0800 1000]\", freeTime1.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"teozhengyang":107}},{"path":"src/test/java/seedu/address/model/person/timetable/HalfHourBlocksTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.model.person.timetable;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"public class HalfHourBlocksTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    public void createHalfHourBlocks() {","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"        HalfHourBlocks halfHourBlocks \u003d new HalfHourBlocks(16, 32);","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"        // Test creation of HalfHourBlocks","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(halfHourBlocks.overlaps(new HalfHourBlocks(0, 48)));","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(halfHourBlocks.overlaps(new HalfHourBlocks(0, 16)));","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    public void overlaps() {","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"        HalfHourBlocks halfHourBlocks1 \u003d new HalfHourBlocks(16, 32);","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"        HalfHourBlocks halfHourBlocks2 \u003d new HalfHourBlocks(24, 40);","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"        HalfHourBlocks halfHourBlocks3 \u003d new HalfHourBlocks(0, 8);","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"        // Test overlaps method","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(halfHourBlocks1.overlaps(halfHourBlocks2));","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(halfHourBlocks1.overlaps(halfHourBlocks3));","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    public void getOverlap() {","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"        HalfHourBlocks halfHourBlocks1 \u003d new HalfHourBlocks(16, 32);","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        HalfHourBlocks halfHourBlocks2 \u003d new HalfHourBlocks(24, 40);","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        // Test getOverlap method","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"        HalfHourBlocks overlap \u003d halfHourBlocks1.getOverlap(halfHourBlocks2);","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(overlap.overlaps(halfHourBlocks1));","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(overlap.overlaps(halfHourBlocks2));","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"        HalfHourBlocks halfHourBlocks1 \u003d new HalfHourBlocks(8, 20);","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        HalfHourBlocks halfHourBlocks2 \u003d new HalfHourBlocks(8, 20);","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"        HalfHourBlocks halfHourBlocks3 \u003d new HalfHourBlocks(12, 24);","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"        // Test equals method","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(halfHourBlocks1.equals(halfHourBlocks1));","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(halfHourBlocks1.equals(halfHourBlocks2));","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(halfHourBlocks1.equals(halfHourBlocks3));","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(halfHourBlocks1.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"        HalfHourBlocks halfHourBlocks1 \u003d new HalfHourBlocks(8, 20);","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"        HalfHourBlocks halfHourBlocks2 \u003d new HalfHourBlocks(8, 20);","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"        HalfHourBlocks halfHourBlocks3 \u003d new HalfHourBlocks(12, 24);","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"        // Test hashCode method","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(halfHourBlocks1.hashCode(), halfHourBlocks2.hashCode());","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"        assertNotEquals(halfHourBlocks1.hashCode(), halfHourBlocks3.hashCode());","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"        HalfHourBlocks halfHourBlocks \u003d new HalfHourBlocks(8, 20);","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"        // Test toString method","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"0400 1000\", halfHourBlocks.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"teozhengyang":74}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        Tag tag1 \u003d new Tag(\"Friends\");","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        Tag tag2 \u003d new Tag(\"Friends\");","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"        Tag tag3 \u003d new Tag(\"Family\");","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        // Test with the same tags","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(tag1.equals(tag1));","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"        // Test with different instances but the same name","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(tag1.equals(tag2));","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"        // Test with different names","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(tag1.equals(tag3));","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        // Test with null","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(tag1.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"        // Test with a different class","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(tag1.equals(\"Friends\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"        Tag tag1 \u003d new Tag(\"Friends\");","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"        Tag tag2 \u003d new Tag(\"Friends\");","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        // Hash code should be the same for equal objects","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(tag1.hashCode(), tag2.hashCode());","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"        Tag tag \u003d new Tag(\"Friends\");","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"        // Check the string representation","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"[Friends]\", tag.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"teozhengyang":42,"-":26}},{"path":"src/test/java/seedu/address/model/user/UserDataTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.model.user;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.testutil.UserBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"public class UserDataTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    public void setUser_newUser() {","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"        UserData userData \u003d new UserData(new UserBuilder().build());","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"        assertEquals(userData.getUser(), new UserBuilder().build());","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        UserData userData \u003d new UserData();","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"        assertThrows(NullPointerException.class, () -\u003e userData.resetData(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    public void resetData_filled() {","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"        UserData userData \u003d new UserData(new UserBuilder().build());","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        UserData newUserData \u003d new UserData();","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"        userData.resetData(newUserData);","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(userData, new UserData());","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"        UserData userData \u003d new UserData(new UserBuilder().build());","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"        assertTrue(userData.equals(new UserData(new UserBuilder().build())));","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(userData.equals(userData));","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(userData.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(userData.equals(5.0f));","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(userData.equals(new UserData()));","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"        UserData userData \u003d new UserData(new UserBuilder().build());","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \"User : \" + userData.getUser().toString();","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, userData.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"teozhengyang":53,"owenyeo":7}},{"path":"src/test/java/seedu/address/model/user/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.model.user;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"public class UserPrefsTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(userPrefs.equals(new UserPrefs()));","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(userPrefs.equals(userPrefs));","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(userPrefs.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(userPrefs.equals(5.0f));","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(userPrefs.hashCode(), new UserPrefs().hashCode());","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \"Gui Settings : \" + userPrefs.getGuiSettings()","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"                + \"\\nLocal data file location : \" + userPrefs.getAddressBookFilePath();","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, userPrefs.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"teozhengyang":55}},{"path":"src/test/java/seedu/address/model/user/UserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.model.user;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"public class UserTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"teozhengyang":4}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedFreeTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"public class JsonAdaptedFreeTimeTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"    public void toModelType_invalidFreeTimes_throwsIllegalValueException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"        JsonAdaptedFreeTime freeTime \u003d new JsonAdaptedFreeTime(\"monday\");","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"        assertThrows(IllegalValueException.class, freeTime::toModelType);","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"teozhengyang":15}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"import seedu.address.storage.timetable.JsonAdaptedSchedule;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    private static final String INVALID_BIRTHDAY \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    private static final String VALID_BIRTHDAY \u003d BENSON.getBirthday().toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"        private static final JsonAdaptedSchedule VALID_SCHEDULE \u003d new JsonAdaptedSchedule(BENSON.getSchedule());","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"andrefoo"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"                        VALID_ADDRESS, VALID_BIRTHDAY, VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"andrefoo"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"andrefoo"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"                        VALID_ADDRESS, VALID_BIRTHDAY, VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"andrefoo"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"                        VALID_ADDRESS, VALID_BIRTHDAY, VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"andrefoo"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"andrefoo"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"owenyeo"},"content":"                        VALID_ADDRESS, VALID_BIRTHDAY, VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"owenyeo"},"content":"                        VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"owenyeo"},"content":"                VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"owenyeo"},"content":"                        VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"andrefoo"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"owenyeo"},"content":"                VALID_BIRTHDAY, VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"teozhengyang"},"content":"    public void toModelType_invalidBirthday_throwsIllegalValueException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"teozhengyang"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"teozhengyang"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_BIRTHDAY,","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"owenyeo"},"content":"                        VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"teozhengyang"},"content":"        String expectedMessage \u003d \"Birthday should be in the format of YYYY-MM-DD OR YYYY-M-D \"","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"teozhengyang"},"content":"                + \"and should be a valid date.\";","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"teozhengyang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"teozhengyang"},"content":"    public void toModelType_nullBirthday_throwsIllegalValueException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"teozhengyang"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, null,","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"owenyeo"},"content":"                VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"teozhengyang"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Birthday\");","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"teozhengyang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"teozhengyang"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"owenyeo"},"content":"                        VALID_SCHEDULE, invalidTags);","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"teozhengyang":22,"owenyeo":14,"andrefoo":8,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedUserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"public class JsonAdaptedUserTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"teozhengyang":4}},{"path":"src/test/java/seedu/address/storage/JsonSerializableUserDataTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.testutil.UserBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"public class JsonSerializableUserDataTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    public void constructor_validJsonAdaptedPerson_success() throws IllegalValueException {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"        JsonAdaptedUser jsonAdaptedUser \u003d new JsonAdaptedUser(new UserBuilder().build());","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"        JsonSerializableUserData userData \u003d new JsonSerializableUserData(jsonAdaptedUser);","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"        assertEquals(new UserBuilder().build(), userData.toModelType().getUser());","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    public void constructor_validReadOnlyUserData_success() throws IllegalValueException {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"        ReadOnlyUserData readOnlyUserData \u003d new UserData(new UserBuilder().build());","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"        JsonSerializableUserData userData \u003d new JsonSerializableUserData(readOnlyUserData);","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"        assertEquals(new UserBuilder().build(), userData.toModelType().getUser());","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    public void toModelType_validJsonSerializableUserData_success() throws IllegalValueException {","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"        JsonAdaptedUser jsonAdaptedUser \u003d new JsonAdaptedUser(new UserBuilder().build());","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"        JsonSerializableUserData userData \u003d new JsonSerializableUserData(jsonAdaptedUser);","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        UserData modelUserData \u003d userData.toModelType();","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"        assertEquals(new UserBuilder().build(), modelUserData.getUser());","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"teozhengyang":26,"owenyeo":9}},{"path":"src/test/java/seedu/address/storage/JsonUserDataStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"import seedu.address.testutil.UserBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"public class JsonUserDataStorageTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserDataStorageTest\");","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    @TempDir","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    public void constructor_validPath_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        Path filePath \u003d Paths.get(\"TypicalUserData.json\");","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"        JsonUserDataStorage userDataStorage \u003d new JsonUserDataStorage(filePath);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(filePath, userDataStorage.getUserDataFilePath());","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    public void readUserData_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserData(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"    public Optional\u003cReadOnlyUserData\u003e readUserData(String userDataFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"        Path userDataFilePath \u003d addToTestDataPathIfNotNull(userDataFileInTestDataFolder);","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"        return new JsonUserDataStorage(userDataFilePath).readUserData(userDataFilePath);","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"    private Path addToTestDataPathIfNotNull(String userDataFileInTestDataFolder) {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        return userDataFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"                ? TEST_DATA_FOLDER.resolve(userDataFileInTestDataFolder)","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"                : null;","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"    public void readUserData_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(readUserData(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"    public void readUserData_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserData(\"NotJsonFormatUserData.json\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"    public void readUserData_illegalValue_exceptionThrown() {","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserData(\"InvalidUserData.json\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"    public void readUserData_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"        ReadOnlyUserData expected \u003d getTypicalUserData();","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"        ReadOnlyUserData actual \u003d readUserData(\"TypicalUserData.json\").get();","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"    private UserData getTypicalUserData() {","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"        UserData userData \u003d new UserData();","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"        userData.setUser(new UserBuilder().build());","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"        return userData;","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"    public void readUserData_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"        ReadOnlyUserData expected \u003d getTypicalUserData();","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"        ReadOnlyUserData actual \u003d readUserData(\"ExtraValuesUserData.json\").get();","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"    public void saveData_nullData_throwsNullPointerException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserData(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"    public void saveData_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserData(new UserData(), null));","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"    private void saveUserData(UserData userData, String dataFileInTestDataFolder) {","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"        Path userDataFilePath \u003d addToTestDataPathIfNotNull(dataFileInTestDataFolder);","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"            new JsonUserDataStorage(userDataFilePath).saveUserData(userData);","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"    public void saveData_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"        UserData original \u003d new UserData();","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"owenyeo"},"content":"        original.setUser(new UserBuilder().build());","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"teozhengyang"},"content":"        Path dataFilePath \u003d testFolder.resolve(\"TempData.json\");","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"teozhengyang"},"content":"        JsonUserDataStorage jsonUserDataStorage \u003d new JsonUserDataStorage(dataFilePath);","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"teozhengyang"},"content":"        jsonUserDataStorage.saveUserData(original);","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"teozhengyang"},"content":"        ReadOnlyUserData readBack \u003d jsonUserDataStorage.readUserData().get();","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"owenyeo"},"content":"        original.setUser(new UserBuilder().withName(\"Bobby\").build());","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"teozhengyang"},"content":"        jsonUserDataStorage.saveUserData(original);","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"teozhengyang"},"content":"        readBack \u003d jsonUserDataStorage.readUserData().get();","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"teozhengyang":117,"owenyeo":4}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    public void constructor_validPath_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        Path filePath \u003d Paths.get(\"TypicalUserPrefs.json\");","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(filePath);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(filePath, userPrefsStorage.getUserPrefsFilePath());","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"teozhengyang":7,"owenyeo":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"        JsonUserDataStorage userDataStorage \u003d new JsonUserDataStorage(getTempFilePath(\"ud\"));","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, userDataStorage);","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"    public void userDataReadSave() throws Exception {","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"        /*","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"         * {@link JsonUserDataStorage} class.","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserDataStorageTest} class.","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"         */","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"        UserData original \u003d new UserData();","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"        storageManager.saveUserData(original);","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"        ReadOnlyUserData retrieved \u003d storageManager.readUserData().get();","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"    public void getUserDataFilePath() {","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"        assertNotNull(storageManager.getUserDataFilePath());","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"    public void getUserPrefsFilePath() {","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"        assertNotNull(storageManager.getUserPrefsFilePath());","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"teozhengyang":25,"owenyeo":3,"-":66}},{"path":"src/test/java/seedu/address/storage/timetable/JsonAdaptedCcaTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage.timetable;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalSchedule.NORMAL_CCA;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.Cca;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Module;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.TimeBlock;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"public class JsonAdaptedCcaTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"    private static final String INVALID_TIMEBLOCK \u003d \"monday\";","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"    private static final String VALID_NAME \u003d \"CS2100\";","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"    private static final String VALID_TIMEBLOCK \u003d \"Monday 1200 1300\";","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    public void toModelType_validCcaDetails_returnsModule() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"        JsonAdaptedCca cca \u003d new JsonAdaptedCca(NORMAL_CCA);","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(NORMAL_CCA, cca.toModelType());","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    public void toModelType_nullCcaName_throwsException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        JsonAdaptedCca cca \u003d new JsonAdaptedCca(null, VALID_TIMEBLOCK);","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        String expectedMessage \u003d Cca.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        assertThrows(IllegalValueException.class, cca::toModelType, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_invalidTimeBlock_throwsException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        JsonAdaptedCca cca \u003d new JsonAdaptedCca(VALID_NAME, INVALID_TIMEBLOCK);","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"        String expectedMessage \u003d TimeBlock.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"        assertThrows(IllegalArgumentException.class, cca::toModelType, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_nullTimeBlock_throwsException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        JsonAdaptedCca cca \u003d new JsonAdaptedCca(VALID_NAME, null);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"        String expectedMessage \u003d TimeBlock.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        assertThrows(IllegalValueException.class, cca::toModelType, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"teozhengyang":13,"owenyeo":35}},{"path":"src/test/java/seedu/address/storage/timetable/JsonAdaptedDatedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage.timetable;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalSchedule.NORMAL_DATED_EVENT;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.TimeBlock;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"public class JsonAdaptedDatedEventTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"    private static final String INVALID_TIMEBLOCK \u003d \"monday\";","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"    private static final String INVALID_DATE \u003d \"26-12-2001\";","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"    ","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    private static final String VALID_NAME \u003d \"CS2100\";","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"    private static final String VALID_TIMEBLOCK \u003d \"Monday 1200 1300\";","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"    private static final String VALID_DATE \u003d \"2001-12-26 1200 1400\";","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"        JsonAdaptedDatedEvent datedEvent \u003d new JsonAdaptedDatedEvent(null, VALID_TIMEBLOCK, VALID_DATE, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"        assertThrows(IllegalValueException.class, datedEvent::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_invalidTimeBlock_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"        JsonAdaptedDatedEvent datedEvent \u003d new JsonAdaptedDatedEvent(VALID_NAME, INVALID_TIMEBLOCK, VALID_DATE, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        String expectedMessage \u003d DatedEvent.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, datedEvent::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_nullTimeBlock_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"        JsonAdaptedDatedEvent datedEvent \u003d new JsonAdaptedDatedEvent(VALID_NAME, null, VALID_DATE, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"        String expectedMessage \u003d DatedEvent.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, datedEvent::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_invalidDateString_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"        JsonAdaptedDatedEvent datedEvent \u003d new JsonAdaptedDatedEvent(VALID_NAME, VALID_TIMEBLOCK, INVALID_DATE, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"        String expectedMessage \u003d DatedEvent.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, datedEvent::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_validDatedEvent_success() throws IllegalValueException {","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"        JsonAdaptedDatedEvent datedEvent \u003d new JsonAdaptedDatedEvent(NORMAL_DATED_EVENT);","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(NORMAL_DATED_EVENT, datedEvent.toModelType());","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"teozhengyang":5,"owenyeo":51}},{"path":"src/test/java/seedu/address/storage/timetable/JsonAdaptedMeetUpEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage.timetable;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalSchedule.NORMAL_MEETUP_EVENT;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.MeetUpEvent;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.TimeBlock;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"import seedu.address.storage.JsonAdaptedPerson;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"public class JsonAdaptedMeetUpEventTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"    private static final String INVALID_TIMEBLOCK \u003d \"monday\";","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"    private static final String INVALID_DATE \u003d \"26-12-2001\";","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"    ","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"    private static final String VALID_NAME \u003d \"CS2100\";","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"    private static final String VALID_TIMEBLOCK \u003d \"Monday 1200 1300\";","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    private static final String VALID_DATE \u003d \"2001-12-26 1200 1400\";","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"        JsonAdaptedMeetUpEvent datedEvent \u003d new JsonAdaptedMeetUpEvent(null, VALID_TIMEBLOCK, VALID_DATE, false, new JsonAdaptedPerson(IDA));","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"        assertThrows(IllegalValueException.class, datedEvent::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_invalidTimeBlock_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"        JsonAdaptedMeetUpEvent datedEvent \u003d new JsonAdaptedMeetUpEvent(VALID_NAME, INVALID_TIMEBLOCK, VALID_DATE, false, new JsonAdaptedPerson(ALICE));","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        String expectedMessage \u003d MeetUpEvent.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, datedEvent::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_nullTimeBlock_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"        JsonAdaptedMeetUpEvent datedEvent \u003d new JsonAdaptedMeetUpEvent(VALID_NAME, null, VALID_DATE, false, new JsonAdaptedPerson(HOON));","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        String expectedMessage \u003d MeetUpEvent.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, datedEvent::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_invalidDateString_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"        JsonAdaptedMeetUpEvent datedEvent \u003d new JsonAdaptedMeetUpEvent(VALID_NAME, VALID_TIMEBLOCK, INVALID_DATE, false, new JsonAdaptedPerson(HOON));","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"        String expectedMessage \u003d DatedEvent.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, datedEvent::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_nullPerson_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"        JsonAdaptedMeetUpEvent datedEvent \u003d new JsonAdaptedMeetUpEvent(VALID_NAME, VALID_TIMEBLOCK, INVALID_DATE, false, null);","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"        assertThrows(IllegalValueException.class, datedEvent::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_validDatedEvent_success() throws IllegalValueException {","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"        JsonAdaptedMeetUpEvent datedEvent \u003d new JsonAdaptedMeetUpEvent(NORMAL_MEETUP_EVENT);","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(NORMAL_MEETUP_EVENT, datedEvent.toModelType());","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"teozhengyang":6,"owenyeo":63}},{"path":"src/test/java/seedu/address/storage/timetable/JsonAdaptedModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage.timetable;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalSchedule.NORMAL_MODULE;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Module;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.TimeBlock;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"public class JsonAdaptedModuleTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"    private static final String INVALID_NAME \u003d \"woohoo\";","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"    private static final String INVALID_TIMEBLOCK \u003d \"monday\";","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"    private static final String VALID_NAME \u003d \"CS2100\";","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"    private static final String VALID_TIMEBLOCK \u003d \"Monday 1200 1300\";","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_validModuleDetails_returnsModule() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"        JsonAdaptedModule module \u003d new JsonAdaptedModule(NORMAL_MODULE);","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(NORMAL_MODULE, module.toModelType());","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_invalidModuleName_throwsException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"        JsonAdaptedModule module \u003d new JsonAdaptedModule(INVALID_NAME, VALID_TIMEBLOCK);","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"        String expectedMessage \u003d Module.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        assertThrows(IllegalArgumentException.class, module::toModelType, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_nullModuleName_throwsException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"        JsonAdaptedModule module \u003d new JsonAdaptedModule(null, VALID_TIMEBLOCK);","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"        String expectedMessage \u003d Module.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"        assertThrows(IllegalValueException.class, module::toModelType, expectedMessage);","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_invalidTimeBlock_throwsException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"        JsonAdaptedModule module \u003d new JsonAdaptedModule(VALID_NAME, INVALID_TIMEBLOCK);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"        String expectedMessage \u003d TimeBlock.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        assertThrows(IllegalArgumentException.class, module::toModelType, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"    public void toModelType_nullTimeBlock_throwsException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"        JsonAdaptedModule module \u003d new JsonAdaptedModule(VALID_NAME, null);","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"        String expectedMessage \u003d TimeBlock.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"        assertThrows(IllegalValueException.class, module::toModelType, expectedMessage);","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"teozhengyang":5,"owenyeo":50}},{"path":"src/test/java/seedu/address/storage/timetable/JsonAdaptedScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage.timetable;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.*;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Module;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.storage.JsonAdaptedPerson;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"public class JsonAdaptedScheduleTest {  ","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"    public static final String VALID_MODULE_NAME \u003d \"CS2100\";","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    public static final String VALID_TIMEBLOCK \u003d \"Monday 1200 1300\";","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    public static final String VALID_DATE \u003d \"2001-12-26\";","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    public static final String VALID_EVENT_NAME \u003d \"Walk Dog\";","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    public static final boolean VALID_EVENT_REMINDER \u003d true;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    public static final Person VALID_PERSON \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    public void toModelType_validSchedule_returnsSchedule() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        schedule.addModule(new Module(VALID_MODULE_NAME, VALID_TIMEBLOCK));","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        schedule.addDatedEvent(new DatedEvent(VALID_EVENT_NAME, VALID_TIMEBLOCK, VALID_DATE, VALID_EVENT_REMINDER));","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        schedule.addCca(new Cca(VALID_MODULE_NAME, VALID_TIMEBLOCK));","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"        schedule.addMeetUpEvent(new MeetUpEvent(VALID_EVENT_NAME, VALID_TIMEBLOCK, VALID_DATE, VALID_EVENT_REMINDER, VALID_PERSON));","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        JsonAdaptedSchedule jsonAdaptedSchedule \u003d new JsonAdaptedSchedule(schedule);","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        Schedule schedule1 \u003d jsonAdaptedSchedule.toModelType();","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"        assert schedule1.equals(schedule);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"teozhengyang":16,"owenyeo":24}},{"path":"src/test/java/seedu/address/testutil/DatedEventsBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"public class DatedEventsBuilder {","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"    private ArrayList\u003cDatedEvent\u003e datedEvents;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"    public DatedEventsBuilder(ArrayList\u003cDatedEvent\u003e datedEvents) {","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"        this.datedEvents \u003d datedEvents;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    public DatedEventsBuilder() {","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"        datedEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    public DatedEventsBuilder withDatedEvent(DatedEvent datedEvent) {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"        datedEvents.add(datedEvent);","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    public ArrayList\u003cDatedEvent\u003e build() {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"        return datedEvents;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"teozhengyang":27}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.edit.EditPersonDescriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"    private final EditPersonDescriptor descriptor;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"        descriptor.setBirthday(person.getBirthday());","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"        descriptor.setSchedule(person.getSchedule());","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"     * Sets the {@code Birthday} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"    public EditPersonDescriptorBuilder withBirthday(String birthday) {","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"        descriptor.setBirthday(new Birthday(birthday));","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"    public EditPersonDescriptorBuilder withSchedule(Schedule schedule) {","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"        descriptor.setSchedule(schedule);","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"owenyeo"},"content":"     * Sets the {@code Schedule} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"owenyeo"},"content":"    public EditPersonDescriptorBuilder withSchedule() {","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"        descriptor.setSchedule(new Schedule());","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"andrefoo"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"teozhengyang":17,"owenyeo":4,"andrefoo":6,"lululwtv":1,"-":85}},{"path":"src/test/java/seedu/address/testutil/EditUserDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import seedu.address.logic.commands.edit.EditUserDescriptor;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":" * A utility class to help with building EditUserDescriptorBuilder objects.","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"public class EditUserDescriptorBuilder {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"    private final EditUserDescriptor descriptor;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"    public EditUserDescriptorBuilder() {","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"        descriptor \u003d new EditUserDescriptor();","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"    public EditUserDescriptorBuilder(EditUserDescriptor descriptor) {","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"        this.descriptor \u003d new EditUserDescriptor(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"     * Returns an {@code EditUserDescriptorBuilder} with fields containing {@code user}\u0027s details","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"    public EditUserDescriptorBuilder(User user) {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"        descriptor \u003d new EditUserDescriptor();","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"        descriptor.setName(user.getName());","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"        descriptor.setPhone(user.getPhone());","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"        descriptor.setEmail(user.getEmail());","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"        descriptor.setAddress(user.getAddress());","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        descriptor.setBirthday(user.getBirthday());","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"        descriptor.setSchedule(user.getSchedule());","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"        descriptor.setTags(user.getTags());","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"        descriptor.setDatedEvents(user.getDatedEvents());","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"     * Sets the {@code Name} of the {@code EditUserDescriptorBuilder} that we are building.","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"    public EditUserDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"     * Sets the {@code Phone} of the {@code EditUserDescriptorBuilder} that we are building.","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"    public EditUserDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"     * Sets the {@code Email} of the {@code EditUserDescriptorBuilder} that we are building.","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"    public EditUserDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"owenyeo"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"owenyeo"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"owenyeo"},"content":"     * Sets the {@code Address} of the {@code EditUserDescriptorBuilder} that we are building.","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"owenyeo"},"content":"    public EditUserDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"owenyeo"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"owenyeo"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"     * Sets the {@code Birthday} of the {@code EditUserDescriptorBuilder} that we are building.","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"    public EditUserDescriptorBuilder withBirthday(String birthday) {","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"        descriptor.setBirthday(new Birthday(birthday));","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"owenyeo"},"content":"     * Sets the {@code Schedule} of the {@code EditUserDescriptorBuilder} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"owenyeo"},"content":"    public EditUserDescriptorBuilder withSchedule() {","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"        descriptor.setSchedule(new Schedule());","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"    public EditUserDescriptorBuilder withSchedule(Schedule schedule) {","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"        descriptor.setSchedule(schedule);","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"    public EditUserDescriptorBuilder withDatedEvents(){","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"        descriptor.setDatedEvents(new ArrayList\u003cDatedEvent\u003e());","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"teozhengyang"},"content":"    public EditUserDescriptorBuilder withDatedEvents(ArrayList\u003cDatedEvent\u003e datedEvents) {","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"teozhengyang"},"content":"        descriptor.setDatedEvents(datedEvents);","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"owenyeo"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"owenyeo"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditUserDescriptorBuilder}","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"owenyeo"},"content":"     * that we are building.","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"owenyeo"},"content":"    public EditUserDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"owenyeo"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"owenyeo"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"owenyeo"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"owenyeo"},"content":"    public EditUserDescriptor build() {","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"owenyeo"},"content":"        return descriptor;","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"teozhengyang":30,"owenyeo":97}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    public static final String DEFAULT_BIRTHDAY \u003d \"2000-12-01\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"    private Birthday birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"    private Schedule schedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        birthday \u003d new Birthday(DEFAULT_BIRTHDAY);","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"        schedule \u003d new Schedule();","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        birthday \u003d personToCopy.getBirthday();","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"        schedule \u003d personToCopy.getSchedule();","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"andrefoo"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"andrefoo"},"content":"     * Parses the {@code freeTimes} into a {@code Set\u003cFreeTime\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"andrefoo"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"owenyeo"},"content":"    public PersonBuilder withSchedule() {","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"        this.schedule \u003d new Schedule();","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"    public PersonBuilder withSchedule(Schedule schedule) {","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"andrefoo"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"andrefoo"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"teozhengyang"},"content":"     * Sets the {@code Birthday} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"teozhengyang"},"content":"    public PersonBuilder withBirthday(String birthday) {","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"teozhengyang"},"content":"        this.birthday \u003d new Birthday(birthday);","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"teozhengyang"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":124,"author":{"gitId":"owenyeo"},"content":"        return new Person(name, phone, email, address, birthday, schedule, tags);","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"teozhengyang":20,"owenyeo":6,"andrefoo":6,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.logic.commands.edit.EditPersonDescriptor;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"        sb.append(PREFIX_BIRTHDAY + person.getBirthday().toString() + \" \");","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"        sb.append(PREFIX_SCHEDULE + person.getSchedule().toString() + \" \");","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        descriptor.getBirthday().ifPresent(birthday -\u003e sb.append(PREFIX_BIRTHDAY).append(birthday).append(\" \"));","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"teozhengyang":4,"owenyeo":2,"-":61}},{"path":"src/test/java/seedu/address/testutil/ScheduleBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Cca;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.MeetUpEvent;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Module;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"public class ScheduleBuilder {","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"    private Schedule schedule;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"    public ScheduleBuilder() {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"        schedule \u003d new Schedule();","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"    public ScheduleBuilder(Schedule schedule) {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"     * Adds a new {@code Module} to the {@code Schedule} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"    public ScheduleBuilder withModule(Module module) {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"        schedule.addModule(module);","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"     * Adds a new {@code Cca} to the {@code Schedule} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"    public ScheduleBuilder withCca(Cca cca) {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"        schedule.addCca(cca);","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"     * Adds a new {@code DatedEvent} to the {@code Schedule} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"    public ScheduleBuilder withDatedEvent(DatedEvent datedEvent) {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"        schedule.addDatedEvent(datedEvent);","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"     * Adds a new {@code MeetUpEvent} to the {@code Schedule} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"    public ScheduleBuilder withMeetUpEvent(MeetUpEvent meetUpEvent) {","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"        schedule.addMeetUpEvent(meetUpEvent);","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"    public Schedule build() {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"        return schedule;","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"    ","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"owenyeo":57}},{"path":"src/test/java/seedu/address/testutil/TypicalDatedEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"public class TypicalDatedEvents {","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"    public static final ArrayList\u003cDatedEvent\u003e NORMAL_DATEDEVENTS \u003d new DatedEventsBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"            .withDatedEvent(DatedEvent.newDatedEvent(\"CS2103 Meeting 2023-10-10 1030 1130 y\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"            .withDatedEvent(DatedEvent.newDatedEvent(\"Walk Dog 2023-10-10 1030 1130 n\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"            .withDatedEvent(DatedEvent.newDatedEvent(\"Competitive sleeping 2023-10-10 1030 1130 y\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"            .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"teozhengyang":15}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalSchedule.NORMAL_SCHEDULE;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\").withPhone(\"94351253\")","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"            .withBirthday(\"2000-01-01\").withTags(\"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"            .withBirthday(\"2000-01-01\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"            .withEmail(\"heinz@example.com\").withBirthday(\"2000-01-01\").withAddress(\"wall street\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withSchedule(NORMAL_SCHEDULE)","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"            .withBirthday(\"2000-01-01\").withTags(\"friends\").build();","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withSchedule(NORMAL_SCHEDULE)","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"            .withBirthday(\"2000-01-01\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withSchedule(NORMAL_SCHEDULE)","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"            .withBirthday(\"2000-01-01\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withSchedule(NORMAL_SCHEDULE)","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"            .withBirthday(\"2000-01-01\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withSchedule(NORMAL_SCHEDULE)","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"            .withBirthday(\"2000-01-01\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withSchedule(NORMAL_SCHEDULE)","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"            .withBirthday(\"2000-01-01\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withSchedule().withBirthday(VALID_BIRTHDAY_AMY)","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"            .withEmail(VALID_EMAIL_BOB).withBirthday(VALID_BIRTHDAY_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"            .withSchedule(NORMAL_SCHEDULE).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"teozhengyang":24,"-":60}},{"path":"src/test/java/seedu/address/testutil/TypicalSchedule.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.Cca;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.MeetUpEvent;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.Module;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"public class TypicalSchedule {","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    public static final Schedule NORMAL_SCHEDULE \u003d new ScheduleBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"            .withModule(new Module(\"CS2103\", \"Wednesday 1200 1300\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"            .withModule(new Module(\"CS2101\", \"Tuesday 1200 1400\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"            .withModule(new Module(\"CS2100\", \"Monday 1400 1500\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"            .withCca(new Cca(\"Basketball\", \"Monday 1800 2000\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"            .withCca(new Cca(\"Soccer\", \"Tuesday 1800 2000\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"            .withCca(new Cca(\"Tennis\", \"Wednesday 1800 2000\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"            .withDatedEvent(DatedEvent.newDatedEvent(\"CS2103 Meeting 2023-10-10 1030 1130 y\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"            .withDatedEvent(DatedEvent.newDatedEvent(\"Walk Dog 2023-10-10 1030 1130 n\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"            .withDatedEvent(DatedEvent.newDatedEvent(\"Competitive sleeping 2023-10-10 1030 1130 y\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"            .withMeetUpEvent(MeetUpEvent.newMeetUpEvent(\"CS2103 Meeting 2023-10-10 1030 1130 y\",","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"                    TypicalPersons.ALICE))","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"            .withMeetUpEvent(MeetUpEvent.newMeetUpEvent(\"Walk Dog 2023-10-10 1030 1130 n\",","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"                    TypicalPersons.BENSON))","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"            .withMeetUpEvent(MeetUpEvent.newMeetUpEvent(\"Competitive sleeping 2023-10-10 1030 1130 y\",","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"                    TypicalPersons.CARL))","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"            .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    public static final Schedule FULL_SCHEDULE \u003d new ScheduleBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"            .withModule(new Module(\"CS2103\", \"Monday 0000 2330\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"            .withModule(new Module(\"CS2101\", \"Tuesday 0000 2330\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"            .withModule(new Module(\"CS2100\", \"Wednesday 0000 2330\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"            .withModule(new Module(\"CS2103\", \"Thursday 0000 2330\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"            .withModule(new Module(\"CS2101\", \"Friday 0000 2330\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"            .withModule(new Module(\"CS2100\", \"Saturday 0000 2330\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"            .withModule(new Module(\"CS2103\", \"Sunday 0000 2330\"))","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"            .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"    public static final Cca NORMAL_CCA \u003d new Cca(\"Basketball\", \"Monday 1800 2000\");","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"    public static final Module NORMAL_MODULE \u003d new Module(\"CS2103\", \"Wednesday 1200 1300\");","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"    public static final DatedEvent NORMAL_DATED_EVENT \u003d DatedEvent.newDatedEvent(\"CS2103 Meeting 2023-10-10 1030 1130 y\");","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"    public static final MeetUpEvent NORMAL_MEETUP_EVENT \u003d MeetUpEvent.newMeetUpEvent(\"CS2103 Meeting 2023-10-10 1030 1130 y\",","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"            TypicalPersons.ALICE);","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"teozhengyang":46}},{"path":"src/test/java/seedu/address/testutil/TypicalUsers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalDatedEvents.NORMAL_DATEDEVENTS;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalSchedule.NORMAL_SCHEDULE;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalSchedule.FULL_SCHEDULE;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":" * A utility class containing a list of {@code User} objects to be used in tests.","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"public class TypicalUsers {","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    public static final User JOHN \u003d new UserBuilder().withName(\"John Doe\")","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"john@example.com\")","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"            .withPhone(\"98765432\").withBirthday(\"1998-01-01\").withSchedule()","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"    public static final User JANE \u003d new UserBuilder().withName(\"Jane Doe\")","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"            .withAddress(\"321, Clementi Ave 4, #05-20\").withEmail(\"jane@example.com\")","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"            .withPhone(\"92345678\").withBirthday(\"2000-01-01\").withSchedule(NORMAL_SCHEDULE)","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"    public static final User JAMES \u003d new UserBuilder().withName(\"James Doe\")","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"            .withAddress(\"123, Clementi Ave 6, #05-22\").withEmail(\"james@example.com\")","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"            .withPhone(\"92345679\").withBirthday(\"2000-01-01\").withSchedule(FULL_SCHEDULE)","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"    // Manually added - User\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"    public static final User AMY \u003d new UserBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withBirthday(VALID_BIRTHDAY_AMY)","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"            .withSchedule().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"    public static final User BOB \u003d new UserBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withBirthday(VALID_BIRTHDAY_BOB)","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"            .withSchedule(NORMAL_SCHEDULE).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"            .withDatedEvents(NORMAL_DATEDEVENTS).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"    private TypicalUsers() {} // prevents instantiation","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"teozhengyang":20,"owenyeo":36}},{"path":"src/test/java/seedu/address/testutil/UserBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static seedu.address.testutil.TypicalDatedEvents.NORMAL_DATEDEVENTS;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.DatedEvent;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.timetable.Schedule;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":" * A utility class to help with building User objects.","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"public class UserBuilder {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    public static final String DEFAULT_BIRTHDAY \u003d \"2000-01-01\";","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"    private Name name;","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    private Email email;","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"    private Address address;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"    private Birthday birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"    private Schedule schedule;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"    private ArrayList\u003cDatedEvent\u003e datedEvents;","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"     * Sets the {@code datedEvents} of the {@code User} that we are building.","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"    public UserBuilder() {","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"        birthday \u003d new Birthday(DEFAULT_BIRTHDAY);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"        schedule \u003d new Schedule();","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"        datedEvents \u003d NORMAL_DATEDEVENTS;","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"     * Initializes the UserBuilder with the data of {@code userToCopy}.","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"    public UserBuilder(User userToCopy) {","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"        name \u003d userToCopy.getName();","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"        phone \u003d userToCopy.getPhone();","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"        email \u003d userToCopy.getEmail();","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"        address \u003d userToCopy.getAddress();","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"        birthday \u003d userToCopy.getBirthday();","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"        schedule \u003d userToCopy.getSchedule();","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"        tags \u003d new HashSet\u003c\u003e(userToCopy.getTags());","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"        datedEvents \u003d new ArrayList\u003c\u003e(userToCopy.getDatedEvents());","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"     * Sets the {@code Name} of the {@code User} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"owenyeo"},"content":"    public UserBuilder withName(String name) {","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"owenyeo"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"owenyeo"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code User} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"owenyeo"},"content":"    public UserBuilder withTags(String ... tags) {","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"owenyeo"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"owenyeo"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"owenyeo"},"content":"     * Sets the {@code Schedule} of the {@code User} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"owenyeo"},"content":"    public UserBuilder withSchedule() {","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"        this.schedule \u003d new Schedule();","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"    public UserBuilder withSchedule(Schedule schedule) {","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"    public UserBuilder withDatedEvents() {","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"        this.datedEvents \u003d new ArrayList\u003cDatedEvent\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"     * Sets the {@code datedEvents} of the {@code User} that we are building.","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"    public UserBuilder withDatedEvents(ArrayList\u003cDatedEvent\u003e datedEvents) {","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"teozhengyang"},"content":"        this.datedEvents \u003d datedEvents;","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"owenyeo"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"owenyeo"},"content":"     * Sets the {@code Address} of the {@code User} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"owenyeo"},"content":"    public UserBuilder withAddress(String address) {","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"owenyeo"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"owenyeo"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"owenyeo"},"content":"     * Sets the {@code Phone} of the {@code User} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"owenyeo"},"content":"    public UserBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"owenyeo"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"owenyeo"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"owenyeo"},"content":"     * Sets the {@code Email} of the {@code User} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"owenyeo"},"content":"    public UserBuilder withEmail(String email) {","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"owenyeo"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"owenyeo"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"owenyeo"},"content":"     * Sets the {@code Birthday} of the {@code User} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"teozhengyang"},"content":"    public UserBuilder withBirthday(String birthday) {","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"teozhengyang"},"content":"        this.birthday \u003d new Birthday(birthday);","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"teozhengyang"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"owenyeo"},"content":"    public User build() {","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"owenyeo"},"content":"        return new User(name, phone, email, address, birthday, schedule, tags, datedEvents);","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"teozhengyang":36,"owenyeo":111}}]

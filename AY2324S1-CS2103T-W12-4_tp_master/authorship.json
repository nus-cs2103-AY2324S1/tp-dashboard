[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W12-4/tp/actions)","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"* The project simulates an ongoing software project for a desktop application (called _TimetaBRO_) used for finding meetup times.","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"* For the detailed documentation of this project, see the **[TimetaBRO Website](https://ay2324s1-cs2103T-w12-4.github.io/tp/)**.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"* This project is based on the AddressBook-Level3 project created by the **[SE-EDU initiative](https://se-education.org)**.","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"andrefoo":4,"-":5}},{"path":"bin/main/view/CommandBox.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":9}},{"path":"bin/main/view/DarkTheme.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":".background {","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":".label {","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":".label-bright {","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":".label-header {","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":".text-field {","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":".tab-pane {","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":".table-view {","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color:","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"        transparent","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"        transparent","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"        transparent;","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"owenyeo"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"owenyeo"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"owenyeo"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"owenyeo"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"owenyeo"},"content":".split-pane {","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"owenyeo"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"owenyeo"},"content":".list-view {","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"owenyeo"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"owenyeo"},"content":".list-cell {","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"owenyeo"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"owenyeo"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"owenyeo"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"owenyeo"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"owenyeo"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"owenyeo"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"owenyeo"},"content":".list-cell .label {","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"owenyeo"},"content":".cell_big_label {","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"owenyeo"},"content":".cell_small_label {","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"owenyeo"},"content":".stack-pane {","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"owenyeo"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"owenyeo"},"content":".pane-with-border {","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"owenyeo"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"owenyeo"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"owenyeo"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"owenyeo"},"content":".status-bar {","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"owenyeo"},"content":".result-display {","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"owenyeo"},"content":".result-display .label {","lastModifiedDate":"2023-10-03"},{"lineNumber":157,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2023-10-03"},{"lineNumber":158,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":159,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"owenyeo"},"content":".status-bar .label {","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"owenyeo"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-10-03"},{"lineNumber":165,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":166,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":167,"author":{"gitId":"owenyeo"},"content":".status-bar-with-border {","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-10-03"},{"lineNumber":170,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-03"},{"lineNumber":171,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":172,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":173,"author":{"gitId":"owenyeo"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-10-03"},{"lineNumber":174,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":176,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":177,"author":{"gitId":"owenyeo"},"content":".grid-pane {","lastModifiedDate":"2023-10-03"},{"lineNumber":178,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-03"},{"lineNumber":180,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-03"},{"lineNumber":181,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":182,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"owenyeo"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-10-03"},{"lineNumber":184,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-03"},{"lineNumber":185,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":186,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":187,"author":{"gitId":"owenyeo"},"content":".context-menu {","lastModifiedDate":"2023-10-03"},{"lineNumber":188,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":190,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"owenyeo"},"content":".context-menu .label {","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":194,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"owenyeo"},"content":".menu-bar {","lastModifiedDate":"2023-10-03"},{"lineNumber":196,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":197,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":199,"author":{"gitId":"owenyeo"},"content":".menu-bar .label {","lastModifiedDate":"2023-10-03"},{"lineNumber":200,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":201,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-03"},{"lineNumber":202,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":203,"author":{"gitId":"owenyeo"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-03"},{"lineNumber":204,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":205,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":206,"author":{"gitId":"owenyeo"},"content":".menu .left-container {","lastModifiedDate":"2023-10-03"},{"lineNumber":207,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-10-03"},{"lineNumber":208,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":209,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":210,"author":{"gitId":"owenyeo"},"content":"/*","lastModifiedDate":"2023-10-03"},{"lineNumber":211,"author":{"gitId":"owenyeo"},"content":" * Metro style Push Button","lastModifiedDate":"2023-10-03"},{"lineNumber":212,"author":{"gitId":"owenyeo"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-10-03"},{"lineNumber":213,"author":{"gitId":"owenyeo"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-10-03"},{"lineNumber":214,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":215,"author":{"gitId":"owenyeo"},"content":".button {","lastModifiedDate":"2023-10-03"},{"lineNumber":216,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-10-03"},{"lineNumber":217,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2023-10-03"},{"lineNumber":218,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-10-03"},{"lineNumber":219,"author":{"gitId":"owenyeo"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":220,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-03"},{"lineNumber":221,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-10-03"},{"lineNumber":222,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":223,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2023-10-03"},{"lineNumber":224,"author":{"gitId":"owenyeo"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-10-03"},{"lineNumber":225,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":226,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":227,"author":{"gitId":"owenyeo"},"content":".button:hover {","lastModifiedDate":"2023-10-03"},{"lineNumber":228,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2023-10-03"},{"lineNumber":229,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":230,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":231,"author":{"gitId":"owenyeo"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-10-03"},{"lineNumber":232,"author":{"gitId":"owenyeo"},"content":"  -fx-background-color: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":233,"author":{"gitId":"owenyeo"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-10-03"},{"lineNumber":234,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":235,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":236,"author":{"gitId":"owenyeo"},"content":".button:focused {","lastModifiedDate":"2023-10-03"},{"lineNumber":237,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2023-10-03"},{"lineNumber":238,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":239,"author":{"gitId":"owenyeo"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-10-03"},{"lineNumber":240,"author":{"gitId":"owenyeo"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":241,"author":{"gitId":"owenyeo"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":242,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":243,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":244,"author":{"gitId":"owenyeo"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-10-03"},{"lineNumber":245,"author":{"gitId":"owenyeo"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-10-03"},{"lineNumber":246,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-03"},{"lineNumber":247,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":248,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":249,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":250,"author":{"gitId":"owenyeo"},"content":".button:default {","lastModifiedDate":"2023-10-03"},{"lineNumber":251,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-10-03"},{"lineNumber":252,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-03"},{"lineNumber":253,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":254,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":255,"author":{"gitId":"owenyeo"},"content":".button:default:hover {","lastModifiedDate":"2023-10-03"},{"lineNumber":256,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-10-03"},{"lineNumber":257,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":258,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":259,"author":{"gitId":"owenyeo"},"content":".dialog-pane {","lastModifiedDate":"2023-10-03"},{"lineNumber":260,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-03"},{"lineNumber":261,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":262,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":263,"author":{"gitId":"owenyeo"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-10-03"},{"lineNumber":264,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-10-03"},{"lineNumber":265,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":266,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":267,"author":{"gitId":"owenyeo"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-10-03"},{"lineNumber":268,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-03"},{"lineNumber":269,"author":{"gitId":"owenyeo"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-03"},{"lineNumber":270,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":271,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":272,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":273,"author":{"gitId":"owenyeo"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-10-03"},{"lineNumber":274,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-10-03"},{"lineNumber":275,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":276,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":277,"author":{"gitId":"owenyeo"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-10-03"},{"lineNumber":278,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-03"},{"lineNumber":279,"author":{"gitId":"owenyeo"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-10-03"},{"lineNumber":280,"author":{"gitId":"owenyeo"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":281,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":282,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":283,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":284,"author":{"gitId":"owenyeo"},"content":".scroll-bar {","lastModifiedDate":"2023-10-03"},{"lineNumber":285,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":286,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":287,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":288,"author":{"gitId":"owenyeo"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-10-03"},{"lineNumber":289,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-10-03"},{"lineNumber":290,"author":{"gitId":"owenyeo"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-10-03"},{"lineNumber":291,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":292,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":293,"author":{"gitId":"owenyeo"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-10-03"},{"lineNumber":294,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-03"},{"lineNumber":295,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":296,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":297,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":298,"author":{"gitId":"owenyeo"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-10-03"},{"lineNumber":299,"author":{"gitId":"owenyeo"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-10-03"},{"lineNumber":300,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":301,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":302,"author":{"gitId":"owenyeo"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-10-03"},{"lineNumber":303,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-10-03"},{"lineNumber":304,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":305,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":306,"author":{"gitId":"owenyeo"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-10-03"},{"lineNumber":307,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":308,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":309,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":310,"author":{"gitId":"owenyeo"},"content":"#cardPane {","lastModifiedDate":"2023-10-03"},{"lineNumber":311,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-03"},{"lineNumber":312,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":313,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":314,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":315,"author":{"gitId":"owenyeo"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-10-03"},{"lineNumber":316,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-10-03"},{"lineNumber":317,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-10-03"},{"lineNumber":318,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":319,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":320,"author":{"gitId":"owenyeo"},"content":"#commandTextField {","lastModifiedDate":"2023-10-03"},{"lineNumber":321,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2023-10-03"},{"lineNumber":322,"author":{"gitId":"owenyeo"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":323,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2023-10-03"},{"lineNumber":324,"author":{"gitId":"owenyeo"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":325,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":326,"author":{"gitId":"owenyeo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-03"},{"lineNumber":327,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-03"},{"lineNumber":328,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":329,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":330,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":331,"author":{"gitId":"owenyeo"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2023-10-03"},{"lineNumber":332,"author":{"gitId":"owenyeo"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-10-03"},{"lineNumber":333,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":334,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":335,"author":{"gitId":"owenyeo"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-10-03"},{"lineNumber":336,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2023-10-03"},{"lineNumber":337,"author":{"gitId":"owenyeo"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-03"},{"lineNumber":338,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":339,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":340,"author":{"gitId":"owenyeo"},"content":"#tags {","lastModifiedDate":"2023-10-03"},{"lineNumber":341,"author":{"gitId":"owenyeo"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-03"},{"lineNumber":342,"author":{"gitId":"owenyeo"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-03"},{"lineNumber":343,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":344,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":345,"author":{"gitId":"owenyeo"},"content":"#tags .label {","lastModifiedDate":"2023-10-03"},{"lineNumber":346,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":347,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-10-03"},{"lineNumber":348,"author":{"gitId":"owenyeo"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-03"},{"lineNumber":349,"author":{"gitId":"owenyeo"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-03"},{"lineNumber":350,"author":{"gitId":"owenyeo"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-03"},{"lineNumber":351,"author":{"gitId":"owenyeo"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-03"},{"lineNumber":352,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":352}},{"path":"bin/main/view/Extensions.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":".error {","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":".list-cell:empty {","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"    -fx-background: #383838;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":".tag-selector {","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":".tooltip-text {","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":20}},{"path":"bin/main/view/HelpWindow.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"#copyButton {","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"#copyButton:hover {","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"#copyButton:armed {","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"#helpMessageContainer {","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":19}},{"path":"bin/main/view/HelpWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"  \u003cicons\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"  \u003cscene\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"    \u003cScene\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":44}},{"path":"bin/main/view/MainWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"  \u003cicons\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"  \u003cscene\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"    \u003cScene\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":60}},{"path":"bin/main/view/PersonListCard.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":36}},{"path":"bin/main/view/PersonListPanel.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":8}},{"path":"bin/main/view/ResultDisplay.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":9}},{"path":"bin/main/view/StatusBarFooter.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":12}},{"path":"bin/test/view/UiPartTest/invalidFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"Not a valid FXML file","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":1}},{"path":"bin/test/view/UiPartTest/validFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003c?import seedu.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":4}},{"path":"bin/test/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"\u003cfx:root type\u003d\"seedu.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"owenyeo":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"### Andre Foo En Jie","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"\u003cimg src\u003d\"images/andrefoo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[github](https://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"* Role: Developer","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"### Khiew Yiquan, Edric","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"\u003cimg src\u003d\"images/lululwtv.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"[[github](http://github.com/lululwtv)]","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"[[portfolio](team/lululwtv.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"kristayeo"},"content":"* Role: Developer","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"kristayeo"},"content":"* Responsibilities: Ui","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"kristayeo"},"content":"### Krista Yeo Su-Anne","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"kristayeo"},"content":"\u003cimg src\u003d\"images/kristayeo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"kristayeo"},"content":"[[github](http://github.com/kristayeo)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"kristayeo"},"content":"### Owen Yeo Le Yang","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"kristayeo"},"content":"\u003cimg src\u003d\"images/owenyeo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"kristayeo"},"content":"[[github](http://github.com/owenyeo)]","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"[[portfolio](team/owenyeo.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"kristayeo"},"content":"### Teo Zheng Yang","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"kristayeo"},"content":"\u003cimg src\u003d\"images/teozhengyang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"kristayeo"},"content":"[[github](http://github.com/teozhengyang)]","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lululwtv":2,"kristayeo":17,"-":40}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"teozhengyang"},"content":"* has a need to manage university life, social interactions, and schedule","lastModifiedDate":"2023-10-03"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"teozhengyang"},"content":"**Value proposition**: manage contacts \u0026 schedule faster than a typical mouse/GUI-driven app","lastModifiedDate":"2023-10-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| Priority | As a …​                   | I want to …​                                        | So that I can…​                                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"andrefoo"},"content":"|----------|---------------------------|-----------------------------------------------------|-------------------------------------------------------------------|","lastModifiedDate":"2023-10-04"},{"lineNumber":275,"author":{"gitId":"andrefoo"},"content":"| `* * *`  | new user                  | add people to my list of friends                    | I add new friends to my list                                      |","lastModifiedDate":"2023-10-04"},{"lineNumber":276,"author":{"gitId":"andrefoo"},"content":"| `* * *`  | user                      | delete people off my list of friends                | I don\u0027t need to see their faces                                   |","lastModifiedDate":"2023-10-04"},{"lineNumber":277,"author":{"gitId":"andrefoo"},"content":"| `* * *`  | user                      | view my list of friends                             | view my friends at a glance                                       |","lastModifiedDate":"2023-10-04"},{"lineNumber":278,"author":{"gitId":"andrefoo"},"content":"| `* * *`  | user                      | search for my friends\u0027 profiles                     | find them more easily                                             |","lastModifiedDate":"2023-10-04"},{"lineNumber":279,"author":{"gitId":"andrefoo"},"content":"| `* * *`  | user                      | edit details in my friends profiles                 | change details if wrongly filled up or if they change             |","lastModifiedDate":"2023-10-04"},{"lineNumber":280,"author":{"gitId":"andrefoo"},"content":"| `* * *`  | student                   | input my timetable                                  | compare with my friends\u0027 schedules                                |","lastModifiedDate":"2023-10-04"},{"lineNumber":281,"author":{"gitId":"andrefoo"},"content":"| `* * *`  | student                   | input my friend\u0027s timetable                         | compare my timetable with their\u0027s                                 |","lastModifiedDate":"2023-10-04"},{"lineNumber":282,"author":{"gitId":"andrefoo"},"content":"| `* * *`  | student with many friends | search for friends                                  | quickly find and view their schedules                             |","lastModifiedDate":"2023-10-04"},{"lineNumber":283,"author":{"gitId":"andrefoo"},"content":"| `*`      | student                   | give friends nicknames                              | personalize and easily identify them                              |","lastModifiedDate":"2023-10-04"},{"lineNumber":284,"author":{"gitId":"andrefoo"},"content":"| `* *`    | student                   | create events for meeting up                        | plan gatherings                                                   |","lastModifiedDate":"2023-10-04"},{"lineNumber":285,"author":{"gitId":"andrefoo"},"content":"| `* *`    | student                   | identify common modules with my friends             | attend classes with them                                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":286,"author":{"gitId":"andrefoo"},"content":"| `* *`    | student                   | create events for meeting up                        | plan gatherings                                                   |","lastModifiedDate":"2023-10-04"},{"lineNumber":287,"author":{"gitId":"andrefoo"},"content":"| `* *`    | student                   | add friends to events                               | remember who is attending events                                  |","lastModifiedDate":"2023-10-04"},{"lineNumber":288,"author":{"gitId":"andrefoo"},"content":"| `* *`    | student                   | edit events                                         | update changes in plans                                           |","lastModifiedDate":"2023-10-04"},{"lineNumber":289,"author":{"gitId":"andrefoo"},"content":"| `*`      | student                   | view my timetable in a visual format                | easily view my commitments                                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":290,"author":{"gitId":"andrefoo"},"content":"| `*`      | student                   | visually compare my timetable with with my friend\u0027s | quickly identify overlaps or free times                           |","lastModifiedDate":"2023-10-04"},{"lineNumber":291,"author":{"gitId":"andrefoo"},"content":"| `* *`    | student                   | add friend groups                                   | easily manage and view schedules for specific circles of friends. |","lastModifiedDate":"2023-10-04"},{"lineNumber":292,"author":{"gitId":"andrefoo"},"content":"| `* *`    | student                   | identify common free times within friend groups     | plan for group activities                                         |","lastModifiedDate":"2023-10-04"},{"lineNumber":293,"author":{"gitId":"andrefoo"},"content":"| `*`      | student                   | see combined timetables of multiple friends         | create events visually                                            |","lastModifiedDate":"2023-10-04"},{"lineNumber":294,"author":{"gitId":"andrefoo"},"content":"| `*`      | student                   | see combined timetables of a friend group           | plan for group activities                                         |","lastModifiedDate":"2023-10-04"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":325,"author":{"gitId":"kristayeo"},"content":"**Use case: Edit a person**","lastModifiedDate":"2023-10-05"},{"lineNumber":326,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":327,"author":{"gitId":"kristayeo"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":328,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":329,"author":{"gitId":"kristayeo"},"content":"1.  User requests to list persons","lastModifiedDate":"2023-10-05"},{"lineNumber":330,"author":{"gitId":"kristayeo"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2023-10-05"},{"lineNumber":331,"author":{"gitId":"kristayeo"},"content":"3.  User requests to edit a specific person in the list","lastModifiedDate":"2023-10-05"},{"lineNumber":332,"author":{"gitId":"kristayeo"},"content":"4.  AddressBook edits the person","lastModifiedDate":"2023-10-05"},{"lineNumber":333,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":334,"author":{"gitId":"kristayeo"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":335,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":336,"author":{"gitId":"kristayeo"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":337,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":338,"author":{"gitId":"kristayeo"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":339,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":340,"author":{"gitId":"kristayeo"},"content":"  Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":341,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":342,"author":{"gitId":"kristayeo"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":343,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":344,"author":{"gitId":"kristayeo"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":345,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":346,"author":{"gitId":"kristayeo"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-05"},{"lineNumber":347,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":348,"author":{"gitId":"kristayeo"},"content":"**Use case: Add a person**","lastModifiedDate":"2023-10-05"},{"lineNumber":349,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":350,"author":{"gitId":"kristayeo"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":351,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":352,"author":{"gitId":"kristayeo"},"content":"1.  User requests to list persons","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"kristayeo"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2023-10-05"},{"lineNumber":354,"author":{"gitId":"kristayeo"},"content":"3.  User requests to add a new person to the list","lastModifiedDate":"2023-10-05"},{"lineNumber":355,"author":{"gitId":"kristayeo"},"content":"4.  AddressBook adds the new person","lastModifiedDate":"2023-10-05"},{"lineNumber":356,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":357,"author":{"gitId":"kristayeo"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":358,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":359,"author":{"gitId":"kristayeo"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":360,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":361,"author":{"gitId":"kristayeo"},"content":"* 3a. Not all the required fields of the person are provided.","lastModifiedDate":"2023-10-05"},{"lineNumber":362,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":363,"author":{"gitId":"kristayeo"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":364,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":365,"author":{"gitId":"kristayeo"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-05"},{"lineNumber":366,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":367,"author":{"gitId":"kristayeo"},"content":"**Use case: Find a person**","lastModifiedDate":"2023-10-05"},{"lineNumber":368,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":369,"author":{"gitId":"kristayeo"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":370,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":371,"author":{"gitId":"kristayeo"},"content":"1.  User requests to list persons","lastModifiedDate":"2023-10-05"},{"lineNumber":372,"author":{"gitId":"kristayeo"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2023-10-05"},{"lineNumber":373,"author":{"gitId":"kristayeo"},"content":"3.  User requests to find names containing an inputted keyword","lastModifiedDate":"2023-10-05"},{"lineNumber":374,"author":{"gitId":"kristayeo"},"content":"4.  AddressBook shows a list of persons whose names contain the keyword","lastModifiedDate":"2023-10-05"},{"lineNumber":375,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":376,"author":{"gitId":"kristayeo"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":377,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":378,"author":{"gitId":"kristayeo"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":379,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":380,"author":{"gitId":"kristayeo"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":381,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":382,"author":{"gitId":"kristayeo"},"content":"  Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":383,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":384,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"lululwtv"},"content":"4.  Should not have a latency of more than 2 seconds to ensure optimal user experience","lastModifiedDate":"2023-10-03"},{"lineNumber":392,"author":{"gitId":"lululwtv"},"content":"5.  Should be able to hold up to 10 modules per person without noticeable detriments to the performance of the app","lastModifiedDate":"2023-10-05"},{"lineNumber":393,"author":{"gitId":"lululwtv"},"content":"6.  Should ensure the integrity of user data, preventing any data corruption or loss during normal usage.","lastModifiedDate":"2023-10-05"},{"lineNumber":394,"author":{"gitId":"lululwtv"},"content":"7.  Should implement appropriate security measures to protect user data from unauthorized access or tampering.","lastModifiedDate":"2023-10-05"},{"lineNumber":395,"author":{"gitId":"lululwtv"},"content":"8.  Should be designed with accessibility in mind, ensuring that it is usable by individuals with disabilities, including those who rely on screen readers or keyboard navigation.","lastModifiedDate":"2023-10-05"},{"lineNumber":396,"author":{"gitId":"lululwtv"},"content":"9.  Should be able to handle a growing number of contacts without a significant decrease in performance.","lastModifiedDate":"2023-10-05"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"owenyeo"},"content":"* **Performance**: Speed at which the app completes queries.","lastModifiedDate":"2023-10-07"},{"lineNumber":405,"author":{"gitId":"owenyeo"},"content":"* **Tampering**: Modifying data without permission from the owner of said data.","lastModifiedDate":"2023-10-07"},{"lineNumber":406,"author":{"gitId":"owenyeo"},"content":"* **normal usage**: Day-to-day usage of the app without any errors occurring.","lastModifiedDate":"2023-10-07"},{"lineNumber":407,"author":{"gitId":"owenyeo"},"content":"* **Optimal user experience**: User can utilise all functionality without bugs and lag.","lastModifiedDate":"2023-10-07"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"teozhengyang":2,"owenyeo":4,"andrefoo":21,"lululwtv":6,"kristayeo":61,"-":366}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"# User Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"Welcome to TimetaBRO, your ultimate companion for managing your university life, social interactions, and schedules. This comprehensive user guide will walk you through all the exciting features TimetaBRO has to offer.","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"andrefoo"},"content":"Adds a person to TimetaBRO.","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"andrefoo"},"content":"Format: `add n/NAME [u/NICKNAME] p/PHONE_NUMBER t/TELEGRAM_HANDLE e/EMAIL [m/MODULE /from START_TIME /to END_TIME /day DAY] [t/TAG]`","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"andrefoo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003eTip:","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"andrefoo"},"content":"\u003c/div\u003e\u003cbr /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"andrefoo"},"content":"Successful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"andrefoo"},"content":"- `Added {NAME} to the list.`","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"andrefoo"},"content":"Unsuccessful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"andrefoo"},"content":"- `Wrong inputs for prefix: {prefix with error}`","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"* `add n/John Doe p/98765432 t/johndoe e/johnd@example.com m/CS2103T /from 1200 /to 1300 /day Wednesday t/police`","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"* `add n/Betsy Crowe t/betsycrowe e/betsycrowe@example.com p/1234567 m/CS2101 /from 1200 /to 1400 /day Monday, Thursday  t/criminal`","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"Shows a list of all added friends.","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"Successful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"Adds a person to your list. `Added {NAME} to the list.`","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"Unsuccessful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"Displays an error message. `To list, please run the command ‘list’`","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"### Editing a friend\u0027s information : `edit`","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"Edits an existing person in TimetaBRO.","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [t/TELEGRAM_HANDLE] [e/EMAIL] [m/MODULE /from START_TIME /to END_TIME /day DAY] [t/TAG]…​`","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"  specifying any tags after it.","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"Successful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"Changes the specified parameters of specified friend’s profile","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"Unsuccessful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"Displays an error message `Please specify the details to change! Correct syntax: edit INDEX [n/NAME] [p/PHONE_NUMBER] [t/TELEGRAM_HANDLE] [e/EMAIL] [m/MODULE /from START_TIME /to END_TIME /day DAY] [t/TAG]`","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"*  `edit 2 n/Betsy Crower m/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing modules.","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"Deletes the specified friend from TimetaBRO.","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"teozhengyang"},"content":"Successful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"teozhengyang"},"content":"Delete person from user’s profile.`(NAME) deleted.`","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"teozhengyang"},"content":"Unsuccessful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"teozhengyang"},"content":"- `Cannot delete (NAME)`","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"teozhengyang"},"content":"- `Cannot find (INDEX)`","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"teozhengyang"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"teozhengyang"},"content":"Clears all entries from TimetaBRO.","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"teozhengyang"},"content":"Successful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"teozhengyang"},"content":"`All friends have been deleted`","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"teozhengyang"},"content":"Successful Command:","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"teozhengyang"},"content":"The app closes after saving all data.","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"teozhengyang"},"content":"TimetaBRO data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"teozhengyang"},"content":"TimetaBRO data are saved automatically as a JSON file `[JAR file location]/data/timetabro.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"teozhengyang"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003eCaution:","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"teozhengyang"},"content":"If your changes to the data file makes its format invalid, TimetaBRO will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2023-10-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"teozhengyang"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous TimetaBRO home folder.","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-10-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-10-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2023-10-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":172,"author":{"gitId":"teozhengyang"},"content":"| Action     | Format, Examples                                                                                                                                                                                                                                         |","lastModifiedDate":"2023-10-03"},{"lineNumber":173,"author":{"gitId":"teozhengyang"},"content":"|------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-03"},{"lineNumber":174,"author":{"gitId":"teozhengyang"},"content":"| **Add**    | `​add n/NAME u/NICKNAME p/PHONE_NUMBER t/TELEGRAM_HANDLE e/EMAIL [m/MODULE /from START_TIME /to END_TIME /day DAY] [t/TAG]…​` \u003cbr\u003e e.g., `add n/John Doe p/98765432 t/johndoe e/johnd@example.com m/CS2103T /from 1200 /to 1300 /day Wednesday t/police` |","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"teozhengyang"},"content":"| **Clear**  | `clear`                                                                                                                                                                                                                                                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":176,"author":{"gitId":"teozhengyang"},"content":"| **Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                                                                      |","lastModifiedDate":"2023-10-03"},{"lineNumber":177,"author":{"gitId":"teozhengyang"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [t/TELEGRAM_HANDLE] [e/EMAIL] [m/MODULE /from START_TIME /to END_TIME /day DAY] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                                                    |","lastModifiedDate":"2023-10-03"},{"lineNumber":178,"author":{"gitId":"teozhengyang"},"content":"| **List**   | `list`                                                                                                                                                                                                                                                   |","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"teozhengyang"},"content":"| **Help**   | `help`                                                                                                                                                                                                                                                   |","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"teozhengyang":51,"andrefoo":8,"lululwtv":1,"-":119}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"title: TimetaBRO","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W12-4/tp/actions)","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103-W12-4/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S1-CS2103-W12-4/tp)","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"**TimetaBRO is a desktop application for arranging meetups with busy friends.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"* If you are interested in using TimetaBRO, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"* If you are interested about developing TimetaBRO, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"andrefoo":5,"-":14}},{"path":"docs/team/andrefoo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"andrefoo"},"content":"# Project Portfolio Page: TimetaBRO","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"andrefoo"},"content":"## Overview","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"andrefoo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"andrefoo"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"andrefoo"},"content":"**Code contributed:** [Link to your code on tP Code Dashboard]","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"andrefoo"},"content":"**Enhancements implemented:**","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"andrefoo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"andrefoo"},"content":"**Contributions to the User Guide (UG):**","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"andrefoo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"andrefoo"},"content":"**Contributions to the Developer Guide (DG):**","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"andrefoo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"andrefoo"},"content":"**Contributions to team-based tasks:**","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"andrefoo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"andrefoo"},"content":"**Contributions beyond the project team:**","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"andrefoo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"andrefoo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"andrefoo":28}},{"path":"docs/team/kristayeo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kristayeo"},"content":"# Project Portfolio Page: TimetaBRO","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"kristayeo"},"content":"## Overview","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"kristayeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"kristayeo"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"kristayeo"},"content":"**Code contributed:** [Link to your code on tP Code Dashboard]","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"kristayeo"},"content":"**Enhancements implemented:**","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"kristayeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"kristayeo"},"content":"**Contributions to the User Guide (UG):**","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"kristayeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"kristayeo"},"content":"**Contributions to the Developer Guide (DG):**","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"kristayeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"kristayeo"},"content":"**Contributions to team-based tasks:**","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"kristayeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"kristayeo"},"content":"**Contributions beyond the project team:**","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"kristayeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"kristayeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"kristayeo":28}},{"path":"docs/team/lululwtv.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"# Project Portfolio Page: TimetaBRO","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"## Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"**Code contributed:** [Link to your code on tP Code Dashboard]","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"**Enhancements implemented:**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"**Contributions to the User Guide (UG):**","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"**Contributions to the Developer Guide (DG):**","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"**Contributions to team-based tasks:**","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"**Contributions beyond the project team:**","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"lululwtv":28}},{"path":"docs/team/owenyeo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"title: Owen Yeo\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"## Project: TimetaBRO","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"### Overview","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"TimetaBRO, your ultimate companion for managing your university life, social interactions, and schedules.","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"**Code contributed:** [Link to your code on tP Code Dashboard]","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"**Enhancements implemented:**","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"**Contributions to the User Guide (UG):**","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"**Contributions to the Developer Guide (DG):**","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"**Contributions to team-based tasks:**","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"**Contributions beyond the project team:**","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"[to be added later]","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"owenyeo":19,"-":15}},{"path":"docs/team/teozhengyang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"# Teo Zheng Yang\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"## Project: TimetaBRO","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"### Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"TimetaBRO, your ultimate companion for managing your university life, social interactions, and schedules.","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"**Code contributed:** [Link to your code on tP Code Dashboard]","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"**Enhancements implemented:**","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"**Contributions to the User Guide (UG):**","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"**Contributions to the Developer Guide (DG):**","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"**Contributions to team-based tasks:**","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"**Contributions beyond the project team:**","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"[to be added later]","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"teozhengyang":31}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"import seedu.address.storage.JsonUserDataStorage;","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"import seedu.address.storage.UserDataStorage;","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"        UserDataStorage userDataStorage \u003d new JsonUserDataStorage(userPrefs.getUserDataFilePath());","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, userDataStorage);","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"owenyeo"},"content":"        Optional\u003cReadOnlyUserData\u003e userDataOptional;","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"owenyeo"},"content":"        ReadOnlyUserData userData;","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"owenyeo"},"content":"        try {","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"owenyeo"},"content":"            userDataOptional \u003d storage.readUserData();","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"owenyeo"},"content":"            if (!userDataOptional.isPresent()) {","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"owenyeo"},"content":"                logger.info(\"Creating a new data file \" + storage.getUserDataFilePath()","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"owenyeo"},"content":"                        + \" populated with a sample UserData.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"owenyeo"},"content":"            }","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"owenyeo"},"content":"            userData \u003d userDataOptional.orElseGet(SampleDataUtil::getSampleUserData);","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"owenyeo"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"owenyeo"},"content":"            logger.warning(\"Data file at \" + storage.getUserDataFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"owenyeo"},"content":"                    + \" Will be starting with an empty UserData.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"owenyeo"},"content":"            userData \u003d new UserData();","lastModifiedDate":"2023-10-05"},{"lineNumber":112,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":113,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"owenyeo"},"content":"        return new ModelManager(initialData, userPrefs, userData);","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"owenyeo":25,"-":182}},{"path":"src/main/java/seedu/address/logic/commands/MealBuddyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":" * Checks for a contact with the same free time as the User and returns a list of contacts with the same free time.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"public class MealBuddyCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"        ","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027execute\u0027\");","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"    ","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"lululwtv":17}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"    void setUserData(ReadOnlyUserData userData);","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"    ","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"    ReadOnlyUserData getUserData();","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"owenyeo":6,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"    private final UserData userData;","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, ReadOnlyUserData userData) {","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" ,user prefs \" + userPrefs + \" and user data \" + userData);","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"        this.userData \u003d new UserData(userData);","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"        this(new AddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"owenyeo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserData \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":122,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":123,"author":{"gitId":"owenyeo"},"content":"    public void setUserData(ReadOnlyUserData userData) {","lastModifiedDate":"2023-10-05"},{"lineNumber":124,"author":{"gitId":"owenyeo"},"content":"        this.userData.resetData(userData);","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":126,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":127,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"owenyeo"},"content":"    public ReadOnlyUserData getUserData() {","lastModifiedDate":"2023-10-05"},{"lineNumber":129,"author":{"gitId":"owenyeo"},"content":"        return userData;","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":131,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"owenyeo":21,"-":145}},{"path":"src/main/java/seedu/address/model/user/ReadOnlyUserData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.model.user;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"public interface ReadOnlyUserData {","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"    ","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"     * Returns the user.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"     * @return","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"    Person getUser();","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"owenyeo":12}},{"path":"src/main/java/seedu/address/model/user/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.model.user;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"    Path getUserDataFilePath();","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"owenyeo":3,"-":15}},{"path":"src/main/java/seedu/address/model/user/UserData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.model.user;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":" * Represents a User in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"public class UserData implements ReadOnlyUserData {","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"    private Person user;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"    public UserData() {};","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"    public UserData(Person user) {","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"        this.user \u003d user;","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    public UserData(ReadOnlyUserData userData) {","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"        this(userData.getUser());","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"    public void setUser(Person user) {","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"        this.user \u003d user;","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    public void resetData(ReadOnlyUserData newData) {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"        this.setUser(newData.getUser());","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"    public Person getUser() {","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"        return user;","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"    ","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"owenyeo":35}},{"path":"src/main/java/seedu/address/model/user/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.model.user;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    private Path userDataFilePath \u003d Paths.get(\"data\" , \"userdata.json\");","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"        setUserDataFilePath(newUserPrefs.getUserDataFilePath());","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"    public Path getUserDataFilePath() {","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"        return userDataFilePath;","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"    public void setUserDataFilePath(Path userDataFilePath) {","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"        requireNonNull(userDataFilePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"        this.userDataFilePath \u003d userDataFilePath;","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"owenyeo":12,"-":87}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"    public static Person getSampleUser() {","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"        return new Person(new Name(\"Me\"),new Phone(\"00000000\"), new Email(\"me@example.com\"), ","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"            new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), getTagSet(\"family\"));","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"    public static ReadOnlyUserData getSampleUserData() {","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"        return new UserData(getSampleUser());","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"owenyeo":10,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonSerializableUserData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import java.util.List;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":" * An Immutable UserData that is serializable to JSON format.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"@JsonRootName(value \u003d \"userdata\")","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"class JsonSerializableUserData {","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"    private final JsonAdaptedPerson user;","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"     * Constructs a {@code JsonSerializableUserData} with the given persons.","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"    public JsonSerializableUserData(@JsonProperty(\"user\") JsonAdaptedPerson user) {","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"        this.user \u003d user;","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableUserData}.","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"    public JsonSerializableUserData(ReadOnlyUserData source) {","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"        user \u003d new JsonAdaptedPerson(source.getUser());    ","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"     * Converts this address book into the model\u0027s {@code UserData} object.","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"    public UserData toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"        UserData userData \u003d new UserData();","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"        return userData;","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"owenyeo":53}},{"path":"src/main/java/seedu/address/storage/JsonUserDataStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"public class JsonUserDataStorage implements UserDataStorage {","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUserDataStorage.class);","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    public JsonUserDataStorage(Path filePath) {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"    public Path getUserDataFilePath() {","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"        return filePath;","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"    public Optional\u003cReadOnlyUserData\u003e readUserData() throws DataLoadingException {","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"        return readUserData(filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"     * Similar to {@link #readUserData()}.","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"    public Optional\u003cReadOnlyUserData\u003e readUserData(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"owenyeo"},"content":"        Optional\u003cJsonSerializableUserData\u003e jsonUserData \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"owenyeo"},"content":"                filePath, JsonSerializableUserData.class);","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"owenyeo"},"content":"        if (!jsonUserData.isPresent()) {","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"owenyeo"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"owenyeo"},"content":"        try {","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"owenyeo"},"content":"            return Optional.of(jsonUserData.get().toModelType());","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"owenyeo"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"owenyeo"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"owenyeo"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"    public void saveUserData(ReadOnlyUserData userData) throws IOException {","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"owenyeo"},"content":"        saveUserData(userData, filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"     * Similar to {@link #saveUserData(ReadOnlyUserData)}.","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"owenyeo"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"owenyeo"},"content":"    public void saveUserData(ReadOnlyUserData userData, Path filePath) throws IOException {","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"owenyeo"},"content":"        requireNonNull(userData);","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"owenyeo"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableUserData(userData), filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"owenyeo":81}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"owenyeo":2,"-":45}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, UserDataStorage {","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"    Optional\u003cReadOnlyUserData\u003e readUserData() throws DataLoadingException;","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"    void saveUserData(ReadOnlyUserData userData) throws IOException;","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"    ","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"owenyeo":12,"-":29}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"    private UserDataStorage userDataStorage;","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage, UserDataStorage userDataStorage) {","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"        this.userDataStorage \u003d userDataStorage;","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"owenyeo"},"content":"        // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserData methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"owenyeo"},"content":"    ","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"owenyeo"},"content":"    public Path getUserDataFilePath() {","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"owenyeo"},"content":"        return userDataStorage.getUserDataFilePath();","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"owenyeo"},"content":"    public Optional\u003cReadOnlyUserData\u003e readUserData() throws DataLoadingException {","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"owenyeo"},"content":"        return readUserData(userDataStorage.getUserDataFilePath());","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"owenyeo"},"content":"    public Optional\u003cReadOnlyUserData\u003e readUserData(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"owenyeo"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"owenyeo"},"content":"        return userDataStorage.readUserData(filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"owenyeo"},"content":"    public void saveUserData(ReadOnlyUserData userData) throws IOException {","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"owenyeo"},"content":"        saveUserData(userData, userDataStorage.getUserDataFilePath());","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"owenyeo"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"owenyeo"},"content":"    public void saveUserData(ReadOnlyUserData userData, Path filePath) throws IOException {","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"owenyeo"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"owenyeo"},"content":"        userDataStorage.saveUserData(userData, filePath);","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"owenyeo":35,"-":75}},{"path":"src/main/java/seedu/address/storage/UserDataStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owenyeo"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"owenyeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"owenyeo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"owenyeo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"owenyeo"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"public interface UserDataStorage {","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"owenyeo"},"content":"    Path getUserDataFilePath();","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"     * Returns UserData data as a {@link ReadOnlyUserData}.","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"owenyeo"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"owenyeo"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"    Optional\u003cReadOnlyUserData\u003e readUserData() throws DataLoadingException;","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"     * @see #getUserDataFilePath()","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"owenyeo"},"content":"    Optional\u003cReadOnlyUserData\u003e readUserData(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"     * Saves the given {@link ReadOnlyUserData \\} to the storage.","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"owenyeo"},"content":"     * @param userData cannot be null.","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"owenyeo"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"owenyeo"},"content":"    void saveUserData(ReadOnlyUserData userData) throws IOException;","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"owenyeo"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"owenyeo"},"content":"     * @see #saveUserData(ReadOnlyUserData)","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"owenyeo"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"owenyeo"},"content":"    void saveUserData(ReadOnlyUserData userData, Path filePath) throws IOException;","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"owenyeo"},"content":"}","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"owenyeo":46}},{"path":"src/main/java/seedu/address/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":" * Represents a storage for {@link seedu.address.model.user.UserPrefs}.","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"     * Saves the given {@link seedu.address.model.user.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"owenyeo":4,"-":32}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"owenyeo"},"content":"import seedu.address.storage.JsonUserDataStorage;","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"owenyeo"},"content":"        JsonUserDataStorage userDataStorage \u003d new JsonUserDataStorage(temporaryFolder.resolve(\"userData.json\"));","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"owenyeo"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, userDataStorage);","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"owenyeo"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"owenyeo"},"content":"        JsonUserDataStorage userDataStorage \u003d new JsonUserDataStorage(temporaryFolder.resolve(\"ExceptionUserData.json\"));","lastModifiedDate":"2023-10-05"},{"lineNumber":166,"author":{"gitId":"owenyeo"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, userDataStorage);","lastModifiedDate":"2023-10-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"owenyeo":7,"-":171}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"owenyeo"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"owenyeo":4,"-":45}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":162,"author":{"gitId":"owenyeo"},"content":"        @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":163,"author":{"gitId":"owenyeo"},"content":"        public void setUserData(ReadOnlyUserData userData) {","lastModifiedDate":"2023-10-05"},{"lineNumber":164,"author":{"gitId":"owenyeo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":165,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":166,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":167,"author":{"gitId":"owenyeo"},"content":"        @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":168,"author":{"gitId":"owenyeo"},"content":"        public ReadOnlyUserData getUserData() {","lastModifiedDate":"2023-10-05"},{"lineNumber":169,"author":{"gitId":"owenyeo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":170,"author":{"gitId":"owenyeo"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"owenyeo":12,"-":203}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"owenyeo":4,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"owenyeo"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"owenyeo"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"owenyeo":5,"-":116}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"owenyeo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"owenyeo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"owenyeo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"owenyeo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"owenyeo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"owenyeo":7,"-":178}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"owenyeo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"owenyeo":4,"-":88}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"owenyeo"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"owenyeo"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"owenyeo":4,"-":36}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"owenyeo"},"content":"        UserData  userData \u003d new UserData();","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"owenyeo"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, userData);","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"owenyeo"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, userData);","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"owenyeo"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, userData)));","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":125,"author":{"gitId":"owenyeo"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, userData)));","lastModifiedDate":"2023-10-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":133,"author":{"gitId":"owenyeo"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, userData)));","lastModifiedDate":"2023-10-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"owenyeo":8,"-":127}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"owenyeo":2,"-":21}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":17,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"owenyeo":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserPrefs;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"owenyeo"},"content":"        JsonUserDataStorage userDataStorage \u003d new JsonUserDataStorage(getTempFilePath(\"ud\"));","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"owenyeo"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, userDataStorage);","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"owenyeo":3,"-":66}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"owenyeo"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":74,"author":{"gitId":"owenyeo"},"content":"    public static UserData getTypicalUserData() {","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"owenyeo"},"content":"        return new UserData(IDA);","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"owenyeo"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"owenyeo"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"owenyeo":5,"-":76}}]

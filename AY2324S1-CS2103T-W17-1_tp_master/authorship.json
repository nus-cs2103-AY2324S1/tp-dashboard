[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"You can reach us at the email `e0958417@u.nus.edu`","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"### Chen Jin Yang","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"\u003cimg src\u003d\"images/jinyang628.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"[[homepage](https://www.linkedin.com/in/chen-jin-yang-37baa8202/)]","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"[[github](https://github.com/jinyang628)]","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"[[portfolio](team/jinyang628.md)]","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"### Javin Chua","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"\u003cimg src\u003d\"images/javinchua.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"[[github](http://github.com/javinchua)]","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"[[portfolio](team/javinchua.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"### Lee Yong Ning","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"\u003cimg src\u003d\"images/yongning0310.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"[[github](http://github.com/yongning0310)] ","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"[[portfolio](team/yongning.md)]","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"### Kyriel Mortel Abad","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"\u003cimg src\u003d\"images/s-kybound.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"[[github](http://github.com/s-kybound)]","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"[[portfolio](team/kyriel.md)]","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"### Shashamin Chokjaroenwathanakul","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"\u003cimg src\u003d\"images/shashahchk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"[[github](http://github.com/shashahchk)]","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"[[portfolio](team/shashamin.md)]","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"javinchua":1,"-":40,"jinyang628":21}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 User Guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"AddressBook Level 3 (AB3) is a **desktop app for managing contacts, optimized for use via a  Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, AB3 can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Download the latest `addressbook.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"   * `create c/Jane Street ro/Coffee maker a/Yet to apply s/20/01/2023 d/3 re/C++ re/Coffee` : Creates an internship named `Jane Street` to Flagship.","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"  e.g. in `create c/COMPANY_NAME`, `COMPANY_NAME` is a parameter which can be used as `create c/Jane Street`.","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"  e.g `c/COMPANY_NAME [re/REQUIREMENT]` can be used as `c/Jane Street re/C++` or as `c/Jane Street`.","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"  e.g. `[re/REQUIREMENT]…​` can be used as ` ` (i.e. 0 times), `re/C++`, `re/C++ re/Coffee` etc.","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"  e.g. if the command specifies `c/COMPANY_NAME ro/ROLE`, `ro/ROLE c/COMPANY_NAME` is also acceptable.","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"jinyang628"},"content":"### Creating an internship: `create`","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"jinyang628"},"content":"Creates an internship in Flagship.","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"jinyang628"},"content":"Format: ` c/COMPANY_NAME ro/ROLE a/APPLICATION_STATUS s/START_DATE d/DURATION [re/REQUIREMENT]...​`","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"jinyang628"},"content":"**Tip:** An internship can have any number of requirements (including 0)","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"jinyang628"},"content":"* `create c/Jane Street ro/Coffee maker a/Yet to apply s/20/01/2023 d/3 re/C++ re/Coffee`","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"* `create c/Citadel ro/Coffee pourer a/Applied s/24/04/2022 d/1`","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-09-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"jinyang628"},"content":"**Create**    | `c/COMPANY_NAME ro/ROLE a/APPLICATION_STATUS s/START_DATE d/DURATION [re/REQUIREMENT]...​` \u003cbr\u003e e.g., `create c/Jane Street ro/Coffee maker a/Yet to apply s/20/01/2023 d/3 re/C++ re/Coffee`","lastModifiedDate":"2023-10-02"},{"lineNumber":198,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":191,"jinyang628":12}},{"path":"docs/team/javinchua.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"layout: default.md","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"title: \"Javin\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"## Project: Flagship","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"Flagship is a desktop application used to help aspiring students track internship applications. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about () kLoC.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"## Summary of contributions","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"* **Code contributed**: to be added soon (add a link to your code on tP code dashboard) [RepoSense link]()","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"    * to be added soon (Pull requests [\\#1](), [\\#2]())","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"* **New Feature**: Added the ability to delete internships","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"    * What it does: Allows the user to input an internship index and delete the internship.","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"    * Justification: This feature improves the product because it allows the user to delete internships that are no longer relevant","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"    * Highlights: NIL","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"    * Credits: *(mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature)*","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"* **New Feature**: (generic) to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"    * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"        * to be added soon: [\\#1]()","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"        * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"    * to be added","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"    * (eg. Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub)","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"    * *(what is important here is to demonstrate contribution outside of the group, by, for example, reviewing PRs, or being active in discussion. All points in this section are merely suggested points.)*","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"    * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"    * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"* _{feel free to can add/remove categories in the list above}_","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"javinchua":44}},{"path":"docs/team/jinyang628.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"  layout: default.md","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"  title: \"Chen Jin Yang\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"## Project: Flagship","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"Flagship is a desktop application used to help aspiring students track internship applications. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about () kLoC.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"## Summary of contributions","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"* **Code contributed**:","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"    * Refactored the AB3 models and interfaces so that they can be repurposed for Flagship","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"        * E.g. Adding new parameters, renaming interfaces, etc.","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"    * Programmed the Create Command so that users can key in internship details","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"    * [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djinyang628\u0026tabRepo\u003dAY2324S1-CS2103T-W17-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"  * to be added soon (Pull requests [\\#1](), [\\#2]())","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"* **New Feature**: Create command","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"    * What it does: _**create**_ an internship in Flagship","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    * Justification: Flagships needs to be able to store internship information","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"    * Highlights: Internship requirements are extremely flexible (users can input any number of requirements)","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"    * (Pull requests [\\#19](https://github.com/AY2324S1-CS2103T-W17-1/tp/pull/19), )","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"  * User Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"    * Managed the _**create**_ command part of the User Guide","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"    * Pull requests [\\#36](https://github.com/AY2324S1-CS2103T-W17-1/tp/pull/36)","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"    * to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"* **Project management**:","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"  * Set deadlines during meetings and push everyone to finish their work on time","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"  * (eg. Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub)","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"* **Community**:","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"  * PRs reviewed: [\\#23](https://github.com/AY2324S1-CS2103T-W17-1/tp/pull/23)","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"  * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2023-10-01"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"* **Tools**:","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"  * to be added soon","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"jinyang628":44}},{"path":"docs/team/johndoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"John Doe\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"s-kybound"},"content":"## Project: Flagship","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"Flagship is a desktop application used to help aspiring students track internship applications. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about () kLoC.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"s-kybound"},"content":"## Summary of contributions","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"s-kybound"},"content":"* **Code contributed**: to be added soon (add a link to your code on tP code dashboard) [RepoSense link]()","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"s-kybound"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"s-kybound"},"content":"  * to be added soon (Pull requests [\\#1](), [\\#2]())","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"s-kybound"},"content":"* **New Feature**: (detailed) to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"s-kybound"},"content":"  * What it does: to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"s-kybound"},"content":"  * Justification: to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"s-kybound"},"content":"  * Highlights: to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"s-kybound"},"content":"  * Credits: to be added soon *(mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature)*","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"s-kybound"},"content":"* **New Feature**: (generic) to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"s-kybound"},"content":"    * to be added soon: [\\#1]()","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"s-kybound"},"content":"    * to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"s-kybound"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"s-kybound"},"content":"* **Project management**:","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"s-kybound"},"content":"  * to be added","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"s-kybound"},"content":"  * (eg. Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub)","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"s-kybound"},"content":"  * *(what is important here is to demonstrate contribution outside of the group, by, for example, reviewing PRs, or being active in discussion. All points in this section are merely suggested points.)*","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"s-kybound"},"content":"  * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"s-kybound"},"content":"  * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"s-kybound"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"s-kybound"},"content":"  * to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"s-kybound"},"content":"* _{feel free to can add/remove categories in the list above}_","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"s-kybound":23,"-":20,"jinyang628":1}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"    public static final String MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX \u003d \"The internship index provided is invalid\";","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"     * Formats the {@code internship} for display to the user.","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"    public static String format(Internship internship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"        builder.append(internship.getCompanyName())","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"                .append(\"; Role: \")","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"                .append(internship.getRole())","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"                .append(\"; ApplicationStatus: \")","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"                .append(internship.getApplicationStatus())","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"                .append(\"; Start Date: \")","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"                .append(internship.getStartDate())","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"                .append(\"; Duration: \")","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"                .append(internship.getDuration())","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"                .append(\"; Requirements: \");","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"        internship.getRequirements().forEach(builder::append);","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"        return builder.toString();","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"javinchua":1,"-":50,"jinyang628":20}},{"path":"src/main/java/seedu/address/logic/commands/CreateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICATION_STATUS;","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REQUIREMENT;","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":" * Creates an internship entry in Flagship","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"public class CreateCommand extends Command {","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    public static final String COMMAND_WORD \u003d \"create\";","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates an internship in Flagship. \"","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"            + PREFIX_COMPANY_NAME + \"COMPANY_NAME \"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"            + PREFIX_ROLE + \"ROLE \"","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"            + PREFIX_APPLICATION_STATUS + \"APPLICATION_STATUS \"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"            + PREFIX_START_DATE + \"START_DATE \"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"            + PREFIX_DURATION + \"DURATION \"","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"            + \"[\" + PREFIX_REQUIREMENT + \"REQUIREMENT]...\\n\"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"            + PREFIX_COMPANY_NAME + \"Jane Street \"","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"            + PREFIX_ROLE + \"Coffee maker \"","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"            + PREFIX_APPLICATION_STATUS + \"Yet to apply \"","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"            + PREFIX_START_DATE + \"20/01/2023 \"","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"            + PREFIX_DURATION + \"3 \"","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"            + PREFIX_REQUIREMENT + \"C++ \"","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"            + PREFIX_REQUIREMENT + \"Coffee \";","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here is the information of the entry: %s\";","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"This internship already exists in Flagship\";","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"    public static final String MESSAGE_INVALID_VALUE \u003d \"The value entered for this field {TO BE COMPLETED} is invalid\";","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"    public static final String MESSAGE_MISSING_VALUE \u003d \"This field {TO BE COMPLETED} is compulsory, \"","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"            + \"please do not leave it empty\";","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"    private final Internship toAdd;","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"     * Creates an CreateCommand to create the specified {@code Internship}","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"    public CreateCommand(Internship internship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(internship);","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"        this.toAdd \u003d internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"        if (model.hasInternship(this.toAdd)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2023-09-26"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"        model.createInternship(this.toAdd);","lastModifiedDate":"2023-09-26"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(this.toAdd)));","lastModifiedDate":"2023-09-26"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":74,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":75,"author":{"gitId":"jinyang628"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-26"},{"lineNumber":76,"author":{"gitId":"jinyang628"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-26"},{"lineNumber":77,"author":{"gitId":"jinyang628"},"content":"            return true;","lastModifiedDate":"2023-09-26"},{"lineNumber":78,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":80,"author":{"gitId":"jinyang628"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-26"},{"lineNumber":81,"author":{"gitId":"jinyang628"},"content":"        if (!(other instanceof CreateCommand)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":82,"author":{"gitId":"jinyang628"},"content":"            return false;","lastModifiedDate":"2023-09-26"},{"lineNumber":83,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":84,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":85,"author":{"gitId":"jinyang628"},"content":"        CreateCommand otherCreateCommand \u003d (CreateCommand) other;","lastModifiedDate":"2023-09-26"},{"lineNumber":86,"author":{"gitId":"jinyang628"},"content":"        return toAdd.equals(otherCreateCommand.toAdd);","lastModifiedDate":"2023-09-26"},{"lineNumber":87,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":88,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":89,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":90,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-09-26"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-09-26"},{"lineNumber":92,"author":{"gitId":"jinyang628"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-09-26"},{"lineNumber":93,"author":{"gitId":"jinyang628"},"content":"                .toString();","lastModifiedDate":"2023-09-26"},{"lineNumber":94,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":95,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"jinyang628":95}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":" * Deletes an internship identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"            + \": Deletes the internship identified by the index number used in the displayed internship list.\\n\"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"    public static final String MESSAGE_DELETE_INTERNSHIP_SUCCESS \u003d \"Deleted Internship: %1$s\";","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"        List\u003cInternship\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"        Internship internshipToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"        model.deleteInternship(internshipToDelete);","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_INTERNSHIP_SUCCESS, Messages.format(internshipToDelete)));","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"javinchua":9,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"import seedu.address.logic.commands.CreateCommand;","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"        case CreateCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"            return new CreateCommandParser().parse(arguments);","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":86,"jinyang628":4}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"    // DELETE ALL OF THIS WHEN WE FULLY TRANSITION OUT","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"    // New set of prefixes for Flagship","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"    public static final Prefix PREFIX_COMPANY_NAME \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"    public static final Prefix PREFIX_ROLE \u003d new Prefix(\"ro/\");","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"    public static final Prefix PREFIX_REQUIREMENT \u003d new Prefix(\"re/\");","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"    public static final Prefix PREFIX_APPLICATION_STATUS \u003d new Prefix(\"a/\");","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    public static final Prefix PREFIX_START_DATE \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"    public static final Prefix PREFIX_DURATION \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":15,"jinyang628":11}},{"path":"src/main/java/seedu/address/logic/parser/CreateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICATION_STATUS;","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REQUIREMENT;","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"import java.util.Set;","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"import seedu.address.logic.commands.CreateCommand;","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.ApplicationStatus;","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.Duration;","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.Role;","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.StartDate;","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.requirement.Requirement;","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":" * Parses input arguments and creates a new CreateCommand object","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"public class CreateCommandParser implements Parser\u003cCreateCommand\u003e {","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateCommand","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"     * and returns an CreateCommand object for execution.","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"    public CreateCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_COMPANY_NAME, PREFIX_ROLE, PREFIX_APPLICATION_STATUS,","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"                        PREFIX_START_DATE, PREFIX_DURATION, PREFIX_REQUIREMENT);","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_COMPANY_NAME, PREFIX_ROLE, PREFIX_APPLICATION_STATUS,","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"                PREFIX_START_DATE, PREFIX_DURATION)","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_COMPANY_NAME, PREFIX_ROLE, PREFIX_APPLICATION_STATUS,","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"                PREFIX_START_DATE, PREFIX_DURATION);","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"        CompanyName companyName \u003d ParserUtil.parseCompanyName(argMultimap.getValue(PREFIX_COMPANY_NAME).get());","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"        Role role \u003d ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get());","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"        ApplicationStatus applicationStatus \u003d ParserUtil.parseApplicationStatus(","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"                argMultimap.getValue(PREFIX_APPLICATION_STATUS).get()","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"        );","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"        StartDate startDate \u003d ParserUtil.parseStartDate(argMultimap.getValue(PREFIX_START_DATE).get());","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"        Duration duration \u003d ParserUtil.parseDuration(argMultimap.getValue(PREFIX_DURATION).get());","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"        Set\u003cRequirement\u003e requirementList \u003d ParserUtil.parseRequirements(argMultimap.getAllValues(PREFIX_REQUIREMENT));","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"        Internship internship \u003d new Internship(","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"                companyName, role, applicationStatus, startDate, duration, requirementList","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"        );","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"        return new CreateCommand(internship);","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-09-26"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-09-26"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-09-26"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-09-26"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"jinyang628":73}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.ApplicationStatus;","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.Duration;","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.Role;","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.StartDate;","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.requirement.Requirement;","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"    // DELETE AFTER FULL TRANSITION","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"     * Parses a {@code String companyName} into a {@code CompanyName}.","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"     * @throws ParseException if the given {@code companyName} is invalid.","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"    public static CompanyName parseCompanyName(String companyName) throws ParseException {","lastModifiedDate":"2023-09-26"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(companyName);","lastModifiedDate":"2023-09-26"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"        String trimmedCompanyName \u003d companyName.trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"        if (!CompanyName.isValidCompanyName(trimmedCompanyName)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"            throw new ParseException(CompanyName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-26"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"        return new CompanyName(trimmedCompanyName);","lastModifiedDate":"2023-09-26"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":74,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":75,"author":{"gitId":"jinyang628"},"content":"    //DELETE AFTER FULL TRANSITION","lastModifiedDate":"2023-09-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":92,"author":{"gitId":"jinyang628"},"content":"     * Parses a {@code String role} into a {@code Role}.","lastModifiedDate":"2023-09-26"},{"lineNumber":93,"author":{"gitId":"jinyang628"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-09-26"},{"lineNumber":94,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":95,"author":{"gitId":"jinyang628"},"content":"     * @throws ParseException if the given {@code role} is invalid.","lastModifiedDate":"2023-09-26"},{"lineNumber":96,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":97,"author":{"gitId":"jinyang628"},"content":"    public static Role parseRole(String role) throws ParseException {","lastModifiedDate":"2023-09-26"},{"lineNumber":98,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(role);","lastModifiedDate":"2023-09-26"},{"lineNumber":99,"author":{"gitId":"jinyang628"},"content":"        String trimmedRole \u003d role.trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":100,"author":{"gitId":"jinyang628"},"content":"        if (!Role.isValidRole(trimmedRole)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":101,"author":{"gitId":"jinyang628"},"content":"            throw new ParseException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-26"},{"lineNumber":102,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":103,"author":{"gitId":"jinyang628"},"content":"        return new Role(trimmedRole);","lastModifiedDate":"2023-09-26"},{"lineNumber":104,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":105,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":106,"author":{"gitId":"jinyang628"},"content":"    // DELTE AFTER FULL TRANSITION","lastModifiedDate":"2023-09-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":123,"author":{"gitId":"jinyang628"},"content":"     * Parses a {@code String applicationStatus} into an {@code ApplicationStatus}.","lastModifiedDate":"2023-09-26"},{"lineNumber":124,"author":{"gitId":"jinyang628"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-09-26"},{"lineNumber":125,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":126,"author":{"gitId":"jinyang628"},"content":"     * @throws ParseException if the given {@code applicationStatus} is invalid.","lastModifiedDate":"2023-09-26"},{"lineNumber":127,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":128,"author":{"gitId":"jinyang628"},"content":"    public static ApplicationStatus parseApplicationStatus(String applicationStatus) throws ParseException {","lastModifiedDate":"2023-09-26"},{"lineNumber":129,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(applicationStatus);","lastModifiedDate":"2023-09-26"},{"lineNumber":130,"author":{"gitId":"jinyang628"},"content":"        String trimmedApplicationStatus \u003d applicationStatus.trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":131,"author":{"gitId":"jinyang628"},"content":"        if (!ApplicationStatus.isValidApplicationStatus(trimmedApplicationStatus)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":132,"author":{"gitId":"jinyang628"},"content":"            throw new ParseException(ApplicationStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-26"},{"lineNumber":133,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":134,"author":{"gitId":"jinyang628"},"content":"        return new ApplicationStatus(trimmedApplicationStatus);","lastModifiedDate":"2023-09-26"},{"lineNumber":135,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":136,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":137,"author":{"gitId":"jinyang628"},"content":"    // DELETE AFTER FULL TRANSITION","lastModifiedDate":"2023-09-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"jinyang628"},"content":"     * Parses a {@code String startDate} into a {@code StartDate}.","lastModifiedDate":"2023-09-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"jinyang628"},"content":"     * @throws ParseException if the given {@code startDate} is invalid.","lastModifiedDate":"2023-09-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"jinyang628"},"content":"    public static StartDate parseStartDate(String startDate) throws ParseException {","lastModifiedDate":"2023-09-26"},{"lineNumber":160,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(startDate);","lastModifiedDate":"2023-09-26"},{"lineNumber":161,"author":{"gitId":"jinyang628"},"content":"        String trimmedStartDate \u003d startDate.trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":162,"author":{"gitId":"jinyang628"},"content":"        if (!StartDate.isValidStartDate(trimmedStartDate)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":163,"author":{"gitId":"jinyang628"},"content":"            throw new ParseException(StartDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"jinyang628"},"content":"        return new StartDate(trimmedStartDate);","lastModifiedDate":"2023-09-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":169,"author":{"gitId":"jinyang628"},"content":"     * Parses a {@code String duration} into a {@code Duration}.","lastModifiedDate":"2023-09-26"},{"lineNumber":170,"author":{"gitId":"jinyang628"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-09-26"},{"lineNumber":171,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":172,"author":{"gitId":"jinyang628"},"content":"     * @throws ParseException if the given {@code duration} is invalid.","lastModifiedDate":"2023-09-26"},{"lineNumber":173,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":174,"author":{"gitId":"jinyang628"},"content":"    public static Duration parseDuration(String duration) throws ParseException {","lastModifiedDate":"2023-09-26"},{"lineNumber":175,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(duration);","lastModifiedDate":"2023-09-26"},{"lineNumber":176,"author":{"gitId":"jinyang628"},"content":"        String trimmedDuration \u003d duration.trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":177,"author":{"gitId":"jinyang628"},"content":"        if (!Duration.isValidDuration(trimmedDuration)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":178,"author":{"gitId":"jinyang628"},"content":"            throw new ParseException(Duration.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-26"},{"lineNumber":179,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":180,"author":{"gitId":"jinyang628"},"content":"        return new Duration(trimmedDuration);","lastModifiedDate":"2023-09-26"},{"lineNumber":181,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":182,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":183,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":184,"author":{"gitId":"jinyang628"},"content":"     * Parses {@code Collection\u003cString\u003e requirements} into a {@code Set\u003cRequirement\u003e}.","lastModifiedDate":"2023-09-26"},{"lineNumber":185,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":186,"author":{"gitId":"jinyang628"},"content":"    public static Set\u003cRequirement\u003e parseRequirements(Collection\u003cString\u003e requirements) throws ParseException {","lastModifiedDate":"2023-09-26"},{"lineNumber":187,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(requirements);","lastModifiedDate":"2023-09-26"},{"lineNumber":188,"author":{"gitId":"jinyang628"},"content":"        final Set\u003cRequirement\u003e requirementSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-09-26"},{"lineNumber":189,"author":{"gitId":"jinyang628"},"content":"        for (String requirementName : requirements) {","lastModifiedDate":"2023-09-26"},{"lineNumber":190,"author":{"gitId":"jinyang628"},"content":"            requirementSet.add(parseRequirement(requirementName));","lastModifiedDate":"2023-09-26"},{"lineNumber":191,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":192,"author":{"gitId":"jinyang628"},"content":"        return requirementSet;","lastModifiedDate":"2023-09-26"},{"lineNumber":193,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":194,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":195,"author":{"gitId":"jinyang628"},"content":"    // DELETE AFTER FULL TRANSITION","lastModifiedDate":"2023-09-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":207,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":208,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":209,"author":{"gitId":"jinyang628"},"content":"     * Parses a {@code String requirement} into a {@code Requirement}.","lastModifiedDate":"2023-09-26"},{"lineNumber":210,"author":{"gitId":"jinyang628"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-09-26"},{"lineNumber":211,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":212,"author":{"gitId":"jinyang628"},"content":"     * @throws ParseException if the given {@code requirement} is invalid.","lastModifiedDate":"2023-09-26"},{"lineNumber":213,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":214,"author":{"gitId":"jinyang628"},"content":"    public static Requirement parseRequirement(String requirement) throws ParseException {","lastModifiedDate":"2023-09-26"},{"lineNumber":215,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(requirement);","lastModifiedDate":"2023-09-26"},{"lineNumber":216,"author":{"gitId":"jinyang628"},"content":"        String trimmedRequirement \u003d requirement.trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":217,"author":{"gitId":"jinyang628"},"content":"        if (!Requirement.isValidRequirementName(trimmedRequirement)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":218,"author":{"gitId":"jinyang628"},"content":"            throw new ParseException(Requirement.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-26"},{"lineNumber":219,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":220,"author":{"gitId":"jinyang628"},"content":"        return new Requirement(trimmedRequirement);","lastModifiedDate":"2023-09-26"},{"lineNumber":221,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":222,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":223,"author":{"gitId":"jinyang628"},"content":"    // DELETE AFTER FULL TRANSITION","lastModifiedDate":"2023-09-26"},{"lineNumber":224,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":225,"author":{"gitId":"jinyang628"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2023-09-26"},{"lineNumber":226,"author":{"gitId":"jinyang628"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-09-26"},{"lineNumber":227,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":228,"author":{"gitId":"jinyang628"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2023-09-26"},{"lineNumber":229,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":230,"author":{"gitId":"jinyang628"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2023-09-26"},{"lineNumber":231,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(tag);","lastModifiedDate":"2023-09-26"},{"lineNumber":232,"author":{"gitId":"jinyang628"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":233,"author":{"gitId":"jinyang628"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":234,"author":{"gitId":"jinyang628"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-26"},{"lineNumber":235,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":236,"author":{"gitId":"jinyang628"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2023-09-26"},{"lineNumber":237,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":116,"jinyang628":122}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.UniqueInternshipList;","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"    // DELETE AFTER FULL TRANSITION","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"    private final UniqueInternshipList internships;","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"    {","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"        internships \u003d new UniqueInternshipList();","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"     * Replaces the contents of the internship list with {@code internships}.","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"     * {@code internships} must not contain duplicate internships.","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"    public void setInternships(List\u003cInternship\u003e internships) {","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"javinchua"},"content":"        this.internships.setInternships(internships);","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"javinchua"},"content":"        setInternships(newData.getInternshipList());","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"    // DELETE WHEN FULlY TRANSITIONED","lastModifiedDate":"2023-09-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":89,"author":{"gitId":"jinyang628"},"content":"     * Returns true if a internship with the same identity as {@code internship} exists in the address book.","lastModifiedDate":"2023-09-26"},{"lineNumber":90,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"    public boolean hasInternship(Internship internship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":92,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(internship);","lastModifiedDate":"2023-09-26"},{"lineNumber":93,"author":{"gitId":"jinyang628"},"content":"        return this.internships.contains(internship);","lastModifiedDate":"2023-09-26"},{"lineNumber":94,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":95,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":96,"author":{"gitId":"jinyang628"},"content":"    // DELETE AFTER FULL TRANSITION","lastModifiedDate":"2023-09-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":106,"author":{"gitId":"jinyang628"},"content":"     * Creates an internship in Flagship","lastModifiedDate":"2023-09-26"},{"lineNumber":107,"author":{"gitId":"jinyang628"},"content":"     * The internship must not already exist in Flagship.","lastModifiedDate":"2023-09-26"},{"lineNumber":108,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":109,"author":{"gitId":"jinyang628"},"content":"    public void createInternship(Internship i) {","lastModifiedDate":"2023-09-26"},{"lineNumber":110,"author":{"gitId":"jinyang628"},"content":"        this.internships.create(i);","lastModifiedDate":"2023-09-26"},{"lineNumber":111,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":112,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"jinyang628"},"content":"    public void removeInternship(Internship key) {","lastModifiedDate":"2023-09-26"},{"lineNumber":133,"author":{"gitId":"jinyang628"},"content":"        this.internships.remove(key);","lastModifiedDate":"2023-09-26"},{"lineNumber":134,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":135,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":150,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":151,"author":{"gitId":"jinyang628"},"content":"    public ObservableList\u003cInternship\u003e getInternshipList() {","lastModifiedDate":"2023-09-26"},{"lineNumber":152,"author":{"gitId":"jinyang628"},"content":"        return this.internships.asUnmodifiableObservableList();","lastModifiedDate":"2023-09-26"},{"lineNumber":153,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"javinchua":10,"-":129,"jinyang628":35}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"    // DELETE AFTER FULL TRANSITION","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"    Predicate\u003cInternship\u003e PREDICATE_SHOW_ALL_INTERNSHIPS \u003d unused -\u003e true;","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"    // DELETE THIS WHEN hasInternship is fully functional","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"     * Returns true if an internship with the same identity as {@code internship} exists in Flagship.","lastModifiedDate":"2023-09-26"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"    boolean hasInternship(Internship internship);","lastModifiedDate":"2023-09-26"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"     * Deletes the given internship.","lastModifiedDate":"2023-09-26"},{"lineNumber":80,"author":{"gitId":"jinyang628"},"content":"     * The internship must exist in the address book.","lastModifiedDate":"2023-09-26"},{"lineNumber":81,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":82,"author":{"gitId":"jinyang628"},"content":"    void deleteInternship(Internship target);","lastModifiedDate":"2023-09-26"},{"lineNumber":83,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":84,"author":{"gitId":"jinyang628"},"content":"    // DELETE THIS WHEN addPerson is fully functional","lastModifiedDate":"2023-09-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"    void createInternship(Internship internship);","lastModifiedDate":"2023-09-26"},{"lineNumber":92,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":101,"author":{"gitId":"jinyang628"},"content":"     * Replaces the given internship {@code target} with {@code editedInternship}.","lastModifiedDate":"2023-09-26"},{"lineNumber":102,"author":{"gitId":"jinyang628"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-09-26"},{"lineNumber":103,"author":{"gitId":"jinyang628"},"content":"     * The person identity of {@code editedInternship} must not be the same as another existing internship in the","lastModifiedDate":"2023-09-26"},{"lineNumber":104,"author":{"gitId":"jinyang628"},"content":"     * address book.","lastModifiedDate":"2023-09-26"},{"lineNumber":105,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":106,"author":{"gitId":"jinyang628"},"content":"    void setInternship(Internship target, Internship editedInternship);","lastModifiedDate":"2023-09-26"},{"lineNumber":107,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"jinyang628"},"content":"    /** Returns an unmodifiable view of the filtered internship list */","lastModifiedDate":"2023-09-26"},{"lineNumber":112,"author":{"gitId":"jinyang628"},"content":"    ObservableList\u003cInternship\u003e getFilteredInternshipList();","lastModifiedDate":"2023-09-26"},{"lineNumber":113,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":120,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":121,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":122,"author":{"gitId":"jinyang628"},"content":"     * Updates the filter of the filtered internship list to filter by the given {@code predicate}.","lastModifiedDate":"2023-09-26"},{"lineNumber":123,"author":{"gitId":"jinyang628"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-09-26"},{"lineNumber":124,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":125,"author":{"gitId":"jinyang628"},"content":"    void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate);","lastModifiedDate":"2023-09-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":87,"jinyang628":39}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"    // DELETE WHEN FULLY TRANSITIONED","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"    private final FilteredList\u003cInternship\u003e filteredInternships;","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"        // DELETE WHEN FULLY TRANSITIONED","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"        this.filteredInternships \u003d new FilteredList\u003c\u003e(this.addressBook.getInternshipList());","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":105,"author":{"gitId":"jinyang628"},"content":"    public boolean hasInternship(Internship internship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":106,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(internship);","lastModifiedDate":"2023-09-26"},{"lineNumber":107,"author":{"gitId":"jinyang628"},"content":"        return this.addressBook.hasInternship(internship);","lastModifiedDate":"2023-09-26"},{"lineNumber":108,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":109,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":116,"author":{"gitId":"jinyang628"},"content":"    public void deleteInternship(Internship target) {","lastModifiedDate":"2023-09-26"},{"lineNumber":117,"author":{"gitId":"jinyang628"},"content":"        addressBook.removeInternship(target);","lastModifiedDate":"2023-09-26"},{"lineNumber":118,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":119,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":126,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":127,"author":{"gitId":"jinyang628"},"content":"    public void createInternship(Internship internship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":128,"author":{"gitId":"jinyang628"},"content":"        addressBook.createInternship(internship);","lastModifiedDate":"2023-09-26"},{"lineNumber":129,"author":{"gitId":"jinyang628"},"content":"        updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2023-09-26"},{"lineNumber":130,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":131,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":140,"author":{"gitId":"jinyang628"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":141,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":142,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":143,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":156,"author":{"gitId":"jinyang628"},"content":"    public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2023-09-26"},{"lineNumber":157,"author":{"gitId":"javinchua"},"content":"        return filteredInternships;","lastModifiedDate":"2023-10-02"},{"lineNumber":158,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":159,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":166,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":167,"author":{"gitId":"jinyang628"},"content":"    public void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2023-09-26"},{"lineNumber":168,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-09-26"},{"lineNumber":169,"author":{"gitId":"jinyang628"},"content":"        this.filteredInternships.setPredicate(predicate);","lastModifiedDate":"2023-09-26"},{"lineNumber":170,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":171,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"javinchua":1,"-":148,"jinyang628":40}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"     * Returns an unmodifiable view of the internship list.","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"     * This list will not contain any duplicate internship.","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"    ObservableList\u003cInternship\u003e getInternshipList();","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"javinchua":7,"-":17}},{"path":"src/main/java/seedu/address/model/internship/ApplicationStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"import java.util.List;","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":" * Represents an Internship\u0027s application status in Flagship.","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidApplicationStatus(String)}","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"public class ApplicationStatus {","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"            \"Application Status cannot be blank and should only contain one of the following: \"","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"                    + \"Yet to apply, Applied, In progress, Accepted, Rejected\";","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"    private static final List\u003cString\u003e VALID_STATUSES \u003d Arrays.asList(","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"            \"Yet to apply\", \"Applied\", \"In progress\", \"Accepted\", \"Rejected\"","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"    );","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"    public final String applicationStatus;","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"     * Constructs a {@code ApplicationStatus}.","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"     * @param applicationStatus A valid application status.","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"    public ApplicationStatus(String applicationStatus) {","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(applicationStatus);","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"        checkArgument(isValidApplicationStatus(applicationStatus), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"        this.applicationStatus \u003d applicationStatus;","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"    public static boolean isValidApplicationStatus(String test) {","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"        return VALID_STATUSES.contains(test);","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"        return this.applicationStatus;","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"            return true;","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"        if (!(other instanceof ApplicationStatus)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"            return false;","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"        ApplicationStatus otherApplicationStatus \u003d (ApplicationStatus) other;","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"        return this.applicationStatus.equals(otherApplicationStatus.applicationStatus);","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"        return this.applicationStatus.hashCode();","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"jinyang628":65}},{"path":"src/main/java/seedu/address/model/internship/CompanyName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":" * Represents an Internship\u0027s company name in Flagship.","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCompanyName(String)}","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"public class CompanyName {","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"            \"Company names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"    /*","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"     * The first character of the company name must not be a whitespace,","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"    public final String companyName;","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"     * Constructs a {@code CompanyName}.","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"     * @param companyName A valid company name.","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"    public CompanyName(String companyName) {","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(companyName);","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"        checkArgument(isValidCompanyName(companyName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"     * Returns true if a given string is a valid company name.","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"    public static boolean isValidCompanyName(String test) {","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"        return this.companyName;","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"            return true;","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"        if (!(other instanceof CompanyName)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"            return false;","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"        CompanyName otherCompanyName \u003d (CompanyName) other;","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"        return this.companyName.equals(otherCompanyName.companyName);","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"        return this.companyName.hashCode();","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"javinchua":1,"jinyang628":65}},{"path":"src/main/java/seedu/address/model/internship/Duration.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":" * Represents an Internship\u0027s duration in the address book.","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDuration(String)}","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"public class Duration {","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"            \"Internship durations should only contain positive numbers representing months and should not be blank\";","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"    public static final String VALIDATION_REGEX \u003d \"[1-9]\\\\d*\";","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"    public final String duration;","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"     * Constructs a {@code Duration}.","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"     * @param duration A valid duration in months.","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"    public Duration(String duration) {","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(duration);","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"        checkArgument(isValidDuration(duration), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"     * Returns true if a given string is a valid duration.","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"    public static boolean isValidDuration(String test) {","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"        return this.duration;","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"            return true;","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"        if (!(other instanceof Duration)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"            return false;","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"        Duration otherDuration \u003d (Duration) other;","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"        return this.duration.equals(otherDuration.duration);","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"        return this.duration.hashCode();","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"jinyang628":59}},{"path":"src/main/java/seedu/address/model/internship/Internship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"import java.util.Set;","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.requirement.Requirement;","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":" * Represents an Internship in Flagship.","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"public class Internship {","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"     * Identity fields","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"     * To keep validation simple and Flagship easier to use, we will assume that two internships with identical roles","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"     * and names (case-sensitive) are the same even if they may have different data fields such as different","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"     * requirements.","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"    private final CompanyName companyName;","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"    private final Role role;","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"    // Data fields","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"    private final ApplicationStatus applicationStatus;","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"    private final StartDate startDate;","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"    private final Duration duration;","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"    private final Set\u003cRequirement\u003e requirements \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"    public Internship(CompanyName companyName, Role role, ApplicationStatus applicationStatus,","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"                      StartDate startDate, Duration duration, Set\u003cRequirement\u003e requirements) {","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"        requireAllNonNull(companyName, role, requirements, applicationStatus, startDate, duration);","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"        this.role \u003d role;","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"        this.applicationStatus \u003d applicationStatus;","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"        this.requirements.addAll(requirements);","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"    public CompanyName getCompanyName() {","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"        return this.companyName;","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"    public Role getRole() {","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"        return this.role;","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"     * Returns an immutable requirement set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-09-26"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"    public Set\u003cRequirement\u003e getRequirements() {","lastModifiedDate":"2023-09-26"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"        return Collections.unmodifiableSet(this.requirements);","lastModifiedDate":"2023-09-26"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"    public ApplicationStatus getApplicationStatus() {","lastModifiedDate":"2023-09-26"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"        return this.applicationStatus;","lastModifiedDate":"2023-09-26"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":74,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":75,"author":{"gitId":"jinyang628"},"content":"    public StartDate getStartDate() {","lastModifiedDate":"2023-09-26"},{"lineNumber":76,"author":{"gitId":"jinyang628"},"content":"        return this.startDate;","lastModifiedDate":"2023-09-26"},{"lineNumber":77,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":78,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"    public Duration getDuration() {","lastModifiedDate":"2023-09-26"},{"lineNumber":80,"author":{"gitId":"jinyang628"},"content":"        return this.duration;","lastModifiedDate":"2023-09-26"},{"lineNumber":81,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":82,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":83,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":84,"author":{"gitId":"jinyang628"},"content":"     * Returns true if both internships have the same company name and role.","lastModifiedDate":"2023-09-26"},{"lineNumber":85,"author":{"gitId":"jinyang628"},"content":"     * This defines a weaker notion of equality between two persons and will be primarily used throughout the program.","lastModifiedDate":"2023-09-26"},{"lineNumber":86,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":87,"author":{"gitId":"jinyang628"},"content":"    public boolean isSameInternship(Internship otherInternship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":88,"author":{"gitId":"jinyang628"},"content":"        if (otherInternship \u003d\u003d this) {","lastModifiedDate":"2023-09-26"},{"lineNumber":89,"author":{"gitId":"jinyang628"},"content":"            return true;","lastModifiedDate":"2023-09-26"},{"lineNumber":90,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":92,"author":{"gitId":"jinyang628"},"content":"        return otherInternship !\u003d null","lastModifiedDate":"2023-09-26"},{"lineNumber":93,"author":{"gitId":"jinyang628"},"content":"                \u0026\u0026 otherInternship.getCompanyName().equals(this.getCompanyName())","lastModifiedDate":"2023-09-26"},{"lineNumber":94,"author":{"gitId":"jinyang628"},"content":"                \u0026\u0026 otherInternship.getRole().equals(this.getRole());","lastModifiedDate":"2023-09-26"},{"lineNumber":95,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":96,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":97,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":98,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-09-26"},{"lineNumber":99,"author":{"gitId":"jinyang628"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-09-26"},{"lineNumber":100,"author":{"gitId":"jinyang628"},"content":"                .add(\"Company Name\", this.companyName)","lastModifiedDate":"2023-09-26"},{"lineNumber":101,"author":{"gitId":"jinyang628"},"content":"                .add(\"Role\", this.role)","lastModifiedDate":"2023-09-26"},{"lineNumber":102,"author":{"gitId":"jinyang628"},"content":"                .add(\"Application Status\", this.applicationStatus)","lastModifiedDate":"2023-09-26"},{"lineNumber":103,"author":{"gitId":"jinyang628"},"content":"                .add(\"Start Date\", this.startDate)","lastModifiedDate":"2023-09-26"},{"lineNumber":104,"author":{"gitId":"jinyang628"},"content":"                .add(\"Duration\", this.duration)","lastModifiedDate":"2023-09-26"},{"lineNumber":105,"author":{"gitId":"jinyang628"},"content":"                .add(\"Requirements\", this.requirements)","lastModifiedDate":"2023-09-26"},{"lineNumber":106,"author":{"gitId":"jinyang628"},"content":"                .toString();","lastModifiedDate":"2023-09-26"},{"lineNumber":107,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":108,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":109,"author":{"gitId":"jinyang628"},"content":"    // DELETE IF NOT NECESSARY. KEEP FOR NOW","lastModifiedDate":"2023-09-26"},{"lineNumber":110,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":111,"author":{"gitId":"jinyang628"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2023-09-26"},{"lineNumber":112,"author":{"gitId":"jinyang628"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2023-09-26"},{"lineNumber":113,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":114,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":115,"author":{"gitId":"jinyang628"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-26"},{"lineNumber":116,"author":{"gitId":"jinyang628"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-26"},{"lineNumber":117,"author":{"gitId":"jinyang628"},"content":"            return true;","lastModifiedDate":"2023-09-26"},{"lineNumber":118,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":119,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":120,"author":{"gitId":"jinyang628"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-26"},{"lineNumber":121,"author":{"gitId":"jinyang628"},"content":"        if (!(other instanceof Internship)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":122,"author":{"gitId":"jinyang628"},"content":"            return false;","lastModifiedDate":"2023-09-26"},{"lineNumber":123,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":124,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":125,"author":{"gitId":"jinyang628"},"content":"        Internship otherInternship \u003d (Internship) other;","lastModifiedDate":"2023-09-26"},{"lineNumber":126,"author":{"gitId":"jinyang628"},"content":"        return this.companyName.equals(otherInternship.companyName)","lastModifiedDate":"2023-09-26"},{"lineNumber":127,"author":{"gitId":"jinyang628"},"content":"                \u0026\u0026 this.role.equals(otherInternship.role)","lastModifiedDate":"2023-09-26"},{"lineNumber":128,"author":{"gitId":"jinyang628"},"content":"                \u0026\u0026 this.applicationStatus.equals(otherInternship.applicationStatus)","lastModifiedDate":"2023-09-26"},{"lineNumber":129,"author":{"gitId":"jinyang628"},"content":"                \u0026\u0026 this.startDate.equals(otherInternship.startDate)","lastModifiedDate":"2023-09-26"},{"lineNumber":130,"author":{"gitId":"jinyang628"},"content":"                \u0026\u0026 this.duration.equals(otherInternship.duration)","lastModifiedDate":"2023-09-26"},{"lineNumber":131,"author":{"gitId":"jinyang628"},"content":"                \u0026\u0026 this.requirements.equals(otherInternship.requirements);","lastModifiedDate":"2023-09-26"},{"lineNumber":132,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":133,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":134,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":135,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":136,"author":{"gitId":"jinyang628"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-26"},{"lineNumber":137,"author":{"gitId":"jinyang628"},"content":"        return Objects.hash(this.companyName, this.role, this.applicationStatus,","lastModifiedDate":"2023-09-26"},{"lineNumber":138,"author":{"gitId":"jinyang628"},"content":"                this.startDate, this.duration, this.requirements);","lastModifiedDate":"2023-09-26"},{"lineNumber":139,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":140,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":141,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"jinyang628":141}},{"path":"src/main/java/seedu/address/model/internship/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import java.util.List;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":" * Tests that a {@code Internship}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cInternship\u003e {","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"    public boolean test(Internship internship) {","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(internship","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"                        .getCompanyName().companyName, keyword));","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"javinchua":45}},{"path":"src/main/java/seedu/address/model/internship/Role.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":" * Represents an Internship\u0027s role in Flagship.","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRole(String)}","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"public class Role {","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"            \"Role should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"    /*","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"     * The first character of the role must not be a whitespace,","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"    private final String role;","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"     * Constructs a {@code Role}.","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"     * @param role A valid role.","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"    public Role(String role) {","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(role);","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"        checkArgument(isValidRole(role), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"        this.role \u003d role;","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"     * Returns true if a given string is a valid role.","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"    public static boolean isValidRole(String test) {","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"        return this.role;","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"            return true;","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"        if (!(other instanceof Role)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"            return false;","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"        Role otherRole \u003d (Role) other;","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"        return this.role.equals(otherRole.role);","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"        return this.role.hashCode();","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"jinyang628":66}},{"path":"src/main/java/seedu/address/model/internship/StartDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":" * Represents an Internship\u0027s start date in Flagship.","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStartDate(String)}","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"public class StartDate {","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"            \"Start Date should only contain numbers and slashes. It must follow the form DD/MM/YYYY\";","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"     * Constructs a {@code StartDate}.","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"     * @param startDate A valid start date.","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"    public StartDate(String startDate) {","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(startDate);","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"        checkArgument(isValidStartDate(startDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        this.startDate \u003d LocalDate.parse(startDate, DATE_FORMATTER);","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"     * Returns true if a given string is a valid StartDate.","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"    public static boolean isValidStartDate(String test) {","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"        try {","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"            LocalDate.parse(test, DATE_FORMATTER);","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"            return true;","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"            return false;","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"        return this.startDate.format(DATE_FORMATTER);","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"            return true;","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"        if (other \u003d\u003d null || getClass() !\u003d other.getClass()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"            return false;","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"        StartDate otherStartDate \u003d (StartDate) other;","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"        return this.startDate.equals(otherStartDate.startDate);","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-26"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"        return this.startDate.hashCode();","lastModifiedDate":"2023-09-26"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"jinyang628":70}},{"path":"src/main/java/seedu/address/model/internship/UniqueInternshipList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"import java.util.List;","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.exceptions.DuplicateInternshipException;","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.exceptions.InternshipNotFoundException;","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":" *","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":" *","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":" * @see Internship#isSameInternship(Internship)","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"public class UniqueInternshipList implements Iterable\u003cInternship\u003e {","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"    private final ObservableList\u003cInternship\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"    private final ObservableList\u003cInternship\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"     * Returns true if the list contains an equivalent internship as the given argument.","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"    public boolean contains(Internship toCheck) {","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"        return internalList.stream().anyMatch(toCheck::isSameInternship);","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"     * Adds a internship to the list.","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"     * The internship must not already exist in the list.","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"    public void create(Internship toAdd) {","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"     * Replaces the internship {@code target} in the list with {@code editedInternship}.","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"     * The internship identity of {@code editedInternship} must not be the same as another existing internship in the","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"     * list.","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"        requireAllNonNull(target, editedInternship);","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"            throw new InternshipNotFoundException();","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"        if (!target.isSameInternship(editedInternship) \u0026\u0026 contains(editedInternship)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2023-09-26"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"        internalList.set(index, editedInternship);","lastModifiedDate":"2023-09-26"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"     * Removes the equivalent internship from the list.","lastModifiedDate":"2023-09-26"},{"lineNumber":74,"author":{"gitId":"jinyang628"},"content":"     * The internship must exist in the list.","lastModifiedDate":"2023-09-26"},{"lineNumber":75,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":76,"author":{"gitId":"jinyang628"},"content":"    public void remove(Internship toRemove) {","lastModifiedDate":"2023-09-26"},{"lineNumber":77,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-09-26"},{"lineNumber":78,"author":{"gitId":"jinyang628"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"            throw new InternshipNotFoundException();","lastModifiedDate":"2023-09-26"},{"lineNumber":80,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":81,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":82,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":83,"author":{"gitId":"jinyang628"},"content":"    public void setInternships(UniqueInternshipList replacement) {","lastModifiedDate":"2023-09-26"},{"lineNumber":84,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-09-26"},{"lineNumber":85,"author":{"gitId":"jinyang628"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-09-26"},{"lineNumber":86,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":87,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":88,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":89,"author":{"gitId":"jinyang628"},"content":"     * Replaces the contents of this list with {@code internships}.","lastModifiedDate":"2023-09-26"},{"lineNumber":90,"author":{"gitId":"jinyang628"},"content":"     * {@code internship} must not contain duplicate internships.","lastModifiedDate":"2023-09-26"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":92,"author":{"gitId":"jinyang628"},"content":"    public void setInternships(List\u003cInternship\u003e internships) {","lastModifiedDate":"2023-09-26"},{"lineNumber":93,"author":{"gitId":"jinyang628"},"content":"        requireAllNonNull(internships);","lastModifiedDate":"2023-09-26"},{"lineNumber":94,"author":{"gitId":"jinyang628"},"content":"        if (!internshipsAreUnique(internships)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":95,"author":{"gitId":"jinyang628"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2023-09-26"},{"lineNumber":96,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":97,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":98,"author":{"gitId":"jinyang628"},"content":"        internalList.setAll(internships);","lastModifiedDate":"2023-09-26"},{"lineNumber":99,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":100,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":101,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":102,"author":{"gitId":"jinyang628"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-09-26"},{"lineNumber":103,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":104,"author":{"gitId":"jinyang628"},"content":"    public ObservableList\u003cInternship\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-09-26"},{"lineNumber":105,"author":{"gitId":"jinyang628"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-09-26"},{"lineNumber":106,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":107,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":108,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":109,"author":{"gitId":"jinyang628"},"content":"    public Iterator\u003cInternship\u003e iterator() {","lastModifiedDate":"2023-09-26"},{"lineNumber":110,"author":{"gitId":"jinyang628"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-09-26"},{"lineNumber":111,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":112,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":113,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":114,"author":{"gitId":"jinyang628"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-26"},{"lineNumber":115,"author":{"gitId":"jinyang628"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-26"},{"lineNumber":116,"author":{"gitId":"jinyang628"},"content":"            return true;","lastModifiedDate":"2023-09-26"},{"lineNumber":117,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":118,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":119,"author":{"gitId":"jinyang628"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-26"},{"lineNumber":120,"author":{"gitId":"jinyang628"},"content":"        if (!(other instanceof UniqueInternshipList)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":121,"author":{"gitId":"jinyang628"},"content":"            return false;","lastModifiedDate":"2023-09-26"},{"lineNumber":122,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":123,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":124,"author":{"gitId":"jinyang628"},"content":"        UniqueInternshipList otherUniqueInternshipList \u003d (UniqueInternshipList) other;","lastModifiedDate":"2023-09-26"},{"lineNumber":125,"author":{"gitId":"jinyang628"},"content":"        return internalList.equals(otherUniqueInternshipList.internalList);","lastModifiedDate":"2023-09-26"},{"lineNumber":126,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":127,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":128,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":129,"author":{"gitId":"jinyang628"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-26"},{"lineNumber":130,"author":{"gitId":"jinyang628"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-09-26"},{"lineNumber":131,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":132,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":133,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":134,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-09-26"},{"lineNumber":135,"author":{"gitId":"jinyang628"},"content":"        return internalList.toString();","lastModifiedDate":"2023-09-26"},{"lineNumber":136,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":137,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":138,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":139,"author":{"gitId":"jinyang628"},"content":"     * Returns true if {@code internships} contains only unique internships.","lastModifiedDate":"2023-09-26"},{"lineNumber":140,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":141,"author":{"gitId":"jinyang628"},"content":"    private boolean internshipsAreUnique(List\u003cInternship\u003e internships) {","lastModifiedDate":"2023-09-26"},{"lineNumber":142,"author":{"gitId":"jinyang628"},"content":"        for (int i \u003d 0; i \u003c internships.size() - 1; i++) {","lastModifiedDate":"2023-09-26"},{"lineNumber":143,"author":{"gitId":"jinyang628"},"content":"            for (int j \u003d i + 1; j \u003c internships.size(); j++) {","lastModifiedDate":"2023-09-26"},{"lineNumber":144,"author":{"gitId":"jinyang628"},"content":"                if (internships.get(i).isSameInternship(internships.get(j))) {","lastModifiedDate":"2023-09-26"},{"lineNumber":145,"author":{"gitId":"jinyang628"},"content":"                    return false;","lastModifiedDate":"2023-09-26"},{"lineNumber":146,"author":{"gitId":"jinyang628"},"content":"                }","lastModifiedDate":"2023-09-26"},{"lineNumber":147,"author":{"gitId":"jinyang628"},"content":"            }","lastModifiedDate":"2023-09-26"},{"lineNumber":148,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":149,"author":{"gitId":"jinyang628"},"content":"        return true;","lastModifiedDate":"2023-09-26"},{"lineNumber":150,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":151,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"jinyang628":151}},{"path":"src/main/java/seedu/address/model/internship/exceptions/DuplicateInternshipException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package seedu.address.model.internship.exceptions;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":" * Signals that the operation will result in duplicate Internships (Internships are considered duplicates if they have","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":" * the same identity).","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"public class DuplicateInternshipException extends RuntimeException {","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"    public DuplicateInternshipException() {","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"        super(\"Operation would result in duplicate internships\");","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"jinyang628":13}},{"path":"src/main/java/seedu/address/model/internship/exceptions/InternshipNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package seedu.address.model.internship.exceptions;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":" * Signals that the operation is unable to find the specified internship.","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"public class InternshipNotFoundException extends RuntimeException { }","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"jinyang628":10}},{"path":"src/main/java/seedu/address/model/requirement/Requirement.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package seedu.address.model.requirement;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":" * Represents a Requirement in Flagship.","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidRequirementName(String)}","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"public class Requirement {","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Requirements cannot be empty\";","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S+\";","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"    public final String requirementName;","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"     * Constructs a {@code Requirement}.","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"     * @param requirementName A valid requirement name.","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"    public Requirement(String requirementName) {","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"        requireNonNull(requirementName);","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"        checkArgument(isValidRequirementName(requirementName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"        this.requirementName \u003d requirementName;","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"     * Returns true if a given string is a valid requirement name.","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"    public static boolean isValidRequirementName(String test) {","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"            return true;","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"        if (!(other instanceof Requirement)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"            return false;","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"        Requirement otherRequirement \u003d (Requirement) other;","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"        return this.requirementName.equals(otherRequirement.requirementName);","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"        return this.requirementName.hashCode();","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"    public String toString() {","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"        return \u0027[\u0027 + this.requirementName + \u0027]\u0027;","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"jinyang628":62}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"javinchua":2,"-":173}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"jinyang628"},"content":"        public void createInternship(Internship internship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-09-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-09-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"jinyang628"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"jinyang628"},"content":"        public void deleteInternship(Internship target) {","lastModifiedDate":"2023-09-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":148,"author":{"gitId":"jinyang628"},"content":"        public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":149,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":150,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":151,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":152,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":153,"author":{"gitId":"jinyang628"},"content":"        public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2023-09-26"},{"lineNumber":154,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":155,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":156,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":157,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":158,"author":{"gitId":"jinyang628"},"content":"        public void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2023-09-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":162,"author":{"gitId":"jinyang628"},"content":"        // DELETE when fully transitioned","lastModifiedDate":"2023-09-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"jinyang628"},"content":"        // DELETE when fully transitioned","lastModifiedDate":"2023-09-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"jinyang628"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-09-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"jinyang628"},"content":"        // DELETE WHEN fully transitioned","lastModifiedDate":"2023-09-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"jinyang628"},"content":"        // DELETE WHEN fully transitioned","lastModifiedDate":"2023-09-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":186,"author":{"gitId":"jinyang628"},"content":"        // DELETE WHEN fully transitioned","lastModifiedDate":"2023-09-26"},{"lineNumber":187,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":188,"author":{"gitId":"jinyang628"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-09-26"},{"lineNumber":189,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":190,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":191,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":192,"author":{"gitId":"jinyang628"},"content":"        // DELETE WHEN fully transitioned","lastModifiedDate":"2023-09-26"},{"lineNumber":193,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":194,"author":{"gitId":"jinyang628"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-09-26"},{"lineNumber":195,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":196,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":208,"jinyang628":33}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"javinchua"},"content":"    // Remove when done","lastModifiedDate":"2023-10-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":131,"author":{"gitId":"javinchua"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-02"},{"lineNumber":132,"author":{"gitId":"javinchua"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-02"},{"lineNumber":133,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":134,"author":{"gitId":"javinchua"},"content":"    public static void showInternshipAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-02"},{"lineNumber":135,"author":{"gitId":"javinchua"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredInternshipList().size());","lastModifiedDate":"2023-10-02"},{"lineNumber":136,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":137,"author":{"gitId":"javinchua"},"content":"        Internship internship \u003d model.getFilteredInternshipList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-02"},{"lineNumber":138,"author":{"gitId":"javinchua"},"content":"        final String[] splitCompanyName \u003d internship.getCompanyName().companyName.split(\"\\\\s+\");;","lastModifiedDate":"2023-10-02"},{"lineNumber":139,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":140,"author":{"gitId":"javinchua"},"content":"        model.updateFilteredInternshipList(new seedu.address.model.internship.NameContainsKeywordsPredicate(","lastModifiedDate":"2023-10-02"},{"lineNumber":141,"author":{"gitId":"javinchua"},"content":"                Arrays.asList(splitCompanyName[0])));","lastModifiedDate":"2023-10-02"},{"lineNumber":142,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":143,"author":{"gitId":"javinchua"},"content":"        assertEquals(1, model.getFilteredInternshipList().size());","lastModifiedDate":"2023-10-02"},{"lineNumber":144,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":145,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"javinchua":18,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/CreateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"//import static seedu.address.testutil.TypicalInternships.JANE_STREET;","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"import seedu.address.testutil.InternshipBuilder;","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"public class CreateCommandTest {","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"    public void constructor_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CreateCommand(null));","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"    public void execute_internshipAcceptedByModel_createSuccessful() throws Exception {","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"        CreateCommandTest.ModelStufAcceptingInternshipCreated modelStub \u003d new CreateCommandTest","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"                .ModelStufAcceptingInternshipCreated();","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"        Internship validInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"        CommandResult commandResult \u003d new CreateCommand(validInternship).execute(modelStub);","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"        assertEquals(String.format(CreateCommand.MESSAGE_SUCCESS, Messages.format(validInternship)),","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"        assertEquals(Arrays.asList(validInternship), modelStub.internshipsCreated);","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"    public void execute_duplicateInternship_throwsCommandException() {","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"        Internship validInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"        CreateCommand createCommand \u003d new CreateCommand(validInternship);","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"        CreateCommandTest.ModelStub modelStub \u003d new CreateCommandTest.ModelStubWithInternship(validInternship);","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"        assertThrows(","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"                CommandException.class,","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"                CreateCommand.MESSAGE_DUPLICATE_INTERNSHIP, () -\u003e createCommand.execute(modelStub)","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"        );","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"    @Test","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"    public void equals() {","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"        Internship janeStreet \u003d new InternshipBuilder().withCompanyName(\"JaneStreet\").build();","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"        Internship google \u003d new InternshipBuilder().withCompanyName(\"Google\").build();","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"        CreateCommand addJaneStreetCommand \u003d new CreateCommand(janeStreet);","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"        CreateCommand addGoogleCommand \u003d new CreateCommand(google);","lastModifiedDate":"2023-09-26"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-09-26"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"        assertTrue(addJaneStreetCommand.equals(addJaneStreetCommand));","lastModifiedDate":"2023-09-26"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-09-26"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"        CreateCommand addJaneStreetCommandCopy \u003d new CreateCommand(janeStreet);","lastModifiedDate":"2023-09-26"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"        assertTrue(addJaneStreetCommand.equals(addJaneStreetCommandCopy));","lastModifiedDate":"2023-09-26"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":74,"author":{"gitId":"jinyang628"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-09-26"},{"lineNumber":75,"author":{"gitId":"jinyang628"},"content":"        assertFalse(addJaneStreetCommand.equals(1));","lastModifiedDate":"2023-09-26"},{"lineNumber":76,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":77,"author":{"gitId":"jinyang628"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-09-26"},{"lineNumber":78,"author":{"gitId":"jinyang628"},"content":"        assertFalse(addJaneStreetCommand.equals(null));","lastModifiedDate":"2023-09-26"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":80,"author":{"gitId":"jinyang628"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-09-26"},{"lineNumber":81,"author":{"gitId":"jinyang628"},"content":"        assertFalse(addJaneStreetCommand.equals(addGoogleCommand));","lastModifiedDate":"2023-09-26"},{"lineNumber":82,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":83,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":84,"author":{"gitId":"jinyang628"},"content":"    //    @Test","lastModifiedDate":"2023-09-26"},{"lineNumber":85,"author":{"gitId":"jinyang628"},"content":"    //    public void toStringMethod() {","lastModifiedDate":"2023-09-26"},{"lineNumber":86,"author":{"gitId":"jinyang628"},"content":"    //        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2023-09-26"},{"lineNumber":87,"author":{"gitId":"jinyang628"},"content":"    //        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2023-09-26"},{"lineNumber":88,"author":{"gitId":"jinyang628"},"content":"    //        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2023-09-26"},{"lineNumber":89,"author":{"gitId":"jinyang628"},"content":"    //    }","lastModifiedDate":"2023-09-26"},{"lineNumber":90,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":92,"author":{"gitId":"jinyang628"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-09-26"},{"lineNumber":93,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":94,"author":{"gitId":"jinyang628"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-09-26"},{"lineNumber":95,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":96,"author":{"gitId":"jinyang628"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-09-26"},{"lineNumber":97,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":98,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":99,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":100,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":101,"author":{"gitId":"jinyang628"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-09-26"},{"lineNumber":102,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":103,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":104,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":105,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":106,"author":{"gitId":"jinyang628"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-09-26"},{"lineNumber":107,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":108,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":109,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":110,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":111,"author":{"gitId":"jinyang628"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-09-26"},{"lineNumber":112,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":113,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":114,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":115,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":116,"author":{"gitId":"jinyang628"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-09-26"},{"lineNumber":117,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":118,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":119,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":120,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":121,"author":{"gitId":"jinyang628"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-09-26"},{"lineNumber":122,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":123,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":124,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":125,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":126,"author":{"gitId":"jinyang628"},"content":"        public void createInternship(Internship internship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":127,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":128,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":129,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":130,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":131,"author":{"gitId":"jinyang628"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-09-26"},{"lineNumber":132,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":133,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":134,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":135,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":136,"author":{"gitId":"jinyang628"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-09-26"},{"lineNumber":137,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":138,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":139,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":140,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":141,"author":{"gitId":"jinyang628"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":142,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":143,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":144,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":145,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":146,"author":{"gitId":"jinyang628"},"content":"        public void deleteInternship(Internship target) {","lastModifiedDate":"2023-09-26"},{"lineNumber":147,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":148,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":149,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":150,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":151,"author":{"gitId":"jinyang628"},"content":"        public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":152,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":153,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":154,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":155,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":156,"author":{"gitId":"jinyang628"},"content":"        public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2023-09-26"},{"lineNumber":157,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":158,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":159,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":160,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":161,"author":{"gitId":"jinyang628"},"content":"        public void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2023-09-26"},{"lineNumber":162,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":163,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":164,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":165,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":166,"author":{"gitId":"jinyang628"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-09-26"},{"lineNumber":167,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":168,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":169,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":170,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":171,"author":{"gitId":"jinyang628"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-09-26"},{"lineNumber":172,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":173,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":174,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":175,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":176,"author":{"gitId":"jinyang628"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-09-26"},{"lineNumber":177,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":178,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":179,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":180,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":181,"author":{"gitId":"jinyang628"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-09-26"},{"lineNumber":182,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":183,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":184,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":185,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":186,"author":{"gitId":"jinyang628"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-09-26"},{"lineNumber":187,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":188,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":189,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":190,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":191,"author":{"gitId":"jinyang628"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-09-26"},{"lineNumber":192,"author":{"gitId":"jinyang628"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":193,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":194,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":195,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":196,"author":{"gitId":"jinyang628"},"content":"     * A Model stub that contains a single internship.","lastModifiedDate":"2023-09-26"},{"lineNumber":197,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":198,"author":{"gitId":"jinyang628"},"content":"    private class ModelStubWithInternship extends ModelStub {","lastModifiedDate":"2023-09-26"},{"lineNumber":199,"author":{"gitId":"jinyang628"},"content":"        private final Internship internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":200,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":201,"author":{"gitId":"jinyang628"},"content":"        ModelStubWithInternship(Internship internship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":202,"author":{"gitId":"jinyang628"},"content":"            requireNonNull(internship);","lastModifiedDate":"2023-09-26"},{"lineNumber":203,"author":{"gitId":"jinyang628"},"content":"            this.internship \u003d internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":204,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":205,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":206,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":207,"author":{"gitId":"jinyang628"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":208,"author":{"gitId":"jinyang628"},"content":"            requireNonNull(internship);","lastModifiedDate":"2023-09-26"},{"lineNumber":209,"author":{"gitId":"jinyang628"},"content":"            return this.internship.isSameInternship(internship);","lastModifiedDate":"2023-09-26"},{"lineNumber":210,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":211,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":212,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":213,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":214,"author":{"gitId":"jinyang628"},"content":"     * A Model stub that always accept the internship being added.","lastModifiedDate":"2023-09-26"},{"lineNumber":215,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":216,"author":{"gitId":"jinyang628"},"content":"    private class ModelStufAcceptingInternshipCreated extends ModelStub {","lastModifiedDate":"2023-09-26"},{"lineNumber":217,"author":{"gitId":"jinyang628"},"content":"        final ArrayList\u003cInternship\u003e internshipsCreated \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-26"},{"lineNumber":218,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":219,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":220,"author":{"gitId":"jinyang628"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":221,"author":{"gitId":"jinyang628"},"content":"            requireNonNull(internship);","lastModifiedDate":"2023-09-26"},{"lineNumber":222,"author":{"gitId":"jinyang628"},"content":"            return internshipsCreated.stream().anyMatch(internship::isSameInternship);","lastModifiedDate":"2023-09-26"},{"lineNumber":223,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":224,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":225,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":226,"author":{"gitId":"jinyang628"},"content":"        public void createInternship(Internship internship) {","lastModifiedDate":"2023-09-26"},{"lineNumber":227,"author":{"gitId":"jinyang628"},"content":"            requireNonNull(internship);","lastModifiedDate":"2023-09-26"},{"lineNumber":228,"author":{"gitId":"jinyang628"},"content":"            internshipsCreated.add(internship);","lastModifiedDate":"2023-09-26"},{"lineNumber":229,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":230,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":231,"author":{"gitId":"jinyang628"},"content":"        @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":232,"author":{"gitId":"jinyang628"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-09-26"},{"lineNumber":233,"author":{"gitId":"jinyang628"},"content":"            return new AddressBook();","lastModifiedDate":"2023-09-26"},{"lineNumber":234,"author":{"gitId":"jinyang628"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":235,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":236,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"jinyang628":236}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showInternshipAtIndex;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"import static seedu.address.testutil.TypicalInternships.getTypicalAddressBook;","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"        Internship internshipToDelete \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_INTERNSHIP_SUCCESS,","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"                Messages.format(internshipToDelete));","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"        expectedModel.deleteInternship(internshipToDelete);","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredInternshipList().size() + 1);","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"        Internship internshipToDelete \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_INTERNSHIP_SUCCESS,","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"                Messages.format(internshipToDelete));","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"        expectedModel.deleteInternship(internshipToDelete);","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"        showNoInternship(expectedModel);","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"javinchua"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"javinchua"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"javinchua"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getInternshipList().size());","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"javinchua"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"javinchua"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"javinchua"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_INTERNSHIP);","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"javinchua"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"javinchua"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"javinchua"},"content":"    private void showNoInternship(Model model) {","lastModifiedDate":"2023-10-02"},{"lineNumber":116,"author":{"gitId":"javinchua"},"content":"        model.updateFilteredInternshipList(p -\u003e false);","lastModifiedDate":"2023-10-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"javinchua"},"content":"        assertTrue(model.getFilteredInternshipList().isEmpty());","lastModifiedDate":"2023-10-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"javinchua":30,"-":90}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"import static seedu.address.testutil.TypicalInternships.JANESTREET;","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"import seedu.address.model.internship.exceptions.DuplicateInternshipException;","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"import seedu.address.testutil.InternshipBuilder;","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"    public void resetData_withDuplicateInternships_throwsDuplicateInternshipException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"        // Two Internships with the same identity fields","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"        Internship editedJaneStreet \u003d new InternshipBuilder(JANESTREET).withDuration(\"4\").build();","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"        List\u003cInternship\u003e newInternships \u003d Arrays.asList(JANESTREET, editedJaneStreet);","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newInternships);","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"        assertThrows(DuplicateInternshipException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"javinchua"},"content":"        private final ObservableList\u003cInternship\u003e internships \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-02"},{"lineNumber":100,"author":{"gitId":"javinchua"},"content":"        AddressBookStub(Collection\u003cInternship\u003e internships) {","lastModifiedDate":"2023-10-02"},{"lineNumber":101,"author":{"gitId":"javinchua"},"content":"            this.internships.setAll(internships);","lastModifiedDate":"2023-10-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"javinchua"},"content":"        @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":110,"author":{"gitId":"javinchua"},"content":"        public ObservableList\u003cInternship\u003e getInternshipList() {","lastModifiedDate":"2023-10-02"},{"lineNumber":111,"author":{"gitId":"javinchua"},"content":"            return internships;","lastModifiedDate":"2023-10-02"},{"lineNumber":112,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"javinchua":18,"-":97}},{"path":"src/test/java/seedu/address/testutil/InternshipBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyang628"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"jinyang628"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"jinyang628"},"content":"import java.util.Set;","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.ApplicationStatus;","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.Duration;","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.Role;","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.internship.StartDate;","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"jinyang628"},"content":"import seedu.address.model.requirement.Requirement;","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"jinyang628"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"jinyang628"},"content":" * A utility class to help with building Internship objects.","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"jinyang628"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"jinyang628"},"content":"public class InternshipBuilder {","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"jinyang628"},"content":"    public static final String DEFAULT_COMPANY_NAME \u003d \"Jane Street\";","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"jinyang628"},"content":"    public static final String DEFAULT_ROLE \u003d \"Software Engineer\";","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"jinyang628"},"content":"    public static final String DEFAULT_APPLICATION_STATUS \u003d \"Yet to apply\";","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"jinyang628"},"content":"    public static final String DEFAULT_START_DATE \u003d \"20/01/2023\";","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"jinyang628"},"content":"    public static final String DEFAULT_DURATION \u003d \"3\";","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"jinyang628"},"content":"    private CompanyName companyName;","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"jinyang628"},"content":"    private Role role;","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"jinyang628"},"content":"    private ApplicationStatus applicationStatus;","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"jinyang628"},"content":"    private StartDate startDate;","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"jinyang628"},"content":"    private Duration duration;","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"jinyang628"},"content":"    private Set\u003cRequirement\u003e requirements;","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"jinyang628"},"content":"     * Creates a {@code InternshipBuilder} with the default details.","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"jinyang628"},"content":"    public InternshipBuilder() {","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"jinyang628"},"content":"        this.companyName \u003d new CompanyName(DEFAULT_COMPANY_NAME);","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"jinyang628"},"content":"        this.role \u003d new Role(DEFAULT_ROLE);","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"jinyang628"},"content":"        this.applicationStatus \u003d new ApplicationStatus(DEFAULT_APPLICATION_STATUS);","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"jinyang628"},"content":"        this.startDate \u003d new StartDate(DEFAULT_START_DATE);","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"jinyang628"},"content":"        this.duration \u003d new Duration(DEFAULT_DURATION);","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"jinyang628"},"content":"        this.requirements \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"jinyang628"},"content":"     * Initializes the InternshipBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"jinyang628"},"content":"    public InternshipBuilder(Internship internshipToCopy) {","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"jinyang628"},"content":"        this.companyName \u003d internshipToCopy.getCompanyName();","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"jinyang628"},"content":"        this.role \u003d internshipToCopy.getRole();","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"jinyang628"},"content":"        this.applicationStatus \u003d internshipToCopy.getApplicationStatus();","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"jinyang628"},"content":"        this.startDate \u003d internshipToCopy.getStartDate();","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"jinyang628"},"content":"        this.duration \u003d internshipToCopy.getDuration();","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"jinyang628"},"content":"        this.requirements \u003d new HashSet\u003c\u003e(internshipToCopy.getRequirements());","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"jinyang628"},"content":"     * Sets the {@code CompanyName} of the {@code Internship} that we are building.","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"jinyang628"},"content":"    public InternshipBuilder withCompanyName(String companyName) {","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"jinyang628"},"content":"        this.companyName \u003d new CompanyName(companyName);","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"jinyang628"},"content":"        return this;","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"jinyang628"},"content":"     * Parses the {@code requirements} into a {@code Set\u003cRequirement\u003e} and set it to the {@code Internship} that we are","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"jinyang628"},"content":"     * building.","lastModifiedDate":"2023-09-26"},{"lineNumber":66,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":67,"author":{"gitId":"jinyang628"},"content":"    public InternshipBuilder withRequirements(String ... requirements) {","lastModifiedDate":"2023-09-26"},{"lineNumber":68,"author":{"gitId":"jinyang628"},"content":"        //  this.requirements \u003d SampleDataUtil.getRequirementSet(requirements);","lastModifiedDate":"2023-09-26"},{"lineNumber":69,"author":{"gitId":"jinyang628"},"content":"        return this;","lastModifiedDate":"2023-09-26"},{"lineNumber":70,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":71,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":72,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":73,"author":{"gitId":"jinyang628"},"content":"     * Sets the {@code Role} of the {@code Internship} that we are building.","lastModifiedDate":"2023-09-26"},{"lineNumber":74,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":75,"author":{"gitId":"jinyang628"},"content":"    public InternshipBuilder withRole(String role) {","lastModifiedDate":"2023-09-26"},{"lineNumber":76,"author":{"gitId":"jinyang628"},"content":"        this.role \u003d new Role(role);","lastModifiedDate":"2023-09-26"},{"lineNumber":77,"author":{"gitId":"jinyang628"},"content":"        return this;","lastModifiedDate":"2023-09-26"},{"lineNumber":78,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":79,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":80,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":81,"author":{"gitId":"jinyang628"},"content":"     * Sets the {@code ApplicationStatus} of the {@code Person} that we are building.","lastModifiedDate":"2023-09-26"},{"lineNumber":82,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":83,"author":{"gitId":"jinyang628"},"content":"    public InternshipBuilder withApplicationStatus(String applicationStatus) {","lastModifiedDate":"2023-09-26"},{"lineNumber":84,"author":{"gitId":"jinyang628"},"content":"        this.applicationStatus \u003d new ApplicationStatus(applicationStatus);","lastModifiedDate":"2023-09-26"},{"lineNumber":85,"author":{"gitId":"jinyang628"},"content":"        return this;","lastModifiedDate":"2023-09-26"},{"lineNumber":86,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":87,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":88,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":89,"author":{"gitId":"jinyang628"},"content":"     * Sets the {@code Duration} of the {@code Person} that we are building.","lastModifiedDate":"2023-09-26"},{"lineNumber":90,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":91,"author":{"gitId":"jinyang628"},"content":"    public InternshipBuilder withDuration(String duration) {","lastModifiedDate":"2023-09-26"},{"lineNumber":92,"author":{"gitId":"jinyang628"},"content":"        this.duration \u003d new Duration(duration);","lastModifiedDate":"2023-09-26"},{"lineNumber":93,"author":{"gitId":"jinyang628"},"content":"        return this;","lastModifiedDate":"2023-09-26"},{"lineNumber":94,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":95,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":96,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":97,"author":{"gitId":"jinyang628"},"content":"     * Sets the {@code StartDate} of the {@code Internship} that we are building.","lastModifiedDate":"2023-09-26"},{"lineNumber":98,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":99,"author":{"gitId":"jinyang628"},"content":"    public InternshipBuilder withStartDate(String startDate) {","lastModifiedDate":"2023-09-26"},{"lineNumber":100,"author":{"gitId":"jinyang628"},"content":"        this.startDate \u003d new StartDate(startDate);","lastModifiedDate":"2023-09-26"},{"lineNumber":101,"author":{"gitId":"jinyang628"},"content":"        return this;","lastModifiedDate":"2023-09-26"},{"lineNumber":102,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":103,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":104,"author":{"gitId":"jinyang628"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":105,"author":{"gitId":"jinyang628"},"content":"     * Builds an internship for testing.","lastModifiedDate":"2023-09-26"},{"lineNumber":106,"author":{"gitId":"jinyang628"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":107,"author":{"gitId":"jinyang628"},"content":"    public Internship build() {","lastModifiedDate":"2023-09-26"},{"lineNumber":108,"author":{"gitId":"jinyang628"},"content":"        return new Internship(this.companyName, this.role, this.applicationStatus,","lastModifiedDate":"2023-09-26"},{"lineNumber":109,"author":{"gitId":"jinyang628"},"content":"                this.startDate, this.duration, this.requirements);","lastModifiedDate":"2023-09-26"},{"lineNumber":110,"author":{"gitId":"jinyang628"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":111,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":112,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":113,"author":{"gitId":"jinyang628"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":114,"author":{"gitId":"jinyang628"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"jinyang628":114}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"    public static final Index INDEX_FIRST_INTERNSHIP \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"    public static final Index INDEX_SECOND_INTERNSHIP \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"    public static final Index INDEX_THIRD_INTERNSHIP \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"javinchua":4,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalInternships.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import java.util.List;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":" * A utility class containing a list of {@code Internship} objects to be used in tests.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"public class TypicalInternships {","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"    public static final Internship JANESTREET \u003d new InternshipBuilder().withCompanyName(\"Jane Street\")","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"            .withRole(\"Software Engineer\")","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"            .withDuration(\"3\")","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"            .withRequirements(new String[]{\"2 years of experience\"})","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"            .withStartDate(\"07/05/2023\").build();","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"    public static final Internship OPTIVER \u003d new InternshipBuilder().withCompanyName(\"Optiver\")","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"            .withRole(\"Software Engineer\")","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"            .withDuration(\"3\")","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"            .withRequirements(new String[]{\"3 years of experience\"})","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"            .withStartDate(\"07/05/2023\").build();","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"    public static final Internship CITADEL \u003d new InternshipBuilder().withCompanyName(\"Citadel\")","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"            .withRole(\"Software Engineer\")","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"            .withDuration(\"3\")","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"            .withRequirements(new String[]{\"4 years of experience\"})","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"            .withStartDate(\"07/05/2023\").build();","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"    private TypicalInternships() {} // prevents instantiation","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"     * Returns an {@code AddressBook} with all the typical internships.","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"        for (Internship internship : getTypicalInternships()) {","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"            ab.createInternship(internship);","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"        return ab;","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"    public static List\u003cInternship\u003e getTypicalInternships() {","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(JANESTREET, OPTIVER, CITADEL));","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"javinchua":49}}]

[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"# CampusConnect","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"[![Java CI Status](https://github.com/AY2324S1-CS2103T-T13-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T13-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"[![Markbind CI Status](https://github.com/AY2324S1-CS2103T-T13-2/tp/workflows/MarkBind%20Action/badge.svg)](https://github.com/AY2324S1-CS2103T-T13-2/tp/actions/workflows/docs.yml)","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T13-2/tp/graph/badge.svg?token\u003dV0VMEEZQIF)](https://codecov.io/gh/AY2324S1-CS2103T-T13-2/tp)","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"## Overview","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"**CampusConnect** is an address book specifically catered for students living on NUS campus.","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"With CampusConnect, you can stay organised, stay connected, and make your on-campus experience at NUS stress-free!","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"**CampusConnect** is:","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"* written in Java, in OOP fashion.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"* a desktop application that uses command-line interface (CLI) with fast, easy-to-use commands which make it ideal for the","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"  fast typist.","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"* documented for both users and developers. For the detailed documentation of this project, see the **[CampusConnect Product Website](https://ay2324s1-cs2103t-t13-2.github.io/tp/)**.","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"* optimised for CLI.","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"* a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"## Features","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"1. Keep track of various details of fellow campus residents","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"2. Receive reminders for fellow campus residents\u0027 birthdays","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"3. Mark specific contacts as emergency contacts","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"4. Search for fellow campus residents using expressive filters","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"## Acknowledgements","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"limjunxian1":20,"kokrui":7,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"run {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"    doFirst {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"        if (System.getProperty(\"os.name\").equals(\"Linux\")) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"            exclude \u0027**/ui/**\u0027","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jdk8\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":80,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"conradsoon"},"content":"    testImplementation \u0027org.testfx:testfx-core:4.0.16-alpha\u0027","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"conradsoon"},"content":"    testImplementation \u0027org.testfx:testfx-junit5:4.0.16-alpha\u0027","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"conradsoon":3,"kokrui":9,"lordidiot":5,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"### Calvin Fong","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"\u003cimg src\u003d\"images/lordidiot.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"[[github](https://github.com/lordidiot)]","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"[[portfolio](team/lordidiot.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"- Role: Team lead, Scheduling and tracking","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"### Wong Kok Rui","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"\u003cimg src\u003d\"images/kokrui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"[[github](http://github.com/kokrui)]","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"[[portfolio](team/kokrui.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"- Role: Code quality, Integration","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"### Nguyen Phu Hao","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"\u003cimg src\u003d\"images/vn-hao.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"[[github](http://github.com/vn-hao)]","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"[[portfolio](team/vn-hao.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"- Role: Testing","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"### Lim Jun Xian","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"\u003cimg src\u003d\"images/limjunxian1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"[[github](http://github.com/limjunxian1)]","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"[[portfolio](team/limjunxian1.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"- Role: Deliverables and deadlines","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"### Conrad Soon","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"conradsoon"},"content":"\u003cimg src\u003d\"images/conradsoon.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"conradsoon"},"content":"[[github](http://github.com/conradsoon)]","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"conradsoon"},"content":"[[portfolio](team/conradsoon.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"conradsoon"},"content":"- Role: Documentation","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"conradsoon":25,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"# CampusConnect Developer Guide","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"lordidiot"},"content":"### Notifications feature","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"lordidiot"},"content":"#### Implementation","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"lordidiot"},"content":"The notifications feature is centered around `Event` instances.","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"lordidiot"},"content":"`Event` can represent any type of event with a specific date and time.","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"lordidiot"},"content":"This could be a birthday, an upcoming meeting or a deadline.","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"lordidiot"},"content":"`Event` also encapsulates timings where a reminder should be created.","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"lordidiot"},"content":"On startup, `EventFactory#createEvents(model)` is used to generate `Event` instances from the initial state of the model.","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"lordidiot"},"content":"Any future events can be added to the data model as well during runtime.","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":173,"author":{"gitId":"lordidiot"},"content":"Three public methods for `Event` are important for its usage","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"lordidiot"},"content":"* `Event#addMember(Person)` — Adds a `Person` as associated with this event.","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"lordidiot"},"content":"* `Event#addReminder(Duration)` — Sets a reminder for the event one `Duration` before the time of the actual event. For example, if `Duration` is set to a day, the reminder will be a day in advance.","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"lordidiot"},"content":"* `Event#getNotificationAtTime(LocalDateTime)` — Check if any notifications should be generated based on a specific time, usually the current time should be passed as the parameter.","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"lordidiot"},"content":"Below is the class diagram for the `Event` class and it\u0027s interactions with the other classes.","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"lordidiot"},"content":"\u003cpuml src\u003d\"diagrams/notification-system/ClassDiagram.puml\" alt\u003d\"NotificationClassDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"lordidiot"},"content":"The startup sequence for creating initial events is given below as well.","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"lordidiot"},"content":"On a high level, the `MainApp#initEvents()` will use `EventFactory#createEvents(model)` to generate `Event` instances from the intial state of the model, then add all of these events to the model.","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"lordidiot"},"content":"\u003cpuml src\u003d\"diagrams/notification-system/InitEventsSequenceDiagram.puml\" alt\u003d\"InitEventsSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"lordidiot"},"content":"Based on the `Event` instances present in the data model, you can call `Model#getLatestNotifications(LocalDateTime)`, passing in the current datetime, in order to get a list of `Notification` instances representing notifications that should be displayed to the user.","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"lordidiot"},"content":"The UI system will make use of this API to check if any notifications should be displayed to the user at startup.","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"lordidiot"},"content":"The flow for the startup notifications is described by the following sequence diagram.","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"lordidiot"},"content":"\u003cpuml src\u003d\"diagrams/notification-system/StartupNotificationsSequenceDiagram.puml\" alt\u003d\"StartupNotificationsSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"lordidiot"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":196,"author":{"gitId":"lordidiot"},"content":"**Aspect: Generic design**","lastModifiedDate":"2023-10-24"},{"lineNumber":197,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"lordidiot"},"content":"A generic event system was created, even though CampusConnect only requires a specific Birthday notification system at the moment.","lastModifiedDate":"2023-10-24"},{"lineNumber":199,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":200,"author":{"gitId":"lordidiot"},"content":"* **Alternative 1 (current choice):** Generic event system.","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"lordidiot"},"content":"  * Pros: Extensible for future types of Events and Notifications beyond birthdays.","lastModifiedDate":"2023-10-24"},{"lineNumber":202,"author":{"gitId":"lordidiot"},"content":"  * Cons: More code required, and more indirection in code because of the generic nature.","lastModifiedDate":"2023-10-24"},{"lineNumber":203,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"lordidiot"},"content":"* **Alternative 2:** Birthday notification system.","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"lordidiot"},"content":"  * Pros: Simpler to implement, code will be more straightforward to understand as well.","lastModifiedDate":"2023-10-24"},{"lineNumber":206,"author":{"gitId":"lordidiot"},"content":"  * Cons: Any future ideas to implement new notifications and events will not benefit from the existing implementation of the birthday notification system.","lastModifiedDate":"2023-10-24"},{"lineNumber":207,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":208,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"limjunxian1"},"content":"### AddAlt feature","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"limjunxian1"},"content":"#### Implementation Details","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"limjunxian1"},"content":"The `addalt` feature involves creating a new `Person` object with additional contact details to replace the previous `Person` object.","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"limjunxian1"},"content":"This is done using the `AddAltPersonDescriptor` class; `AddAltPersonDescriptor` object stores the additional contact information to be added to the previous `Person` object.","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"limjunxian1"},"content":"As a result, the existing `Person` class in AB3\u0027s implementation is enhanced to have the capacity of containing more attributes.","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"limjunxian1"},"content":"Below is a class diagram on the `Person` class and the classes related to its attributes:","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"limjunxian1"},"content":"\u003cpuml src\u003d\"diagrams/PersonClassDiagram.puml\" alt\u003d\"PersonClassDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"limjunxian1"},"content":"The `Person` object is now composed of the following additional attributes due to the `addalt` feature:","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"limjunxian1"},"content":"* `Email`: The secondary email address of the contact.","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"limjunxian1"},"content":"* `Linkedin`: The linkedin of the contact.","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"limjunxian1"},"content":"* `Telegram`: The telegram handle of the contact.","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"limjunxian1"},"content":"* `Birthday`: The birthday of the contact.","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"limjunxian1"},"content":"The [**`java.util.Optional\u003cT\u003e`**](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Optional.html) class is utilised to encapsulate the optional logic of the above attributes.","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"limjunxian1"},"content":"To add these additional attributes into a `Person` object, an `INDEX` parameter, followed by the [prefixes](#prefix-summary) that represent the attributes needs to be specified for the `addalt` command.","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"limjunxian1"},"content":"`INDEX` represents the index number of the contact to be edited in the contact list.","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"limjunxian1"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"limjunxian1"},"content":"While all the fields are optional, at least one needs to be given to the `addalt` command.","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"limjunxian1"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"limjunxian1"},"content":"The flow for the `addalt` command is described by the following sequence diagram:","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"limjunxian1"},"content":"\u003cpuml src\u003d\"diagrams/AddAltSequenceDiagram.puml\" alt\u003d\"AddAltSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"limjunxian1"},"content":"#### Feature details","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"limjunxian1"},"content":"1. The application will validate the arguments supplied by the user; whether the `INDEX` provided is valid and each of the additional attribute input follows the pre-determined formats defined in their respective classes.","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"limjunxian1"},"content":"2. If any of the inputs fails the validation check, an error message is provided with details of the input error and prompts the user for a corrected input.","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"limjunxian1"},"content":"3. If all of the inputs pass the validation check, a new `Person` objected with the updated attributes is created and stored in the `AddressBook`.","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"limjunxian1"},"content":"#### Design Considerations","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"limjunxian1"},"content":"**Aspect: Generic design**","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"limjunxian1"},"content":"The additional attributes to be added into a `Person` object on top of the original AB3 attributes are encapsulated into their respective classes: `Linkedin`, `Telegram` and `Birthday`. These classes are implemented similarly to the other existing attributes of `Person`, but they are modified according to the respective input patterns that model the real world.","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"limjunxian1"},"content":"As these attributes are additional information for a `Person` object, every attribute has been made optional in the case when user only keys in several, but not all of the additional attributes into the command. However, the purpose of using this command only exists when users would like to add additional attributes to a `Person` in the contact list. Thus, the `addalt` command is designed to ensure that the user adds at least one of the additional attributes aforementioned.","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"limjunxian1"},"content":"As this command merely adds additional attributes to a `Person` object, this can be done by enhancing the `add` command.","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"limjunxian1"},"content":"* **Alternative 1 (current choice):** Create a separate command, `addalt`.","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"limjunxian1"},"content":"    * Pros:","lastModifiedDate":"2023-10-26"},{"lineNumber":258,"author":{"gitId":"limjunxian1"},"content":"        * Many cases of empty/*null* inputs in the optional fields need not be accounted for when saving the data and testing when a new `Person` is added by the `add` command.","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"limjunxian1"},"content":"    * Cons:","lastModifiedDate":"2023-10-26"},{"lineNumber":260,"author":{"gitId":"limjunxian1"},"content":"        * Inconveniences users as users have to key in two separate commands in order to add additional attributes of a `Person`.","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"limjunxian1"},"content":"* **Alternative 2:** Enhance the current `add` command.","lastModifiedDate":"2023-10-26"},{"lineNumber":262,"author":{"gitId":"limjunxian1"},"content":"    * Pros:","lastModifiedDate":"2023-10-26"},{"lineNumber":263,"author":{"gitId":"limjunxian1"},"content":"        * Improves the user\u0027s convenience by allowing them to add both compulsory and optional attributes to a new `Person` entry.","lastModifiedDate":"2023-10-26"},{"lineNumber":264,"author":{"gitId":"limjunxian1"},"content":"    * Cons:","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"limjunxian1"},"content":"        * Many cases of empty/*null* inputs in the optional fields have to be accounted for when saving the data and testing.","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"limjunxian1"},"content":"### Edit Feature","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"limjunxian1"},"content":"#### Implementation Details","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"limjunxian1"},"content":"The `edit` feature is similar to the implementation of [**`addalt`**](#addalt-feature); it involves creating a new `Person` object with edited contact details to replace the previous `Person` object.","lastModifiedDate":"2023-10-26"},{"lineNumber":272,"author":{"gitId":"limjunxian1"},"content":"This is done using the `EditPersonDescriptor` class; `EditPersonDescriptor` object stores the contact information to be updated to the previous `Person` object.","lastModifiedDate":"2023-10-26"},{"lineNumber":273,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":274,"author":{"gitId":"limjunxian1"},"content":"The `edit` command has similar input fields to the [**`addalt`**](#addalt-feature) command with the difference being that it is able to edit all the attributes of a `Person` object except:","lastModifiedDate":"2023-10-26"},{"lineNumber":275,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":276,"author":{"gitId":"limjunxian1"},"content":"* `Note`: The notes of the contact. Read [**`Notes feature`**](#notes-feature) for more details.","lastModifiedDate":"2023-10-26"},{"lineNumber":277,"author":{"gitId":"limjunxian1"},"content":"* `Avatar`: The profile picture of the contact. Read [**`Update photo feature`**](#update-photo-feature) for more details.","lastModifiedDate":"2023-10-26"},{"lineNumber":278,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"limjunxian1"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":280,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":281,"author":{"gitId":"limjunxian1"},"content":"While all the fields are optional, at least one needs to be given to the `edit` command.","lastModifiedDate":"2023-10-26"},{"lineNumber":282,"author":{"gitId":"limjunxian1"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":284,"author":{"gitId":"limjunxian1"},"content":"#### Feature details","lastModifiedDate":"2023-10-26"},{"lineNumber":285,"author":{"gitId":"limjunxian1"},"content":"1. Similar to [`addalt`](#addalt-feature), the application will validate the arguments supplied by the user; whether the `INDEX` provided is valid and each of `Person` attribute input follows the pre-determined formats defined in their respective classes. However, it also checks that the `edit` command does not update any empty additional attributes of `Person` and update `Person` object to have same primary and secondary email.","lastModifiedDate":"2023-10-26"},{"lineNumber":286,"author":{"gitId":"limjunxian1"},"content":"2. If an input fails the validation check, an error message is provided which details the error and prompts the user the course of action.","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"limjunxian1"},"content":"3. If the input passes the validation check, the application checks if the corresponding `Person` and the new `Person` object with the edited attributes is the same.","lastModifiedDate":"2023-10-26"},{"lineNumber":288,"author":{"gitId":"limjunxian1"},"content":"4. If the check fails, user will be prompted that current `edit` command does not update the `Person` object.","lastModifiedDate":"2023-10-26"},{"lineNumber":289,"author":{"gitId":"limjunxian1"},"content":"5. Otherwise, a new `Person` objected with the updated attributes is created and stored in the `AddressBook`.","lastModifiedDate":"2023-10-26"},{"lineNumber":290,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":291,"author":{"gitId":"limjunxian1"},"content":"The following activity diagram shows the logic of a user using the `edit` command:","lastModifiedDate":"2023-10-26"},{"lineNumber":292,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":293,"author":{"gitId":"limjunxian1"},"content":"\u003cpuml src\u003d\"diagrams/EditActivityDiagram.puml\" alt\u003d\"EditActivityDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":295,"author":{"gitId":"limjunxian1"},"content":"The flow for the `edit` command is described by the following sequence diagram:","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":297,"author":{"gitId":"limjunxian1"},"content":"\u003cpuml src\u003d\"diagrams/EditSequenceDiagram.puml\" alt\u003d\"EditSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":298,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":299,"author":{"gitId":"limjunxian1"},"content":"#### General Design Considerations","lastModifiedDate":"2023-10-26"},{"lineNumber":300,"author":{"gitId":"limjunxian1"},"content":"Since `edit` command updates attributes of a `Person` object, setting the values directly to the `Person` object could be another viable option.","lastModifiedDate":"2023-10-26"},{"lineNumber":301,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":302,"author":{"gitId":"limjunxian1"},"content":"* **Alternative 1 (Current choice):** Create a new `Person` object.","lastModifiedDate":"2023-10-26"},{"lineNumber":303,"author":{"gitId":"limjunxian1"},"content":"    * Pros:","lastModifiedDate":"2023-10-26"},{"lineNumber":304,"author":{"gitId":"limjunxian1"},"content":"        * Guarantees immutability of `Person` class, reducing possible bugs.","lastModifiedDate":"2023-10-26"},{"lineNumber":305,"author":{"gitId":"limjunxian1"},"content":"    * Cons:","lastModifiedDate":"2023-10-26"},{"lineNumber":306,"author":{"gitId":"limjunxian1"},"content":"        * Performance overhead; a `Person` object is always created even if for instance, only one attribute of `Person` object is changed.","lastModifiedDate":"2023-10-26"},{"lineNumber":307,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":308,"author":{"gitId":"limjunxian1"},"content":"* **Alternative 2:** Set the edited attributes to the existing `Person` object.","lastModifiedDate":"2023-10-26"},{"lineNumber":309,"author":{"gitId":"limjunxian1"},"content":"    * Pros:","lastModifiedDate":"2023-10-26"},{"lineNumber":310,"author":{"gitId":"limjunxian1"},"content":"        * Minimal performance overhead; less memory usage.","lastModifiedDate":"2023-10-26"},{"lineNumber":311,"author":{"gitId":"limjunxian1"},"content":"    * Cons:","lastModifiedDate":"2023-10-26"},{"lineNumber":312,"author":{"gitId":"limjunxian1"},"content":"        * More bug prone.","lastModifiedDate":"2023-10-26"},{"lineNumber":313,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":314,"author":{"gitId":"kokrui"},"content":"### Find feature","lastModifiedDate":"2023-10-26"},{"lineNumber":315,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":316,"author":{"gitId":"kokrui"},"content":"The find command feature allows users to locate specific Person instances within the application based on keywords provided. Users can input specific terms, and the system will filter and present Person instances that match the given keywords in either their name, address, email, phone number, or tags.","lastModifiedDate":"2023-10-26"},{"lineNumber":317,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":318,"author":{"gitId":"kokrui"},"content":"The find command is not just a simple string matching utility within our system. It is an advanced search mechanism that employs tokenization, parsing, and supports the evaluation of complex boolean expressions. This makes it an invaluable tool for users who want to execute intricate searches and filter results based on a combination of criteria.","lastModifiedDate":"2023-10-26"},{"lineNumber":319,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":320,"author":{"gitId":"kokrui"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":321,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":322,"author":{"gitId":"kokrui"},"content":"##### `FindCommand` and `FindCommandParser`","lastModifiedDate":"2023-10-26"},{"lineNumber":323,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":324,"author":{"gitId":"kokrui"},"content":"The heart of the Find command system is the combination of `FindCommand` and `FindCommandParser`. The latter is responsible for processing raw user input, tokenizing the search criteria using the `FindFilterStringTokenizer`, and subsequently parsing it with the `FindExpressionParser`. The end product is a `FindCommand` object that executes the search based on a `Predicate\u003cPerson\u003e` that checks all relevant fields of a `Person`.","lastModifiedDate":"2023-10-26"},{"lineNumber":325,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":326,"author":{"gitId":"kokrui"},"content":"Sequence Diagram for FindCommandParser:","lastModifiedDate":"2023-10-26"},{"lineNumber":327,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":328,"author":{"gitId":"kokrui"},"content":"\u003cpuml src\u003d\"diagrams/find-command/FindCommandParserSequenceDiagram.puml\" alt\u003d\"FindCommandParserSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":329,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":330,"author":{"gitId":"kokrui"},"content":"##### `FindFilterStringTokenizer`","lastModifiedDate":"2023-10-26"},{"lineNumber":331,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":332,"author":{"gitId":"kokrui"},"content":"The `FindFilterStringTokenizer` is tailored to break down the user\u0027s search criteria, a `String` into meaningful tokens which can later be parsed into a final `Predicate\u003cPerson\u003e`. This process includes recognizing individual terms (in the form of conditions of the form `PREFIX/KEYWORD`), Boolean operators (including `!`, `\u0026\u0026`, and `||`), and parentheses (`(` and `)`).","lastModifiedDate":"2023-10-26"},{"lineNumber":333,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":334,"author":{"gitId":"kokrui"},"content":"Class Diagram for FindFilterStringTokenizer:","lastModifiedDate":"2023-10-26"},{"lineNumber":335,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":336,"author":{"gitId":"kokrui"},"content":"\u003cpuml src\u003d\"diagrams/find-command/FindFilterStringTokenizerClassDiagram.puml\" alt\u003d\"FindFilterStringTokenizerClassDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":337,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":338,"author":{"gitId":"lordidiot"},"content":"##### `FindExpressionParser`","lastModifiedDate":"2023-10-31"},{"lineNumber":339,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":340,"author":{"gitId":"kokrui"},"content":"The `FindExpressionParser` ingests the tokens produced by the `FindFilterStringTokenizer` and interprets them, creating a singular complete `Predicate\u003cPerson\u003e` that\u0027s applied on the PersonList.","lastModifiedDate":"2023-10-26"},{"lineNumber":341,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":342,"author":{"gitId":"kokrui"},"content":"Class Diagram for FindExpressionParser:","lastModifiedDate":"2023-10-26"},{"lineNumber":343,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":344,"author":{"gitId":"kokrui"},"content":"\u003cpuml src\u003d\"diagrams/find-command/FindExpressionParserClassDiagram.puml\" alt\u003d\"FindExpressionParserClassDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":345,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":346,"author":{"gitId":"kokrui"},"content":"FindExpressionParser uses the recursive gradient descent algorithm to parse the tokens into a `Predicate\u003cPerson\u003e`.","lastModifiedDate":"2023-10-26"},{"lineNumber":347,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":348,"author":{"gitId":"kokrui"},"content":"Sequence Diagram for FindExpressionParser showing how a sample input is parsed using the recursive gradient descent algorithm:","lastModifiedDate":"2023-10-26"},{"lineNumber":349,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":350,"author":{"gitId":"kokrui"},"content":"\u003cpuml src\u003d\"diagrams/find-command/FindExpressionParserSequenceDiagram.puml\" alt\u003d\"FindExpressionParserSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":351,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":352,"author":{"gitId":"kokrui"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":353,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":354,"author":{"gitId":"kokrui"},"content":"**Aspect: Command Flexibility vs. Complexity**","lastModifiedDate":"2023-10-26"},{"lineNumber":355,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":356,"author":{"gitId":"kokrui"},"content":"* **Alternative 1 (current choice)**: Support boolean operations in `FindCommand`.","lastModifiedDate":"2023-10-26"},{"lineNumber":357,"author":{"gitId":"kokrui"},"content":"  * **Pros**: Provides powerful search capabilities.","lastModifiedDate":"2023-10-26"},{"lineNumber":358,"author":{"gitId":"kokrui"},"content":"  * **Cons**: Increases code complexity and potential for user input errors.","lastModifiedDate":"2023-10-26"},{"lineNumber":359,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":360,"author":{"gitId":"kokrui"},"content":"* **Alternative 2**: Only allow simple keyword-based searches.","lastModifiedDate":"2023-10-26"},{"lineNumber":361,"author":{"gitId":"kokrui"},"content":"  * **Pros**: Easier to implement and use.","lastModifiedDate":"2023-10-26"},{"lineNumber":362,"author":{"gitId":"kokrui"},"content":"  * **Cons**: Limits user\u0027s searching abilities.","lastModifiedDate":"2023-10-26"},{"lineNumber":363,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":364,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":365,"author":{"gitId":"kokrui"},"content":"**Aspect: Tokenizer library**","lastModifiedDate":"2023-10-26"},{"lineNumber":366,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":367,"author":{"gitId":"kokrui"},"content":"* **Alternative 1 (current choice):** Custom-built tokenizer.","lastModifiedDate":"2023-10-26"},{"lineNumber":368,"author":{"gitId":"kokrui"},"content":"  * **Pros:** Allows for more flexibility in terms of the syntax of the search criteria. Can handle our custom-defined terms, operators, and grouping symbols explicitly.","lastModifiedDate":"2023-10-26"},{"lineNumber":369,"author":{"gitId":"kokrui"},"content":"  * **Cons**: More code required, requires regular maintenance to adapt to new features or changes.","lastModifiedDate":"2023-10-26"},{"lineNumber":370,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":371,"author":{"gitId":"kokrui"},"content":"* **Alternative 2:** Use a third-party library.","lastModifiedDate":"2023-10-26"},{"lineNumber":372,"author":{"gitId":"kokrui"},"content":"  * **Pros:** Less code required, might be more robust and have additional features.","lastModifiedDate":"2023-10-26"},{"lineNumber":373,"author":{"gitId":"kokrui"},"content":"  * **Cons**: Less flexibility in terms of the syntax of the search criteria. May not be able to handle our custom-defined terms, operators, and grouping symbols explicitly. Might not cater explicitly to the specific requirements of the Find command. Requires integration efforts.","lastModifiedDate":"2023-10-26"},{"lineNumber":374,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":375,"author":{"gitId":"kokrui"},"content":"**Aspect: Tokenization Strategy**","lastModifiedDate":"2023-10-26"},{"lineNumber":376,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":377,"author":{"gitId":"kokrui"},"content":"* **Alternative 1 (current choice)**: Custom tokenizer.","lastModifiedDate":"2023-10-26"},{"lineNumber":378,"author":{"gitId":"kokrui"},"content":"  * **Pros**: Greater control and flexibility.","lastModifiedDate":"2023-10-26"},{"lineNumber":379,"author":{"gitId":"kokrui"},"content":"  * **Cons**: More complex to implement and maintain.","lastModifiedDate":"2023-10-26"},{"lineNumber":380,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":381,"author":{"gitId":"kokrui"},"content":"* **Alternative 2**: Regular expression-based tokenizer.","lastModifiedDate":"2023-10-26"},{"lineNumber":382,"author":{"gitId":"kokrui"},"content":"  * **Pros**: Can be more concise.","lastModifiedDate":"2023-10-26"},{"lineNumber":383,"author":{"gitId":"kokrui"},"content":"  * **Cons**: May not handle all edge cases or complexities.","lastModifiedDate":"2023-10-26"},{"lineNumber":384,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":385,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":386,"author":{"gitId":"kokrui"},"content":"**Aspect: Supported Logical Operators**","lastModifiedDate":"2023-10-26"},{"lineNumber":387,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":388,"author":{"gitId":"kokrui"},"content":"* **Alternative 1 (current choice):** Use standard boolean operators (`\u0026\u0026`, `||`, `!`).","lastModifiedDate":"2023-10-26"},{"lineNumber":389,"author":{"gitId":"kokrui"},"content":"  * **Pros:** Universally recognized and understood.","lastModifiedDate":"2023-10-26"},{"lineNumber":390,"author":{"gitId":"kokrui"},"content":"  * **Cons**: Limited to boolean logic.","lastModifiedDate":"2023-10-26"},{"lineNumber":391,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":392,"author":{"gitId":"kokrui"},"content":"* **Alternative 2:** Support more advanced operators or functions (e.g., nearness search, regex patterns).","lastModifiedDate":"2023-10-26"},{"lineNumber":393,"author":{"gitId":"kokrui"},"content":"  * **Pros:** Provides more power and flexibility to users.","lastModifiedDate":"2023-10-26"},{"lineNumber":394,"author":{"gitId":"kokrui"},"content":"  * **Cons**: Significantly complicates parsing and understanding for users.","lastModifiedDate":"2023-10-26"},{"lineNumber":395,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":396,"author":{"gitId":"kokrui"},"content":"**Aspect: Handling Invalid Inputs**","lastModifiedDate":"2023-10-26"},{"lineNumber":397,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":398,"author":{"gitId":"kokrui"},"content":"* **Alternative 1 (current choice)**: Throw an exception and inform the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":399,"author":{"gitId":"kokrui"},"content":"  * **Pros**: User is made aware of mistakes immediately.","lastModifiedDate":"2023-10-26"},{"lineNumber":400,"author":{"gitId":"kokrui"},"content":"  * **Cons**: Stops the command processing.","lastModifiedDate":"2023-10-26"},{"lineNumber":401,"author":{"gitId":"kokrui"},"content":"* **Alternative 2**: Silently ignore or correct invalid inputs.","lastModifiedDate":"2023-10-26"},{"lineNumber":402,"author":{"gitId":"kokrui"},"content":"  * **Pros**: Smoother user experience.","lastModifiedDate":"2023-10-26"},{"lineNumber":403,"author":{"gitId":"kokrui"},"content":"  * **Cons**: User might not realize they made a mistake.","lastModifiedDate":"2023-10-26"},{"lineNumber":404,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":405,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":435,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":442,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":445,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":457,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":463,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"conradsoon"},"content":"### Notes feature","lastModifiedDate":"2023-10-25"},{"lineNumber":495,"author":{"gitId":"conradsoon"},"content":"#### Implementation","lastModifiedDate":"2023-11-01"},{"lineNumber":496,"author":{"gitId":"conradsoon"},"content":"##### Commmand logic","lastModifiedDate":"2023-11-01"},{"lineNumber":497,"author":{"gitId":"conradsoon"},"content":"The `AddNoteCommand` feature allows users to add personalized notes to a specific contact in the Address Book. This functionality is essential for users who wish to record additional information about their contacts.","lastModifiedDate":"2023-11-01"},{"lineNumber":498,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":499,"author":{"gitId":"conradsoon"},"content":"Three key classes are involved in this implementation:","lastModifiedDate":"2023-11-01"},{"lineNumber":500,"author":{"gitId":"conradsoon"},"content":"- `AddNoteCommand`: Handles the logic for adding the note.","lastModifiedDate":"2023-11-01"},{"lineNumber":501,"author":{"gitId":"conradsoon"},"content":"- `Index`: Represents the index of the person in the filtered person list to whom the note will be added.","lastModifiedDate":"2023-11-01"},{"lineNumber":502,"author":{"gitId":"conradsoon"},"content":"- `Note`: Represents the content of the note to be added.","lastModifiedDate":"2023-11-01"},{"lineNumber":503,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":504,"author":{"gitId":"conradsoon"},"content":"Notes are stored as an `ObservableList\u003cNote\u003e` within the Person model. This is done to simplify storage and retrieval of notes, as well as to enable the use of JavaFX components to display the notes with the `Observer` pattern.","lastModifiedDate":"2023-11-01"},{"lineNumber":505,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":506,"author":{"gitId":"conradsoon"},"content":"The `Note` class is a simple wrapper class that contains a `String` representing the content of the note.","lastModifiedDate":"2023-11-01"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":508,"author":{"gitId":"conradsoon"},"content":"When a user inputs a command to add a note, the `NoteCommandParser` parses the user input and creates a new `AddNoteCommand` object. This object is then executed, which results in the addition of the specified note to the targeted contact.","lastModifiedDate":"2023-11-01"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":511,"author":{"gitId":"conradsoon"},"content":"The process can be summarized in the following logic flow:","lastModifiedDate":"2023-11-01"},{"lineNumber":512,"author":{"gitId":"conradsoon"},"content":"\u003cpuml src\u003d\"diagrams/notes/NotesCommandSequenceDiagram.puml\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":513,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":514,"author":{"gitId":"conradsoon"},"content":"1. Parse user input to create a `AddNoteCommand` object.","lastModifiedDate":"2023-11-01"},{"lineNumber":515,"author":{"gitId":"conradsoon"},"content":"2. Execute the `AddNoteCommand`, which involves:","lastModifiedDate":"2023-11-01"},{"lineNumber":516,"author":{"gitId":"conradsoon"},"content":"    - Retrieving the list of all persons.","lastModifiedDate":"2023-11-01"},{"lineNumber":517,"author":{"gitId":"conradsoon"},"content":"    - Validating the provided index.","lastModifiedDate":"2023-11-01"},{"lineNumber":518,"author":{"gitId":"conradsoon"},"content":"    - Adding the note to the person at the specified index.","lastModifiedDate":"2023-11-01"},{"lineNumber":519,"author":{"gitId":"conradsoon"},"content":"3. Return a `CommandResult` indicating the outcome.","lastModifiedDate":"2023-11-01"},{"lineNumber":520,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":521,"author":{"gitId":"conradsoon"},"content":"Key methods in this implementation include:","lastModifiedDate":"2023-11-01"},{"lineNumber":522,"author":{"gitId":"conradsoon"},"content":"- `AddNoteCommand(Index index, Note note)`: Constructor to initialize the command.","lastModifiedDate":"2023-11-01"},{"lineNumber":523,"author":{"gitId":"conradsoon"},"content":"- `execute(Model model)`: Adds the note and updates the model.","lastModifiedDate":"2023-11-01"},{"lineNumber":524,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":525,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":526,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":527,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":528,"author":{"gitId":"conradsoon"},"content":"##### UI Logic","lastModifiedDate":"2023-11-01"},{"lineNumber":529,"author":{"gitId":"conradsoon"},"content":"The Notes feature also includes a user interface component to allow users to interactively add, view, and remove notes from contacts.","lastModifiedDate":"2023-11-01"},{"lineNumber":530,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":531,"author":{"gitId":"conradsoon"},"content":"The user interface for the Notes feature is implemented using JavaFX components. The main components include:","lastModifiedDate":"2023-11-01"},{"lineNumber":532,"author":{"gitId":"conradsoon"},"content":"- `PersonCard`: Displays individual person\u0027s details and includes a button for accessing notes.","lastModifiedDate":"2023-11-01"},{"lineNumber":533,"author":{"gitId":"conradsoon"},"content":"- `NotesWindow`: A pop-up window that displays all notes associated with a person.","lastModifiedDate":"2023-11-01"},{"lineNumber":534,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":535,"author":{"gitId":"conradsoon"},"content":"The `PersonCard` component includes a button (`notesButton`) that, when clicked, triggers the `handleNotesButtonClick` method in the controller. This method creates and shows a new `NotesWindow`.","lastModifiedDate":"2023-11-01"},{"lineNumber":536,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":537,"author":{"gitId":"conradsoon"},"content":"The `NotesWindow` is responsible for displaying the list of notes and is populated using a `ListView` component. The controller for `NotesWindow` handles the population of this list and the closing of the window. `NotesWindow` has a button (`closeButton`) that, when clicked, triggers the `handleCloseButtonClick` method in the controller. This method closes the window. The `NotesWindow` is also closed when the user presses the `ESC` key.","lastModifiedDate":"2023-11-01"},{"lineNumber":538,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":539,"author":{"gitId":"conradsoon"},"content":"#### Design considerations","lastModifiedDate":"2023-11-01"},{"lineNumber":540,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":541,"author":{"gitId":"conradsoon"},"content":"**Aspect: Integration with Existing Data Model**","lastModifiedDate":"2023-11-01"},{"lineNumber":542,"author":{"gitId":"conradsoon"},"content":"* **Alternative 1 (current choice):** Leverage existing `Person` class and `Model` interface.","lastModifiedDate":"2023-11-01"},{"lineNumber":543,"author":{"gitId":"conradsoon"},"content":"    * Pros: Utilizes existing data structures and methods, ensuring consistency and potentially reducing the likelihood of bugs.","lastModifiedDate":"2023-11-01"},{"lineNumber":544,"author":{"gitId":"conradsoon"},"content":"    * Cons: The `Person` class becomes more complex as more features are added.","lastModifiedDate":"2023-11-01"},{"lineNumber":545,"author":{"gitId":"conradsoon"},"content":"* **Alternative 2:** Create a separate system for managing notes.","lastModifiedDate":"2023-11-01"},{"lineNumber":546,"author":{"gitId":"conradsoon"},"content":"    * Pros: Keeps the `Person` class simpler and more focused on contact information.","lastModifiedDate":"2023-11-01"},{"lineNumber":547,"author":{"gitId":"conradsoon"},"content":"    * Cons: May result in duplication of effort and increased complexity in ensuring consistency between the contact and note systems.","lastModifiedDate":"2023-11-01"},{"lineNumber":548,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":549,"author":{"gitId":"conradsoon"},"content":"Choosing alternative 1 aligns with the principle of maximizing code reuse and maintaining consistency across the application, even though it slightly increases the complexity of the `Person` class.","lastModifiedDate":"2023-11-01"},{"lineNumber":550,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":551,"author":{"gitId":"conradsoon"},"content":"**Aspect: User Interaction and Experience**","lastModifiedDate":"2023-11-01"},{"lineNumber":552,"author":{"gitId":"conradsoon"},"content":"* **Alternative 1 (current choice):** Pop-up window for notes.","lastModifiedDate":"2023-11-01"},{"lineNumber":553,"author":{"gitId":"conradsoon"},"content":"    * Pros: Provides a clear and focused view for user to manage notes.","lastModifiedDate":"2023-11-01"},{"lineNumber":554,"author":{"gitId":"conradsoon"},"content":"    * Cons: Additional window management required; may be less convenient for quick interactions.","lastModifiedDate":"2023-11-01"},{"lineNumber":555,"author":{"gitId":"conradsoon"},"content":"* **Alternative 2:** Inline editing within the `PersonCard`.","lastModifiedDate":"2023-11-01"},{"lineNumber":556,"author":{"gitId":"conradsoon"},"content":"    * Pros: Potentially more convenient for quick additions or edits.","lastModifiedDate":"2023-11-01"},{"lineNumber":557,"author":{"gitId":"conradsoon"},"content":"    * Cons: Could clutter the interface and distract from the main contact information.","lastModifiedDate":"2023-11-01"},{"lineNumber":558,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":559,"author":{"gitId":"conradsoon"},"content":"Choosing alternative 1 provides a balance between functionality and user interface simplicity, ensuring that the notes feature does not overwhelm the main contact viewing experience.","lastModifiedDate":"2023-11-01"},{"lineNumber":560,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":561,"author":{"gitId":"conradsoon"},"content":"#### Testing","lastModifiedDate":"2023-11-01"},{"lineNumber":562,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":563,"author":{"gitId":"conradsoon"},"content":"The UI components are tested using TestFX to ensure that they behave as expected. Test cases include verifying the display of notes, interaction responses, and the proper functioning of the close button. Ensuring thorough testing is vital for maintaining the reliability and user-friendliness of the application.","lastModifiedDate":"2023-11-01"},{"lineNumber":564,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":565,"author":{"gitId":"conradsoon"},"content":"Take note that UI tests have to be run on the `JavaFX` thread, so UI tests have to extend `ApplicationTest` from `TestFX` to run properly.","lastModifiedDate":"2023-11-01"},{"lineNumber":566,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":567,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":572,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":573,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":574,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":575,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"kokrui"},"content":"* is an NUS student staying on campus","lastModifiedDate":"2023-10-04"},{"lineNumber":586,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":590,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"| Priority | As a …​                          | I want to …​                                                                                                                        | So that I can…​                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"limjunxian1"},"content":"|----------|----------------------------------|-------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------|","lastModifiedDate":"2023-10-04"},{"lineNumber":601,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | user                             | add new contacts with basic contact information                                                                                     | keep track of the people I know.                                |","lastModifiedDate":"2023-10-04"},{"lineNumber":602,"author":{"gitId":"lordidiot"},"content":"| `* * *`  | user                             | add alternative contact information such as telegram, email and linkedin | connect with friends through my preferred channels |","lastModifiedDate":"2023-10-31"},{"lineNumber":603,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | user                             | delete contacts                                                                                                                     | reduce clutter and keep my contact list organised.              |","lastModifiedDate":"2023-10-04"},{"lineNumber":604,"author":{"gitId":"lordidiot"},"content":"| `* * *`  | user                             | add notes associated with my contacts | remember important information regarding my contacts. |","lastModifiedDate":"2023-10-31"},{"lineNumber":605,"author":{"gitId":"lordidiot"},"content":"| `* * *`  | user                             | delete notes associated with my contacts | remove unwanted information. |","lastModifiedDate":"2023-10-31"},{"lineNumber":606,"author":{"gitId":"lordidiot"},"content":"| `* *`  | forgetful user                   | update photos for my contacts                                                                                                       | visually remember them.                                         |","lastModifiedDate":"2023-10-31"},{"lineNumber":607,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | forgetful user                   | add the birthday of my contact                                                                                                      | keep track and remember my contacts’ birthdays.                 |","lastModifiedDate":"2023-10-04"},{"lineNumber":608,"author":{"gitId":"lordidiot"},"content":"| `* * *`  | forgetful user                   | receive a notification when it is the day before my contact’s birthday                                                                      | remember to celebrate his/her birthday.                         |","lastModifiedDate":"2023-10-31"},{"lineNumber":609,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | user                             | opt out of receiving notifications                                                                                                  | keep myself from being distracted by the notifications.         |","lastModifiedDate":"2023-10-04"},{"lineNumber":610,"author":{"gitId":"lordidiot"},"content":"| `* * *`  | user                             | record money owed to a contact | remember to settle the debt.         |","lastModifiedDate":"2023-10-31"},{"lineNumber":611,"author":{"gitId":"lordidiot"},"content":"| `* * *`  | user                             | record money owed by a contact | remember to collect the money.         |","lastModifiedDate":"2023-10-31"},{"lineNumber":612,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | user                             | search through my contacts based on their respective contact information                                                            | quickly access the information required.                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":613,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | user                             | search my contacts by name                                                                                                          | quickly find a person without scrolling through my entire list. |","lastModifiedDate":"2023-10-04"},{"lineNumber":614,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | user                             | search my contacts by phone number                                                                                                  | identify who is calling me from an unfamiliar number.           |","lastModifiedDate":"2023-10-04"},{"lineNumber":615,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | international in-campus resident | add Singapore’s emergency contact details                                                                                           | access them quickly in urgent situations.                       |","lastModifiedDate":"2023-10-04"},{"lineNumber":616,"author":{"gitId":"conradsoon"},"content":"| `* * *`  | in-campus resident               | add campus specific information to my contacts, in particular, a tag called RA (Residential Assistant) and SOS (Security Officer)   | quickly reach out to them when required.                        |","lastModifiedDate":"2023-11-01"},{"lineNumber":617,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | on-campus student                | quickly list the emergency contacts I have previously registered                                                                    | contact them in an emergency.                                   |","lastModifiedDate":"2023-10-04"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"limjunxian1"},"content":"(For all use cases below, the **System** is `CampusConnect` and the **Actor** is a `NUS student who stays in campus`, unless specified otherwise)","lastModifiedDate":"2023-10-04"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"limjunxian1"},"content":"**Use case: UC1- Opt out notifications**","lastModifiedDate":"2023-10-04"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"limjunxian1"},"content":"1. User requests to opt out from receiving notifications.","lastModifiedDate":"2023-10-04"},{"lineNumber":629,"author":{"gitId":"limjunxian1"},"content":"2. System requests for confirmation.","lastModifiedDate":"2023-10-04"},{"lineNumber":630,"author":{"gitId":"limjunxian1"},"content":"3. User confirms.","lastModifiedDate":"2023-10-04"},{"lineNumber":631,"author":{"gitId":"limjunxian1"},"content":"4. System opts out the user from receiving notifications. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":632,"author":{"gitId":"limjunxian1"},"content":"Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":633,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":634,"author":{"gitId":"limjunxian1"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":635,"author":{"gitId":"limjunxian1"},"content":"   * 1a. System detects an error in data entered.","lastModifiedDate":"2023-10-04"},{"lineNumber":636,"author":{"gitId":"limjunxian1"},"content":"     * 1a1. System shows the correct format for request.","lastModifiedDate":"2023-10-04"},{"lineNumber":637,"author":{"gitId":"limjunxian1"},"content":"     * 1a2. User enters a new opt out request.","lastModifiedDate":"2023-10-04"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"limjunxian1"},"content":"     Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":640,"author":{"gitId":"limjunxian1"},"content":"     Use case resumes from step 4.","lastModifiedDate":"2023-10-04"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"limjunxian1"},"content":"**Use case: UC2 - List contacts**","lastModifiedDate":"2023-10-04"},{"lineNumber":643,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":644,"author":{"gitId":"limjunxian1"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":645,"author":{"gitId":"limjunxian1"},"content":"1. User requests list all contacts.","lastModifiedDate":"2023-10-04"},{"lineNumber":646,"author":{"gitId":"limjunxian1"},"content":"2. System shows a list of all contacts. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":647,"author":{"gitId":"limjunxian1"},"content":"Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":649,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"limjunxian1"},"content":"* 1a. System shows an empty contact list.","lastModifiedDate":"2023-10-04"},{"lineNumber":651,"author":{"gitId":"limjunxian1"},"content":"Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":652,"author":{"gitId":"limjunxian1"},"content":"* 2a. System detects an invalid index entered.","lastModifiedDate":"2023-10-04"},{"lineNumber":653,"author":{"gitId":"limjunxian1"},"content":"  * 2a1. System shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":654,"author":{"gitId":"limjunxian1"},"content":"  * 2a2. User enters a new delete request. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":655,"author":{"gitId":"limjunxian1"},"content":"  Steps 2a1- 2a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":656,"author":{"gitId":"limjunxian1"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2023-10-04"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"conradsoon"},"content":"**Use case: UC3 - Delete contact**","lastModifiedDate":"2023-11-01"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"limjunxian1"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":661,"author":{"gitId":"limjunxian1"},"content":"1. User \u003cins\u003elists all contacts (UC2).\u003c/ins\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":662,"author":{"gitId":"limjunxian1"},"content":"2. User enters an index to delete a contact from the system.","lastModifiedDate":"2023-10-04"},{"lineNumber":663,"author":{"gitId":"limjunxian1"},"content":"3. System deletes contact inside its system. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":664,"author":{"gitId":"limjunxian1"},"content":"Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":666,"author":{"gitId":"limjunxian1"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":667,"author":{"gitId":"limjunxian1"},"content":"* 1a. System shows an empty contact list.","lastModifiedDate":"2023-10-04"},{"lineNumber":668,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"limjunxian1"},"content":"* 2a. System detects an invalid index entered.","lastModifiedDate":"2023-10-04"},{"lineNumber":670,"author":{"gitId":"limjunxian1"},"content":"  * 2a1. System shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":671,"author":{"gitId":"limjunxian1"},"content":"  * 2a2. User enters a new delete request. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":672,"author":{"gitId":"limjunxian1"},"content":"  Steps 2a1- 2a2 are repeated until the data entered are correct.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":673,"author":{"gitId":"limjunxian1"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2023-10-04"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"limjunxian1"},"content":"**Use Case UC5: Add emergency contact**","lastModifiedDate":"2023-10-04"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"limjunxian1"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":678,"author":{"gitId":"limjunxian1"},"content":"1. User \u003cins\u003elists all contacts (UC2).\u003c/ins\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":679,"author":{"gitId":"limjunxian1"},"content":"2. User adds a contact to the emergency contact list.","lastModifiedDate":"2023-10-04"},{"lineNumber":680,"author":{"gitId":"limjunxian1"},"content":"3. System adds the contact into the emergency contact list. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":681,"author":{"gitId":"limjunxian1"},"content":"Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":683,"author":{"gitId":"limjunxian1"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":684,"author":{"gitId":"limjunxian1"},"content":"* 1a. System detects that the tag given to the contact is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":685,"author":{"gitId":"limjunxian1"},"content":"  * 1a1. System shows the valid tags for input.","lastModifiedDate":"2023-10-04"},{"lineNumber":686,"author":{"gitId":"limjunxian1"},"content":"  * 1a2. User enters a new add emergency contact request. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":687,"author":{"gitId":"limjunxian1"},"content":"  Steps 1a1- 1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":688,"author":{"gitId":"limjunxian1"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2023-10-04"},{"lineNumber":689,"author":{"gitId":"limjunxian1"},"content":"* 1b. System detects an invalid index entered.","lastModifiedDate":"2023-10-04"},{"lineNumber":690,"author":{"gitId":"limjunxian1"},"content":"  * 1b1. System shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":691,"author":{"gitId":"limjunxian1"},"content":"  * 1b2. User enters a new delete request. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":692,"author":{"gitId":"limjunxian1"},"content":"  Steps 1b1- 1b2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":693,"author":{"gitId":"limjunxian1"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2023-10-04"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"limjunxian1"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2023-10-04"},{"lineNumber":700,"author":{"gitId":"limjunxian1"},"content":"2. Able to hold up to 1000 contacts without a compromise in performance.","lastModifiedDate":"2023-10-04"},{"lineNumber":701,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"limjunxian1"},"content":"4. Should respond within 1 second for any command the user inputs","lastModifiedDate":"2023-10-04"},{"lineNumber":703,"author":{"gitId":"limjunxian1"},"content":"5. Should be easy to use and navigate for the users.","lastModifiedDate":"2023-10-04"},{"lineNumber":704,"author":{"gitId":"limjunxian1"},"content":"6. Should be able to accommodate growth and expansion. It should be easy to add new features and functionalities as needed. ","lastModifiedDate":"2023-10-04"},{"lineNumber":705,"author":{"gitId":"limjunxian1"},"content":"7. Should be easy to maintain and update through a clear and well-documented architecture, and it should be easy to troubleshoot and fix problems should they arise. ","lastModifiedDate":"2023-10-04"},{"lineNumber":706,"author":{"gitId":"limjunxian1"},"content":"8. Data stored should be persistent until removal by the user, and all contact details should be secure. ","lastModifiedDate":"2023-10-04"},{"lineNumber":707,"author":{"gitId":"limjunxian1"},"content":"9. The code should be well-organised and well-documented to ensure ease of maintenance and debugging. ","lastModifiedDate":"2023-10-04"},{"lineNumber":708,"author":{"gitId":"limjunxian1"},"content":"10. Should provide clear and easily accessible help and documentation, including FAQs and tutorials, to assist the user in using the platform effectively. ","lastModifiedDate":"2023-10-04"},{"lineNumber":709,"author":{"gitId":"limjunxian1"},"content":"11. Should be designed to prevent errors and provide clear, actionable error messages if errors occur, so that users can correct any issues.","lastModifiedDate":"2023-10-04"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":711,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"limjunxian1"},"content":"### Prefix summary","lastModifiedDate":"2023-10-26"},{"lineNumber":717,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":718,"author":{"gitId":"limjunxian1"},"content":"| Prefix | Meaning                        | Example                          |","lastModifiedDate":"2023-10-26"},{"lineNumber":719,"author":{"gitId":"limjunxian1"},"content":"|--------|--------------------------------|----------------------------------|","lastModifiedDate":"2023-10-26"},{"lineNumber":720,"author":{"gitId":"limjunxian1"},"content":"| n/     | Name of contact                | `n/John Doe`                     |","lastModifiedDate":"2023-10-26"},{"lineNumber":721,"author":{"gitId":"limjunxian1"},"content":"| p/     | Phone number of contact        | `p/98765432`                     |","lastModifiedDate":"2023-10-26"},{"lineNumber":722,"author":{"gitId":"limjunxian1"},"content":"| e/     | Email of contact               | `e/johndoe@gmail.com`            |","lastModifiedDate":"2023-10-26"},{"lineNumber":723,"author":{"gitId":"limjunxian1"},"content":"| a/     | Address of contact             | `a/16 Bukit Timah Road, S156213` |","lastModifiedDate":"2023-10-26"},{"lineNumber":724,"author":{"gitId":"lordidiot"},"content":"| t/     | Tags of contact                | `t/friend`                       |","lastModifiedDate":"2023-10-31"},{"lineNumber":725,"author":{"gitId":"limjunxian1"},"content":"| li/    | Linkedin of contact            | `li/john-doe`                    |","lastModifiedDate":"2023-10-26"},{"lineNumber":726,"author":{"gitId":"limjunxian1"},"content":"| tg/    | Telegram handle of contact     | `tg/@johndoe`                    |","lastModifiedDate":"2023-10-26"},{"lineNumber":727,"author":{"gitId":"limjunxian1"},"content":"| e2/    | Secondary email of contact     | `e2/johndoe@hotmail.com`         |","lastModifiedDate":"2023-10-26"},{"lineNumber":728,"author":{"gitId":"limjunxian1"},"content":"| b/     | Birthday of contact            | `b/23/10`                        |","lastModifiedDate":"2023-10-26"},{"lineNumber":729,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":730,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":738,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":739,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"limjunxian1":195,"conradsoon":72,"kokrui":92,"lordidiot":57,"-":367}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"# CampusConnect User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"___Empowering connections in the NUS community is just a few keystrokes away!___","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"**CampusConnect** is a desktop application built for **NUS students** living on campus to help them **stay organised**, **stay connected**, and **make the on-campus experience at NUS stress-free**. It is **optimised for use** via **Command Line Interface (CLI)** while benefiting from a **Graphical User Interface (GUI)**.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"Here is an **overview** of how CampusConnect can enhance your campus experience:","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"- Store and edit contact profiles of your friends","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"- Receive timely notifications to celebrate your friends\u0027 birthdays","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"- Tracks payments between you and your friends","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"## Using this Guide","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"This user guide shows you how to get started with using CampusConnect -- it has easy-to-understand explanations and examples to help you grasp its various features. ","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"### Who is this guide for?","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"Our guide is catered to CampusConnect users of all experiences! Here\u0027s a quick overview of who this guide is for, and how you can best use the guide:","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"| If you are... | You should... |","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"| :-----------: | :-----------: |","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"| New to CampusConnect | Read the **[Quick Start](#quick-start)** below! |","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"| An existing user | Skip to the **[Command Summary](#command-summary)** for a quick reference, or read through our **[Features](#features)** for a deeper look at each feature! |","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"| Interested in comprehensive technical details | Read our **[Developer Guide](DeveloperGuide.md)**, which is separate from this User Guide! |","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"### Visual Components","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"Our guide uses **visual components** to highlight key information for your convenience. Here\u0027s a quick overview of what each component means:","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"\u003cdiv style\u003d\"display: grid; grid-template-columns: 25% 75%; grid-template-rows: repeat(5, auto);\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"    \u003cdiv style\u003d\"font-size: 1.5em; display: flex; align-items: center;\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"       \u003col start\u003d\"1\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"        \u003cli\u003eExamples\u003c/li\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"      \u003c/ol\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"    \u003cdiv\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"        \u003cbox theme\u003d\"info\" icon\u003d\":fa-solid-magnifying-glass:\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"**Example usages** of a feature will be contained in a **light blue box** with this **magnifying glass icon** :fa-solid-magnifying-glass:. These examples will show you how a feature works, and will include sample commands that you can try out yourself!","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"        \u003c/box\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"    \u003cdiv style\u003d\"font-size: 1.5em; display: flex; align-items: center;\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"        \u003col start\u003d\"2\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"            \u003cli\u003eCommand Syntax Tables\u003c/li\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"        \u003c/ol\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"    \u003cdiv\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"        \u003cbr\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"        \u003cpanel header\u003d\":fa-solid-book: **Command Parameter / Syntax Tables**\" type\u003d\"secondary\" expanded no-close\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"Large tables describing the **syntax or parameters** of **parameter-heavy commands**, or the **attributes of large models**, will be contained in a **collapsible grey panel** like this one with a **book icon** :fa-solid-book:.","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"| Sample | Table |","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"| ------ | ----- |","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"| Sample | Table Data |","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"| Sample 2 | Table Data 2 |","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"These tables will provide a quick reference on the meanings and usage of each parameter in commands which support many such parameters, or the attributes of large and complex models, such as our [Person model](#person-model).","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"PDF Users will always see these panels expanded, but users of the web version of this guide can click on the panel header to collapse (and then re-expand) the panel if the information is no longer necessary.","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"        \u003c/panel\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"        \u003cbr\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"    \u003cdiv style\u003d\"font-size: 1.5em; display: flex; align-items: center;\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"        \u003col start\u003d\"3\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"            \u003cli\u003eWarnings / Error Cases\u003c/li\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"        \u003c/ol\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"    \u003cdiv\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"        \u003cbox type\u003d\"warning\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"**Warnings / Error Cases** for features will be shown in a **yellow box** with this **exclamation mark icon** :fa-solid-exclamation: . These clarify cases which will are expected to display errors to users, or explain enhancements that will be implemented in future releases of CampusConnect.","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"All planned enhancements will also be listed in the [Planned Enhancements / Known Issues](#planned-enhancements-known-issues) section near the end of the guide.","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"        \u003c/box\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"        \u003cbr\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"    \u003cdiv style\u003d\"font-size: 1.5em; display: flex; align-items: center;\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"        \u003col start\u003d\"4\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"            \u003cli\u003eTips\u003c/li\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"        \u003c/ol\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"    \u003cdiv\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"        \u003cbox theme\u003d\"primary\" icon\u003d\":fa-solid-lightbulb:\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"**Tips** which provide useful additional information about a feature will be contained in a **darker blue box** with this **lightbulb icon** :fa-solid-lightbulb:. These tips aren\u0027t required to get through basic functionality of our features, but will help you get the most out of CampusConnect!","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"        \u003c/box\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"---","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"limjunxian1"},"content":"# Table of Contents","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"lordidiot"},"content":"1. [Quick Start](#quick-start)","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"lordidiot"},"content":"2. [Features](#features)","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"lordidiot"},"content":"   - [Manage Contacts](#manage-contacts)","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"lordidiot"},"content":"     - [Add contact: `add`](#add-contact-add)","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"lordidiot"},"content":"     - [Add alternative information to contact: `addalt`](#add-alternative-information-to-contact-addalt)","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"lordidiot"},"content":"     - [Edit contact information: `edit`](#edit-contact-information-edit)","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"lordidiot"},"content":"     - [Update contact\u0027s photo: `updatephoto`](#update-contacts-photo-updatephoto)","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"lordidiot"},"content":"     - [List all contacts: `list`](#list-all-contacts-list)","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"lordidiot"},"content":"     - [Delete contact: `delete`](#delete-contact-delete)","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"lordidiot"},"content":"   - [Notes](#notes)","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"lordidiot"},"content":"   - [Notifications](#notifications)","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"lordidiot"},"content":"     - [Birthday notifications](#birthday-notifications)","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"lordidiot"},"content":"   - [Payments](#payments)","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"lordidiot"},"content":"   - [Find Contacts](#find-contacts)","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"lordidiot"},"content":"     - [Basic Filtering](#basic-filtering)","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"lordidiot"},"content":"     - [Advanced Filtering](#advanced-filtering)","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"lordidiot"},"content":"3. [FAQ](#faq)","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"lordidiot"},"content":"4. [Planned Enhancements / Known Issues](#planned-enhancements--known-issues)","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"lordidiot"},"content":"5. [Command summary](#command-summary)","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"kokrui"},"content":"# Quick Start","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"kokrui"},"content":"2. Download the latest `CampusConnect.jar` from [here](https://github.com/AY2324S1-CS2103T-T13-2/tp/releases).","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"kokrui"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"kokrui"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar CampusConnect.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"kokrui"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"kokrui"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to CampusConnect.","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"kokrui"},"content":"   * `add n/Jane Doe p/98765433 e/janed@example.com a/Jane street, block 123, #01-01 t/floorball t/suitemate` : Adds a contact named `Jane Doe` to CampusConnect who is tagged with the `floorball` and `suitemate` tags.","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"kokrui"},"content":"   * `optout notify birthdays` : Opts out from birthday notifications.","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"kokrui"},"content":"   * `find name/Doe` : Finds all contacts who have \"Doe\" in their name.","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"kokrui"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-10-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"kokrui"},"content":"# Features","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"limjunxian1"},"content":"* Items in square brackets are optional, ___with `addalt` as an exception. (Refer to [Add alternative information to contact](#add-alternative-information-to-contact) under Features)___\u003cbr\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":187,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"kokrui"},"content":"## Manage Contacts","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":192,"author":{"gitId":"lordidiot"},"content":"### Add contact: `add`","lastModifiedDate":"2023-11-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"lordidiot"},"content":"Add a new contact with basic details like name, phone number, email, and address.","lastModifiedDate":"2023-10-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":196,"author":{"gitId":"lordidiot"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]`","lastModifiedDate":"2023-10-04"},{"lineNumber":197,"author":{"gitId":"limjunxian1"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"limjunxian1"},"content":"All the fields must be provided except `TAG`. The fields you enter should follow the following format:","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"limjunxian1"},"content":"| Field          | Format                                                                                                                  | Example                         |","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"limjunxian1"},"content":"|----------------|-------------------------------------------------------------------------------------------------------------------------|---------------------------------|","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"limjunxian1"},"content":"| `NAME`         | Use `a-z`, `A-Z`, `0-9` and whitespaces only                                                                            | John Doe                        |","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"limjunxian1"},"content":"| `PHONE_NUMBER` | Use `0-9` only and should be 3 digits long                                                                              | 98765432                        |","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"limjunxian1"},"content":"| `EMAIL`        | Have the format of `local-part@domain`                                                                                  | johndoe@gmail.com               |","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"limjunxian1"},"content":"| `ADDRESS`      | Use any characters                                                                                                      | John street, block 123, #01-01  |","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"limjunxian1"},"content":"| `TAG`          | Use `a-z`, `A-Z` and `0-9` only. Alternatively, use `RA` or `SOS` which are predefined emergency tags for your contact  | friend                          |","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"limjunxian1"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":210,"author":{"gitId":"conradsoon"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":212,"author":{"gitId":"conradsoon"},"content":"Certain tags such as `RA` and `SOS` are tags to indicate important contacts such as emergency contacts. They are displayed first, and with a red background to indicate their importance. ","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"conradsoon"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"lordidiot"},"content":"Examples","lastModifiedDate":"2023-10-04"},{"lineNumber":216,"author":{"gitId":"limjunxian1"},"content":"* `add n/John Doe p/98765432 e/johndoe@gmail.com a/John street, block 123, #01-01 t/friend`","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"limjunxian1"},"content":"    * Adds a contact named \"John Doe\" with the phone number \"98765432\", email \"johndoe@gmail.com\", address \"John street, block 123, #01-01\", and a tag \"friend\"","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"lordidiot"},"content":"* `add n/Betsy Crowe e/betsycrowe@example.com a/Newgate Prison p/1234567 t/friend t/colleague`","lastModifiedDate":"2023-10-04"},{"lineNumber":219,"author":{"gitId":"lordidiot"},"content":"    * Adds a contact named \"Betsy Crowe\" with the email \"betsycrowe@example.com\", address \"Newgate Prison\", phone \"1234567\", and two tags \"friend\" and \"colleague\"","lastModifiedDate":"2023-10-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":222,"author":{"gitId":"lordidiot"},"content":"###  Add alternative information to contact: `addalt`","lastModifiedDate":"2023-11-01"},{"lineNumber":223,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":224,"author":{"gitId":"lordidiot"},"content":"Adds alternative contact information to an existing contact.","lastModifiedDate":"2023-10-04"},{"lineNumber":225,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":226,"author":{"gitId":"limjunxian1"},"content":"Format: `addalt INDEX [tg/TELEGRAM] [e2/SECONDARY_EMAIL] [li/LINKEDIN] [b/BIRTHDAY]`","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"limjunxian1"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"limjunxian1"},"content":"At least one of the optional fields must be provided. The fields you enter should follow the following format:","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":231,"author":{"gitId":"limjunxian1"},"content":"| Field             | Format                                                                                                        | Example               |","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"limjunxian1"},"content":"|-------------------|---------------------------------------------------------------------------------------------------------------|-----------------------|","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"limjunxian1"},"content":"| `TELEGRAM`        | Start with the `@` symbol, no whitespace with a minimum length of 5 characters. Use `a-z`, `0-9` and `_` only | @johndoe              |","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"limjunxian1"},"content":"| `SECONDARY_EMAIL` | Have the format of `local-part@domain`                                                                        | johndoe@hotmail.com   |","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"limjunxian1"},"content":"| `LINKEDIN`        | Use `a-z`, `A-Z`, `0-9`, `_` and `-` only                                                                     | john-doe-b9a38128a    |","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"limjunxian1"},"content":"| `BIRTHDAY`        | Have the format of `DD/MM`                                                                                    | 31/10                 |","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":241,"author":{"gitId":"limjunxian1"},"content":"* `addalt 1 tg/@johndoe e2/johndoe@hotmail.com`","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"limjunxian1"},"content":"    * Adds John Doe\u0027s telegram \"@johndoe\" and secondary email \"johndoe@hotmail.com\"","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"limjunxian1"},"content":"* `addalt 1 li/john-doe-b9a38128a`","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"limjunxian1"},"content":"    * Adds John Doe\u0027s linkedin \"john-doe-b9a38128a\"","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"lordidiot"},"content":"###  Edit contact information: `edit`","lastModifiedDate":"2023-11-01"},{"lineNumber":247,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"limjunxian1"},"content":"Edits contact information of an existing contact.","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"limjunxian1"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG] [tg/TELEGRAM] [e2/SECONDARY_EMAIL] [li/LINKEDIN] [b/BIRTHDAY]`","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"limjunxian1"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"limjunxian1"},"content":"At least one of the optional fields must be provided. The fields you enter should follow the following format:","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"limjunxian1"},"content":"| Field             | Format                                                                                                                 | Example                        |","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"limjunxian1"},"content":"|-------------------|------------------------------------------------------------------------------------------------------------------------|--------------------------------|","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"limjunxian1"},"content":"| `NAME`            | Use `a-z`, `A-Z`, `0-9` and whitespaces only                                                                           | John Doe                       |","lastModifiedDate":"2023-10-26"},{"lineNumber":258,"author":{"gitId":"limjunxian1"},"content":"| `PHONE_NUMBER`    | Use `0-9` only and should be 3 digits long                                                                             | 98765432                       |","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"limjunxian1"},"content":"| `EMAIL`           | Have the format of `local-part@domain`                                                                                 | johndoe@gmail.com              |","lastModifiedDate":"2023-10-26"},{"lineNumber":260,"author":{"gitId":"limjunxian1"},"content":"| `ADDRESS`         | Use any characters                                                                                                     | John street, block 123, #01-01 |","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"limjunxian1"},"content":"| `TAG`             | Use `a-z`, `A-Z` and `0-9` only. Alternatively, use `RA` or `SOS` which are predefined emergency tags for your contact | friend                         |","lastModifiedDate":"2023-10-26"},{"lineNumber":262,"author":{"gitId":"limjunxian1"},"content":"| `TELEGRAM`        | Start with the `@` symbol, no whitespace with a minimum length of 5 characters. Use `a-z`, `0-9` and `_` only          | @johndoe                       |","lastModifiedDate":"2023-10-26"},{"lineNumber":263,"author":{"gitId":"limjunxian1"},"content":"| `SECONDARY_EMAIL` | Have the format of `local-part@domain`                                                                                 | johndoe@hotmail.com            |","lastModifiedDate":"2023-10-26"},{"lineNumber":264,"author":{"gitId":"limjunxian1"},"content":"| `LINKEDIN`        | Use `a-z`, `A-Z`, `0-9`, `_` and `-` only                                                                              | john-doe-b9a38128a             |","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"limjunxian1"},"content":"| `BIRTHDAY`        | Have the format of `DD/MM`                                                                                             | 31/10                          |","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"limjunxian1"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"limjunxian1"},"content":"Examples:","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"limjunxian1"},"content":"* `edit 1 tg/@johndoe e2/johndoe@hotmail.com`","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"limjunxian1"},"content":"    * Edits the first person in your contact list with existing telegram to \"@johndoe\" and existing secondary email to \"johndoe@hotmail.com\"","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"limjunxian1"},"content":"* `edit 2 n/John Doe p/98765432 e/johndoe@gmail.com a/John street, block 123, #01-01 t/friend`","lastModifiedDate":"2023-10-26"},{"lineNumber":272,"author":{"gitId":"limjunxian1"},"content":"    * Edits the second person in your contact list with existing name to \"John Doe\", existing phone number to \"98765432\", existing email to \"johndoe@gmail.com\", existing address to \"John street, block 123, #01-01\", and a existing tag to \"friend\"","lastModifiedDate":"2023-10-26"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":274,"author":{"gitId":"limjunxian1"},"content":"\u003cbox type\u003d\"warning\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":276,"author":{"gitId":"limjunxian1"},"content":"You are not allowed to edit any alternative contact information, i.e. `TELEGRAM`, `SECONDARY_EMAIL`, `LINKEDIN`, `BIRTHDAY` if any of these fields are empty. You will receive an error message that directs you to use [**`addalt`**](#add-alternative-information-to-contact) command.","lastModifiedDate":"2023-10-26"},{"lineNumber":277,"author":{"gitId":"limjunxian1"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":279,"author":{"gitId":"lordidiot"},"content":"###  Update contact\u0027s photo: `updatephoto`","lastModifiedDate":"2023-11-01"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":281,"author":{"gitId":"lordidiot"},"content":"Updates the photo of an existing contact.","lastModifiedDate":"2023-10-04"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":283,"author":{"gitId":"lordidiot"},"content":"Format: `updatephoto INDEX path/NEW_PHOTO_PATH`","lastModifiedDate":"2023-10-04"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":286,"author":{"gitId":"lordidiot"},"content":"* `updatephoto 1 path/C:/photos/new_johndoe.jpg`","lastModifiedDate":"2023-10-04"},{"lineNumber":287,"author":{"gitId":"lordidiot"},"content":"  * Updates the photo for the 1st person with a new image from the specified path.","lastModifiedDate":"2023-10-04"},{"lineNumber":288,"author":{"gitId":"VN-Hao"},"content":"* `updatephoto 2 path/D:/images/new_betsycrowe.png`","lastModifiedDate":"2023-10-31"},{"lineNumber":289,"author":{"gitId":"lordidiot"},"content":"  * Updates the photo for the 2nd person with a new image from the specified path.","lastModifiedDate":"2023-10-04"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":291,"author":{"gitId":"VN-Hao"},"content":"\u003cbox type\u003d\"warning\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":293,"author":{"gitId":"VN-Hao"},"content":"You are required to input the absolute path to the photo for this command. If you use an invalid path, a default photo will be chosen for your specified contact.","lastModifiedDate":"2023-10-31"},{"lineNumber":294,"author":{"gitId":"VN-Hao"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":296,"author":{"gitId":"lordidiot"},"content":"###  List all contacts: `list`","lastModifiedDate":"2023-11-01"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":298,"author":{"gitId":"kokrui"},"content":"Shows a list of all contacts.","lastModifiedDate":"2023-11-01"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":300,"author":{"gitId":"kokrui"},"content":"Format: `list`","lastModifiedDate":"2023-11-01"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":302,"author":{"gitId":"lordidiot"},"content":"###  Delete contact: `delete`","lastModifiedDate":"2023-11-01"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":304,"author":{"gitId":"kokrui"},"content":"Deletes an existing contact from the address book.","lastModifiedDate":"2023-11-01"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-11-01"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":308,"author":{"gitId":"kokrui"},"content":"Examples:","lastModifiedDate":"2023-11-01"},{"lineNumber":309,"author":{"gitId":"kokrui"},"content":"* `delete 1`","lastModifiedDate":"2023-11-01"},{"lineNumber":310,"author":{"gitId":"kokrui"},"content":"  * Deletes the 1st person from the list","lastModifiedDate":"2023-11-01"},{"lineNumber":311,"author":{"gitId":"kokrui"},"content":"* `delete 2`","lastModifiedDate":"2023-11-01"},{"lineNumber":312,"author":{"gitId":"kokrui"},"content":"  * Deletes the 2nd person from the list","lastModifiedDate":"2023-11-01"},{"lineNumber":313,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":314,"author":{"gitId":"kokrui"},"content":"## Notes","lastModifiedDate":"2023-11-01"},{"lineNumber":315,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":316,"author":{"gitId":"kokrui"},"content":"\u003cdiv style\u003d\"display:flex; justify-content:space-around; align-items:center;\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":317,"author":{"gitId":"kokrui"},"content":"  \u003cimg src\u003d\"images/notes/noteswindow2.png\" alt\u003d\"Window with Notes\" style\u003d\"height:400px; margin:10px;\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":318,"author":{"gitId":"kokrui"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":319,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":320,"author":{"gitId":"conradsoon"},"content":"The notes feature allows you to add and remove notes for a person, and provides a convenient pop-up window to view all notes for a person. You can add notes to a person with the `addnote` command, remove notes with the `removenote` command, and view notes by using either the `viewnotes` command or by clicking the `Notes` button in the person\u0027s information window.","lastModifiedDate":"2023-11-01"},{"lineNumber":321,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":322,"author":{"gitId":"conradsoon"},"content":"The parameters for these commands are `PERSON_INDEX`, `NOTE_INDEX` and `NOTE_CONTENT`. These parameters are explained in detail in the section below.","lastModifiedDate":"2023-11-01"},{"lineNumber":323,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":324,"author":{"gitId":"conradsoon"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":325,"author":{"gitId":"kokrui"},"content":"\u003cpanel header\u003d\":fa-solid-book: **Command Parameter / Syntax Tables**\" type\u003d\"secondary\" expanded no-close\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":326,"author":{"gitId":"kokrui"},"content":"The fields you enter should follow the following format:","lastModifiedDate":"2023-11-01"},{"lineNumber":327,"author":{"gitId":"kokrui"},"content":"| Parameter     | Description                                                                                                 |","lastModifiedDate":"2023-11-01"},{"lineNumber":328,"author":{"gitId":"kokrui"},"content":"|---------------|-------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-01"},{"lineNumber":329,"author":{"gitId":"kokrui"},"content":"| `PERSON_INDEX`| The position of the person in the list you want to add a note to. This should be a positive integer, and should be within the bounds of the list. |","lastModifiedDate":"2023-11-01"},{"lineNumber":330,"author":{"gitId":"kokrui"},"content":"| `NOTE_INDEX`  | The position of the note in the person\u0027s list of notes you want to remove. This should be a positive integer, and should be within the bounds of the list. |","lastModifiedDate":"2023-11-01"},{"lineNumber":331,"author":{"gitId":"kokrui"},"content":"| `NOTE_CONTENT`| The content of the note you want to add. It has to be non-empty, and can contain any character.              |","lastModifiedDate":"2023-11-01"},{"lineNumber":332,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":333,"author":{"gitId":"kokrui"},"content":"\u003c/panel\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":334,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":335,"author":{"gitId":"kokrui"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":336,"author":{"gitId":"conradsoon"},"content":"\u003cbox type\u003d\"warning\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":337,"author":{"gitId":"conradsoon"},"content":"Always make sure the indices provided are valid and within the bounds of the list. Invalid indices will result in an error.","lastModifiedDate":"2023-11-01"},{"lineNumber":338,"author":{"gitId":"conradsoon"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":339,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":340,"author":{"gitId":"conradsoon"},"content":"### Add a note to contact: `addnote`","lastModifiedDate":"2023-11-01"},{"lineNumber":341,"author":{"gitId":"conradsoon"},"content":"You can add notes to a person with the `addnote` command.","lastModifiedDate":"2023-11-01"},{"lineNumber":342,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":343,"author":{"gitId":"conradsoon"},"content":"Format: `addnote PERSON_INDEX NOTE_CONTENT`","lastModifiedDate":"2023-11-01"},{"lineNumber":344,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":345,"author":{"gitId":"conradsoon"},"content":"\u003cbox type\u003d\"info\" icon\u003d\":fa-solid-magnifying-glass:\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":346,"author":{"gitId":"conradsoon"},"content":"Below are some examples on how to use the commands:","lastModifiedDate":"2023-11-01"},{"lineNumber":347,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":348,"author":{"gitId":"conradsoon"},"content":"- `addnote 1 This is a sample note for the person.`: Adds a note to the contact at index 1.","lastModifiedDate":"2023-11-01"},{"lineNumber":349,"author":{"gitId":"conradsoon"},"content":"- `addnote 2 This is another sample note.`: Adds a note to the contact at index 2.","lastModifiedDate":"2023-11-01"},{"lineNumber":350,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":351,"author":{"gitId":"conradsoon"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":352,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":353,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":354,"author":{"gitId":"conradsoon"},"content":"### Remove a note from contact: `removenote`","lastModifiedDate":"2023-11-01"},{"lineNumber":355,"author":{"gitId":"conradsoon"},"content":"You can remove notes from a person with the `removenote` command.","lastModifiedDate":"2023-11-01"},{"lineNumber":356,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":357,"author":{"gitId":"conradsoon"},"content":"Format: `removenote PERSON_INDEX NOTE_INDEX`","lastModifiedDate":"2023-11-01"},{"lineNumber":358,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":359,"author":{"gitId":"conradsoon"},"content":"\u003cbox type\u003d\"info\" icon\u003d\":fa-solid-magnifying-glass:\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":360,"author":{"gitId":"conradsoon"},"content":"Below are some examples on how to use the commands:","lastModifiedDate":"2023-11-01"},{"lineNumber":361,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":362,"author":{"gitId":"conradsoon"},"content":"- `removenote 1 2`: Removes the second note from the contact at index 1.","lastModifiedDate":"2023-11-01"},{"lineNumber":363,"author":{"gitId":"conradsoon"},"content":"- `removenote 1 1`: Removes the first note from the contact at index 1.","lastModifiedDate":"2023-11-01"},{"lineNumber":364,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":365,"author":{"gitId":"conradsoon"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":366,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":367,"author":{"gitId":"conradsoon"},"content":"### View notes of a contact: `viewnotes`","lastModifiedDate":"2023-11-01"},{"lineNumber":368,"author":{"gitId":"conradsoon"},"content":"\u003cdiv style\u003d\"display:flex; justify-content:space-around; align-items:center;\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":369,"author":{"gitId":"conradsoon"},"content":"  \u003cimg src\u003d\"images/notes/window_with_notes.png\" alt\u003d\"Window with Notes\" style\u003d\"height:400px; margin:10px;\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":370,"author":{"gitId":"conradsoon"},"content":"  \u003cimg src\u003d\"images/notes/noteswindow2.png\" alt\u003d\"Window with Notes\" style\u003d\"height:400px; margin:10px;\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":371,"author":{"gitId":"conradsoon"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":372,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":373,"author":{"gitId":"conradsoon"},"content":"You can view notes by one of two ways: by using the `viewnotes` command, or by clicking on the `Notes` button in the person\u0027s information window. The notes window can be closed by either clicking the `Close` button or by pressing the `ESC` key, making it convenient for both CLI and GUI users to use the notes feature.","lastModifiedDate":"2023-11-01"},{"lineNumber":374,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":375,"author":{"gitId":"conradsoon"},"content":"Format: `viewnotes PERSON_INDEX`","lastModifiedDate":"2023-11-01"},{"lineNumber":376,"author":{"gitId":"kokrui"},"content":"\u003cbox type\u003d\"info\" icon\u003d\":fa-solid-magnifying-glass:\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":377,"author":{"gitId":"conradsoon"},"content":"Below are some examples on how to use the commands:","lastModifiedDate":"2023-11-01"},{"lineNumber":378,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":379,"author":{"gitId":"conradsoon"},"content":"- `viewnotes 1`: Shows all notes for the contact at index 1.","lastModifiedDate":"2023-11-01"},{"lineNumber":380,"author":{"gitId":"conradsoon"},"content":"- `viewnotes 2`: Shows all notes for the contact at index 2.","lastModifiedDate":"2023-11-01"},{"lineNumber":381,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":382,"author":{"gitId":"kokrui"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":383,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":384,"author":{"gitId":"kokrui"},"content":"## Birthday Notifications","lastModifiedDate":"2023-11-01"},{"lineNumber":385,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":386,"author":{"gitId":"kokrui"},"content":"###  Receive upcoming birthday notifications","lastModifiedDate":"2023-11-01"},{"lineNumber":387,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":388,"author":{"gitId":"kokrui"},"content":"Receives a pop-up notification for each contact in CampusConnect whose birthday is within a day.","lastModifiedDate":"2023-11-01"},{"lineNumber":389,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":390,"author":{"gitId":"kokrui"},"content":"Upon launching the application, if any of your contacts’ birthday in CampusConnect is coming within a day, you should see the following pop-up notification: \u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":391,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":392,"author":{"gitId":"kokrui"},"content":"![birthdayNotification](images/birthdayNotification.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":393,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":394,"author":{"gitId":"kokrui"},"content":"The notification will contain the names of the birthday individuals saved in CampusConnect.","lastModifiedDate":"2023-11-01"},{"lineNumber":395,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":396,"author":{"gitId":"kokrui"},"content":"###  Opt out notification [Coming soon]","lastModifiedDate":"2023-11-01"},{"lineNumber":397,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":398,"author":{"gitId":"kokrui"},"content":"Opts you out from receiving birthday related notifications, such as turning off actual birthday notification feature.","lastModifiedDate":"2023-11-01"},{"lineNumber":399,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":400,"author":{"gitId":"kokrui"},"content":"Format: `optout NOTIFICATION_DESCRIPTION`","lastModifiedDate":"2023-11-01"},{"lineNumber":401,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":402,"author":{"gitId":"kokrui"},"content":"- `NOTIFICATION_DESCRIPTION` Mandatory field to enter which only includes the following and are not case-sensitive:","lastModifiedDate":"2023-11-01"},{"lineNumber":403,"author":{"gitId":"kokrui"},"content":"    - `Notify Birthdays`","lastModifiedDate":"2023-11-01"},{"lineNumber":404,"author":{"gitId":"kokrui"},"content":"    - `All`","lastModifiedDate":"2023-11-01"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":406,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-11-01"},{"lineNumber":407,"author":{"gitId":"kokrui"},"content":"- `optout notify birthdays`","lastModifiedDate":"2023-11-01"},{"lineNumber":408,"author":{"gitId":"kokrui"},"content":"- `optout Notify Birthdays`","lastModifiedDate":"2023-11-01"},{"lineNumber":409,"author":{"gitId":"kokrui"},"content":"- `optout NOTIFY BIRTHDAYS`","lastModifiedDate":"2023-11-01"},{"lineNumber":410,"author":{"gitId":"kokrui"},"content":"    - Requests to opt out from receiving actual birthday notifications in the future.","lastModifiedDate":"2023-11-01"},{"lineNumber":411,"author":{"gitId":"kokrui"},"content":"- `optout all`","lastModifiedDate":"2023-11-01"},{"lineNumber":412,"author":{"gitId":"kokrui"},"content":"    - Requests to turn off all kinds of notifications CampusConnect will send.","lastModifiedDate":"2023-11-01"},{"lineNumber":413,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":414,"author":{"gitId":"kokrui"},"content":"Upon request to opt out notification, you should see the following pop-up message: \u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":415,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":416,"author":{"gitId":"kokrui"},"content":"![optOutNotification](images/optOutNotification.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":417,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":418,"author":{"gitId":"kokrui"},"content":"Select `OK` to opt out notifications or `Cancel` to cancel the request.","lastModifiedDate":"2023-11-01"},{"lineNumber":419,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":420,"author":{"gitId":"kokrui"},"content":"Below shows some examples of ___invalid usage___ of the command and the response that CampusConnect will provide.","lastModifiedDate":"2023-11-01"},{"lineNumber":421,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":422,"author":{"gitId":"kokrui"},"content":"Invalid Input Example | Application Output","lastModifiedDate":"2023-11-01"},{"lineNumber":423,"author":{"gitId":"kokrui"},"content":"---|---","lastModifiedDate":"2023-11-01"},{"lineNumber":424,"author":{"gitId":"kokrui"},"content":"**optout notifications** | Invalid `NOTIFICATION_DESCRIPTION` (refer to aforementioned for the list of `NOTIFICATION_DESCRIPTION` to enter).","lastModifiedDate":"2023-11-01"},{"lineNumber":425,"author":{"gitId":"kokrui"},"content":"**optout** | `NOTIFICATION_DESCRIPTION` cannot be empty.","lastModifiedDate":"2023-11-01"},{"lineNumber":426,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":427,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":428,"author":{"gitId":"kokrui"},"content":"## Payments","lastModifiedDate":"2023-11-01"},{"lineNumber":429,"author":{"gitId":"kokrui"},"content":"## Find Contacts","lastModifiedDate":"2023-11-01"},{"lineNumber":430,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":431,"author":{"gitId":"kokrui"},"content":"Another feature of CampusConnect is the ability to search for contacts based on a variety of criteria. This is useful for quickly finding contacts whose details you may only partially remember, or for finding contacts who match a certain criteria.","lastModifiedDate":"2023-11-01"},{"lineNumber":432,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":433,"author":{"gitId":"kokrui"},"content":"This feature involves only 1 command: `find`, which list contacts whose fields match the specified find expression.","lastModifiedDate":"2023-11-01"},{"lineNumber":434,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":435,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":436,"author":{"gitId":"kokrui"},"content":"Format: `find FIND_EXPRESSION`","lastModifiedDate":"2023-10-26"},{"lineNumber":437,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":438,"author":{"gitId":"kokrui"},"content":"Find expressions have a low barrier to entry that allows for simple filtering by field. This basic filtering for contacts is likely sufficient for most of your use cases. We recommend that you first read the [basic filtering](#find-contacts-basic-filtering) section to learn how to perform simple filtering by a single field.","lastModifiedDate":"2023-10-26"},{"lineNumber":439,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":440,"author":{"gitId":"kokrui"},"content":"If you then find that the basic filtering is insufficient for your use case, you can read the [advanced filtering](#find-contacts-advanced-filtering) section to learn how to perform more complex filtering.","lastModifiedDate":"2023-10-26"},{"lineNumber":441,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":442,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":443,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":444,"author":{"gitId":"kokrui"},"content":"\u003cpanel header\u003d\"**Supported Fields**\" type\u003d\"primary\" id\u003d\"find-fields-table\" expanded no-close\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":445,"author":{"gitId":"kokrui"},"content":"Across both basic and advanced filtering, the following fields are supported:\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":446,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":447,"author":{"gitId":"kokrui"},"content":"| Field | Prefix | Description |","lastModifiedDate":"2023-10-26"},{"lineNumber":448,"author":{"gitId":"kokrui"},"content":"| ----- | ------ | ----------- |","lastModifiedDate":"2023-10-26"},{"lineNumber":449,"author":{"gitId":"kokrui"},"content":"| Name  | `n`   | Finds contacts whose names **contain** the given keyword. |","lastModifiedDate":"2023-10-26"},{"lineNumber":450,"author":{"gitId":"kokrui"},"content":"| Phone | `p`   | Finds contacts whose phone numbers **contain** the given digits. |","lastModifiedDate":"2023-10-26"},{"lineNumber":451,"author":{"gitId":"kokrui"},"content":"| Email | `e`   | Finds contacts whose email addresses **contain** the given keyword. |","lastModifiedDate":"2023-10-26"},{"lineNumber":452,"author":{"gitId":"kokrui"},"content":"| Address | `a` | Finds contacts whose addresses **contain** the given keyword. |","lastModifiedDate":"2023-10-26"},{"lineNumber":453,"author":{"gitId":"kokrui"},"content":"| Tag   | `t`   | Finds contacts who have **any tag** that **exactly matches** the given keyword. |","lastModifiedDate":"2023-10-30"},{"lineNumber":454,"author":{"gitId":"kokrui"},"content":"| Birthday | `b` | Finds contacts whose birthdays (in DD-MM format) **contain** the given substring. |","lastModifiedDate":"2023-10-30"},{"lineNumber":455,"author":{"gitId":"kokrui"},"content":"| LinkedIn | `li` | Finds contacts whose LinkedIn usernames **contain** the given keyword. |","lastModifiedDate":"2023-10-30"},{"lineNumber":456,"author":{"gitId":"kokrui"},"content":"| Secondary Email | `e2` | Finds contacts whose secondary email addresses **contain** the given keyword. |","lastModifiedDate":"2023-10-30"},{"lineNumber":457,"author":{"gitId":"kokrui"},"content":"| Telegram | `tg` | Finds contacts whose telegram handles **contain** the given keyword. |","lastModifiedDate":"2023-10-30"},{"lineNumber":458,"author":{"gitId":"kokrui"},"content":"| Note | `nt` | Finds contacts who have **any note** that **contains** the given keyword. |","lastModifiedDate":"2023-10-30"},{"lineNumber":459,"author":{"gitId":"kokrui"},"content":"| Balance | `bal` | Keyword **must be valid balance** (see: [Payments feature format](#tbd)). Finds contacts who **owe user** an amount **more than or equal** to given balance. \u003cbr\u003e\u003cbr\u003e Keyword **may start with a negative sign**, in which case finds contacts who **user owes** more than or equal to given balance. |","lastModifiedDate":"2023-10-31"},{"lineNumber":460,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":461,"author":{"gitId":"kokrui"},"content":"\u003c/panel\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":463,"author":{"gitId":"kokrui"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":465,"author":{"gitId":"kokrui"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":467,"author":{"gitId":"kokrui"},"content":"Note that in all cases, the search is case-insensitive for alphabetic characters. For example, `n/Joe` will match contacts who have the name `Joe`, `joE`, `Ajoeia`, `BobJOe Lee`, etc., and `t/friend` will match `friend`, `FriENd`, `FRIEND`, etc.","lastModifiedDate":"2023-10-26"},{"lineNumber":468,"author":{"gitId":"kokrui"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":469,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":470,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":471,"author":{"gitId":"kokrui"},"content":"\u003cbox type\u003d\"warning\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":472,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":473,"author":{"gitId":"kokrui"},"content":"For now, search keywords cannot contain spaces. For example, `n/John Doe` will not work as expected. Functionality to search for keywords which spaces like `\"John Doe\"` will be added in a future release.","lastModifiedDate":"2023-10-26"},{"lineNumber":474,"author":{"gitId":"kokrui"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":475,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":476,"author":{"gitId":"kokrui"},"content":"### Basic Filtering","lastModifiedDate":"2023-11-01"},{"lineNumber":477,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":478,"author":{"gitId":"kokrui"},"content":"Contacts can be filtered by a single field by typing:","lastModifiedDate":"2023-10-26"},{"lineNumber":479,"author":{"gitId":"kokrui"},"content":"- the **prefix** of the field you\u0027re searching through, followed by","lastModifiedDate":"2023-10-26"},{"lineNumber":480,"author":{"gitId":"kokrui"},"content":"- a **slash** (`/`), followed by","lastModifiedDate":"2023-10-26"},{"lineNumber":481,"author":{"gitId":"kokrui"},"content":"- the **keyword** you\u0027re looking for.","lastModifiedDate":"2023-10-26"},{"lineNumber":482,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":483,"author":{"gitId":"kokrui"},"content":"Such a search will return all contacts whose field matches the keyword based on the behavior specified in the [supported fields table](#find-fields-table).","lastModifiedDate":"2023-10-26"},{"lineNumber":484,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":485,"author":{"gitId":"kokrui"},"content":"We call this basic block of filtering a **find condition**, which is the smallest unit that act as a valid [**`FIND_EXPRESSION`**](#find-contacts).","lastModifiedDate":"2023-10-26"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":488,"author":{"gitId":"kokrui"},"content":"\u003cbox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":490,"author":{"gitId":"kokrui"},"content":"For example, given the following contacts (some fields omitted for brevity):","lastModifiedDate":"2023-10-26"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":492,"author":{"gitId":"kokrui"},"content":"| Name | Tags |","lastModifiedDate":"2023-10-26"},{"lineNumber":493,"author":{"gitId":"kokrui"},"content":"| ---- | ---- |","lastModifiedDate":"2023-10-26"},{"lineNumber":494,"author":{"gitId":"kokrui"},"content":"| John Doe | neighbor, colleague |","lastModifiedDate":"2023-10-26"},{"lineNumber":495,"author":{"gitId":"kokrui"},"content":"| Jane Doe | neighbor, friend |","lastModifiedDate":"2023-10-26"},{"lineNumber":496,"author":{"gitId":"kokrui"},"content":"| Alex Yeoh | friend |","lastModifiedDate":"2023-10-26"},{"lineNumber":497,"author":{"gitId":"kokrui"},"content":"| Yervis Alexis | girlfriend |","lastModifiedDate":"2023-10-26"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":500,"author":{"gitId":"kokrui"},"content":"`n/do` is a **find condition** that will return all contacts whose names contain the substring `\"do\"`, in this case `\"John Doe\"` and `\"Jane Doe\"`.","lastModifiedDate":"2023-10-26"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":502,"author":{"gitId":"kokrui"},"content":"Similarly, `t/friend` is a **find condition** that will return all contacts who have the `\"friend\"` tag, in this case `\"Jane Doe\"` and `\"Alex Yeoh\"` (and **not** `\"Yervis Alexis\"`, since [supported fields table](#find-fields-table) requires an exact tag match).","lastModifiedDate":"2023-10-26"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":504,"author":{"gitId":"kokrui"},"content":"Since `n/do` and `t/friend` are both **find conditions**, they can constitute a **`FIND_EXPRESSION`**. The complete commands in each case would be:","lastModifiedDate":"2023-10-26"},{"lineNumber":505,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":506,"author":{"gitId":"kokrui"},"content":"- `find n/do`","lastModifiedDate":"2023-10-26"},{"lineNumber":507,"author":{"gitId":"kokrui"},"content":"- `find t/friend`","lastModifiedDate":"2023-10-26"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":509,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":511,"author":{"gitId":"kokrui"},"content":"### Advanced Filtering","lastModifiedDate":"2023-11-01"},{"lineNumber":512,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":513,"author":{"gitId":"kokrui"},"content":"While basic filtering is sufficient for most use cases, you may find that you need to perform more complex filtering. For example, you may want to find all contacts who have the tag `\"friend\"` *and* whose names contain the substring `\"do\"`. Or you may want to find all contacts whose addresses contain the substring `\"street\"` *or* whose names *do not* contain the substring `\"ye\"`.","lastModifiedDate":"2023-10-26"},{"lineNumber":514,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":515,"author":{"gitId":"kokrui"},"content":"You can accomplish this and more using our powerful advanced filtering syntax, which supports arbitrarily-complex **`FIND_EXPRESSIONs`**, which can be composed of many **find conditions** combined or transformed by **logical operators**.","lastModifiedDate":"2023-10-26"},{"lineNumber":516,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":517,"author":{"gitId":"kokrui"},"content":"\u003cpanel header\u003d\"**Supported Logical Operators**\" type\u003d\"primary\" id\u003d\"find-logical-operators-table\" expanded no-close\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":518,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":519,"author":{"gitId":"kokrui"},"content":"The following logical operators are supported, and are listed in order of precedence (from highest to lowest):","lastModifiedDate":"2023-10-26"},{"lineNumber":520,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":521,"author":{"gitId":"kokrui"},"content":"| Operator | Description | Usage |","lastModifiedDate":"2023-10-26"},{"lineNumber":522,"author":{"gitId":"kokrui"},"content":"| -------- | ----------- | ------- |","lastModifiedDate":"2023-10-26"},{"lineNumber":523,"author":{"gitId":"kokrui"},"content":"| `(` and `)` | Parentheses for grouping | `(FIND_EXPRESSION)`","lastModifiedDate":"2023-10-26"},{"lineNumber":524,"author":{"gitId":"kokrui"},"content":"| `!`     | Logical NOT | `!FIND_EXPRESSION`","lastModifiedDate":"2023-10-26"},{"lineNumber":525,"author":{"gitId":"kokrui"},"content":"| `\u0026\u0026`    | Logical AND | `FIND_EXPRESSION \u0026\u0026 FIND_EXPRESSION`","lastModifiedDate":"2023-10-26"},{"lineNumber":526,"author":{"gitId":"kokrui"},"content":"| \u003ccode\u003e\u0026#124;\u0026#124;\u003c/code\u003e | Logical OR | \u003ccode\u003eFIND_EXPRESSION \u0026#124;\u0026#124; FIND_EXPRESSION\u003c/code\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":527,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":528,"author":{"gitId":"kokrui"},"content":"\u003c/panel\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":529,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":530,"author":{"gitId":"kokrui"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":532,"author":{"gitId":"kokrui"},"content":"Note that the smallest possible **find expressions** is simply a **find condition**.","lastModifiedDate":"2023-10-26"},{"lineNumber":533,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":534,"author":{"gitId":"kokrui"},"content":"**Find expressions** can be nested arbitrarily deeply, and that parentheses can be used to group  **find expressions** together to specify the order of evaluation.","lastModifiedDate":"2023-10-26"},{"lineNumber":535,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":536,"author":{"gitId":"kokrui"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":537,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":538,"author":{"gitId":"kokrui"},"content":"\u003cbox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":539,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":540,"author":{"gitId":"kokrui"},"content":"For example, given the following contacts (some fields omitted for brevity):","lastModifiedDate":"2023-10-26"},{"lineNumber":541,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":542,"author":{"gitId":"kokrui"},"content":"| Name | Tags |","lastModifiedDate":"2023-10-26"},{"lineNumber":543,"author":{"gitId":"kokrui"},"content":"| ---- | ---- |","lastModifiedDate":"2023-10-26"},{"lineNumber":544,"author":{"gitId":"kokrui"},"content":"| John Doe | neighbor, colleague |","lastModifiedDate":"2023-10-26"},{"lineNumber":545,"author":{"gitId":"kokrui"},"content":"| Jane Doe | neighbor, friend |","lastModifiedDate":"2023-10-26"},{"lineNumber":546,"author":{"gitId":"kokrui"},"content":"| Alex Yeoh | friend |","lastModifiedDate":"2023-10-26"},{"lineNumber":547,"author":{"gitId":"kokrui"},"content":"| Yervis Alexis | girlfriend |","lastModifiedDate":"2023-10-26"},{"lineNumber":548,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":549,"author":{"gitId":"kokrui"},"content":"The following are valid **`FIND_EXPRESSIONs`**:","lastModifiedDate":"2023-10-26"},{"lineNumber":550,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":551,"author":{"gitId":"kokrui"},"content":"- `!n/do` will return all contacts whose names do **not** contain the substring `\"do\"`, in this case `\"Alex Yeoh\"` and `\"Yervis Alexis\"","lastModifiedDate":"2023-10-26"},{"lineNumber":552,"author":{"gitId":"kokrui"},"content":"- `n/do \u0026\u0026 t/friend` will return all contacts whose names contain the substring `\"do\"` **and** who have the `\"friend\"` tag, in this case `\"Jane Doe\"`.","lastModifiedDate":"2023-10-26"},{"lineNumber":553,"author":{"gitId":"kokrui"},"content":"- `n/do || t/friend` will return all contacts whose names contain the substring `\"do\"` **or** who have the `\"friend\"` tag, in this case `\"John Doe\"`, `\"Jane Doe\"`, and `\"Alex Yeoh\"`.","lastModifiedDate":"2023-10-26"},{"lineNumber":554,"author":{"gitId":"kokrui"},"content":"- `n/do \u0026\u0026 (t/friend || t/colleague)` will return all contacts whose names contain the substring `\"do\"` **and** who have either the `\"friend\"` or `\"colleague\"` tag, in this case `\"John Doe\"`, `\"Jane Doe\"`, and `\"Alex Yeoh\"`.","lastModifiedDate":"2023-10-26"},{"lineNumber":555,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":556,"author":{"gitId":"kokrui"},"content":"Note that the last example is **not equivalent** to `n/do \u0026\u0026 t/friend || t/colleague`. Due to the higher precedence of `\u0026\u0026` compared to `||`, this will return all contacts whose names contain the substring `\"do\"` **and** who have the `\"friend\"` tag, **or** who have the `\"colleague\"` tag, in this case `\"Jane Doe\"` and `\"Alex Yeoh\"`.","lastModifiedDate":"2023-10-26"},{"lineNumber":557,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":558,"author":{"gitId":"kokrui"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":560,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"kokrui"},"content":"# FAQ","lastModifiedDate":"2023-10-31"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"kokrui"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CampusConnect home folder.","lastModifiedDate":"2023-10-04"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"kokrui"},"content":"# Planned Enhancements / Known Issues","lastModifiedDate":"2023-10-31"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":571,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":573,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":575,"author":{"gitId":"kokrui"},"content":"# Command summary","lastModifiedDate":"2023-10-31"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"Action        | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"lordidiot"},"content":"--------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-03"},{"lineNumber":579,"author":{"gitId":"-"},"content":"**Add**       | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"VN-Hao"},"content":"**Addalt**    | `addalt INDEX [tg/TELEGRAM] [e2/SECONDARY_EMAIL] [li/LINKEDIN]` \u003cbr\u003e e.g., `addalt 1 tg/johndoe_telegram e2/johndoe2@example.com`","lastModifiedDate":"2023-10-06"},{"lineNumber":581,"author":{"gitId":"kokrui"},"content":"**Find**      | `find FIELD/KEYWORD [FIELD/KEYWORD]`","lastModifiedDate":"2023-10-04"},{"lineNumber":582,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":583,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":584,"author":{"gitId":"lordidiot"},"content":"\u003cstyle\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":585,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":586,"author":{"gitId":"lordidiot"},"content":"#content-wrapper h1 {","lastModifiedDate":"2023-11-01"},{"lineNumber":587,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":588,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":589,"author":{"gitId":"lordidiot"},"content":"#content-wrapper h2 {","lastModifiedDate":"2023-11-01"},{"lineNumber":590,"author":{"gitId":"lordidiot"},"content":"  margin-top: 3rem;","lastModifiedDate":"2023-11-01"},{"lineNumber":591,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":592,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":593,"author":{"gitId":"lordidiot"},"content":"#content-wrapper h3 {","lastModifiedDate":"2023-11-01"},{"lineNumber":594,"author":{"gitId":"lordidiot"},"content":"  margin-top: 2.5rem;","lastModifiedDate":"2023-11-01"},{"lineNumber":595,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":596,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":597,"author":{"gitId":"lordidiot"},"content":"\u003c/style\u003e","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"limjunxian1":70,"conradsoon":49,"kokrui":298,"lordidiot":57,"-":117,"VN-Hao":6}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eCampusConnect\u003c/a\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S1-CS2103T-T13-2/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"lordidiot":1,"-":65}},{"path":"docs/diagrams/AddAltSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"!include ./style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"participant \":AddAltCommandParser\" as AddAltCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"participant \"addAltPersonDescriptor:AddAltPersonDescriptor\" as AddAltPersonDescriptor LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"participant \"addAltCommand:AddAltCommand\" as AddAltCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"note left of LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"let {str} be \"1 e2/johndoe@hotmail.com\"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"end note","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"[-\u003e LogicManager : execute(\"addalt {str}\")","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addalt {str}\")","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"create AddAltCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"AddressBookParser -\u003e AddAltCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"activate AddAltCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"AddAltCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"deactivate AddAltCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"AddressBookParser -\u003e AddAltCommandParser : parse(\"{str}\")","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"activate AddAltCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"AddAltCommandParser -\u003e ParserUtil : parseIndex(\"1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"activate ParserUtil","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"ParserUtil --\u003e AddAltCommandParser : index","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"create AddAltPersonDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"AddAltCommandParser -\u003e AddAltPersonDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"activate AddAltPersonDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"AddAltPersonDescriptor --\u003e AddAltCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"deactivate AddAltPersonDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"AddAltCommandParser -\u003e ParserUtil : parseEmail(\"johndoe@hotmail.com\")","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"activate ParserUtil","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"ParserUtil --\u003e AddAltCommandParser : secondaryEmail","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"AddAltCommandParser -\u003e AddAltPersonDescriptor : setSecondaryEmail(secondaryEmail)","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"activate AddAltPersonDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"deactivate AddAltPersonDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"create AddAltCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"AddAltCommandParser -\u003e AddAltCommand : new AddAltCommand(index, addAltPersonDescriptor)","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"activate AddAltCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"AddAltCommand --\u003e AddAltCommandParser : addAltCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"deactivate AddAltCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"AddAltCommandParser --\u003e AddressBookParser : addAltCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"deactivate AddAltCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"AddAltCommandParser -[hidden]-\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"destroy AddAltCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"AddressBookParser --\u003e LogicManager : addAltCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"LogicManager -\u003e AddAltCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"activate AddAltCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"limjunxian1"},"content":"AddAltCommand -\u003e Model : getPerson(1)","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"limjunxian1"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"limjunxian1"},"content":"Model --\u003e AddAltCommand : person","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"limjunxian1"},"content":"AddAltCommand -\u003e AddAltCommand : createAddAltPerson(person, addAltPersonDescriptor)","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"limjunxian1"},"content":"AddAltCommand -\u003e Model : setPerson(person, addAltPerson)","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"limjunxian1"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"limjunxian1"},"content":"Model --\u003e AddAltCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"limjunxian1"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"limjunxian1"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"limjunxian1"},"content":"AddAltCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"limjunxian1"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"limjunxian1"},"content":"CommandResult --\u003e AddAltCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"limjunxian1"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"limjunxian1"},"content":"AddAltCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"limjunxian1"},"content":"deactivate AddAltCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"limjunxian1"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"limjunxian1"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"limjunxian1"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"limjunxian1":101}},{"path":"docs/diagrams/EditActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":":User executes edit command;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":":Parse command string;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"if () then ([else])","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"    :ParseException: Invalid Command Format;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"    stop","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"([valid index]) elseif () then ([no attributes edited])","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"    :ParseException: No Edits;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"    stop","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"([else]) elseif () then ([wrong format for attribute])","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"    :ParseException: Constraints;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"    stop","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"([else]) elseif () then ([edit empty additional attribute])","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"    :CommandException: Use AddAlt Command;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"    stop","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"([else]) elseif () then ([same primary and secondary email after edit])","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"    :CommandException: Duplicate Email;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"    stop","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"([else]) elseif () then ([no change after edit])","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"    :CommandException: No Change;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"    stop","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"else ([else])","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":":Update person in contact list with edited attributes;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":":Show edit person success message;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"stop","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"limjunxian1":33}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"!include ./style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"participant \"editPersonDescriptor:EditPersonDescriptor\" as EditPersonDescriptor LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"participant \"editCommand:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"note left of LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"let {str} be \"1 n/John Cena\"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"end note","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"[-\u003e LogicManager : execute(\"addalt {str}\")","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addalt {str}\")","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"create EditCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"AddressBookParser -\u003e EditCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"activate EditCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"EditCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"deactivate EditCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"AddressBookParser -\u003e EditCommandParser : parse(\"{str}\")","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"activate EditCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"EditCommandParser -\u003e ParserUtil : parseIndex(\"1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"activate ParserUtil","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"ParserUtil --\u003e EditCommandParser : index","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"create EditPersonDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"EditCommandParser -\u003e EditPersonDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"activate EditPersonDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"EditPersonDescriptor --\u003e EditCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"deactivate EditPersonDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"EditCommandParser -\u003e ParserUtil : parseName(\"John Cena\")","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"activate ParserUtil","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"ParserUtil --\u003e EditCommandParser : name","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"EditCommandParser -\u003e EditPersonDescriptor : setName(name)","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"activate EditPersonDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"deactivate EditPersonDescriptor","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"create EditCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"EditCommandParser -\u003e EditCommand : new EditCommand(index, editPersonDescriptor)","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"activate EditCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"EditCommand --\u003e EditCommandParser : editCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"deactivate EditCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"EditCommandParser --\u003e AddressBookParser : editCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"deactivate EditCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"EditCommandParser -[hidden]-\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"destroy EditCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"AddressBookParser --\u003e LogicManager : editCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"activate EditCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"limjunxian1"},"content":"EditCommand -\u003e Model : getPerson(1)","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"limjunxian1"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"limjunxian1"},"content":"Model --\u003e EditCommand : person","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"limjunxian1"},"content":"EditCommand -\u003e EditCommand : createEditedPerson(person, editPersonDescriptor)","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"limjunxian1"},"content":"EditCommand -\u003e Model : setPerson(person, editedPerson)","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"limjunxian1"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"limjunxian1"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"limjunxian1"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"limjunxian1"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"limjunxian1"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"limjunxian1"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"limjunxian1"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"limjunxian1"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"limjunxian1"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"limjunxian1"},"content":"deactivate EditCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"limjunxian1"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"limjunxian1"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"limjunxian1"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"limjunxian1":101}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"Class Telegram","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"Class Linkedin","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"Class Birthday","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"Class Avatar","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"Class Note","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"1..2\" Email","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"0..1\" Telegram","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"0..1\" Birthday","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"0..1\" Linkedin","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"1\" Avatar","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"1\" Note","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"limjunxian1":14,"-":50}},{"path":"docs/diagrams/PersonClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"!include ./style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"Class Person","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"Class Address","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"Class Email","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"Class Name","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"Class Phone","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"Class Tag","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"Class Telegram","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"Class Linkedin","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"Class Birthday","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"Class Avatar","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"Class Note","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"1..2\" Email","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"0..1\" Telegram","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"0..1\" Birthday","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"0..1\" Linkedin","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"1\" Avatar","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"Person *--\u003e \"1\" Note","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"limjunxian1":33}},{"path":"docs/diagrams/find-command/FindCommandParserSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"participant \":UI\" as UI UI_COLOR","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"participant \":FindCommandParser\" as FCP LOGIC_COLOR","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"participant \":FindFilterStringTokenizer\" as Tokenizer LOGIC_COLOR","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"participant \":FindExpressionParser\" as Parser LOGIC_COLOR","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"UI -\u003e FCP: parse(\"n/Alice \u0026\u0026 (n/Bob || n/Charlie)\")","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"activate FCP","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"FCP -\u003e Tokenizer: tokenize(\"n/Alice \u0026\u0026 (n/Bob || n/Charlie)\")","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"activate Tokenizer","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"Tokenizer --\u003e FCP: tokensList","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"deactivate Tokenizer","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"FCP -\u003e Parser: parseToPredicate(tokensList)","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"activate Parser","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"Parser --\u003e FCP: predicateForSearch","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"deactivate Parser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"FCP --\u003e UI: return new FindCommand(predicateForSearch)","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"deactivate FCP","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"kokrui":24,"lordidiot":4}},{"path":"docs/diagrams/find-command/FindExpressionParserClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"class FindExpressionParser {","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"  +parseToPredicate(tokens: List\u003cToken\u003e): Predicate\u003cPerson\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"interface \"\u003c\u003cinterface\u003e\u003e\\nPredicate\u003cT\u003e\" as Predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"FindExpressionParser --\u003e Predicate : produces \u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"kokrui":12,"lordidiot":4}},{"path":"docs/diagrams/find-command/FindExpressionParserSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"participant \"Client\" as C","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"participant \"FindExpressionParser\" as FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"participant \"TokenList\" as TL","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"C -\u003e FEP : parseToPredicate(tokens)","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"activate FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"note right of FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"  Starting with the expression:","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"  \"n/John \u0026\u0026 (t/friends || !a/clementi)\"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"end note","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"FEP -\u003e FEP : expression()","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"activate FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"FEP -\u003e FEP : term()","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"activate FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"FEP -\u003e FEP : factor()","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"activate FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"FEP -\u003e TL : consume()","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"activate TL","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"TL --\u003e FEP : \"n/John\"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"deactivate TL","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"note right of FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"  In this next \"Token processed\",","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"  Predicate for \"n/John\" is formed.","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"end note","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"FEP --\u003e FEP : Token processed","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"deactivate FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"FEP -\u003e TL : consume()","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"activate TL","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"TL --\u003e FEP : \"\u0026\u0026\"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"deactivate TL","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"FEP -\u003e FEP : factor()","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"activate FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"FEP -\u003e TL : consume()","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"activate TL","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"TL --\u003e FEP : \"(\"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"deactivate TL","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"FEP -\u003e FEP : expression()","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"activate FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"FEP -\u003e FEP : term()","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"activate FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"FEP -\u003e FEP : factor()","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"activate FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"FEP -\u003e TL : consume()","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"activate TL","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"TL --\u003e FEP : \"t/friends\"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"deactivate TL","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"note right of FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"  In this next \"Token processed\",","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"  Predicate for \"t/friends\" is formed.","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"end note","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"FEP --\u003e FEP : Token processed","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"deactivate FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"FEP -\u003e TL : consume()","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"activate TL","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"TL --\u003e FEP : \"||\"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"deactivate TL","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"FEP -\u003e FEP : factor()","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"activate FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"FEP -\u003e TL : consume()","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"activate TL","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"TL --\u003e FEP : \"!a/clementi\"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"deactivate TL","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"note right of FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"  In this next \"Token processed\",","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"  Predicate for \"!a/clementi\" is formed.","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"end note","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"FEP --\u003e FEP : Token processed","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"deactivate FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"note right of FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"  In this next \"Term processed\",","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"  predicate for \"!a/clementi\" is combined with","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"  predicate for \"t/friends\" using \"||\"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"  to form the compound predicate for the bracketed expression.","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"end note","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"FEP --\u003e FEP : Term processed","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"deactivate FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"FEP -\u003e TL : consume()","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"activate TL","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"TL --\u003e FEP : \")\"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"deactivate TL","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"note right of FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"  In this next \"Expression processed\",","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"  the parenthesized expression is known to","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"  be complete.","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"end note","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"FEP --\u003e FEP : Expression processed (for the parenthesis)","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"deactivate FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"note right of FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"  In this next \"Expression processed\",","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"kokrui"},"content":"  the compound predicate from the parentheses","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"kokrui"},"content":"  is now combined with \"n/John\" using \"\u0026\u0026\"","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"kokrui"},"content":"  to form the final predicate.","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"kokrui"},"content":"end note","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"kokrui"},"content":"FEP --\u003e FEP : Expression processed","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"kokrui"},"content":"deactivate FEP","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"kokrui"},"content":"FEP --\u003e C : Final Predicate","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"kokrui"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"kokrui":129}},{"path":"docs/diagrams/find-command/FindFilterStringTokenizerClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"class FindFilterStringTokenizer {","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"  -input: String","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"  +tokenize(): List\u003cToken\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"class Token {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"  +value: String","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"  +type: TokenType","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"enum TokenType {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"  TERM,","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"  OPERATOR,","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"  PARENTHESIS","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"FindFilterStringTokenizer --\u003e Token : produces \u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"Token --\u003e TokenType : has \u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"kokrui":23,"lordidiot":3}},{"path":"docs/diagrams/notes/NotesCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"hide footbox","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"participant \":AddressBookParser\" as Parser LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"participant \":AddNoteCommandParser\" as CommandParser LOGIC_COLOR_T1","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"participant \":ParserUtil\" as Util LOGIC_COLOR_T2","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"Parser -\u003e CommandParser : parse(arguments)","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"activate CommandParser","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"CommandParser -\u003e Util : parseIndex(splitArgs[0])","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"activate Util","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"Util --\u003e CommandParser : index","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"deactivate Util","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"create \":Note\" as Note LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"CommandParser -\u003e Note : new Note(splitArgs[1].trim())","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"activate Note","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"Note --\u003e CommandParser : note","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"deactivate Note","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"create \":Command\" as Command LOGIC_COLOR_T1","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"conradsoon"},"content":"CommandParser -\u003e Command : new AddNoteCommand(index, note)","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"activate Command","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"conradsoon"},"content":"Command --\u003e CommandParser : command","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"deactivate Command","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"CommandParser --\u003e Parser : command","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"deactivate CommandParser","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"participant \":Model\" as Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"conradsoon"},"content":"participant \":Person\" as Person MODEL_COLOR_T2","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"conradsoon"},"content":"Parser -\u003e Command : command.execute(model)","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"conradsoon"},"content":"activate Command","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"conradsoon"},"content":"Command -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"conradsoon"},"content":"activate Model","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"conradsoon"},"content":"Model --\u003e Command : lastShownList","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"conradsoon"},"content":"deactivate Model","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"conradsoon"},"content":"Command -\u003e Person : person.addNote(note)","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"conradsoon"},"content":"activate Person","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"conradsoon"},"content":"Person --\u003e Command","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"conradsoon"},"content":"deactivate Person","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"conradsoon"},"content":"Parser \u003c-- Command : new CommandResult(MESSAGE_NOTE_SUCCESS)","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"conradsoon"},"content":"deactivate Command","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"conradsoon"},"content":"@enduml","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"conradsoon":65}},{"path":"docs/diagrams/notification-system/ClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"@startuml","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"class Person","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"interface Model {","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"  +void addEvent(Event)","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"  +List\u003cEvent\u003e getEventList()","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"class Event {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"  -String title","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"  -String description","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"  -LocalDateTime dateTime","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"  -ArrayList\u003cDuration\u003e reminderDeltas","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"  +void addMember(Person)","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"  +void addReminder(Duration)","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"  +Optional\u003cNotification\u003e getNotificationAtTime(LocalDateTime)","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"class EventFactory {","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"  +List\u003cEvent\u003e createEvents(Model)","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"class Notification {","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"  -String title","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"  -String description","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"  +String getTitle","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"  +String getDescription","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"interface \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic {","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"  +List\u003cNotification\u003e getLatestNotifications(LocalDateTime)","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"Event --\u003e \"*\" Person : has member","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"Event ..\u003e Notification","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"EventFactory ..\u003e Model","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"EventFactory ..\u003e Event","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"Model ..\u003e Event","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"Logic ..\u003e Notification","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"@enduml","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"lordidiot":45}},{"path":"docs/diagrams/notification-system/InitEventsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"@startuml","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"participant \":MainApp\" as MainApp LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"[-\u003e MainApp : init()","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"activate MainApp","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"MainApp -\u003e MainApp : initEvents()","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"activate MainApp","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n:EventFactory\" as EventFactory LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"MainApp -\u003e EventFactory : createEvents(model)","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"activate EventFactory","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"EventFactory -\u003e EventFactory : createBirthdayEvents()","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"activate EventFactory","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"participant \":ModelFactory\" as ModelFactory MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"EventFactory -\u003e ModelFactory : getFilteredPersonList()","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"activate ModelFactory","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"ModelFactory --\u003e EventFactory : person list","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"deactivate ModelFactory","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"EventFactory -[hidden]-\u003e EventFactory","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"deactivate EventFactory","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"EventFactory --\u003e MainApp : events","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"deactivate EventFactory","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"loop until end iterating event list","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"MainApp -\u003e ModelFactory : addEvent","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"activate ModelFactory","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"deactivate ModelFactory","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"end","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"MainApp --\u003e MainApp","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"deactivate MainApp","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"MainApp -[hidden]-\u003e MainApp","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"[\u003c--MainApp","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"deactivate MainApp","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"@enduml","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"lordidiot":44}},{"path":"docs/diagrams/notification-system/StartupNotificationsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"@startuml","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"participant \":UiManager\" as UiManager UI_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"[-\u003e UiManager : start()","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"activate UiManager","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"participant \":MainWindow\" as MainWindow LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"UiManager -\u003e MainWindow : getStartupNotifications()","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"activate MainWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"MainWindow -\u003e LogicManager : getLatestNotifications(currentTime)","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"activate LogicManager","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"LogicManager --\u003e MainWindow : notifications","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"participant \":NotificationWindow\" as NotificationWindow UI_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"loop until end iterating notifications","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"create NotificationWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"MainWindow -\u003e NotificationWindow: NotificationWindow(root, ownerStage, notification)","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"activate NotificationWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"NotificationWindow -[hidden]-\u003e NotificationWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"deactivate NotificationWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"MainWindow -\u003e NotificationWindow: show()","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"activate NotificationWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"NotificationWindow -[hidden]-\u003e NotificationWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"deactivate NotificationWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"NotificationWindow -[hidden]-\u003e NotificationWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"destroy NotificationWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"NotificationWindow -[hidden]-\u003e NotificationWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"end","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"MainWindow --\u003e UiManager","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"deactivate MainWindow","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"UiManager -[hidden]-\u003e UiManager","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"[\u003c--UiManager","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"deactivate UiManager","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"@enduml","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"lordidiot":43}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"# CampusConnect","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"[![Java CI Status](https://github.com/AY2324S1-CS2103T-T13-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T13-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T13-2/tp/graph/badge.svg?token\u003dV0VMEEZQIF)](https://codecov.io/gh/AY2324S1-CS2103T-T13-2/tp)","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"**CampusConnect** is a desktop application built for **NUS students** living on campus to help them **stay organised**, **stay connected**, and **make the on-campus experience at NUS stress-free**. It is **optimised for use** via **Command Line Interface (CLI)** while benefiting from a **Graphical User Interface (GUI)**.","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"* If you are interested in using CampusConnect, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"* If you are interested about developing CampusConnect, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lordidiot":6,"-":15}},{"path":"docs/team/conradsoon.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"VN-Hao"},"content":"  layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"VN-Hao"},"content":"  title: \"Conrad Soon\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"# Project: CampusConnect","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"VN-Hao"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"# Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"## Code Contributed","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"## Enhancements Implemented","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"## Contributions to the User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"## Contributions to the Developer Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"## Contributions to Team-Based Tasks","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"## Review / Mentoring Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"## Contributions Beyond the Project Team","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"# Contributions to the Developer Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"# Contributions to the User Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"kokrui":38,"VN-Hao":8}},{"path":"docs/team/kokrui.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"VN-Hao"},"content":"  layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"VN-Hao"},"content":"  title: \"Wong Kok Rui\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"# Project: CampusConnect","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"VN-Hao"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"# Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"## Code Contributed","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"## Enhancements Implemented","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"## Contributions to the User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"## Contributions to the Developer Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"## Contributions to Team-Based Tasks","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"## Review / Mentoring Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"## Contributions Beyond the Project Team","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"# Contributions to the Developer Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"# Contributions to the User Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"kokrui":38,"VN-Hao":8}},{"path":"docs/team/limjunxian1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"VN-Hao"},"content":"  layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"VN-Hao"},"content":"  title: \"Lim Jun Xian\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"# Project: CampusConnect","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"VN-Hao"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"# Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"## Code Contributed","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"## Enhancements Implemented","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"## Contributions to the User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"## Contributions to the Developer Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"## Contributions to Team-Based Tasks","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"## Review / Mentoring Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"## Contributions Beyond the Project Team","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"# Contributions to the Developer Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"# Contributions to the User Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"kokrui":38,"VN-Hao":8}},{"path":"docs/team/lordidiot.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"VN-Hao"},"content":"  layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"VN-Hao"},"content":"  title: \"Calvin Fong\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"# Project: CampusConnect","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"VN-Hao"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"# Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"## Code Contributed","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"## Enhancements Implemented","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"## Contributions to the User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"## Contributions to the Developer Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"## Contributions to Team-Based Tasks","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"## Review / Mentoring Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"## Contributions Beyond the Project Team","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"# Contributions to the Developer Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"# Contributions to the User Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"kokrui":37,"VN-Hao":9}},{"path":"docs/team/vn-hao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"VN-Hao"},"content":"  layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"VN-Hao"},"content":"  title: \"Nguyen Phu Hao\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"# Project: CampusConnect","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"# Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"## Code Contributed","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"## Enhancements Implemented","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"## Contributions to the User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"## Contributions to the Developer Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"## Contributions to Team-Based Tasks","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"## Review / Mentoring Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"## Contributions Beyond the Project Team","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"# Contributions to the Developer Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"# Contributions to the User Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"VN-Hao"},"content":"to be added soon","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"kokrui":39,"VN-Hao":7}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.EventFactory;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"        initEvents(model);","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"lordidiot"},"content":"     * Initialises {@code Event} instances.","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"lordidiot"},"content":"     * @param model Model representing initial state.","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"lordidiot"},"content":"    private void initEvents(Model model) {","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"lordidiot"},"content":"        List\u003cEvent\u003e events \u003d EventFactory.createEvents(model);","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"lordidiot"},"content":"        for (Event event: events) {","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"lordidiot"},"content":"            model.addEvent(event);","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lordidiot":16,"-":186}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"     * Returns true if the {@code stringToCheck} contains the {@code substring}.","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"     *   Ignores case, and a full word match is not required.","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true // not a full word match","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"     * @param stringToCheck cannot be null","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"     * @param substring cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"    public static boolean containsSubstringIgnoreCase(String stringToCheck, String substring) {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"        requireNonNull(stringToCheck);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"        requireNonNull(substring);","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"        String preppedSubstring \u003d substring.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"        checkArgument(!preppedSubstring.isEmpty(), \"Substring parameter cannot be empty\");","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"        return stringToCheck.toLowerCase().contains(preppedSubstring.toLowerCase());","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kokrui":22,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.Notification;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"     * Returns the latest notifications.","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"     * @param currentDateTime Current time.","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"     * @return List of latest notifications.","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"    List\u003cNotification\u003e getLatestNotifications(LocalDateTime currentDateTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lordidiot":10,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.Notification;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"lordidiot"},"content":"    public List\u003cNotification\u003e getLatestNotifications(LocalDateTime currentDateTime) {","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"        return model.getEventList().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"                .map(event -\u003e event.getNotificationAtTime(currentDateTime))","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"lordidiot"},"content":"                .filter(Optional::isPresent)","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"                .map(Optional::orElseThrow)","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"lordidiot"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"lordidiot":14,"-":88}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"    public static final String MESSAGE_INVALID_NOTE_DISPLAYED_INDEX \u003d \"This note index is invalid!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"conradsoon":1,"-":51,"VN-Hao":2}},{"path":"src/main/java/seedu/address/logic/commands/AddAltCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINKEDIN;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SECONDARY_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":" * Adds alternative contact information to the specified person.","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"public class AddAltCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"    public static final String COMMAND_WORD \u003d \"addalt\";","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"            + \": Adds alternative contact of the person identified \"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"            + \"by the index number used in the last person listing.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"            + \"At least one field must be present.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"            + PREFIX_BIRTHDAY + \"[BIRTHDAY] \"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"            + PREFIX_TELEGRAM + \"[TELEGRAM] \"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"            + PREFIX_SECONDARY_EMAIL + \"[SECONDARY_EMAIL] \"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"            + PREFIX_LINKEDIN + \"[LINKEDIN]\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"            + PREFIX_TELEGRAM + \"johndoe_telegram\"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"            + PREFIX_SECONDARY_EMAIL + \"johndoe2@example.com\";","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"    public static final String MESSAGE_ADDALT_SUCCESS \u003d \"Added alternative contact information to Person: %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"    public static final String MESSAGE_ADDALT_DUPLICATE_EMAIL \u003d \"Secondary email is same as primary email \"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"            + \"for Person: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"    public static final String MESSAGE_ADDALT_FAILURE \u003d \"Person %s already has the following field(s) (%s). \"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"            + \"\\nTo change the corresponding fields, use the edit command.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"    private final Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"    private final AddAltPersonDescriptor addAltPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"     * Constructs a {@code AddAltCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"     * @param addAltPersonDescriptor details of the person to be updated to","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"    public AddAltCommand(Index index, AddAltPersonDescriptor addAltPersonDescriptor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"        requireAllNonNull(index, addAltPersonDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"        this.addAltPersonDescriptor \u003d addAltPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"limjunxian1"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"limjunxian1"},"content":"        Person editedPerson \u003d createAddAltPerson(personToEdit, addAltPersonDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"limjunxian1"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"limjunxian1"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"limjunxian1"},"content":"        return new CommandResult(String.format(MESSAGE_ADDALT_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"limjunxian1"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"limjunxian1"},"content":"     * updated with {@code addAltPersonDescriptor}.","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"limjunxian1"},"content":"     * @throws CommandException if the alternative contact information added to the person is not empty","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"limjunxian1"},"content":"     *      or when updated {@code personToEdit} has same primary and secondary email.","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"limjunxian1"},"content":"    private static Person createAddAltPerson(Person personToEdit, AddAltPersonDescriptor addAltPersonDescriptor)","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"limjunxian1"},"content":"            throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"limjunxian1"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"limjunxian1"},"content":"        Name name \u003d personToEdit.getName();","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"limjunxian1"},"content":"        Phone phone \u003d personToEdit.getPhone();","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"limjunxian1"},"content":"        Email email \u003d personToEdit.getEmail();","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"limjunxian1"},"content":"        Address address \u003d personToEdit.getAddress();","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"limjunxian1"},"content":"        Set\u003cTag\u003e tags \u003d personToEdit.getTags();","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"limjunxian1"},"content":"        Optional\u003cBirthday\u003e updatedBirthday \u003d personToEdit.getBirthday().or(() -\u003e addAltPersonDescriptor.getBirthday());","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"limjunxian1"},"content":"        Optional\u003cLinkedin\u003e updatedLinkedin \u003d personToEdit.getLinkedin().or(() -\u003e addAltPersonDescriptor.getLinkedin());","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"limjunxian1"},"content":"        Optional\u003cEmail\u003e updatedSecondaryEmail \u003d personToEdit.getSecondaryEmail()","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"limjunxian1"},"content":"                .or(() -\u003e addAltPersonDescriptor.getSecondaryEmail());","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"limjunxian1"},"content":"        Optional\u003cTelegram\u003e updatedTelegram \u003d personToEdit.getTelegram().or(() -\u003e addAltPersonDescriptor.getTelegram());","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"conradsoon"},"content":"        Optional\u003cInteger\u003e id \u003d personToEdit.getId();","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"conradsoon"},"content":"        ObservableList\u003cNote\u003e notes \u003d personToEdit.getNotes();","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"        Balance balance \u003d personToEdit.getBalance();","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"limjunxian1"},"content":"        Person updatedPerson \u003d new Person(name, phone, email, address, updatedBirthday, updatedLinkedin,","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"limjunxian1"},"content":"                updatedSecondaryEmail, updatedTelegram, tags, id, notes, balance);","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"limjunxian1"},"content":"        // Records down the alternative contact fields that are not initially empty.","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"limjunxian1"},"content":"        ArrayList\u003cString\u003e existingAlternativeContactFields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"limjunxian1"},"content":"        if (personToEdit.hasValidLinkedin() \u0026\u0026 addAltPersonDescriptor.hasValidLinkedin()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"limjunxian1"},"content":"            existingAlternativeContactFields.add(\"Linkedin\");","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"limjunxian1"},"content":"        if (personToEdit.hasValidBirthday() \u0026\u0026 addAltPersonDescriptor.hasValidBirthday()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"limjunxian1"},"content":"            existingAlternativeContactFields.add(\"Birthday\");","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"limjunxian1"},"content":"        if (personToEdit.hasValidSecondaryEmail() \u0026\u0026 addAltPersonDescriptor.hasValidSecondaryEmail()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"limjunxian1"},"content":"            existingAlternativeContactFields.add(\"Secondary Email\");","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"limjunxian1"},"content":"        if (personToEdit.hasValidTelegram() \u0026\u0026 addAltPersonDescriptor.hasValidTelegram()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"limjunxian1"},"content":"            existingAlternativeContactFields.add(\"Telegram\");","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"limjunxian1"},"content":"        if (!existingAlternativeContactFields.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"limjunxian1"},"content":"            String fields \u003d String.join(\", \", existingAlternativeContactFields);","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"limjunxian1"},"content":"            throw new CommandException(String.format(MESSAGE_ADDALT_FAILURE, name, fields));","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"limjunxian1"},"content":"        } else if (updatedPerson.hasRepeatedEmail()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"limjunxian1"},"content":"            throw new CommandException(String.format(MESSAGE_ADDALT_DUPLICATE_EMAIL, name));","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"limjunxian1"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"limjunxian1"},"content":"            return updatedPerson;","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"limjunxian1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"limjunxian1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"limjunxian1"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"limjunxian1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"limjunxian1"},"content":"        if (!(other instanceof AddAltCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"limjunxian1"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"limjunxian1"},"content":"        AddAltCommand otherAddAltCommand \u003d (AddAltCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"limjunxian1"},"content":"        return index.equals(otherAddAltCommand.index)","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"limjunxian1"},"content":"                \u0026\u0026 addAltPersonDescriptor.equals(otherAddAltCommand.addAltPersonDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"limjunxian1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"limjunxian1"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"limjunxian1"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"limjunxian1"},"content":"                .add(\"addAltPersonDescriptor\", addAltPersonDescriptor)","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"limjunxian1"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"limjunxian1"},"content":"     * Stores the alternative contact details to add the specified person with. Each empty alternative contact field","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"limjunxian1"},"content":"     * will be replaced by the corresponding field value specified by the user.","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"limjunxian1"},"content":"    public static class AddAltPersonDescriptor {","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"limjunxian1"},"content":"        private Birthday birthday;","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"limjunxian1"},"content":"        private Linkedin linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"limjunxian1"},"content":"        private Email secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"limjunxian1"},"content":"        private Telegram telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"limjunxian1"},"content":"        public AddAltPersonDescriptor() {}","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"limjunxian1"},"content":"        public void setBirthday(Birthday birthday) {","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"limjunxian1"},"content":"            this.birthday \u003d birthday;","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"limjunxian1"},"content":"        public Optional\u003cBirthday\u003e getBirthday() {","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"limjunxian1"},"content":"            return Optional.ofNullable(birthday);","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"limjunxian1"},"content":"        public boolean hasValidBirthday() {","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"limjunxian1"},"content":"            return birthday !\u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"limjunxian1"},"content":"        public void setLinkedin(Linkedin linkedin) {","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"limjunxian1"},"content":"            this.linkedin \u003d linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"limjunxian1"},"content":"        public Optional\u003cLinkedin\u003e getLinkedin() {","lastModifiedDate":"2023-11-01"},{"lineNumber":193,"author":{"gitId":"limjunxian1"},"content":"            return Optional.ofNullable(linkedin);","lastModifiedDate":"2023-11-01"},{"lineNumber":194,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"limjunxian1"},"content":"        public boolean hasValidLinkedin() {","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"limjunxian1"},"content":"            return linkedin !\u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"limjunxian1"},"content":"        public void setSecondaryEmail(Email email) {","lastModifiedDate":"2023-10-13"},{"lineNumber":200,"author":{"gitId":"limjunxian1"},"content":"            this.secondaryEmail \u003d email;","lastModifiedDate":"2023-10-13"},{"lineNumber":201,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":202,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"limjunxian1"},"content":"        public Optional\u003cEmail\u003e getSecondaryEmail() {","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"limjunxian1"},"content":"            return Optional.ofNullable(secondaryEmail);","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":206,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":207,"author":{"gitId":"limjunxian1"},"content":"        public boolean hasValidSecondaryEmail() {","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"limjunxian1"},"content":"            return secondaryEmail !\u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"limjunxian1"},"content":"        public void setTelegram(Telegram telegram) {","lastModifiedDate":"2023-10-13"},{"lineNumber":212,"author":{"gitId":"limjunxian1"},"content":"            this.telegram \u003d telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":213,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"limjunxian1"},"content":"        public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2023-11-01"},{"lineNumber":216,"author":{"gitId":"limjunxian1"},"content":"            return Optional.ofNullable(telegram);","lastModifiedDate":"2023-11-01"},{"lineNumber":217,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":218,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":219,"author":{"gitId":"limjunxian1"},"content":"        public boolean hasValidTelegram() {","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"limjunxian1"},"content":"            return telegram !\u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":222,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":223,"author":{"gitId":"limjunxian1"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":224,"author":{"gitId":"limjunxian1"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":225,"author":{"gitId":"limjunxian1"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":226,"author":{"gitId":"limjunxian1"},"content":"                return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":227,"author":{"gitId":"limjunxian1"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":228,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":229,"author":{"gitId":"limjunxian1"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":230,"author":{"gitId":"limjunxian1"},"content":"            if (!(other instanceof AddAltPersonDescriptor)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":231,"author":{"gitId":"limjunxian1"},"content":"                return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":232,"author":{"gitId":"limjunxian1"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":233,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":234,"author":{"gitId":"limjunxian1"},"content":"            AddAltPersonDescriptor otherAddAltPersonDescriptor \u003d (AddAltPersonDescriptor) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":235,"author":{"gitId":"limjunxian1"},"content":"            return Objects.equals(birthday, otherAddAltPersonDescriptor.birthday)","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"limjunxian1"},"content":"                    \u0026\u0026 Objects.equals(linkedin, otherAddAltPersonDescriptor.linkedin)","lastModifiedDate":"2023-10-13"},{"lineNumber":237,"author":{"gitId":"limjunxian1"},"content":"                    \u0026\u0026 Objects.equals(telegram, otherAddAltPersonDescriptor.telegram)","lastModifiedDate":"2023-10-13"},{"lineNumber":238,"author":{"gitId":"limjunxian1"},"content":"                    \u0026\u0026 Objects.equals(secondaryEmail, otherAddAltPersonDescriptor.secondaryEmail);","lastModifiedDate":"2023-10-13"},{"lineNumber":239,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":240,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":241,"author":{"gitId":"limjunxian1"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":242,"author":{"gitId":"limjunxian1"},"content":"        public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":243,"author":{"gitId":"limjunxian1"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":244,"author":{"gitId":"limjunxian1"},"content":"                    .add(\"birthday\", birthday)","lastModifiedDate":"2023-10-17"},{"lineNumber":245,"author":{"gitId":"limjunxian1"},"content":"                    .add(\"linkedin\", linkedin)","lastModifiedDate":"2023-10-13"},{"lineNumber":246,"author":{"gitId":"limjunxian1"},"content":"                    .add(\"secondaryEmail\", secondaryEmail)","lastModifiedDate":"2023-10-13"},{"lineNumber":247,"author":{"gitId":"limjunxian1"},"content":"                    .add(\"telegram\", telegram)","lastModifiedDate":"2023-10-13"},{"lineNumber":248,"author":{"gitId":"limjunxian1"},"content":"                    .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":249,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":250,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":251,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"limjunxian1":243,"conradsoon":4,"kokrui":2,"lordidiot":2}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"-":84,"VN-Hao":1}},{"path":"src/main/java/seedu/address/logic/commands/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":" * Adds a note to the person in the command book.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"    public static final String COMMAND_WORD \u003d \"addnote\";","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a note to the person \"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"        + \"identified by the index number used in the last person listing. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"        + \"Parameters: INDEX (must be a positive integer) NOTE_CONTENT\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 This is a sample note for the person.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"    public static final String MESSAGE_NOTE_SUCCESS \u003d \"Added note to person.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"    private final Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"    private final Note note;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"     * @param note details of the person to be updated to","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"    public AddNoteCommand(Index index, Note note) {","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"        requireAllNonNull(index, note);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"conradsoon"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"conradsoon"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"conradsoon"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"        Person p \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"        p.addNote(note);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"conradsoon"},"content":"        return new CommandResult(String.format(MESSAGE_NOTE_SUCCESS, Messages.format(p)));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"conradsoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"conradsoon"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"conradsoon"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"conradsoon"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"conradsoon"},"content":"        if (!(other instanceof AddNoteCommand)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"conradsoon"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"conradsoon"},"content":"        AddNoteCommand otherAddAltCommand \u003d (AddNoteCommand) other;","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"conradsoon"},"content":"        return index.equals(otherAddAltCommand.index)","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"conradsoon"},"content":"                \u0026\u0026 note.equals(otherAddAltCommand.note);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"conradsoon":66}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"-":23,"VN-Hao":1}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"-":20,"VN-Hao":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINKEDIN;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SECONDARY_EMAIL;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":" * Edits the details of an existing person.","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"            + \"Existing values must be non empty and will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"            + \"At least one field to edit must be provided.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"            + \"[\" + PREFIX_SECONDARY_EMAIL + \"SECONDARYEMAIL] \"","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"            + \"[\" + PREFIX_LINKEDIN + \"LINKEDIN] \"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"            + \"[\" + PREFIX_BIRTHDAY + \"BIRTHDAY] \"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM] \"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"    public static final String MESSAGE_NO_CHANGE \u003d \"The input fields of this person: %1$s you are editing\"","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"            + \" is the same.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"    public static final String MESSAGE_DUPLICATE_EMAIL \u003d \"Both primary and secondary email are the same \"","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"            + \"for Person: %1$s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"    public static final String MESSAGE_USE_ADDALT_COMMAND \u003d \"Empty alternative contact field(s): %s \\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"            + \"Use the addalt command to fill in the alternative contact fields.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"limjunxian1"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"limjunxian1"},"content":"            throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":123,"author":{"gitId":"limjunxian1"},"content":"        Optional\u003cBirthday\u003e updatedBirthday \u003d editPersonDescriptor.getBirthday().or(() -\u003e personToEdit.getBirthday());","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"limjunxian1"},"content":"        Optional\u003cLinkedin\u003e updatedLinkedin \u003d editPersonDescriptor.getLinkedin().or(() -\u003e personToEdit.getLinkedin());","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"limjunxian1"},"content":"        Optional\u003cEmail\u003e updatedSecondaryEmail \u003d editPersonDescriptor.getSecondaryEmail()","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"limjunxian1"},"content":"                .or(() -\u003e personToEdit.getSecondaryEmail());","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"limjunxian1"},"content":"        Optional\u003cTelegram\u003e updatedTelegram \u003d editPersonDescriptor.getTelegram().or(() -\u003e personToEdit.getTelegram());","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"conradsoon"},"content":"        Optional\u003cInteger\u003e id \u003d personToEdit.getId();","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"conradsoon"},"content":"        ObservableList\u003cNote\u003e notes \u003d personToEdit.getNotes();","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"kokrui"},"content":"        Balance balance \u003d personToEdit.getBalance();","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"limjunxian1"},"content":"        Person updatedPerson \u003d new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBirthday,","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"kokrui"},"content":"                updatedLinkedin, updatedSecondaryEmail, updatedTelegram, updatedTags, id, notes, balance);","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"limjunxian1"},"content":"        // Records down the alternative contact fields that are initially empty.","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"limjunxian1"},"content":"        ArrayList\u003cString\u003e emptyAlternativeContactFields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"limjunxian1"},"content":"        if (!personToEdit.hasValidLinkedin() \u0026\u0026 updatedPerson.hasValidLinkedin()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"limjunxian1"},"content":"            emptyAlternativeContactFields.add(\"Linkedin\");","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"limjunxian1"},"content":"        if (!personToEdit.hasValidBirthday() \u0026\u0026 updatedPerson.hasValidBirthday()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"limjunxian1"},"content":"            emptyAlternativeContactFields.add(\"Birthday\");","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"limjunxian1"},"content":"        if (!personToEdit.hasValidSecondaryEmail() \u0026\u0026 updatedPerson.hasValidSecondaryEmail()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"limjunxian1"},"content":"            emptyAlternativeContactFields.add(\"Secondary Email\");","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"limjunxian1"},"content":"        if (!personToEdit.hasValidTelegram() \u0026\u0026 updatedPerson.hasValidTelegram()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"limjunxian1"},"content":"            emptyAlternativeContactFields.add(\"Telegram\");","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"limjunxian1"},"content":"        if (!emptyAlternativeContactFields.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"limjunxian1"},"content":"            String fields \u003d String.join(\", \", emptyAlternativeContactFields);","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"limjunxian1"},"content":"            throw new CommandException(String.format(MESSAGE_USE_ADDALT_COMMAND, fields));","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"limjunxian1"},"content":"        } else if (updatedPerson.hasRepeatedEmail()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"limjunxian1"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_EMAIL, personToEdit.getName()));","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"limjunxian1"},"content":"        } else if (updatedPerson.equals(personToEdit)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"limjunxian1"},"content":"            throw new CommandException(String.format(MESSAGE_NO_CHANGE, updatedName));","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"limjunxian1"},"content":"        return updatedPerson;","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"limjunxian1"},"content":"        private Birthday birthday;","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"limjunxian1"},"content":"        private Linkedin linkedin;","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"limjunxian1"},"content":"        private Email secondaryEmail;","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"limjunxian1"},"content":"        private Telegram telegram;","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":214,"author":{"gitId":"limjunxian1"},"content":"            setSecondaryEmail(toCopy.secondaryEmail);","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"limjunxian1"},"content":"            setTelegram(toCopy.telegram);","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"limjunxian1"},"content":"            setBirthday(toCopy.birthday);","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"limjunxian1"},"content":"            setLinkedin(toCopy.linkedin);","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"limjunxian1"},"content":"        public void setLinkedin(Linkedin linkedin) {","lastModifiedDate":"2023-10-17"},{"lineNumber":254,"author":{"gitId":"limjunxian1"},"content":"            this.linkedin \u003d linkedin;","lastModifiedDate":"2023-10-17"},{"lineNumber":255,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":256,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":257,"author":{"gitId":"limjunxian1"},"content":"        public Optional\u003cLinkedin\u003e getLinkedin() {","lastModifiedDate":"2023-10-17"},{"lineNumber":258,"author":{"gitId":"limjunxian1"},"content":"            return Optional.ofNullable(linkedin);","lastModifiedDate":"2023-10-17"},{"lineNumber":259,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":260,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":261,"author":{"gitId":"limjunxian1"},"content":"        public void setBirthday(Birthday birthday) {","lastModifiedDate":"2023-10-17"},{"lineNumber":262,"author":{"gitId":"limjunxian1"},"content":"            this.birthday \u003d birthday;","lastModifiedDate":"2023-10-17"},{"lineNumber":263,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":264,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":265,"author":{"gitId":"limjunxian1"},"content":"        public Optional\u003cBirthday\u003e getBirthday() {","lastModifiedDate":"2023-10-17"},{"lineNumber":266,"author":{"gitId":"limjunxian1"},"content":"            return Optional.ofNullable(birthday);","lastModifiedDate":"2023-10-17"},{"lineNumber":267,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":268,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":269,"author":{"gitId":"limjunxian1"},"content":"        public void setTelegram(Telegram telegram) {","lastModifiedDate":"2023-10-17"},{"lineNumber":270,"author":{"gitId":"limjunxian1"},"content":"            this.telegram \u003d telegram;","lastModifiedDate":"2023-10-17"},{"lineNumber":271,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":272,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":273,"author":{"gitId":"limjunxian1"},"content":"        public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2023-10-17"},{"lineNumber":274,"author":{"gitId":"limjunxian1"},"content":"            return Optional.ofNullable(telegram);","lastModifiedDate":"2023-10-17"},{"lineNumber":275,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":276,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":277,"author":{"gitId":"limjunxian1"},"content":"        public void setSecondaryEmail(Email secondaryEmail) {","lastModifiedDate":"2023-10-17"},{"lineNumber":278,"author":{"gitId":"limjunxian1"},"content":"            this.secondaryEmail \u003d secondaryEmail;","lastModifiedDate":"2023-10-17"},{"lineNumber":279,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":280,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":281,"author":{"gitId":"limjunxian1"},"content":"        public Optional\u003cEmail\u003e getSecondaryEmail() {","lastModifiedDate":"2023-10-17"},{"lineNumber":282,"author":{"gitId":"limjunxian1"},"content":"            return Optional.ofNullable(secondaryEmail);","lastModifiedDate":"2023-10-17"},{"lineNumber":283,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":284,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":295,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":296,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":297,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":318,"author":{"gitId":"limjunxian1"},"content":"                    \u0026\u0026 Objects.equals(birthday, otherEditPersonDescriptor.birthday)","lastModifiedDate":"2023-10-18"},{"lineNumber":319,"author":{"gitId":"limjunxian1"},"content":"                    \u0026\u0026 Objects.equals(linkedin, otherEditPersonDescriptor.linkedin)","lastModifiedDate":"2023-10-18"},{"lineNumber":320,"author":{"gitId":"limjunxian1"},"content":"                    \u0026\u0026 Objects.equals(secondaryEmail, otherEditPersonDescriptor.secondaryEmail)","lastModifiedDate":"2023-10-18"},{"lineNumber":321,"author":{"gitId":"limjunxian1"},"content":"                    \u0026\u0026 Objects.equals(telegram, otherEditPersonDescriptor.telegram)","lastModifiedDate":"2023-10-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":333,"author":{"gitId":"limjunxian1"},"content":"                    .add(\"birthday\", birthday)","lastModifiedDate":"2023-10-18"},{"lineNumber":334,"author":{"gitId":"limjunxian1"},"content":"                    .add(\"linkedin\", linkedin)","lastModifiedDate":"2023-10-18"},{"lineNumber":335,"author":{"gitId":"limjunxian1"},"content":"                    .add(\"secondaryEmail\", secondaryEmail)","lastModifiedDate":"2023-10-18"},{"lineNumber":336,"author":{"gitId":"limjunxian1"},"content":"                    .add(\"telegram\", telegram)","lastModifiedDate":"2023-10-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"limjunxian1":104,"conradsoon":4,"kokrui":3,"lordidiot":1,"-":228}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"            + \"Parameters: [FIELD/KEYWORD] [MORE_FIELDS/MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice t/friends\";","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"    // FindCommand should be compared by identity, since we can\u0027t check for equality of predicates for now","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"kokrui":8,"-":39,"VN-Hao":1}},{"path":"src/main/java/seedu/address/logic/commands/OweCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":" * Owes the specified amount to the specified person.","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"public class OweCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"    public static final String COMMAND_WORD \u003d \"owe\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"            + \": Records a debt of the specified amount to the specified person.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"            + \"AMOUNT (must be a positive dollar amount, with maximum precision of 2 d.p. (cents))\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2.50\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Recorded debt of %1$s to %2$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"    private final Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"    private final Balance amount;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"     * Constructs a {@code OweCommand}.","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"     * @param amount details of the person to be updated to","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"    public OweCommand(Index index, Balance amount) {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"        requireAllNonNull(index, amount);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"        Balance negatedAmount \u003d new Balance(-amount.value);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"        Person p \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"        if (p.getBalance().wouldExceedBalanceLimit(negatedAmount)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"            throw new CommandException(Balance.MESSAGE_BALANCE_LIMIT_EXCEEDED);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"        p.pay(negatedAmount);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"        model.setPerson(p, p);","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, amount.toAbsoluteDollarString(),","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"                Messages.format(p)));","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"        if (!(other instanceof OweCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"        OweCommand e \u003d (OweCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"                \u0026\u0026 amount.equals(e.amount);","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kokrui":79}},{"path":"src/main/java/seedu/address/logic/commands/PayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":" * Pays the specified amount to the specified person.","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"public class PayCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"    public static final String COMMAND_WORD \u003d \"pay\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"            + \": Pays the specified amount to the specified person.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"            + \"AMOUNT (must be a positive dollar amount, with maximum precision of 2 d.p. (cents))\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2.50\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Recorded payment of %1$s to %2$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"    private final Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"    private final Balance amount;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"     * Constructs a {@code PayCommand}.","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"     * @param amount details of the person to be updated to","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"    public PayCommand(Index index, Balance amount) {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"        requireAllNonNull(index, amount);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"        Person p \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"        if (p.getBalance().wouldExceedBalanceLimit(amount)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"            throw new CommandException(Balance.MESSAGE_BALANCE_LIMIT_EXCEEDED);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"        p.pay(amount);","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"        model.setPerson(p, p);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, amount.toAbsoluteDollarString(),","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"                Messages.format(p)));","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"        if (!(other instanceof PayCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"        PayCommand e \u003d (PayCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"                \u0026\u0026 amount.equals(e.amount);","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kokrui":78}},{"path":"src/main/java/seedu/address/logic/commands/RemoveNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":" * Removes a note from the person in the command book based on the index of the person and the note.","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"public class RemoveNoteCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"    public static final String COMMAND_WORD \u003d \"removenote\";","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes the note from the person \"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"        + \"identified by the index number and the index of the note.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"        + \"Parameters: INDEX_PERSON INDEX_NOTE\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 2\";","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"    public static final String MESSAGE_REMOVE_NOTE_SUCCESS \u003d \"Removed note from person: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"    private final Index indexPerson;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"    private final Index indexNote;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"     * Creates a RemoveNoteCommand to remove the specified {@code Note} from the {@code Person}","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"     * @param indexPerson","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"     * @param indexNote","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"    public RemoveNoteCommand(Index indexPerson, Index indexNote) {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"        requireAllNonNull(indexPerson, indexNote);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"        this.indexPerson \u003d indexPerson;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"conradsoon"},"content":"        this.indexNote \u003d indexNote;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"conradsoon"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"        if (indexPerson.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"conradsoon"},"content":"        Person person \u003d lastShownList.get(indexPerson.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"        if (indexNote.getZeroBased() \u003e\u003d person.getNotes().size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"conradsoon"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"conradsoon"},"content":"        person.removeNote(indexNote.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"conradsoon"},"content":"        return new CommandResult(String.format(MESSAGE_REMOVE_NOTE_SUCCESS, person.getName().toString()));","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"conradsoon"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"conradsoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"conradsoon"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"conradsoon"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"conradsoon"},"content":"        if (!(other instanceof RemoveNoteCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"conradsoon"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"conradsoon"},"content":"        RemoveNoteCommand otherCommand \u003d (RemoveNoteCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"conradsoon"},"content":"        return indexPerson.equals(otherCommand.indexPerson)","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"conradsoon"},"content":"            \u0026\u0026 indexNote.equals(otherCommand.indexNote);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"conradsoon":73}},{"path":"src/main/java/seedu/address/logic/commands/UpdatePhotoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"VN-Hao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"VN-Hao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"VN-Hao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVATAR;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"VN-Hao"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"VN-Hao"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"VN-Hao"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"VN-Hao"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"VN-Hao"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"VN-Hao"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.model.person.Avatar;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.model.person.Linkedin;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"VN-Hao"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"VN-Hao"},"content":" * Updates the photo of an existing contact in the address book.","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"VN-Hao"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"VN-Hao"},"content":"public class UpdatePhotoCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"VN-Hao"},"content":"    public static final String COMMAND_WORD \u003d \"updatephoto\";","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"VN-Hao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates photo of a contact by \"","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"VN-Hao"},"content":"            + \"specifying his/her contact and path to the desired photo.\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"VN-Hao"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"VN-Hao"},"content":"            + PREFIX_AVATAR + \"[PATH]\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"VN-Hao"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"VN-Hao"},"content":"            + PREFIX_AVATAR + \"D:/image/cute_cat.png\";","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"VN-Hao"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Photo updated\";","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"VN-Hao"},"content":"    private final int zeroBasedIdx;","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"VN-Hao"},"content":"    private String path;","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"VN-Hao"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"VN-Hao"},"content":"     * Creates an UpdatePhotoCommand to replace the current photo","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"VN-Hao"},"content":"     * of a specific contact by the photo given by the path.","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"VN-Hao"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"VN-Hao"},"content":"     * @param idx one-based index of the contact to update photo","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"VN-Hao"},"content":"     * @param path String path to the photo to be used","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"VN-Hao"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"VN-Hao"},"content":"    public UpdatePhotoCommand(int idx, String path) {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"VN-Hao"},"content":"        zeroBasedIdx \u003d idx - 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"VN-Hao"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"VN-Hao"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"VN-Hao"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"VN-Hao"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"VN-Hao"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"VN-Hao"},"content":"        if (zeroBasedIdx \u003c 0 || zeroBasedIdx \u003e\u003d model.getFilteredPersonList().size()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"VN-Hao"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"VN-Hao"},"content":"        Person personToEdit \u003d lastShownList.get(zeroBasedIdx);","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"VN-Hao"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"VN-Hao"},"content":"            Person editedPerson \u003d copyPerson(personToEdit);","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"VN-Hao"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"VN-Hao"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"VN-Hao"},"content":"            throw new CommandException(\"Invalid file path provided\");","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"VN-Hao"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"VN-Hao"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"VN-Hao"},"content":"    private Person copyPerson(Person personToEdit) throws FileNotFoundException {","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"VN-Hao"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"VN-Hao"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"VN-Hao"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"VN-Hao"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"VN-Hao"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"VN-Hao"},"content":"        Optional\u003cBirthday\u003e updatedBirthday \u003d personToEdit.getBirthday();","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"VN-Hao"},"content":"        Optional\u003cLinkedin\u003e linkedin \u003d personToEdit.getLinkedin();","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"VN-Hao"},"content":"        Optional\u003cEmail\u003e secondaryEmail \u003d personToEdit.getSecondaryEmail();","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"VN-Hao"},"content":"        Optional\u003cTelegram\u003e telegram \u003d personToEdit.getTelegram();","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"VN-Hao"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"VN-Hao"},"content":"        Optional\u003cInteger\u003e id \u003d personToEdit.getId();","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"VN-Hao"},"content":"        Avatar avatar \u003d new Avatar(path);","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"VN-Hao"},"content":"        ObservableList\u003cNote\u003e notes \u003d personToEdit.getNotes();","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"VN-Hao"},"content":"        Balance balance \u003d personToEdit.getBalance();","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"VN-Hao"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBirthday,","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"VN-Hao"},"content":"                linkedin, secondaryEmail, telegram, updatedTags, id, avatar, notes, balance);","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"VN-Hao"},"content":"}","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"VN-Hao":109}},{"path":"src/main/java/seedu/address/logic/commands/ViewNotesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"import seedu.address.ui.NotesWindow;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":" * Opens a NotesWindow to view notes of the person in the address book.","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"public class ViewNotesCommand extends Command {","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"    public static final String COMMAND_WORD \u003d \"viewnotes\";","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Opens a window to view notes of the person \"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"        + \"identified by the index number used in the last person listing. \"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"    public static final String MESSAGE_VIEW_NOTES_SUCCESS \u003d \"Opened notes for person: %1$s\";","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"    private final int index;","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"     * @param index of the person in the filtered person list whose notes are to be viewed","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"    public ViewNotesCommand(int index) {","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"        if (index \u003e\u003d model.getFilteredPersonList().size() || index \u003c 0) {","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"        Person person \u003d model.getFilteredPersonList().get(index);","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"conradsoon"},"content":"            NotesWindow notesWindow \u003d new NotesWindow(person);","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"            notesWindow.show();","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"conradsoon"},"content":"        });","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_NOTES_SUCCESS, person.getName()));","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"conradsoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"conradsoon"},"content":"            return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"conradsoon"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"conradsoon"},"content":"        if (!(other instanceof ViewNotesCommand)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"conradsoon"},"content":"            return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"conradsoon"},"content":"        ViewNotesCommand otherViewNotesCommand \u003d (ViewNotesCommand) other;","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"conradsoon"},"content":"        return index \u003d\u003d otherViewNotesCommand.index;","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"conradsoon":62}},{"path":"src/main/java/seedu/address/logic/parser/AddAltCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINKEDIN;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SECONDARY_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.logic.commands.AddAltCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.logic.commands.AddAltCommand.AddAltPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":" * Parses input arguments and creates a new AddAltCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"public class AddAltCommandParser implements Parser\u003cAddAltCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAltCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"     * and returns an AddAltCommand object for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"     * @throws ParseException if the user input does not conform the expected format for AddAltCommand or if input","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"     *      fields do not follow the expected format.","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"    public AddAltCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_LINKEDIN, PREFIX_SECONDARY_EMAIL,","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"                        PREFIX_TELEGRAM, PREFIX_BIRTHDAY);","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"        Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"        String preamble \u003d argMultimap.getPreamble();","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"        if (preamble.isEmpty() || !arePrefixesPresent(argMultimap, PREFIX_LINKEDIN, PREFIX_SECONDARY_EMAIL,","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"                PREFIX_TELEGRAM, PREFIX_BIRTHDAY)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAltCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"            index \u003d ParserUtil.parseIndex(preamble);","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAltCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_LINKEDIN, PREFIX_SECONDARY_EMAIL,","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"                PREFIX_TELEGRAM, PREFIX_BIRTHDAY);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"        AddAltPersonDescriptor addAltPersonDescriptor \u003d new AddAltPersonDescriptor();","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"        if (argMultimap.getValue(PREFIX_LINKEDIN).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"            addAltPersonDescriptor.setLinkedin(ParserUtil.parseLinkedin(argMultimap.getValue(PREFIX_LINKEDIN).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"        if (argMultimap.getValue(PREFIX_SECONDARY_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"            addAltPersonDescriptor.setSecondaryEmail(ParserUtil.parseEmail(argMultimap","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"                    .getValue(PREFIX_SECONDARY_EMAIL).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"            addAltPersonDescriptor.setTelegram(ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDAY).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"            addAltPersonDescriptor.setBirthday(ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get()));","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"        return new AddAltCommand(index, addAltPersonDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"     * Returns true if at least one of the prefixes is present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"limjunxian1":70,"lordidiot":1,"VN-Hao":1}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"        if (!argMultimap.verifyPrefixesNonEmptyValues(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"kokrui":1,"-":52,"VN-Hao":2}},{"path":"src/main/java/seedu/address/logic/parser/AddNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":" * Parses input arguments and creates a new NoteCommand object.","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"public class AddNoteCommandParser implements Parser\u003cAddNoteCommand\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"     * Parses the given {@code String} of arguments in the context of the NoteCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"     * and returns a NoteCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"    public AddNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"            // Split based on space","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"            String[] splitArgs \u003d args.trim().split(\"\\\\s\", 2);","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"            if (splitArgs.length \u003c 2) {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"            Index index \u003d ParserUtil.parseIndex(splitArgs[0]);","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"            Note note \u003d new Note(splitArgs[1].trim());","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"            return new AddNoteCommand(index, note);","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"conradsoon":37}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.logic.commands.AddAltCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.commands.OweCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.commands.PayCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.RemoveNoteCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.logic.commands.UpdatePhotoCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.ViewNotesCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"        case AddAltCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"            return new AddAltCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"VN-Hao"},"content":"        case UpdatePhotoCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"VN-Hao"},"content":"            return new UpdatePhotoCommandParser().parse(arguments);","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"conradsoon"},"content":"        case AddNoteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"conradsoon"},"content":"            return new AddNoteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":96,"author":{"gitId":"conradsoon"},"content":"        case RemoveNoteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"conradsoon"},"content":"            return new RemoveNoteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"        case PayCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"            return new PayCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"        case OweCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"            return new OweCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"conradsoon"},"content":"        case ViewNotesCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"conradsoon"},"content":"            return new ViewNotesCommandParser().parse(arguments);","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"limjunxian1":4,"conradsoon":12,"kokrui":8,"-":86,"VN-Hao":7}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"    public boolean verifyPrefixesNonEmptyValues(Prefix... prefixes) {","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e this.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"kokrui":9,"-":78,"VN-Hao":2}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"    public static final Prefix PREFIX_TELEGRAM \u003d new Prefix(\"tg/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"    public static final Prefix PREFIX_SECONDARY_EMAIL \u003d new Prefix(\"e2/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"    public static final Prefix PREFIX_LINKEDIN \u003d new Prefix(\"li/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"VN-Hao"},"content":"    public static final Prefix PREFIX_AVATAR \u003d new Prefix(\"path/\");","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"    public static final Prefix PREFIX_BIRTHDAY \u003d new Prefix(\"b/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"nt/\");","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"    public static final Prefix PREFIX_BALANCE \u003d new Prefix(\"bal/\");","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"limjunxian1":4,"kokrui":2,"-":16,"VN-Hao":2}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINKEDIN;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SECONDARY_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"     * @throws ParseException if the user input does not conform the expected format of EditCommand or if input","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"     *      fields do not follow the expected format.","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"                        PREFIX_BIRTHDAY, PREFIX_SECONDARY_EMAIL, PREFIX_TELEGRAM, PREFIX_LINKEDIN, PREFIX_TAG);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"        String preamble \u003d argMultimap.getPreamble();","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"        if (preamble.isEmpty() || !arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_BIRTHDAY, PREFIX_SECONDARY_EMAIL,","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"                PREFIX_TELEGRAM, PREFIX_LINKEDIN, PREFIX_TAG)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"            index \u003d ParserUtil.parseIndex(preamble);","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"                PREFIX_BIRTHDAY, PREFIX_SECONDARY_EMAIL, PREFIX_TELEGRAM, PREFIX_LINKEDIN);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDAY).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"            editPersonDescriptor.setBirthday(ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"        if (argMultimap.getValue(PREFIX_LINKEDIN).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"limjunxian1"},"content":"            editPersonDescriptor.setLinkedin(ParserUtil.parseLinkedin(argMultimap.getValue(PREFIX_LINKEDIN).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"limjunxian1"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"            editPersonDescriptor.setTelegram(ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"limjunxian1"},"content":"        if (argMultimap.getValue(PREFIX_SECONDARY_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"limjunxian1"},"content":"            editPersonDescriptor.setSecondaryEmail(ParserUtil.parseEmail(argMultimap","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"limjunxian1"},"content":"                    .getValue(PREFIX_SECONDARY_EMAIL).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"limjunxian1"},"content":"     * Returns true if at least one of the prefixes is present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"limjunxian1"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"limjunxian1"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"},{"lineNumber":115,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"limjunxian1":38,"-":76,"VN-Hao":1}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.parser.FindFilterStringTokenizer.Token;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        FindFilterStringTokenizer tokenizer \u003d new FindFilterStringTokenizer(args);","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"        List\u003cToken\u003e tokens \u003d tokenizer.tokenize();","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"        FindExpressionParser parser \u003d new FindExpressionParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"        Predicate\u003cPerson\u003e checkAllFields \u003d parser.parseToPredicate(tokens);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"        return new FindCommand(checkAllFields);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"kokrui":12,"-":27,"VN-Hao":1}},{"path":"src/main/java/seedu/address/logic/parser/FindExpressionParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BALANCE;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINKEDIN;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SECONDARY_EMAIL;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.parser.FindFilterStringTokenizer.Token;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":" * Represents a parser that constructs and interprets expression trees","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":" * from tokenized search queries. This parser helps in translating user","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":" * input queries into predicates that can be applied to filter lists of","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":" * persons.","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":" * Uses a basic recursive-descent parsing strategy, since for now the","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":" * grammar is compact. Grammar for find command is given, in","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":" * Backus–Naur form (BNF) syntax, as follows:","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":" *","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":" *","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":" * \u003cexpression\u003e ::\u003d \u003cterm\u003e | \u003cterm\u003e \"||\" \u003cexpression\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":" * \u003cterm\u003e       ::\u003d \u003cfactor\u003e | \u003cfactor\u003e \"\u0026\u0026\" \u003cterm\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":" * \u003cfactor\u003e     ::\u003d \"!\" \u003cfactor\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":" *                | \"(\" \u003cexpression\u003e \")\"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":" *                | \u003ccondition\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":" * \u003ccondition\u003e  ::\u003d \u003cprefix\u003e \"/\" \u003ckeyword\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":" * \u003ckeyword\u003e    ::\u003d \u003ccharacter\u003e | \u003ccharacter\u003e \u003ckeyword\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":" * \u003cprefix\u003e     ::\u003d \"n\" | \"p\" | \"e\" | \"a\" | \"t\"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":" *","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":" *","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":" * Notice that an expression can be a term (if no OR is present)","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":" * which can itself be a factor (if no AND is present).","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":" *","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"public class FindExpressionParser {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"    private List\u003cToken\u003e tokens;","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"    private int pos \u003d 0;","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"     * Parses a list of tokens into an expression tree, and returns","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"     * the final predicate that the ast resolves to.","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"     * @param tokens The list of tokens to be parsed.","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"     * @return The predicate representing the tokens when parsed into an expression tree.","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"    public Predicate\u003cPerson\u003e parseToPredicate(List\u003cToken\u003e tokens) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"        if (tokens.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"            throw new ParseException(\"Expression is empty!\");","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"        ExprNode completedAst \u003d expression();","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"        if (!isAtEnd()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"            throw new ParseException(\"Find command received an invalid filter string!\");","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"        return completedAst.toPredicate();","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"     * Parses and constructs an \"expression\" node from the current list of tokens.","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"     * In the context of parsers and grammars, an \"expression\" is a higher-level construct representing","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"     * a combination of one or more \"terms\". The terms within an expression are typically combined","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"     * using the OR operator. For example, in a query \"n/Bob OR (t/friends AND t/colleagues)\",","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"     * both \"n/Bob\" and \"(t/friends AND t/colleagues)\" are terms combined to form an expression.","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"     * @return The parsed expression node.","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"    private ExprNode expression() throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"        ExprNode node \u003d term();","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"        while (isNextTokenType(Token.Type.OR)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"            Token op \u003d consume(Token.Type.OR);","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"            ExprNode right \u003d term();","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"            node \u003d new BinaryOpNode(node, FindExpressionOperator.OR, right);","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"        return node;","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"     * Parses and constructs a \"term\" node from the current list of tokens.","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"     * In the context of parsers and grammars, a \"term\" is a mid-level construct that consists of one or more","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"     * \"factors\". The factors within a term are usually combined using the AND operator. For instance,","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"     * in a query \"n/Bob AND t/friends\", both \"n/Bob\" and \"t/friends\" are factors combined to create a term.","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"     * @return The parsed term node.","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"    private ExprNode term() throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"        ExprNode node \u003d factor();","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"        while (isNextTokenType(Token.Type.AND)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"            Token op \u003d consume(Token.Type.AND);","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"            ExprNode right \u003d factor();","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"kokrui"},"content":"            node \u003d new BinaryOpNode(node, FindExpressionOperator.AND, right);","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"kokrui"},"content":"        return node;","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"kokrui"},"content":"     * Parses and constructs a \"factor\" node from the current list of tokens.","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"kokrui"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"kokrui"},"content":"     * A \"factor\" is a foundational construct in this parser. It\u0027s the most granular unit and represents","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"kokrui"},"content":"     * a single condition or criteria in the query. Factors are building blocks for terms and expressions.","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"kokrui"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"kokrui"},"content":"     * @return The parsed factor node.","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"kokrui"},"content":"    private ExprNode factor() throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"kokrui"},"content":"        if (isNextTokenType(Token.Type.NOT)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"kokrui"},"content":"            consume(Token.Type.NOT);","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"kokrui"},"content":"            ExprNode node \u003d factor();","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"kokrui"},"content":"            return new NotNode(node);","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"kokrui"},"content":"        } else if (isNextTokenType(Token.Type.LPAREN)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"kokrui"},"content":"            consume(Token.Type.LPAREN);","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"kokrui"},"content":"            ExprNode node \u003d expression();","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"kokrui"},"content":"            consume(Token.Type.RPAREN);","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"kokrui"},"content":"            return node;","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"kokrui"},"content":"        } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"kokrui"},"content":"            Token token \u003d consume(Token.Type.CONDITION);","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"kokrui"},"content":"            // check if text contains a slash and is a valid condition","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"kokrui"},"content":"            if (!token.text.contains(\"/\") || token.text.startsWith(\"/\") || token.text.endsWith(\"/\")) {","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"kokrui"},"content":"                throw new ParseException(\"Invalid condition: \" + token.text);","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"kokrui"},"content":"            // split by slash but include slash in substrings","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"kokrui"},"content":"            String[] parts \u003d token.text.split(\"(?\u003c\u003d/)\");","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"kokrui"},"content":"            FindSupportedField field \u003d FindSupportedField.createFromPrefix(parts[0].trim().toLowerCase());","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"kokrui"},"content":"            // remove double-quotes around keyword if present","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"kokrui"},"content":"            String keyword \u003d parts[1].trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"kokrui"},"content":"            if (keyword.startsWith(\"\\\"\") \u0026\u0026 keyword.endsWith(\"\\\"\")) {","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"kokrui"},"content":"                keyword \u003d keyword.substring(1, keyword.length() - 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"kokrui"},"content":"            if (keyword.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"kokrui"},"content":"                throw new ParseException(\"Invalid condition: Keyword cannot be empty!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"kokrui"},"content":"            return new ConditionNode(field, keyword);","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"kokrui"},"content":"    private boolean isNextTokenType(Token.Type type) {","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"kokrui"},"content":"        if (isAtEnd()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"kokrui"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":171,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"kokrui"},"content":"        return peek().type \u003d\u003d type;","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":174,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"kokrui"},"content":"    private Token consume(Token.Type type) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"kokrui"},"content":"        if (isNextTokenType(type)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"kokrui"},"content":"            return tokens.get(pos++);","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":179,"author":{"gitId":"kokrui"},"content":"        if (isAtEnd()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":180,"author":{"gitId":"kokrui"},"content":"            throw new ParseException(\"Find command received an invalid filter string: \"","lastModifiedDate":"2023-10-14"},{"lineNumber":181,"author":{"gitId":"kokrui"},"content":"                    + \"Expected token of type \" + type + \" but reached end of input!\");","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"kokrui"},"content":"        throw new ParseException(\"Find command received an invalid filter string: \"","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"kokrui"},"content":"                + \"Expected token of type \" + type + \" but found \" + peek().type);","lastModifiedDate":"2023-10-14"},{"lineNumber":185,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":186,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":187,"author":{"gitId":"kokrui"},"content":"    private Token peek() {","lastModifiedDate":"2023-10-14"},{"lineNumber":188,"author":{"gitId":"kokrui"},"content":"        return tokens.get(pos);","lastModifiedDate":"2023-10-14"},{"lineNumber":189,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":190,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":191,"author":{"gitId":"kokrui"},"content":"    private boolean isAtEnd() {","lastModifiedDate":"2023-10-14"},{"lineNumber":192,"author":{"gitId":"kokrui"},"content":"        return pos \u003d\u003d tokens.size();","lastModifiedDate":"2023-10-14"},{"lineNumber":193,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":194,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":195,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":196,"author":{"gitId":"kokrui"},"content":"     * Enum representing the logical operators supported by the parser.","lastModifiedDate":"2023-10-14"},{"lineNumber":197,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":198,"author":{"gitId":"kokrui"},"content":"    enum FindExpressionOperator {","lastModifiedDate":"2023-10-14"},{"lineNumber":199,"author":{"gitId":"kokrui"},"content":"        AND, OR","lastModifiedDate":"2023-10-14"},{"lineNumber":200,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":201,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":202,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":203,"author":{"gitId":"kokrui"},"content":"     * Enum representing the fields that can be searched.","lastModifiedDate":"2023-10-14"},{"lineNumber":204,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":205,"author":{"gitId":"kokrui"},"content":"    enum FindSupportedField {","lastModifiedDate":"2023-10-14"},{"lineNumber":206,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":207,"author":{"gitId":"kokrui"},"content":"        NAME(PREFIX_NAME.getPrefix()),","lastModifiedDate":"2023-10-14"},{"lineNumber":208,"author":{"gitId":"kokrui"},"content":"        PHONE(PREFIX_PHONE.getPrefix()),","lastModifiedDate":"2023-10-14"},{"lineNumber":209,"author":{"gitId":"kokrui"},"content":"        EMAIL(PREFIX_EMAIL.getPrefix()),","lastModifiedDate":"2023-10-14"},{"lineNumber":210,"author":{"gitId":"kokrui"},"content":"        ADDRESS(PREFIX_ADDRESS.getPrefix()),","lastModifiedDate":"2023-10-14"},{"lineNumber":211,"author":{"gitId":"kokrui"},"content":"        TAG(PREFIX_TAG.getPrefix()),","lastModifiedDate":"2023-10-30"},{"lineNumber":212,"author":{"gitId":"kokrui"},"content":"        BIRTHDAY(PREFIX_BIRTHDAY.getPrefix()),","lastModifiedDate":"2023-10-30"},{"lineNumber":213,"author":{"gitId":"kokrui"},"content":"        LINKEDIN(PREFIX_LINKEDIN.getPrefix()),","lastModifiedDate":"2023-10-30"},{"lineNumber":214,"author":{"gitId":"kokrui"},"content":"        SECONDARY_EMAIL(PREFIX_SECONDARY_EMAIL.getPrefix()),","lastModifiedDate":"2023-10-30"},{"lineNumber":215,"author":{"gitId":"kokrui"},"content":"        TELEGRAM(PREFIX_TELEGRAM.getPrefix()),","lastModifiedDate":"2023-10-30"},{"lineNumber":216,"author":{"gitId":"kokrui"},"content":"        NOTE(PREFIX_NOTE.getPrefix()),","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"kokrui"},"content":"        BALANCE(PREFIX_BALANCE.getPrefix());","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":219,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":220,"author":{"gitId":"kokrui"},"content":"        private final String prefix;","lastModifiedDate":"2023-10-14"},{"lineNumber":221,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":222,"author":{"gitId":"kokrui"},"content":"        FindSupportedField(String prefix) {","lastModifiedDate":"2023-10-14"},{"lineNumber":223,"author":{"gitId":"kokrui"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2023-10-14"},{"lineNumber":224,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":225,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":226,"author":{"gitId":"kokrui"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":227,"author":{"gitId":"kokrui"},"content":"         * Returns the corresponding field for a given prefix.","lastModifiedDate":"2023-10-14"},{"lineNumber":228,"author":{"gitId":"kokrui"},"content":"         *","lastModifiedDate":"2023-10-14"},{"lineNumber":229,"author":{"gitId":"kokrui"},"content":"         * @param prefix The prefix to look up.","lastModifiedDate":"2023-10-14"},{"lineNumber":230,"author":{"gitId":"kokrui"},"content":"         * @return The supported field corresponding to the given prefix.","lastModifiedDate":"2023-10-14"},{"lineNumber":231,"author":{"gitId":"kokrui"},"content":"         * @throws ParseException if the prefix is not supported.","lastModifiedDate":"2023-10-14"},{"lineNumber":232,"author":{"gitId":"kokrui"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":233,"author":{"gitId":"kokrui"},"content":"        public static FindSupportedField createFromPrefix(String prefix) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":234,"author":{"gitId":"kokrui"},"content":"            for (FindSupportedField field : FindSupportedField.values()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":235,"author":{"gitId":"kokrui"},"content":"                if (field.prefix.equals(prefix)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":236,"author":{"gitId":"kokrui"},"content":"                    return field;","lastModifiedDate":"2023-10-14"},{"lineNumber":237,"author":{"gitId":"kokrui"},"content":"                }","lastModifiedDate":"2023-10-14"},{"lineNumber":238,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":239,"author":{"gitId":"kokrui"},"content":"            throw new ParseException(\"No supported field with prefix \" + prefix);","lastModifiedDate":"2023-10-14"},{"lineNumber":240,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":241,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":242,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":243,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":244,"author":{"gitId":"kokrui"},"content":"     * Abstract class representing a node in the expression tree.","lastModifiedDate":"2023-10-14"},{"lineNumber":245,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":246,"author":{"gitId":"kokrui"},"content":"    private abstract static class ExprNode {","lastModifiedDate":"2023-10-17"},{"lineNumber":247,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":248,"author":{"gitId":"kokrui"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":249,"author":{"gitId":"kokrui"},"content":"         * Converts the expression node into a predicate for filtering persons.","lastModifiedDate":"2023-10-14"},{"lineNumber":250,"author":{"gitId":"kokrui"},"content":"         *","lastModifiedDate":"2023-10-14"},{"lineNumber":251,"author":{"gitId":"kokrui"},"content":"         * @return A predicate representing the conditions set by this node.","lastModifiedDate":"2023-10-14"},{"lineNumber":252,"author":{"gitId":"kokrui"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":253,"author":{"gitId":"kokrui"},"content":"        abstract Predicate\u003cPerson\u003e toPredicate() throws ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":255,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":256,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":257,"author":{"gitId":"kokrui"},"content":"     * Node representing a binary operation in the expression tree.","lastModifiedDate":"2023-10-14"},{"lineNumber":258,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":259,"author":{"gitId":"kokrui"},"content":"    static class BinaryOpNode extends ExprNode {","lastModifiedDate":"2023-10-14"},{"lineNumber":260,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":261,"author":{"gitId":"kokrui"},"content":"        final ExprNode left;","lastModifiedDate":"2023-10-14"},{"lineNumber":262,"author":{"gitId":"kokrui"},"content":"        final ExprNode right;","lastModifiedDate":"2023-10-14"},{"lineNumber":263,"author":{"gitId":"kokrui"},"content":"        final FindExpressionOperator operator;","lastModifiedDate":"2023-10-14"},{"lineNumber":264,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":265,"author":{"gitId":"kokrui"},"content":"        BinaryOpNode(ExprNode left, FindExpressionOperator operator, ExprNode right) {","lastModifiedDate":"2023-10-14"},{"lineNumber":266,"author":{"gitId":"kokrui"},"content":"            this.left \u003d left;","lastModifiedDate":"2023-10-14"},{"lineNumber":267,"author":{"gitId":"kokrui"},"content":"            this.operator \u003d operator;","lastModifiedDate":"2023-10-14"},{"lineNumber":268,"author":{"gitId":"kokrui"},"content":"            this.right \u003d right;","lastModifiedDate":"2023-10-14"},{"lineNumber":269,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":270,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":271,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":272,"author":{"gitId":"kokrui"},"content":"        Predicate\u003cPerson\u003e toPredicate() throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":273,"author":{"gitId":"kokrui"},"content":"            Predicate\u003cPerson\u003e leftPred \u003d left.toPredicate();","lastModifiedDate":"2023-10-14"},{"lineNumber":274,"author":{"gitId":"kokrui"},"content":"            Predicate\u003cPerson\u003e rightPred \u003d right.toPredicate();","lastModifiedDate":"2023-10-14"},{"lineNumber":275,"author":{"gitId":"kokrui"},"content":"            return (operator \u003d\u003d FindExpressionOperator.AND)","lastModifiedDate":"2023-10-14"},{"lineNumber":276,"author":{"gitId":"kokrui"},"content":"                    ? leftPred.and(rightPred)","lastModifiedDate":"2023-10-14"},{"lineNumber":277,"author":{"gitId":"kokrui"},"content":"                    : leftPred.or(rightPred);","lastModifiedDate":"2023-10-14"},{"lineNumber":278,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":279,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":280,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":281,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":282,"author":{"gitId":"kokrui"},"content":"     * Node representing a NOT operation in the expression tree.","lastModifiedDate":"2023-10-14"},{"lineNumber":283,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":284,"author":{"gitId":"kokrui"},"content":"    static class NotNode extends ExprNode {","lastModifiedDate":"2023-10-14"},{"lineNumber":285,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":286,"author":{"gitId":"kokrui"},"content":"        final ExprNode operand;","lastModifiedDate":"2023-10-14"},{"lineNumber":287,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":288,"author":{"gitId":"kokrui"},"content":"        NotNode(ExprNode operand) {","lastModifiedDate":"2023-10-14"},{"lineNumber":289,"author":{"gitId":"kokrui"},"content":"            this.operand \u003d operand;","lastModifiedDate":"2023-10-14"},{"lineNumber":290,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":291,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":292,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":293,"author":{"gitId":"kokrui"},"content":"        Predicate\u003cPerson\u003e toPredicate() throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":294,"author":{"gitId":"kokrui"},"content":"            return operand.toPredicate().negate();","lastModifiedDate":"2023-10-14"},{"lineNumber":295,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":296,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":297,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":298,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":299,"author":{"gitId":"kokrui"},"content":"     * Node representing a condition in the expression tree.","lastModifiedDate":"2023-10-14"},{"lineNumber":300,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":301,"author":{"gitId":"kokrui"},"content":"    static class ConditionNode extends ExprNode {","lastModifiedDate":"2023-10-14"},{"lineNumber":302,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":303,"author":{"gitId":"kokrui"},"content":"        final FindSupportedField field;","lastModifiedDate":"2023-10-14"},{"lineNumber":304,"author":{"gitId":"kokrui"},"content":"        final String keyword;","lastModifiedDate":"2023-10-14"},{"lineNumber":305,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":306,"author":{"gitId":"kokrui"},"content":"        ConditionNode(FindSupportedField field, String keyword) {","lastModifiedDate":"2023-10-14"},{"lineNumber":307,"author":{"gitId":"kokrui"},"content":"            this.field \u003d field;","lastModifiedDate":"2023-10-14"},{"lineNumber":308,"author":{"gitId":"kokrui"},"content":"            this.keyword \u003d keyword;","lastModifiedDate":"2023-10-14"},{"lineNumber":309,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":310,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":311,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":312,"author":{"gitId":"kokrui"},"content":"        Predicate\u003cPerson\u003e toPredicate() throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":313,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":314,"author":{"gitId":"kokrui"},"content":"            requireNonNull(field);","lastModifiedDate":"2023-10-31"},{"lineNumber":315,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":316,"author":{"gitId":"kokrui"},"content":"            switch (field) {","lastModifiedDate":"2023-10-14"},{"lineNumber":317,"author":{"gitId":"kokrui"},"content":"            case NAME:","lastModifiedDate":"2023-10-14"},{"lineNumber":318,"author":{"gitId":"kokrui"},"content":"                return person -\u003e StringUtil.containsSubstringIgnoreCase(person.getName().fullName, keyword);","lastModifiedDate":"2023-10-14"},{"lineNumber":319,"author":{"gitId":"kokrui"},"content":"            case PHONE:","lastModifiedDate":"2023-10-14"},{"lineNumber":320,"author":{"gitId":"kokrui"},"content":"                return person -\u003e StringUtil.containsSubstringIgnoreCase(person.getPhone().value, keyword);","lastModifiedDate":"2023-10-14"},{"lineNumber":321,"author":{"gitId":"kokrui"},"content":"            case EMAIL:","lastModifiedDate":"2023-10-14"},{"lineNumber":322,"author":{"gitId":"kokrui"},"content":"                return person -\u003e StringUtil.containsSubstringIgnoreCase(person.getEmail().value, keyword);","lastModifiedDate":"2023-10-14"},{"lineNumber":323,"author":{"gitId":"kokrui"},"content":"            case ADDRESS:","lastModifiedDate":"2023-10-14"},{"lineNumber":324,"author":{"gitId":"kokrui"},"content":"                return person -\u003e StringUtil.containsSubstringIgnoreCase(person.getAddress().value, keyword);","lastModifiedDate":"2023-10-14"},{"lineNumber":325,"author":{"gitId":"kokrui"},"content":"            case TAG:","lastModifiedDate":"2023-10-14"},{"lineNumber":326,"author":{"gitId":"kokrui"},"content":"                // Tags are slightly more complicated -- a person passes the predicate if the tag","lastModifiedDate":"2023-10-14"},{"lineNumber":327,"author":{"gitId":"kokrui"},"content":"                // specified is a member of the person\u0027s tag set. The specified tag must be an exact","lastModifiedDate":"2023-10-14"},{"lineNumber":328,"author":{"gitId":"kokrui"},"content":"                // match, not a substring match.","lastModifiedDate":"2023-10-14"},{"lineNumber":329,"author":{"gitId":"kokrui"},"content":"                return person -\u003e person.getTags().contains(new Tag(keyword));","lastModifiedDate":"2023-10-14"},{"lineNumber":330,"author":{"gitId":"kokrui"},"content":"            // For optional fields, we need to check if the optional is present before applying the predicate.","lastModifiedDate":"2023-10-30"},{"lineNumber":331,"author":{"gitId":"kokrui"},"content":"            // If the optional field is not present, we return false no matter what the substring is.","lastModifiedDate":"2023-10-30"},{"lineNumber":332,"author":{"gitId":"kokrui"},"content":"            case BIRTHDAY:","lastModifiedDate":"2023-10-30"},{"lineNumber":333,"author":{"gitId":"kokrui"},"content":"                return person -\u003e StringUtil.containsSubstringIgnoreCase(person.getBirthday()","lastModifiedDate":"2023-10-30"},{"lineNumber":334,"author":{"gitId":"kokrui"},"content":"                        .map(Birthday::toString).orElse(\"\"), keyword);","lastModifiedDate":"2023-10-30"},{"lineNumber":335,"author":{"gitId":"kokrui"},"content":"            case LINKEDIN:","lastModifiedDate":"2023-10-30"},{"lineNumber":336,"author":{"gitId":"kokrui"},"content":"                return person -\u003e StringUtil.containsSubstringIgnoreCase(person.getLinkedin()","lastModifiedDate":"2023-10-30"},{"lineNumber":337,"author":{"gitId":"kokrui"},"content":"                        .map(l -\u003e l.value).orElse(\"\"), keyword);","lastModifiedDate":"2023-10-30"},{"lineNumber":338,"author":{"gitId":"kokrui"},"content":"            case SECONDARY_EMAIL:","lastModifiedDate":"2023-10-30"},{"lineNumber":339,"author":{"gitId":"kokrui"},"content":"                return person -\u003e StringUtil.containsSubstringIgnoreCase(person.getSecondaryEmail()","lastModifiedDate":"2023-10-30"},{"lineNumber":340,"author":{"gitId":"kokrui"},"content":"                        .map(e -\u003e e.value).orElse(\"\"), keyword);","lastModifiedDate":"2023-10-30"},{"lineNumber":341,"author":{"gitId":"kokrui"},"content":"            case TELEGRAM:","lastModifiedDate":"2023-10-30"},{"lineNumber":342,"author":{"gitId":"kokrui"},"content":"                return person -\u003e StringUtil.containsSubstringIgnoreCase(person.getTelegram()","lastModifiedDate":"2023-10-30"},{"lineNumber":343,"author":{"gitId":"kokrui"},"content":"                        .map(t -\u003e t.value).orElse(\"\"), keyword);","lastModifiedDate":"2023-10-30"},{"lineNumber":344,"author":{"gitId":"kokrui"},"content":"            case NOTE:","lastModifiedDate":"2023-10-30"},{"lineNumber":345,"author":{"gitId":"kokrui"},"content":"                // Notes are slightly more complicated -- a person passes the predicate if the keyword","lastModifiedDate":"2023-10-30"},{"lineNumber":346,"author":{"gitId":"kokrui"},"content":"                // specified is a substring of any note in the person\u0027s note set. The specified keyword does","lastModifiedDate":"2023-10-30"},{"lineNumber":347,"author":{"gitId":"kokrui"},"content":"                // not have to be an exact match of a full note, which makes this distinct from TAG.","lastModifiedDate":"2023-10-30"},{"lineNumber":348,"author":{"gitId":"kokrui"},"content":"                return person -\u003e person.getNotes().stream()","lastModifiedDate":"2023-10-30"},{"lineNumber":349,"author":{"gitId":"kokrui"},"content":"                        .anyMatch(note -\u003e StringUtil.containsSubstringIgnoreCase(note.toString(), keyword));","lastModifiedDate":"2023-10-30"},{"lineNumber":350,"author":{"gitId":"kokrui"},"content":"            case BALANCE:","lastModifiedDate":"2023-10-31"},{"lineNumber":351,"author":{"gitId":"kokrui"},"content":"                // Balances are slightly more complicated -- a person passes the predicate if the absolute","lastModifiedDate":"2023-10-31"},{"lineNumber":352,"author":{"gitId":"kokrui"},"content":"                // value of their balance is greater than or equal to the absolute value of the keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":353,"author":{"gitId":"kokrui"},"content":"                // which is parsed into a Balance but does support negative signs.","lastModifiedDate":"2023-10-31"},{"lineNumber":354,"author":{"gitId":"kokrui"},"content":"                try {","lastModifiedDate":"2023-10-31"},{"lineNumber":355,"author":{"gitId":"kokrui"},"content":"                    // if there is a negative sign at start of keyword, remove it but record isNegative","lastModifiedDate":"2023-10-31"},{"lineNumber":356,"author":{"gitId":"kokrui"},"content":"                    boolean isNegative \u003d keyword.trim().startsWith(\"-\");","lastModifiedDate":"2023-10-31"},{"lineNumber":357,"author":{"gitId":"kokrui"},"content":"                    String justBalanceString \u003d keyword.trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":358,"author":{"gitId":"kokrui"},"content":"                    if (isNegative) {","lastModifiedDate":"2023-10-31"},{"lineNumber":359,"author":{"gitId":"kokrui"},"content":"                        justBalanceString \u003d justBalanceString.replaceFirst(\"-\", \"\");","lastModifiedDate":"2023-10-31"},{"lineNumber":360,"author":{"gitId":"kokrui"},"content":"                    }","lastModifiedDate":"2023-10-31"},{"lineNumber":361,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":362,"author":{"gitId":"kokrui"},"content":"                    Balance inputBalance \u003d ParserUtil.parseBalance(justBalanceString);","lastModifiedDate":"2023-10-31"},{"lineNumber":363,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":364,"author":{"gitId":"kokrui"},"content":"                    if (isNegative) {","lastModifiedDate":"2023-10-31"},{"lineNumber":365,"author":{"gitId":"kokrui"},"content":"                        return person -\u003e person.getBalance().value \u003c\u003d -inputBalance.value;","lastModifiedDate":"2023-10-31"},{"lineNumber":366,"author":{"gitId":"kokrui"},"content":"                    } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":367,"author":{"gitId":"kokrui"},"content":"                        return person -\u003e person.getBalance().value \u003e\u003d inputBalance.value;","lastModifiedDate":"2023-10-31"},{"lineNumber":368,"author":{"gitId":"kokrui"},"content":"                    }","lastModifiedDate":"2023-10-31"},{"lineNumber":369,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":370,"author":{"gitId":"kokrui"},"content":"                } catch (NumberFormatException | ParseException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":371,"author":{"gitId":"kokrui"},"content":"                    throw new ParseException(\"Invalid balance format: \" + Balance.MESSAGE_CONSTRAINTS","lastModifiedDate":"2023-10-31"},{"lineNumber":372,"author":{"gitId":"kokrui"},"content":"                            + \"\\nAdditionally, when finding with a balance field, you can use\"","lastModifiedDate":"2023-10-31"},{"lineNumber":373,"author":{"gitId":"kokrui"},"content":"                            + \" a negative sign to find negative balances.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":374,"author":{"gitId":"kokrui"},"content":"                }","lastModifiedDate":"2023-10-14"},{"lineNumber":375,"author":{"gitId":"kokrui"},"content":"            default:","lastModifiedDate":"2023-10-31"},{"lineNumber":376,"author":{"gitId":"kokrui"},"content":"                throw new AssertionError(\"Invalid field type!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":377,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":378,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":379,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":380,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kokrui":380}},{"path":"src/main/java/seedu/address/logic/parser/FindFilterStringTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":" * Parses complex boolean find filter strings into tokens.","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"public class FindFilterStringTokenizer {","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"    private final String filterString;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"    private int pos \u003d 0;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"     * Constructs a FindFilterStringTokenizer.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"     * @param filterString the find filter string to tokenize.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"    public FindFilterStringTokenizer(String filterString) {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"        this.filterString \u003d filterString;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"     * Converts the provided find string into a list of tokens.","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"     * @return a list of tokens representing the filter string components","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"    List\u003cToken\u003e tokenize() throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"        List\u003cToken\u003e tokens \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"        while (pos \u003c filterString.length()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"            char current \u003d peek();","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"            if (Character.isWhitespace(current)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"                next();","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"            } else if (current \u003d\u003d \u0027\u0026\u0027 \u0026\u0026 peek(1) \u003d\u003d \u0027\u0026\u0027) {","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"                tokens.add(new Token(Token.Type.AND, \"\u0026\u0026\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"                pos +\u003d 2;","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"            } else if (current \u003d\u003d \u0027|\u0027 \u0026\u0026 peek(1) \u003d\u003d \u0027|\u0027) {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"                tokens.add(new Token(Token.Type.OR, \"||\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"                pos +\u003d 2;","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"            } else if (current \u003d\u003d \u0027!\u0027) {","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"                tokens.add(new Token(Token.Type.NOT, \"!\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"                pos++;","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"            } else if (current \u003d\u003d \u0027(\u0027 || current \u003d\u003d \u0027)\u0027) {","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"                tokens.add(new Token(current \u003d\u003d \u0027(\u0027","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"                        ? Token.Type.LPAREN","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"                        : Token.Type.RPAREN, String.valueOf(current)));","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"                pos++;","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"            } else if (isPartOfCondition(current)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"                StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"                while (pos \u003c filterString.length() \u0026\u0026 isPartOfCondition(peek())) {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"                    sb.append(next());","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"                    // When a \u0027/\u0027 is encountered, determine the next part of the condition.","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"                    if (sb.charAt(sb.length() - 1) \u003d\u003d \u0027/\u0027 \u0026\u0026 peek() \u003d\u003d \u0027\\\"\u0027) {","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"                        sb.append(next()); // Consume the opening double-quote","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"                        while (pos \u003c filterString.length() \u0026\u0026 peek() !\u003d \u0027\\\"\u0027) {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"                            sb.append(next());","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"                        }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"                        if (peek() \u003d\u003d \u0027\\\"\u0027) {","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"                            sb.append(next()); // Consume the closing double-quote","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"                        } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"                            throw new ParseException(\"Invalid filter string: \"","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"                                    + \"Unmatched double-quote in filter string!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"                        }","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"                        // Check that the closing double-quote is the end of the condition","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"                        if (sb.charAt(sb.length() - 1) \u003d\u003d \u0027\\\"\u0027 \u0026\u0026 isPartOfCondition(peek())) {","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"                            throw new ParseException(\"Invalid filter string: \"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"                                    + \"Closing double-quote should be the end of condition!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"                        }","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"                    }","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"                }","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"                tokens.add(new Token(Token.Type.CONDITION, sb.toString()));","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"            } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"                throw new ParseException(\"Invalid filter string: Syntax error!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"        return tokens;","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"    private boolean isPartOfCondition(char c) {","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"        return Character.isLetterOrDigit(c)","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"                || c \u003d\u003d \u0027/\u0027 || c \u003d\u003d \u0027,\u0027 || c \u003d\u003d \u0027@\u0027 || c \u003d\u003d \u0027.\u0027 || c \u003d\u003d \u0027-\u0027","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"                || c \u003d\u003d \u0027_\u0027 || c \u003d\u003d \u0027#\u0027 || c \u003d\u003d \u0027$\u0027 || c \u003d\u003d \u0027\\\"\u0027;","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"    private char next() {","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"        return filterString.charAt(pos++);","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"    private char peek() {","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"        return (pos \u003c filterString.length())","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"                ? filterString.charAt(pos)","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"                : \u0027\\0\u0027;","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"    private char peek(int relativePosition) {","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"        return ((pos + relativePosition) \u003c filterString.length())","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"                ? filterString.charAt(pos + relativePosition)","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"                : \u0027\\0\u0027;","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"     * Represents a component (token) in the boolean filter string.","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"    public static class Token {","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"        final Type type;","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"        final String text;","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"kokrui"},"content":"         * Constructs a token.","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"kokrui"},"content":"         *","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"kokrui"},"content":"         * @param type the type of the token.","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"kokrui"},"content":"         * @param text the text representing the token in the filter string.","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"kokrui"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"kokrui"},"content":"        Token(Type type, String text) {","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"kokrui"},"content":"            this.type \u003d type;","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"kokrui"},"content":"            this.text \u003d text;","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"kokrui"},"content":"        public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"kokrui"},"content":"            return type + \":\" + text;","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"kokrui"},"content":"        enum Type {","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"kokrui"},"content":"            AND, OR, NOT, LPAREN, RPAREN, CONDITION","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"kokrui":139}},{"path":"src/main/java/seedu/address/logic/parser/OweCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.commands.OweCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":" * Parses input arguments and creates a new OweCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"public class OweCommandParser implements Parser\u003cOweCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"     * Parses the given {@code String} of arguments in the context of the OweCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"     * and returns a OweCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"    public OweCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"        String[] splitArgs \u003d args.trim().split(\"\\\\s\", 2);","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"        if (splitArgs.length \u003c 2) {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"                    OweCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"        Index index \u003d ParserUtil.parseIndex(splitArgs[0]);","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        Balance balance \u003d ParserUtil.parseBalance(splitArgs[1].trim());","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"        return new OweCommand(index, balance);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kokrui":34}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.model.person.Birthday.FORMATTER;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"limjunxian1"},"content":"     * Parses a {@code String birthday} into an {@code Birthday}.","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"limjunxian1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"limjunxian1"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"limjunxian1"},"content":"     * @throws ParseException if the given {@code birthday} is invalid or doesn\u0027t follow the specified format.","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"limjunxian1"},"content":"    public static Birthday parseBirthday(String birthday) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"limjunxian1"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"limjunxian1"},"content":"        String trimmedBirthday \u003d birthday.trim();","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"limjunxian1"},"content":"            return new Birthday(MonthDay.parse(trimmedBirthday, FORMATTER));","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"limjunxian1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"limjunxian1"},"content":"            throw new ParseException(Birthday.MESSAGE_INVALID);","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"limjunxian1"},"content":"     * Parses a {@code String linkedin} into an {@code Linkedin}.","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"limjunxian1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"limjunxian1"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"limjunxian1"},"content":"     * @throws ParseException if the given {@code linkedin} is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"limjunxian1"},"content":"    public static Linkedin parseLinkedin(String linkedin) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"limjunxian1"},"content":"        requireNonNull(linkedin);","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"limjunxian1"},"content":"        String trimmedLinkedin \u003d linkedin.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"limjunxian1"},"content":"        if (!Linkedin.isValidLinkedin(trimmedLinkedin)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"limjunxian1"},"content":"            throw new ParseException(Linkedin.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"limjunxian1"},"content":"        return new Linkedin(trimmedLinkedin);","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"limjunxian1"},"content":"     * Parses a {@code String telegram} into an {@code Telegram}.","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"limjunxian1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"limjunxian1"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"limjunxian1"},"content":"     * @throws ParseException if the given {@code telegram} is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"limjunxian1"},"content":"    public static Telegram parseTelegram(String telegram) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"limjunxian1"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"limjunxian1"},"content":"        String trimmedTelegram \u003d telegram.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"limjunxian1"},"content":"        if (!Telegram.isValidTelegram(trimmedTelegram)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"limjunxian1"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"limjunxian1"},"content":"        return new Telegram(trimmedTelegram);","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":177,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"kokrui"},"content":"     * Parses a {@code String balance} into a {@code Balance}.","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"kokrui"},"content":"     * Handles the conversion of a dollar amount into cents.","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"kokrui"},"content":"    public static Balance parseBalance(String balance) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"kokrui"},"content":"        requireNonNull(balance);","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"kokrui"},"content":"        String trimmedBalance \u003d balance.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"kokrui"},"content":"        if (!Balance.isValidDollarString(trimmedBalance)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"kokrui"},"content":"            throw new ParseException(Balance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"kokrui"},"content":"        // Remove the dollar sign if it exists","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"kokrui"},"content":"        String dollarAmount \u003d trimmedBalance.replace(\"$\", \"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"kokrui"},"content":"        // Split the string at the decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"kokrui"},"content":"        String[] parts \u003d dollarAmount.split(\"\\\\.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"kokrui"},"content":"        // Strip leading zeros from the dollar part","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"kokrui"},"content":"        parts[0] \u003d parts[0].replaceFirst(\"^0+(?!$)\", \"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"kokrui"},"content":"        // Check that the dollar amount does not clearly exceed 5 digits.","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"kokrui"},"content":"        // This prevents integer overflow when converting to cents and when","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"kokrui"},"content":"        // performing validation in subsequent pay / owe operations.","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"kokrui"},"content":"        if (parts[0].length() \u003e 5) {","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"kokrui"},"content":"            throw new ParseException(Balance.MESSAGE_BALANCE_LIMIT_EXCEEDED);","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"kokrui"},"content":"        // Convert the dollar part to cents","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"kokrui"},"content":"        int cents \u003d Integer.parseInt(parts[0]) * 100;","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"kokrui"},"content":"        // Add the cents part if it exists","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"kokrui"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"kokrui"},"content":"            if (parts[1].length() \u003d\u003d 1) {","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"kokrui"},"content":"                // If there\u0027s only one decimal place, multiply by 10 to get correct cents","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"kokrui"},"content":"                cents +\u003d Integer.parseInt(parts[1]) * 10;","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"kokrui"},"content":"            } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"kokrui"},"content":"                cents +\u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"kokrui"},"content":"        return new Balance(cents);","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"limjunxian1":52,"kokrui":47,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/PayCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.commands.PayCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":" * Parses input arguments and creates a new PayCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"public class PayCommandParser implements Parser\u003cPayCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"     * Parses the given {@code String} of arguments in the context of the PayCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"     * and returns a PayCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"    public PayCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"        String[] splitArgs \u003d args.trim().split(\"\\\\s\", 2);","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"        if (splitArgs.length \u003c 2) {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"                    PayCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"        Index index \u003d ParserUtil.parseIndex(splitArgs[0]);","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        Balance balance \u003d ParserUtil.parseBalance(splitArgs[1].trim());","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"        return new PayCommand(index, balance);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kokrui":34}},{"path":"src/main/java/seedu/address/logic/parser/RemoveNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.RemoveNoteCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":" * Parses input arguments and creates a new RemoveNoteCommand object.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"public class RemoveNoteCommandParser implements Parser\u003cRemoveNoteCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveNoteCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"     * and returns a RemoveNoteCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"    public RemoveNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"            // Split based on space","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"            String[] splitArgs \u003d args.trim().split(\"\\\\s\");","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"            if (splitArgs.length !\u003d 2) {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"                    RemoveNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"            Index indexPerson \u003d ParserUtil.parseIndex(splitArgs[0]);","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"            Index indexNote \u003d ParserUtil.parseIndex(splitArgs[1]);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"            return new RemoveNoteCommand(indexPerson, indexNote);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"                RemoveNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"conradsoon":38}},{"path":"src/main/java/seedu/address/logic/parser/UpdatePhotoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"VN-Hao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"VN-Hao"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"VN-Hao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVATAR;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"VN-Hao"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.logic.commands.UpdatePhotoCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"VN-Hao"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"VN-Hao"},"content":" * Parses input arguments and creates a new UpdatePhotoCommand object.","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"VN-Hao"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"VN-Hao"},"content":"public class UpdatePhotoCommandParser implements Parser\u003cUpdatePhotoCommand\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"VN-Hao"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"VN-Hao"},"content":"     * Creates an UpdatePhotoCommand from input arguments.","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"VN-Hao"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"VN-Hao"},"content":"     * @param args String command input by user.","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"VN-Hao"},"content":"     * @return An UpdatePhotoCommand to update photo of a specific contact.","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"VN-Hao"},"content":"     * @throws ParseException if the user input is not in the expected format.","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"VN-Hao"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"VN-Hao"},"content":"    public UpdatePhotoCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"VN-Hao"},"content":"        ArgumentMultimap commandElements \u003d ArgumentTokenizer.tokenize(args, PREFIX_AVATAR);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"VN-Hao"},"content":"        String index \u003d commandElements.getPreamble();","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"VN-Hao"},"content":"        Optional\u003cString\u003e photoPath \u003d commandElements.getValue(PREFIX_AVATAR);","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"VN-Hao"},"content":"        if (photoPath.isEmpty() || index.isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"VN-Hao"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdatePhotoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"VN-Hao"},"content":"        return new UpdatePhotoCommand(Integer.parseInt(index), photoPath.get());","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"VN-Hao"},"content":"}","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"VN-Hao":43}},{"path":"src/main/java/seedu/address/logic/parser/ViewNotesCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.ViewNotesCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":" * Parses input arguments and creates a new ViewNotesCommand object.","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"public class ViewNotesCommandParser implements Parser\u003cViewNotesCommand\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewNotesCommand","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"     * and returns a ViewNotesCommand object for execution.","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"    public ViewNotesCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"            String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"            if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewNotesCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"            Index index \u003d ParserUtil.parseIndex(trimmedArgs);","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"            return new ViewNotesCommand(index.getZeroBased());","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewNotesCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"conradsoon":33}},{"path":"src/main/java/seedu/address/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser.exceptions;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"-":17,"VN-Hao":2}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"conradsoon"},"content":"        if (p.getId().isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"conradsoon"},"content":"            p.setId(getNextID());","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"conradsoon"},"content":"    private int getNextID() {","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"conradsoon"},"content":"        //TODO: works for now, change later to something more efficient.","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"conradsoon"},"content":"        int maxID \u003d 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"conradsoon"},"content":"        for (Person p : persons) {","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"conradsoon"},"content":"            if (p.getId().isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"conradsoon"},"content":"                continue;","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"conradsoon"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"conradsoon"},"content":"            int id \u003d p.getId().get();","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"conradsoon"},"content":"            if (id \u003e maxID) {","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"conradsoon"},"content":"                maxID \u003d id;","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"conradsoon"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"conradsoon"},"content":"        return maxID + 1;","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"conradsoon":18,"-":129}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"lordidiot"},"content":"     * Adds event to track.","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"     * @param event Event to track.","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"    void addEvent(Event event);","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"     * Gets all events being tracked.","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"lordidiot"},"content":"     * @return List of events.","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"lordidiot"},"content":"    List\u003cEvent\u003e getEventList();","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lordidiot":14,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"    private ArrayList\u003cEvent\u003e events;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"        events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":137,"author":{"gitId":"lordidiot"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2023-10-10"},{"lineNumber":138,"author":{"gitId":"lordidiot"},"content":"        events.add(event);","lastModifiedDate":"2023-10-10"},{"lineNumber":139,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":140,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":141,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"lordidiot"},"content":"    public List\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"lordidiot"},"content":"        return events;","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lordidiot":15,"-":147}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.time.Duration;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":" * Represents an Event in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"public class Event {","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    private String title;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    private String description;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    private ArrayList\u003cDuration\u003e reminderDeltas;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"    private Set\u003cPerson\u003e members;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"     * Initialises {@code Event} instance.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"     * @param title Title of event.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"     * @param description Description of event.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"     * @param dateTime Date and time of event.","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    public Event(String title, String description, LocalDateTime dateTime) {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"        this.reminderDeltas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        this.members \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    public void addMember(Person member) {","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"        members.add(member);","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"    public void addReminder(Duration reminderDelta) {","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"        reminderDeltas.add(reminderDelta);","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"    private boolean shouldTriggerReminder(LocalDateTime currentDateTime) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"        // Should not remind if event has already passed","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"        if (currentDateTime.isAfter(dateTime)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"        for (Duration reminderDelta: reminderDeltas) {","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"            if (dateTime.minus(reminderDelta).isBefore(currentDateTime)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"                return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"        return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"     * Gets notification for event at a specific time.","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"     * @param currentDateTime Current time.","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"     * @return {@code Optional.empty()} if no suitable notifications, else returns the notification.","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"    public Optional\u003cNotification\u003e getNotificationAtTime(LocalDateTime currentDateTime) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"        if (shouldTriggerReminder(currentDateTime)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"            String description \u003d String.format(\"[%s] %s\", dateTime.format(formatter), this.description);","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"            return Optional.of(new Notification(title, description));","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"lordidiot":74}},{"path":"src/main/java/seedu/address/model/event/EventFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.time.Duration;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":" * EventFactory generates events from model state.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"public class EventFactory {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"     * Creates events from current model state.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"     * @param model {@code Model} representing current state of program.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"     * @return","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    public static List\u003cEvent\u003e createEvents(Model model) {","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"        events.addAll(createBirthdayEvents(model));","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"        // Reset model filter","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"        model.updateFilteredPersonList(p -\u003e true);","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"        return events;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"    private static List\u003cEvent\u003e createBirthdayEvents(Model model) {","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        model.updateFilteredPersonList(p -\u003e p.getBirthday().isPresent());","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        for (Person person: model.getFilteredPersonList()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"            Event event;","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"            LocalDate birthdayThisYear \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"                    person.getBirthday().orElseThrow().birthday.atYear(LocalDate.now().getYear());","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"            LocalDate birthdayNextYear \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"                    person.getBirthday().orElseThrow().birthday.atYear(","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"                            LocalDate.now().plusYears(1).getYear()","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"                    );","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"            // Birthday has not passed this year","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"            if (birthdayThisYear.isAfter(LocalDate.now())) {","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"                event \u003d new Event(","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"                        String.format(\"%s\u0027s Birthday\", person.getName()), \"\",","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"                        birthdayThisYear.atTime(0, 0)","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"                );","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"            } else {","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"                event \u003d new Event(","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"                        String.format(\"%s\u0027s Birthday\", person.getName()), \"\",","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"                        birthdayNextYear.atTime(0, 0)","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"                );","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"            event.addReminder(Duration.ofDays(1)); // Birthday reminder defaults to 1 day in advance","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"            event.addMember(person);","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"            events.add(event);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"        return events;","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"lordidiot":64}},{"path":"src/main/java/seedu/address/model/event/Notification.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":" * Encapsulates details of notifications.","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"public class Notification {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"    private final String title;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"    private final String description;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"     * Creates a notification.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"     * @param title Title of notification.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"     * @param description Description of notification.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    public Notification(String title, String description) {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"        requireAllNonNull(title, description);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"     * Gets title.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"     * @return Title of notification.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    public String getTitle() {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"        return title;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"     * Gets description.","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"     * @return Description of notification.","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"    public String getDescription() {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"        return description;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"lordidiot":38}},{"path":"src/main/java/seedu/address/model/person/Avatar.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"VN-Hao"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"VN-Hao"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"VN-Hao"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"VN-Hao"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"VN-Hao"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"VN-Hao"},"content":" * Represents displayed photo of a contact in the address book.","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"VN-Hao"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"VN-Hao"},"content":"public class Avatar {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"VN-Hao"},"content":"    private static final String DEFAULT_PATH \u003d \"/images/default_photo.png\";","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"VN-Hao"},"content":"    private String path \u003d DEFAULT_PATH;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"VN-Hao"},"content":"    public Avatar() {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"VN-Hao"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"VN-Hao"},"content":"     * Initializes an avatar based on a string path given.","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"VN-Hao"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"VN-Hao"},"content":"     * @param path Path to the photo to be used.","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"VN-Hao"},"content":"     * @throws FileNotFoundException if the path given is not valid.","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"VN-Hao"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"VN-Hao"},"content":"    public Avatar(String path) throws FileNotFoundException {","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"VN-Hao"},"content":"        new Image(new FileInputStream(path));","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"VN-Hao"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"VN-Hao"},"content":"    public Avatar(Avatar avatar) {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"VN-Hao"},"content":"        this.path \u003d avatar.getPath();","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"VN-Hao"},"content":"    public Image getImage() {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"VN-Hao"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"VN-Hao"},"content":"            return new Image(new FileInputStream(path));","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"VN-Hao"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"VN-Hao"},"content":"            return new Image(this.getClass().getResourceAsStream(DEFAULT_PATH));","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"VN-Hao"},"content":"    public String getPath() {","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"VN-Hao"},"content":"        return path;","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"VN-Hao"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"VN-Hao"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"VN-Hao"},"content":"        return path.hashCode();","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"VN-Hao"},"content":"}","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"VN-Hao":52}},{"path":"src/main/java/seedu/address/model/person/Balance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":" * Represents a Person\u0027s payment balance in the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":" * Guarantees: immutable; is valid as declared in {@link #isWithinLimits(Integer)}","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"public class Balance {","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"     * Message constraints for Balance when represented as a dollar string,","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"     * which is the format used for user input.","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Balance should be a valid dollar amount, \"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"            + \"with maximum precision of 2 d.p. / (cents).\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"            + \"A prepended dollar sign is optional, and dollar amount must be non-negative.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"            + \"Examples: 2.55, $55.1, $5, $0.01, 0.09, 0\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"    public static final String MESSAGE_BALANCE_LIMIT_EXCEEDED \u003d \"The maximum amount that can be \"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"            + \"owed to any contact in CampusConnect is $10,000.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"            + \"CampusConnect should only be used for casual transactions among friends.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"    public static final String MESSAGE_TRANSACTION_LIMIT_EXCEEDED \u003d \"The maximum amount that can be \"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"            + \"transacted in a single transaction in CampusConnect is $20,000.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"            + \"CampusConnect should only be used for casual transactions among friends.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"    public static final int MAX_VALUE \u003d 1000000;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"    public static final int MIN_VALUE \u003d -1000000;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"    public static final int TRANSACTION_LIMIT \u003d 2000000;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"     * Regex for Balance when represented as a dollar string,","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\$?\\\\d+(\\\\.\\\\d{1,2})?$\";","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"     * The balance in cents.","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"     * An integer representing cents is used instead of a double representing dollars","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"     * to avoid floating point precision issues, which is crucial since this is responsible","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"     * for tracking financial transactions.","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"    public final Integer value;","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"     * Constructs a {@code Balance}.","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"     * @param balanceInCents A valid balance in cents.","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"    public Balance(Integer balanceInCents) {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"        requireNonNull(balanceInCents);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"        checkArgument(Math.abs(balanceInCents) \u003c\u003d TRANSACTION_LIMIT,","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"                MESSAGE_TRANSACTION_LIMIT_EXCEEDED);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"        value \u003d balanceInCents;","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"     * Returns true if a given integer is within the balance limit.","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"    public static boolean isWithinLimits(Integer balance) {","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"        return balance \u003c\u003d MAX_VALUE \u0026\u0026 balance \u003e\u003d MIN_VALUE;","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"     * Returns true if a given string is a valid dollar string","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"     * which can be parsed into a cents amount.","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"    public static boolean isValidDollarString(String test) {","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"     * Returns a dollar string representation of the balance.","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"    public String toAbsoluteDollarString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"        return String.format(\"$%d.%02d\", Math.abs(value) / 100, Math.abs(value) % 100);","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"     * Returns a full message explaining the status of a Person\u0027s","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"     * balance with another Person, to be shown in a GUI.","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"    public String toUiMessage() {","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"        if (value \u003c 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"            return String.format(\"You owe them: %s\", toAbsoluteDollarString());","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"        return String.format(\"They owe you: %s\", toAbsoluteDollarString());","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"     * Adds the given balance to this balance.","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"     * @param other the balance to be added.","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"     * @return a new Balance object representing the sum of the two balances.","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"    public Balance add(Balance other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"        if (other \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"            return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"        return new Balance(this.value + other.value);","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"     * Returns true if the person would exceed the balance limit","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"     * after adding the given amount.","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"     * @param other the balance to be added.","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"     * @return true if the balance would exceed the limit once the given amount is added.","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"    public boolean wouldExceedBalanceLimit(Balance other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"        return this.value + other.value \u003e MAX_VALUE","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"                || this.value + other.value \u003c MIN_VALUE;","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"kokrui"},"content":"        return value.toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"kokrui"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"kokrui"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"kokrui"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"kokrui"},"content":"        if (!(other instanceof Balance)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"kokrui"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"kokrui"},"content":"        Balance otherBalance \u003d (Balance) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"kokrui"},"content":"        return value.equals(otherBalance.value);","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"kokrui"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"kokrui"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kokrui":141}},{"path":"src/main/java/seedu/address/model/person/Birthday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":" * Represents a Person\u0027s birthday in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":" * Guarantees: immutable;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"public class Birthday {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM\");","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"     * Message constraints for birthday which is the format used for user input.","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"    public static final String MESSAGE_INVALID \u003d \"Birthday should be in the format of dd/MM and should be a valid day.\"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"            + \"\\ne.g. 31/01\";","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    public final MonthDay birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"     * Constructs a {@code Birthday}.","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"     * @param birthday A valid month and day of the person\u0027s birthday.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"    public Birthday(MonthDay birthday) {","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"        String monthWord \u003d birthday.getMonth().getDisplayName(TextStyle.FULL, Locale.getDefault());","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"        int day \u003d birthday.getDayOfMonth();","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"        return day + \" \" + monthWord;","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"        if (!(other instanceof Birthday)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"        Birthday otherBirthday \u003d (Birthday) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"        return birthday.equals(otherBirthday.birthday);","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"        return birthday.hashCode();","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"limjunxian1":10,"kokrui":5,"lordidiot":47}},{"path":"src/main/java/seedu/address/model/person/Linkedin.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":" * Represents a Person\u0027s linkedin in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLinkedin(String)}","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"public class Linkedin {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"     * Message constraints for Linkedin which is the format used for user input.","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Linkedin should not be blank, no whitespaces and alphanumeric \"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"            + \"characters only.\\ne.g. john-doe-b9a38128a, which is the unique username on the linkedin \"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"            + \"profile website.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"     * Regex for Linkedin when represented as the person\u0027s unique username on Linkedin.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?!\\\\s*$)[a-zA-Z0-9_-]+$\";","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"    public final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"     * Constructs an {@code Linkedin}.","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"     * @param linkedin A valid linkedin.","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"    public Linkedin(String linkedin) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"        requireNonNull(linkedin);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"        checkArgument(isValidLinkedin(linkedin), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"        value \u003d linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"     * Returns true if a given string is a valid linkedin handle.","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"    public static boolean isValidLinkedin(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"        return value;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"        if (!(other instanceof Linkedin)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"        Linkedin otherLinkedin \u003d (Linkedin) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"        return value.equals(otherLinkedin.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"limjunxian1":69}},{"path":"src/main/java/seedu/address/model/person/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":" * Represents a Note in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"public class Note {","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"    private final String text;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"    public Note() {","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"        this.text \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"    public Note(String note) {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"        this.text \u003d note;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"        return this.text;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"                || (other instanceof Note // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"                \u0026\u0026 text.equals(((Note) other).text)); // state check","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"        return text.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"conradsoon":33}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"    private Optional\u003cBirthday\u003e birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"    private Optional\u003cLinkedin\u003e linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"    private Optional\u003cEmail\u003e secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"    private Optional\u003cTelegram\u003e telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"    private Optional\u003cInteger\u003e id;","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"VN-Hao"},"content":"    private Avatar avatar \u003d new Avatar();","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"    private Balance balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"    private ObservableList\u003cNote\u003e notes;","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"        this.birthday \u003d Optional.empty();","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"        this.linkedin \u003d Optional.empty();","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"        this.secondaryEmail \u003d Optional.empty();","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"        this.telegram \u003d Optional.empty();","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"conradsoon"},"content":"        this.id \u003d Optional.empty();","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"conradsoon"},"content":"        this.notes \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"        this.balance \u003d new Balance(0);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"     * Constructor including optional fields.","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Optional\u003cBirthday\u003e birthday,","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"                  Optional\u003cLinkedin\u003e linkedin, Optional\u003cEmail\u003e secondaryEmail,","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"conradsoon"},"content":"                  Optional\u003cTelegram\u003e telegram, Set\u003cTag\u003e tags, Optional\u003cInteger\u003e id, ObservableList\u003cNote\u003e notes,","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"                  Balance balance) {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"        requireAllNonNull(name, phone, email, address, birthday, tags);","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"        this.linkedin \u003d linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"        this.secondaryEmail \u003d secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"conradsoon"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"conradsoon"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"        this.balance \u003d balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"VN-Hao"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"VN-Hao"},"content":"     * Constructor allowing to add all attributes.","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"VN-Hao"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"VN-Hao"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Optional\u003cBirthday\u003e birthday,","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"VN-Hao"},"content":"                  Optional\u003cLinkedin\u003e linkedin, Optional\u003cEmail\u003e secondaryEmail,","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"VN-Hao"},"content":"                  Optional\u003cTelegram\u003e telegram, Set\u003cTag\u003e tags, Optional\u003cInteger\u003e id,","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"VN-Hao"},"content":"                  Avatar avatar, ObservableList\u003cNote\u003e notes, Balance balance) {","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"VN-Hao"},"content":"        requireAllNonNull(name, phone, email, address, birthday, tags);","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"VN-Hao"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"VN-Hao"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"VN-Hao"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"VN-Hao"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"VN-Hao"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"VN-Hao"},"content":"        this.linkedin \u003d linkedin;","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"VN-Hao"},"content":"        this.secondaryEmail \u003d secondaryEmail;","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"VN-Hao"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"VN-Hao"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"VN-Hao"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"VN-Hao"},"content":"        this.avatar \u003d avatar;","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"VN-Hao"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"VN-Hao"},"content":"        this.balance \u003d balance;","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":121,"author":{"gitId":"lordidiot"},"content":"    public Optional\u003cBirthday\u003e getBirthday() {","lastModifiedDate":"2023-10-10"},{"lineNumber":122,"author":{"gitId":"lordidiot"},"content":"        return birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":123,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":124,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":125,"author":{"gitId":"limjunxian1"},"content":"    public Optional\u003cLinkedin\u003e getLinkedin() {","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"limjunxian1"},"content":"        return linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"limjunxian1"},"content":"    public Optional\u003cEmail\u003e getSecondaryEmail() {","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"limjunxian1"},"content":"        return secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"limjunxian1"},"content":"    public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"limjunxian1"},"content":"        return telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"VN-Hao"},"content":"    public Avatar getAvatar() {","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"VN-Hao"},"content":"        return avatar;","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"conradsoon"},"content":"     * Returns a set of non-emergency tags.","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"conradsoon"},"content":"     * @return","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"conradsoon"},"content":"    public Set\u003cTag\u003e getNonEmergencyTags() {","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"conradsoon"},"content":"        return tags.stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"conradsoon"},"content":"                .filter(tag -\u003e !Tag.EmergencyTags.isEmergencyTag(tag.tagName))","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"conradsoon"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"conradsoon"},"content":"     * Returns a set of emergency tags.","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"conradsoon"},"content":"     * @return","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"conradsoon"},"content":"    public Set\u003cTag\u003e getEmergencyTags() {","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"conradsoon"},"content":"        return tags.stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"conradsoon"},"content":"                .filter(tag -\u003e Tag.EmergencyTags.isEmergencyTag(tag.tagName))","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"conradsoon"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"conradsoon"},"content":"    public Optional\u003cInteger\u003e getId() {","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"conradsoon"},"content":"        return id;","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"kokrui"},"content":"    public Balance getBalance() {","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"kokrui"},"content":"        return balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"conradsoon"},"content":"    public int setId(int id) {","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"conradsoon"},"content":"        this.id \u003d Optional.of(id);","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"conradsoon"},"content":"        return id;","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":194,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"conradsoon"},"content":"     * Adds a note to the person.","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"conradsoon"},"content":"     * @param note","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"conradsoon"},"content":"    public void addNote(Note note) {","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"conradsoon"},"content":"        notes.add(note);","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"conradsoon"},"content":"     * Removes a note from the person.","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"conradsoon"},"content":"     * @param idx","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"conradsoon"},"content":"     * @throws Exception","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"conradsoon"},"content":"    public void removeNote(int idx) {","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"conradsoon"},"content":"        notes.remove(idx);","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":211,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"kokrui"},"content":"     * Sets new balance for the person by adding","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"kokrui"},"content":"     * given amount.","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"kokrui"},"content":"     * @param amount","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"kokrui"},"content":"    public void pay(Balance amount) {","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"kokrui"},"content":"        balance \u003d balance.add(amount);","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":240,"author":{"gitId":"limjunxian1"},"content":"                \u0026\u0026 telegram.equals(otherPerson.telegram)","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"limjunxian1"},"content":"                \u0026\u0026 linkedin.equals(otherPerson.linkedin)","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"limjunxian1"},"content":"                \u0026\u0026 birthday.equals(otherPerson.birthday)","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"limjunxian1"},"content":"                \u0026\u0026 secondaryEmail.equals(otherPerson.secondaryEmail)","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":247,"author":{"gitId":"conradsoon"},"content":"    public ObservableList\u003cNote\u003e getNotes() {","lastModifiedDate":"2023-10-30"},{"lineNumber":248,"author":{"gitId":"conradsoon"},"content":"        return notes;","lastModifiedDate":"2023-10-17"},{"lineNumber":249,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":250,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":251,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":252,"author":{"gitId":"limjunxian1"},"content":"     * Returns true if birthday has a value.","lastModifiedDate":"2023-10-17"},{"lineNumber":253,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":254,"author":{"gitId":"limjunxian1"},"content":"    public boolean hasValidBirthday() {","lastModifiedDate":"2023-10-17"},{"lineNumber":255,"author":{"gitId":"limjunxian1"},"content":"        return !birthday.equals(Optional.empty());","lastModifiedDate":"2023-10-17"},{"lineNumber":256,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":257,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":258,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":259,"author":{"gitId":"limjunxian1"},"content":"     * Returns true if linkedin has a value.","lastModifiedDate":"2023-10-17"},{"lineNumber":260,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":261,"author":{"gitId":"limjunxian1"},"content":"    public boolean hasValidLinkedin() {","lastModifiedDate":"2023-10-17"},{"lineNumber":262,"author":{"gitId":"limjunxian1"},"content":"        return !linkedin.equals(Optional.empty());","lastModifiedDate":"2023-10-17"},{"lineNumber":263,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":264,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":265,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":266,"author":{"gitId":"limjunxian1"},"content":"     * Returns true if secondaryEmail has a value.","lastModifiedDate":"2023-10-17"},{"lineNumber":267,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":268,"author":{"gitId":"limjunxian1"},"content":"    public boolean hasValidSecondaryEmail() {","lastModifiedDate":"2023-10-17"},{"lineNumber":269,"author":{"gitId":"limjunxian1"},"content":"        return !secondaryEmail.equals(Optional.empty());","lastModifiedDate":"2023-10-17"},{"lineNumber":270,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":271,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":272,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":273,"author":{"gitId":"limjunxian1"},"content":"     * Returns true if telegram has a value.","lastModifiedDate":"2023-10-17"},{"lineNumber":274,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":275,"author":{"gitId":"limjunxian1"},"content":"    public boolean hasValidTelegram() {","lastModifiedDate":"2023-10-17"},{"lineNumber":276,"author":{"gitId":"limjunxian1"},"content":"        return !telegram.equals(Optional.empty());","lastModifiedDate":"2023-10-17"},{"lineNumber":277,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":278,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":279,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":280,"author":{"gitId":"limjunxian1"},"content":"     * Returns true if the person has same primary and secondary email.","lastModifiedDate":"2023-10-17"},{"lineNumber":281,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":282,"author":{"gitId":"limjunxian1"},"content":"    public boolean hasRepeatedEmail() {","lastModifiedDate":"2023-10-18"},{"lineNumber":283,"author":{"gitId":"limjunxian1"},"content":"        if (secondaryEmail.equals(Optional.empty())) {","lastModifiedDate":"2023-10-18"},{"lineNumber":284,"author":{"gitId":"limjunxian1"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":285,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":286,"author":{"gitId":"limjunxian1"},"content":"        return email.equals(secondaryEmail.get());","lastModifiedDate":"2023-10-18"},{"lineNumber":287,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":288,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":306,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"limjunxian1":65,"conradsoon":58,"kokrui":18,"lordidiot":19,"-":119,"VN-Hao":27}},{"path":"src/main/java/seedu/address/model/person/Telegram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":" * Represents a Person\u0027s telegram in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegram(String)}","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"public class Telegram {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"     * Message constraints for telegram which is the format used for user input.","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Telegram should start with the \u0027@\u0027 symbol, \"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"            + \"should not contain whitespace, should not be blank, with a minimum length of 5 characters.\\nUse \"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"            + \"a-z, 0-9 and underscores.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"     * Regex for Telegram when represented as a telegram handle","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"    public static final String VALIDATION_REGEX \u003d \"@[a-z0-9_]{5,}$\";","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"    public final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"     * Constructs an {@code Telegram}.","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"     * @param telegram A valid telegram.","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"    public Telegram(String telegram) {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"        checkArgument(isValidTelegram(telegram), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"        value \u003d telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"     * Returns true if a given string is a valid telegram handle.","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"    public static boolean isValidTelegram(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"        return value;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        if (!(other instanceof Telegram)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"        Telegram otherTelegram \u003d (Telegram) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"        return value.equals(otherTelegram.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"limjunxian1":68}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"-":11,"VN-Hao":1}},{"path":"src/main/java/seedu/address/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"},{"lineNumber":7,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"-":6,"VN-Hao":1}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"     * Enum for emergency tags","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"    public enum EmergencyTags {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"        RA,","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"        SOS;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"        /**","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"         * Returns true if a given string is a valid emergency tag name.","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"         */","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"        public static boolean isEmergencyTag(String tagName) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"            for (EmergencyTags tag : EmergencyTags.values()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"                if (tag.name().equals(tagName)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"                    return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"                }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"conradsoon":19,"lordidiot":1,"-":62}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"        Person[] samplePersons \u003d {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"                Optional.of(new Birthday(MonthDay.of(10, 13))),","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"conradsoon"},"content":"                getTagSet(\"classmates\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"                getNoteList(\"Irfan has a cool sister.\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"                new Balance(5)),","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"conradsoon"},"content":"        for (int i \u003d 0; i \u003c samplePersons.length; i++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"conradsoon"},"content":"            samplePersons[i].setId(i + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"conradsoon"},"content":"        return samplePersons;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"conradsoon"},"content":"     * Returns a notes set containing the notes of strings given.","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"conradsoon"},"content":"    public static ObservableList\u003cNote\u003e getNoteList(String... strings) {","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"conradsoon"},"content":"        ObservableList\u003cNote\u003e notes \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"conradsoon"},"content":"        for (String string : strings) {","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"conradsoon"},"content":"            notes.add(new Note(string));","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"conradsoon"},"content":"        return notes;","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"limjunxian1":3,"conradsoon":22,"kokrui":3,"lordidiot":4,"-":58}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedNote.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":" * Jackson-friendly version of {@link Note}.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"class JsonAdaptedNote {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"    private final String noteText;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"     * Constructs a {@code JsonAdaptedNote} with the given {@code noteText}.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"    public JsonAdaptedNote(String noteText) {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"        this.noteText \u003d noteText;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"     * Converts a given {@code Note} into this class for Jackson use.","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"    public JsonAdaptedNote(Note source) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"        noteText \u003d source.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"    @JsonValue","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"    public String getNoteText() {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"        return noteText;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"     * Converts this Jackson-friendly adapted note object into the model\u0027s {@code Note} object.","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"conradsoon"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted note.","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"    public Note toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"conradsoon"},"content":"        // You can add more validation here if necessary, for now I\u0027m directly converting it","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"        return new Note(noteText);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"conradsoon":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.model.person.Avatar;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"    private final Optional\u003cMonthDay\u003e birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"    private final Optional\u003cString\u003e linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"    private final Optional\u003cString\u003e secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"    private final Optional\u003cString\u003e telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"    private final Optional\u003cInteger\u003e id;","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"VN-Hao"},"content":"    private Avatar avatar \u003d new Avatar();","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"    private final Integer balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"    private final List\u003cJsonAdaptedNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"            @JsonProperty(\"birthday\") Optional\u003cMonthDay\u003e birthday, @JsonProperty(\"linkedin\") Optional\u003cString\u003e linkedin,","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"            @JsonProperty(\"secondaryEmail\") Optional\u003cString\u003e secondaryEmail,","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"            @JsonProperty(\"telegram\") Optional\u003cString\u003e telegram,","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"conradsoon"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"conradsoon"},"content":"            @JsonProperty(\"id\") Optional\u003cInteger\u003e id,","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"            @JsonProperty(\"notes\") List\u003cJsonAdaptedNote\u003e notes,","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"            @JsonProperty(\"balance\") Integer balance","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"    ) {","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"        this.linkedin \u003d linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"        this.secondaryEmail \u003d secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"conradsoon"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"conradsoon"},"content":"        if (notes !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"conradsoon"},"content":"            this.notes.addAll(notes);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"        this.balance \u003d balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"        birthday \u003d source.getBirthday().map(b -\u003e b.birthday);","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"limjunxian1"},"content":"        linkedin \u003d source.getLinkedin().map(l -\u003e l.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"limjunxian1"},"content":"        secondaryEmail \u003d source.getSecondaryEmail().map(e -\u003e e.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"limjunxian1"},"content":"        telegram \u003d source.getTelegram().map(t -\u003e t.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"conradsoon"},"content":"        id \u003d source.getId().map(x -\u003e x.intValue());","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"VN-Hao"},"content":"        avatar \u003d source.getAvatar();","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"conradsoon"},"content":"        notes.addAll(source.getNotes().stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"conradsoon"},"content":"            .map(JsonAdaptedNote::new)","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"conradsoon"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"        balance \u003d source.getBalance().value;","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"conradsoon"},"content":"        final List\u003cNote\u003e personNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"conradsoon"},"content":"        for (JsonAdaptedNote note : notes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"conradsoon"},"content":"            personNotes.add(note.toModelType());","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"VN-Hao"},"content":"        /*","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"VN-Hao"},"content":"        To add checking for photo","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"VN-Hao"},"content":"         */","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"kokrui"},"content":"        if (balance \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"kokrui"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Balance.class.getSimpleName()));","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"kokrui"},"content":"        if (!Balance.isWithinLimits(balance)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"kokrui"},"content":"            throw new IllegalValueException(Balance.MESSAGE_BALANCE_LIMIT_EXCEEDED);","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"lordidiot"},"content":"        final Optional\u003cBirthday\u003e modelBirthday \u003d birthday.map(monthDay -\u003e new Birthday(monthDay));","lastModifiedDate":"2023-10-10"},{"lineNumber":167,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":168,"author":{"gitId":"limjunxian1"},"content":"        final Optional\u003cLinkedin\u003e modelLinkedin \u003d linkedin.map(linkedin -\u003e new Linkedin(linkedin));","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"limjunxian1"},"content":"        final Optional\u003cEmail\u003e modelSecondaryEmail \u003d secondaryEmail.map(email -\u003e new Email(email));","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"limjunxian1"},"content":"        final Optional\u003cTelegram\u003e modelTelegram \u003d telegram.map(telegram -\u003e new Telegram(telegram));","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":176,"author":{"gitId":"conradsoon"},"content":"        final Optional\u003cInteger\u003e modelID \u003d id.map(x -\u003e x.intValue());","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"VN-Hao"},"content":"        final Avatar modelAvatar \u003d new Avatar(avatar);","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":180,"author":{"gitId":"conradsoon"},"content":"        final ObservableList\u003cNote\u003e modelNotes \u003d FXCollections.observableArrayList(personNotes);","lastModifiedDate":"2023-10-30"},{"lineNumber":181,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":182,"author":{"gitId":"kokrui"},"content":"        final Balance modelBalance \u003d new Balance(balance);","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"limjunxian1"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelBirthday, modelLinkedin,","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"VN-Hao"},"content":"                modelSecondaryEmail, modelTelegram, modelTags, modelID, modelAvatar, modelNotes, modelBalance);","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"limjunxian1":21,"conradsoon":21,"kokrui":14,"lordidiot":11,"-":108,"VN-Hao":13}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-t13-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kokrui":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"    private NotificationWindow notificationWindow;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"lordidiot"},"content":"     * Shows startup notifications to user.","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":202,"author":{"gitId":"lordidiot"},"content":"    public void showStartupNotifications() {","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"lordidiot"},"content":"        logic.getLatestNotifications(LocalDateTime.now()).stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":204,"author":{"gitId":"lordidiot"},"content":"                .forEach(notification -\u003e new NotificationWindow(getPrimaryStage(), notification).show());","lastModifiedDate":"2023-10-12"},{"lineNumber":205,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lordidiot":10,"-":196}},{"path":"src/main/java/seedu/address/ui/NotesWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":" * Controller for a notes window","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"public class NotesWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(NotesWindow.class);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"    private static final String FXML \u003d \"NotesWindow.fxml\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"    private ListView\u003cString\u003e notesListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"    private final Person person;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"     * Creates a new NotesWindow.","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"     * @param root Stage to use as the root of the NotesWindow.","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"     * @param person Person to display notes for.","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"    public NotesWindow(Stage root, Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"        super(FXML, root);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"conradsoon"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"        populateListView(person.getNotes());","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"        // Add event filter to listen for ESC key press","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"conradsoon"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"            if (event.getCode() \u003d\u003d KeyCode.ESCAPE) {","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"                handleClose();","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"        });","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"conradsoon"},"content":"    public NotesWindow(Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"        this(new Stage(), person);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"conradsoon"},"content":"     * Shows the notes window.","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"conradsoon"},"content":"    public void show() {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"conradsoon"},"content":"        logger.fine(\"Showing notes for \" + person.getName().fullName);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"conradsoon"},"content":"        getRoot().show();","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"conradsoon"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"conradsoon"},"content":"    public boolean isShowing() {","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"conradsoon"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"conradsoon"},"content":"    public void hide() {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"conradsoon"},"content":"        getRoot().hide();","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"conradsoon"},"content":"    public void focus() {","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"conradsoon"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"conradsoon"},"content":"    private void populateListView(List\u003cNote\u003e notes) {","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"conradsoon"},"content":"        ObservableList\u003cString\u003e notesObservableList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"conradsoon"},"content":"        for (Note note : notes) {","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"conradsoon"},"content":"            notesObservableList.add(note.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"conradsoon"},"content":"        notesListView.setItems(notesObservableList);","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"conradsoon"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"conradsoon"},"content":"    void handleClose() {","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"conradsoon"},"content":"        Stage stage \u003d (Stage) notesListView.getScene().getWindow();","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"conradsoon"},"content":"        stage.close();","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"conradsoon"},"content":"    public ListView\u003cString\u003e getNotesListView() {","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"conradsoon"},"content":"        return notesListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"conradsoon":91}},{"path":"src/main/java/seedu/address/ui/NotificationWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.Notification;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":" * Controller for a help page","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"public class NotificationWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(NotificationWindow.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    private static final String FXML \u003d \"NotificationWindow.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    private Label notificationTitle;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    private Label notificationDescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"    public NotificationWindow(Stage root, Stage ownerStage, Notification notification) {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"        super(FXML, root);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        root.initOwner(ownerStage);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"        notificationTitle.setText(String.format(\"Upcoming Event: %s\", notification.getTitle()));","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        notificationDescription.setText(notification.getDescription());","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"     * Creates a new NotificationWindow.","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"    public NotificationWindow(Stage ownerStage, Notification notification) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"        this(new Stage(), ownerStage, notification);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"     * Shows the notification window.","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"    public void show() {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"        logger.fine(\"Showing a notification\");","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"        getRoot().show();","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"lordidiot":67}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"import javafx.beans.binding.StringBinding;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"VN-Hao"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"    private Label linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"    private Label secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"    private Label birthday;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"    private Label telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":60,"author":{"gitId":"conradsoon"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"conradsoon"},"content":"    private Label uniqueId;","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"VN-Hao"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"VN-Hao"},"content":"    private ImageView avatar;","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"VN-Hao"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"conradsoon"},"content":"    private Button notesButton;","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"    private Label balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"    private Label phoneField;","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"    private Label addressField;","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"    private Label emailField;","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"    private Label linkedinField;","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"limjunxian1"},"content":"    private Label birthdayField;","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"    private Label secondaryEmailField;","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"limjunxian1"},"content":"    private Label telegramField;","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"limjunxian1"},"content":"        phoneField.setText(\"Tel:\");","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"limjunxian1"},"content":"        addressField.setText(\"Room Number:\");","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"limjunxian1"},"content":"        emailField.setText(\"Email:\");","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"limjunxian1"},"content":"        linkedinField.setText(\"Linkedin:\");","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"limjunxian1"},"content":"        birthdayField.setText(\"Birthday:\");","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"limjunxian1"},"content":"        secondaryEmailField.setText(\"Secondary Email:\");","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"limjunxian1"},"content":"        telegramField.setText(\"Telegram:\");","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"limjunxian1"},"content":"        bindLabelToProperty(phone, person.getPhone().value, phoneField);","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"limjunxian1"},"content":"        bindLabelToProperty(address, person.getAddress().value, addressField);","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"limjunxian1"},"content":"        bindLabelToProperty(email, person.getEmail().value, emailField);","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"limjunxian1"},"content":"        bindLabelToProperty(linkedin, person.getLinkedin().map(l -\u003e l.value).orElse(\"\"), linkedinField);","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"limjunxian1"},"content":"        bindLabelToProperty(secondaryEmail,","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"limjunxian1"},"content":"                person.getSecondaryEmail().map(e -\u003e e.value).orElse(\"\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"limjunxian1"},"content":"                secondaryEmailField);","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"limjunxian1"},"content":"        bindLabelToProperty(telegram, person.getTelegram().map(t -\u003e t.value).orElse(\"\"), telegramField);","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"limjunxian1"},"content":"        bindLabelToProperty(birthday, person.getBirthday().map(b -\u003e b.toString()).orElse(\"\"), birthdayField);","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"VN-Hao"},"content":"        avatar.setImage(person.getAvatar().getImage());","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"conradsoon"},"content":"        person.getEmergencyTags().stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"conradsoon"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"conradsoon"},"content":"                .forEach(tag -\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"conradsoon"},"content":"                    Label label \u003d new Label(tag.tagName);","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"conradsoon"},"content":"                    label.setStyle(\"-fx-background-color: red; -fx-text-fill: white;\");","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"conradsoon"},"content":"                    tags.getChildren().add(label);","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"conradsoon"},"content":"                });","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"conradsoon"},"content":"        person.getNonEmergencyTags().stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":118,"author":{"gitId":"conradsoon"},"content":"        StringBinding notesButtonText \u003d Bindings","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"conradsoon"},"content":"                .createStringBinding(() -\u003e \"Notes (\" + person.getNotes().size() + \")\",","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"conradsoon"},"content":"                        person.getNotes()); // This will cause the binding to update when the list changes","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"conradsoon"},"content":"        notesButton.textProperty().bind(notesButtonText);","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"limjunxian1"},"content":"        balance.setText(person.getBalance().toUiMessage());","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"limjunxian1"},"content":"    private void bindLabelToProperty(Label label, String propertyValue, Label labelField) {","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"conradsoon"},"content":"        label.setText(propertyValue);","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"conradsoon"},"content":"        label.visibleProperty().bind(label.textProperty().isNotEmpty());","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"conradsoon"},"content":"        label.managedProperty().bind(label.visibleProperty());","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"limjunxian1"},"content":"        if (!label.getText().isEmpty()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"limjunxian1"},"content":"            labelField.setBackground(new Background(new BackgroundFill(Color.BLACK, new CornerRadii(4),","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"limjunxian1"},"content":"                    new Insets(-3, -3, -3, -3))));","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"limjunxian1"},"content":"            HBox parent \u003d (HBox) labelField.getParent();","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"limjunxian1"},"content":"            parent.setMargin(labelField, new Insets(0, 10, 8, 3));","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"limjunxian1"},"content":"        } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"limjunxian1"},"content":"            labelField.setText(\"\");","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"limjunxian1"},"content":"            labelField.visibleProperty().bind(labelField.textProperty().isNotEmpty());","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"limjunxian1"},"content":"            labelField.managedProperty().bind(labelField.visibleProperty());","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"conradsoon"},"content":"     * Opens a new window to display the notes of the person.","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"conradsoon"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"conradsoon"},"content":"    public void handleNotesButtonClick() {","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"conradsoon"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"conradsoon"},"content":"            NotesWindow notesWindow \u003d new NotesWindow(person);","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"conradsoon"},"content":"            notesWindow.show();","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"conradsoon"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"conradsoon"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"limjunxian1":55,"conradsoon":37,"kokrui":2,"-":54,"VN-Hao":6}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"            mainWindow.showStartupNotifications();","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lordidiot":1,"-":88}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"conradsoon":2,"-":43}},{"path":"src/main/resources/view/NotesWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Notes\"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"         type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"    \u003cscene\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"        \u003cScene\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"            \u003cVBox spacing\u003d\"10\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"                    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"                \u003cLabel text\u003d\"Notes\" style\u003d\"-fx-font-weight: bold; -fx-font-size: 18px;\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"                \u003cScrollPane fitToWidth\u003d\"true\" prefHeight\u003d\"300\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"                    \u003cListView fx:id\u003d\"notesListView\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"                \u003c/ScrollPane\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"                \u003cLabel text\u003d\"Press ESC to exit\" style\u003d\"-fx-font-size: 12px;\" /\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"                \u003cButton text\u003d\"Close\" onAction\u003d\"#handleClose\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"conradsoon":26}},{"path":"src/main/resources/view/NotificationWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"#notificationTitle, #notificationDescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"#notificationContainer {","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"lordidiot":7}},{"path":"src/main/resources/view/NotificationWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Notification\"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"         type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"  \u003cicons\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"  \u003cscene\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    \u003cScene\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"        \u003cURL value\u003d\"@NotificationWindow.css\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"      \u003cVBox fx:id\u003d\"notificationContainer\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"          \u003cLabel fx:id\u003d\"notificationTitle\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"          \u003cLabel fx:id\u003d\"notificationDescription\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"conradsoon":2,"lordidiot":42}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"VN-Hao"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":17,"author":{"gitId":"VN-Hao"},"content":"  \u003cImageView fx:id\u003d\"avatar\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"      \u003c!-- Column for all labels --\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"      \u003c!-- Column for notes button --\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"      \u003cColumnConstraints hgrow\u003d\"NEVER\" minWidth\u003d\"-1.0\" maxWidth\u003d\"-1.0\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"          \u003cInsets bottom\u003d\"8\"/\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"        \u003cLabel fx:id\u003d\"phoneField\" style\u003d\"-fx-text-fill: #F7F8F8; -fx-font-size: 8pt;\"/\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"conradsoon"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"$phone\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"        \u003cLabel fx:id\u003d\"addressField\" style\u003d\"-fx-text-fill: #F7F8F8; -fx-font-size: 8pt;\"/\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"conradsoon"},"content":"        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"$address\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"        \u003cLabel fx:id\u003d\"emailField\" style\u003d\"-fx-text-fill: #F7F8F8; -fx-font-size: 8pt;\"/\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"conradsoon"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"$email\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"        \u003cLabel fx:id\u003d\"linkedinField\" style\u003d\"-fx-text-fill: #F7F8F8; -fx-font-size: 8pt;\"/\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"conradsoon"},"content":"        \u003cLabel fx:id\u003d\"linkedin\" styleClass\u003d\"cell_small_label\" text\u003d\"$linkedin\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"        \u003cLabel fx:id\u003d\"secondaryEmailField\" style\u003d\"-fx-text-fill: #F7F8F8; -fx-font-size: 8pt;\"/\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"conradsoon"},"content":"        \u003cLabel fx:id\u003d\"secondaryEmail\" styleClass\u003d\"cell_small_label\" text\u003d\"$secondaryEmail\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"        \u003cLabel fx:id\u003d\"birthdayField\" style\u003d\"-fx-text-fill: #F7F8F8; -fx-font-size: 8pt;\"/\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"conradsoon"},"content":"        \u003cLabel fx:id\u003d\"birthday\" styleClass\u003d\"cell_small_label\" text\u003d\"$birthday\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"        \u003cLabel fx:id\u003d\"telegramField\" style\u003d\"-fx-text-fill: #F7F8F8; -fx-font-size: 8pt;\"/\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"        \u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" text\u003d\"$telegram\" /\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"      \u003cLabel fx:id\u003d\"balance\" styleClass\u003d\"cell_small_label\" text\u003d\"$balance\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"conradsoon"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"conradsoon"},"content":"    \u003c!-- New VBox for the second column --\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"conradsoon"},"content":"    \u003cVBox alignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"1\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"conradsoon"},"content":"      \u003c!-- Filler to push the button to the bottom --\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"conradsoon"},"content":"      \u003cRegion VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"conradsoon"},"content":"      \u003c!-- Notes button --\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"conradsoon"},"content":"      \u003cButton fx:id\u003d\"notesButton\" onAction\u003d\"#handleNotesButtonClick\" text\u003d\"Notes (0)\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"limjunxian1":27,"conradsoon":21,"kokrui":2,"-":32,"VN-Hao":3}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"kokrui"},"content":"    //---------------- Tests for containsSubstringIgnoreCase --------------------------------------","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"kokrui"},"content":"    /*","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"kokrui"},"content":"     * Invalid equivalence partitions for substring: null, empty","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"kokrui"},"content":"     * Invalid equivalence partitions for stringToCheck: null","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"kokrui"},"content":"     * The three test cases below test one invalid input at a time.","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"kokrui"},"content":"    public void containsSubstringIgnoreCase_nullSubstring_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"kokrui"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsSubstringIgnoreCase(\"typical string\", null));","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"kokrui"},"content":"    public void containsSubstringIgnoreCase_emptySubstring_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"kokrui"},"content":"        assertThrows(IllegalArgumentException.class, \"Substring parameter cannot be empty\", ()","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"kokrui"},"content":"            -\u003e StringUtil.containsSubstringIgnoreCase(\"typical string\", \"  \"));","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"kokrui"},"content":"    public void containsSubstringIgnoreCase_nullStringToCheck_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"kokrui"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsSubstringIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"kokrui"},"content":"    /*","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"kokrui"},"content":"     * Valid equivalence partitions for substring:","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"kokrui"},"content":"     *   - any substring","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"kokrui"},"content":"     *   - substring containing symbols/numbers","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"kokrui"},"content":"     *   - substring with leading/trailing spaces","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"kokrui"},"content":"     * Valid equivalence partitions for stringToCheck:","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"kokrui"},"content":"     *   - empty string","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"kokrui"},"content":"     *   - one word","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"kokrui"},"content":"     *   - multiple words","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"kokrui"},"content":"     *   - string with extra spaces","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"kokrui"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"kokrui"},"content":"     *   - matches first word in stringToCheck","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"kokrui"},"content":"     *   - last word in stringToCheck","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"kokrui"},"content":"     *   - middle word in stringToCheck","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"kokrui"},"content":"     *   - matches multiple words","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"kokrui"},"content":"     *   - query substring matches part of a stringToCheck word","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"kokrui"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"kokrui"},"content":"     *   - stringToCheck word matches part of the query substring","lastModifiedDate":"2023-10-14"},{"lineNumber":171,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"kokrui"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":174,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"kokrui"},"content":"    public void containsSubstringIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"kokrui"},"content":"        // Empty stringToCheck","lastModifiedDate":"2023-10-14"},{"lineNumber":179,"author":{"gitId":"kokrui"},"content":"        assertFalse(StringUtil.containsSubstringIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2023-10-14"},{"lineNumber":180,"author":{"gitId":"kokrui"},"content":"        assertFalse(StringUtil.containsSubstringIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":181,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"kokrui"},"content":"        // Matches a partial substring","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"kokrui"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bbb ccc\",","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"kokrui"},"content":"                \"bb\")); // stringToCheck word bigger than query substring","lastModifiedDate":"2023-10-14"},{"lineNumber":185,"author":{"gitId":"kokrui"},"content":"        assertFalse(StringUtil.containsSubstringIgnoreCase(\"aaa bbb ccc\",","lastModifiedDate":"2023-10-14"},{"lineNumber":186,"author":{"gitId":"kokrui"},"content":"                \"bbbb\")); // Query substring bigger than stringToCheck word","lastModifiedDate":"2023-10-14"},{"lineNumber":187,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":188,"author":{"gitId":"kokrui"},"content":"        // Matches substring in the stringToCheck, different upper/lower case letters","lastModifiedDate":"2023-10-14"},{"lineNumber":189,"author":{"gitId":"kokrui"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bBb ccc\",","lastModifiedDate":"2023-10-14"},{"lineNumber":190,"author":{"gitId":"kokrui"},"content":"                \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2023-10-14"},{"lineNumber":191,"author":{"gitId":"kokrui"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bBb ccc@1\",","lastModifiedDate":"2023-10-14"},{"lineNumber":192,"author":{"gitId":"kokrui"},"content":"                \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2023-10-14"},{"lineNumber":193,"author":{"gitId":"kokrui"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"  AAA   bBb   ccc  \",","lastModifiedDate":"2023-10-14"},{"lineNumber":194,"author":{"gitId":"kokrui"},"content":"                \"aaa\")); // stringToCheck has extra spaces","lastModifiedDate":"2023-10-14"},{"lineNumber":195,"author":{"gitId":"kokrui"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"Aaa\",","lastModifiedDate":"2023-10-14"},{"lineNumber":196,"author":{"gitId":"kokrui"},"content":"                \"aaa\")); // Only one word in stringToCheck (boundary case)","lastModifiedDate":"2023-10-14"},{"lineNumber":197,"author":{"gitId":"kokrui"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bbb ccc\",","lastModifiedDate":"2023-10-14"},{"lineNumber":198,"author":{"gitId":"kokrui"},"content":"                \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-10-14"},{"lineNumber":199,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":200,"author":{"gitId":"kokrui"},"content":"        // Matches multiple words in stringToCheck","lastModifiedDate":"2023-10-14"},{"lineNumber":201,"author":{"gitId":"kokrui"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":202,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":203,"author":{"gitId":"kokrui"},"content":"        // Matches part of a stringToCheck word","lastModifiedDate":"2023-10-14"},{"lineNumber":204,"author":{"gitId":"kokrui"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bbb ccc\", \"bb\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":205,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":206,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kokrui":81,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"    public void getLatestNotifications_noEvents_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"        LocalDateTime dt \u003d LocalDateTime.of(2023, 10, 10, 0, 0);","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"lordidiot"},"content":"        assertEquals(logic.getLatestNotifications(dt), List.of());","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"lordidiot":8,"-":175}},{"path":"src/test/java/seedu/address/logic/commands/AddAltCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Linkedin;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"public class AddAltCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"    public void constructor_nullArgs_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"        // All pairs strategy","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAltCommand(","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"                Index.fromZeroBased(0), null)","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAltCommand(","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"                null, new AddAltCommand.AddAltPersonDescriptor())","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAltCommand(null, null));","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"    public void execute_validArgs_success() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"        // Test based on use cases. Users can choose to add at least 1 up to 4 empty alternative contact","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"        // fields using addalt.","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"        // Success: Adds all 4 empty fields.","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"        Person personA \u003d new PersonBuilder().withName(\"A\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        Person personACopy \u003d new PersonBuilder().withName(\"A\")","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"                .withLinkedin(\"LINKEDIN\")","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"                .withSecondaryEmail(\"email@email.com\")","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"                .withTelegram(\"@telegram\")","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"                .withBirthday(MonthDay.of(6, 9)).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"        AddAltCommand.AddAltPersonDescriptor descriptor \u003d new AddAltCommand.AddAltPersonDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"        descriptor.setLinkedin(new Linkedin(\"LINKEDIN\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"        descriptor.setSecondaryEmail(new Email(\"email@email.com\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"        descriptor.setTelegram(new Telegram(\"@telegram\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setBirthday(new Birthday(MonthDay.of(6, 9)));","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"        ModelStubSetPerson modelStub \u003d new ModelStubSetPerson(personA, p -\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"            assertEquals(p.getName(), new Name(\"A\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"            assertEquals(p.getLinkedin().orElseThrow(), new Linkedin(\"LINKEDIN\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"            assertEquals(p.getSecondaryEmail().orElseThrow(), new Email(\"email@email.com\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"            assertEquals(p.getTelegram().orElseThrow(), new Telegram(\"@telegram\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(p.getBirthday().orElseThrow(), new Birthday(MonthDay.of(6, 9)));","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"        });","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"        CommandResult commandResult \u003d new AddAltCommand(Index.fromZeroBased(0), descriptor).execute(modelStub);","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"limjunxian1"},"content":"        String expectedMessage \u003d String.format(AddAltCommand.MESSAGE_ADDALT_SUCCESS, Messages.format(personACopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"limjunxian1"},"content":"        assertEquals(commandResult, new CommandResult(expectedMessage));","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"limjunxian1"},"content":"        // Success: Adds 2 empty fields.","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"limjunxian1"},"content":"        personA \u003d new PersonBuilder().withName(\"A\").withTelegram(\"@telegram\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new AddAltCommand.AddAltPersonDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setLinkedin(new Linkedin(\"LINKEDIN\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setSecondaryEmail(new Email(\"email@email.com\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"limjunxian1"},"content":"        modelStub \u003d new ModelStubSetPerson(personA, p -\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(p.getName(), new Name(\"A\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(p.getLinkedin().orElseThrow(), new Linkedin(\"LINKEDIN\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(p.getSecondaryEmail().orElseThrow(), new Email(\"email@email.com\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(p.getTelegram().orElseThrow(), new Telegram(\"@telegram\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"limjunxian1"},"content":"        });","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"limjunxian1"},"content":"        commandResult \u003d new AddAltCommand(Index.fromZeroBased(0), descriptor).execute(modelStub);","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"limjunxian1"},"content":"        expectedMessage \u003d String.format(AddAltCommand.MESSAGE_ADDALT_SUCCESS, Messages.format(personACopy));","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"limjunxian1"},"content":"        assertEquals(commandResult, new CommandResult(expectedMessage));","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"limjunxian1"},"content":"        // Success: Adds 1 empty field.","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"limjunxian1"},"content":"        personA \u003d new PersonBuilder().withName(\"A\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new AddAltCommand.AddAltPersonDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setLinkedin(new Linkedin(\"LINKEDIN\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"limjunxian1"},"content":"        modelStub \u003d new ModelStubSetPerson(personA, p -\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(p.getName(), new Name(\"A\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(p.getLinkedin().orElseThrow(), new Linkedin(\"LINKEDIN\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"limjunxian1"},"content":"        });","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"limjunxian1"},"content":"        commandResult \u003d new AddAltCommand(Index.fromZeroBased(0), descriptor).execute(modelStub);","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"limjunxian1"},"content":"        expectedMessage \u003d String.format(AddAltCommand.MESSAGE_ADDALT_SUCCESS, Messages.format(personACopy));","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"limjunxian1"},"content":"        assertEquals(commandResult, new CommandResult(expectedMessage));","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"limjunxian1"},"content":"    public void execute_invalidArgs_exceptionThrown() {","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"limjunxian1"},"content":"        // Heuristic applied: No More Than One Invalid Input In A Test Case","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"limjunxian1"},"content":"        // Invalid index input. Boundary value analysis","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"limjunxian1"},"content":"        ModelStubAcceptingPersonAdded model \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"limjunxian1"},"content":"        Person personA \u003d new PersonBuilder().withName(\"A\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"limjunxian1"},"content":"        model.addPerson(personA);","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"limjunxian1"},"content":"        AddAltCommand.AddAltPersonDescriptor descriptor \u003d new AddAltCommand.AddAltPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"limjunxian1"},"content":"            //EP: Value from boundary","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"limjunxian1"},"content":"            new AddAltCommand(Index.fromZeroBased(1), descriptor).execute(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"limjunxian1"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"limjunxian1"},"content":"            String expectedMessage \u003d Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(e.getMessage(), expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"limjunxian1"},"content":"            //EP: One value above boundary","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"limjunxian1"},"content":"            new AddAltCommand(Index.fromZeroBased(2), descriptor).execute(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"limjunxian1"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"limjunxian1"},"content":"            String expectedMessage \u003d Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(e.getMessage(), expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"limjunxian1"},"content":"        //Telegram is already present in specified person.","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"limjunxian1"},"content":"        personA \u003d new PersonBuilder().withName(\"A\")","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"limjunxian1"},"content":"                .withTelegram(\"@telegram\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setLinkedin(new Linkedin(\"LINKEDIN_A\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setSecondaryEmail(new Email(\"personA@email.com\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setTelegram(new Telegram(\"@telegrama\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setBirthday(new Birthday(MonthDay.of(6, 10)));","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"limjunxian1"},"content":"        ModelStubSetPerson modelStub \u003d new ModelStubSetPerson(personA, p -\u003e {});","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"limjunxian1"},"content":"            new AddAltCommand(Index.fromZeroBased(0), descriptor).execute(modelStub);","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"limjunxian1"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"limjunxian1"},"content":"            String expectedMessage \u003d String.format(AddAltCommand.MESSAGE_ADDALT_FAILURE, \"A\", \"Telegram\");","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(e.getMessage(), expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"limjunxian1"},"content":"        //Linkedin is already present in specified person.","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"limjunxian1"},"content":"        personA \u003d new PersonBuilder().withName(\"A\")","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"limjunxian1"},"content":"                .withLinkedin(\"linkedin\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"limjunxian1"},"content":"        modelStub \u003d new ModelStubSetPerson(personA, p -\u003e {});","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"limjunxian1"},"content":"            new AddAltCommand(Index.fromZeroBased(0), descriptor).execute(modelStub);","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"limjunxian1"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"limjunxian1"},"content":"            String expectedMessage \u003d String.format(AddAltCommand.MESSAGE_ADDALT_FAILURE, \"A\", \"Linkedin\");","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(e.getMessage(), expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"limjunxian1"},"content":"        //Secondary Email is already present in specified person.","lastModifiedDate":"2023-11-01"},{"lineNumber":171,"author":{"gitId":"limjunxian1"},"content":"        personA \u003d new PersonBuilder().withName(\"A\")","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"limjunxian1"},"content":"                .withSecondaryEmail(\"example@email.com\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"limjunxian1"},"content":"        modelStub \u003d new ModelStubSetPerson(personA, p -\u003e {});","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"limjunxian1"},"content":"            new AddAltCommand(Index.fromZeroBased(0), descriptor).execute(modelStub);","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"limjunxian1"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"limjunxian1"},"content":"            String expectedMessage \u003d String.format(AddAltCommand.MESSAGE_ADDALT_FAILURE, \"A\", \"Secondary Email\");","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(e.getMessage(), expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"limjunxian1"},"content":"        // Adding secondary email results in duplicate emails for the specified person.","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"limjunxian1"},"content":"        personA \u003d new PersonBuilder().withName(\"A\").withEmail(\"personA@email.com\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"limjunxian1"},"content":"        modelStub \u003d new ModelStubSetPerson(personA, p -\u003e {});","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"limjunxian1"},"content":"            new AddAltCommand(Index.fromZeroBased(0), descriptor).execute(modelStub);","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"limjunxian1"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"limjunxian1"},"content":"            String expectedMessage \u003d String.format(AddAltCommand.MESSAGE_ADDALT_DUPLICATE_EMAIL, \"A\");","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(e.getMessage(), expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"limjunxian1"},"content":"        //Birthday is already present in specified person.","lastModifiedDate":"2023-11-01"},{"lineNumber":196,"author":{"gitId":"limjunxian1"},"content":"        personA \u003d new PersonBuilder().withName(\"A\").withBirthday(MonthDay.of(6, 9)).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":197,"author":{"gitId":"limjunxian1"},"content":"        modelStub \u003d new ModelStubSetPerson(personA, p -\u003e {});","lastModifiedDate":"2023-11-01"},{"lineNumber":198,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":199,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"limjunxian1"},"content":"            new AddAltCommand(Index.fromZeroBased(0), descriptor).execute(modelStub);","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"limjunxian1"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"limjunxian1"},"content":"            String expectedMessage \u003d String.format(AddAltCommand.MESSAGE_ADDALT_FAILURE, \"A\", \"Birthday\");","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(e.getMessage(), expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"lordidiot"},"content":"    public void addAltPersonDescriptor() {","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"limjunxian1"},"content":"        // Testing nested static class AddAltPersonDescriptor\u0027s constructor, getter and setter methods.","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"lordidiot"},"content":"        AddAltCommand.AddAltPersonDescriptor descriptor \u003d new AddAltCommand.AddAltPersonDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"lordidiot"},"content":"        descriptor.setTelegram(new Telegram(\"@telegram\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"limjunxian1"},"content":"        assertEquals(descriptor.getTelegram(), Optional.of(new Telegram(\"@telegram\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":214,"author":{"gitId":"lordidiot"},"content":"        descriptor.setLinkedin(new Linkedin(\"LINKEDIN\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"limjunxian1"},"content":"        assertEquals(descriptor.getLinkedin(), Optional.of(new Linkedin(\"LINKEDIN\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":216,"author":{"gitId":"lordidiot"},"content":"        descriptor.setSecondaryEmail(new Email(\"email@email.com\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"limjunxian1"},"content":"        assertEquals(descriptor.getSecondaryEmail(), Optional.of(new Email(\"email@email.com\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":218,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setBirthday(new Birthday(MonthDay.of(6, 9)));","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"limjunxian1"},"content":"        assertEquals(descriptor.getBirthday(), Optional.of(new Birthday(MonthDay.of(6, 9))));","lastModifiedDate":"2023-11-01"},{"lineNumber":220,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"lordidiot"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"lordidiot"},"content":"        AddAltCommand.AddAltPersonDescriptor descriptorA \u003d new AddAltCommand.AddAltPersonDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"lordidiot"},"content":"        AddAltCommand.AddAltPersonDescriptor descriptorB \u003d new AddAltCommand.AddAltPersonDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"lordidiot"},"content":"        descriptorA.setTelegram(new Telegram(\"@atelegram\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"lordidiot"},"content":"        descriptorB.setTelegram(new Telegram(\"@btelegram\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"lordidiot"},"content":"        AddAltCommand commandA \u003d new AddAltCommand(Index.fromZeroBased(0), descriptorA);","lastModifiedDate":"2023-10-17"},{"lineNumber":229,"author":{"gitId":"lordidiot"},"content":"        AddAltCommand commandB \u003d new AddAltCommand(Index.fromZeroBased(1), descriptorB);","lastModifiedDate":"2023-10-17"},{"lineNumber":230,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":231,"author":{"gitId":"limjunxian1"},"content":"        // EP: Same types","lastModifiedDate":"2023-11-01"},{"lineNumber":232,"author":{"gitId":"lordidiot"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":233,"author":{"gitId":"lordidiot"},"content":"        assertTrue(commandA.equals(commandA));","lastModifiedDate":"2023-10-17"},{"lineNumber":234,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"lordidiot"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"lordidiot"},"content":"        AddAltCommand commandACopy \u003d new AddAltCommand(Index.fromZeroBased(0), descriptorA);","lastModifiedDate":"2023-10-17"},{"lineNumber":237,"author":{"gitId":"lordidiot"},"content":"        assertTrue(commandA.equals(commandACopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":238,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":239,"author":{"gitId":"limjunxian1"},"content":"        // different index, same descriptor -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"limjunxian1"},"content":"        AddAltCommand commandADiffIndex \u003d new AddAltCommand(Index.fromZeroBased(1), descriptorA);","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(commandA.equals(commandADiffIndex));","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"limjunxian1"},"content":"        // different descriptor, same index -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"limjunxian1"},"content":"        AddAltCommand commandADiffDesc \u003d new AddAltCommand(Index.fromZeroBased(0), descriptorB);","lastModifiedDate":"2023-10-18"},{"lineNumber":245,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(commandA.equals(commandADiffDesc));","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":247,"author":{"gitId":"lordidiot"},"content":"        // different args -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":248,"author":{"gitId":"lordidiot"},"content":"        assertFalse(commandA.equals(commandB));","lastModifiedDate":"2023-10-17"},{"lineNumber":249,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":250,"author":{"gitId":"limjunxian1"},"content":"        // EP: Different types","lastModifiedDate":"2023-11-01"},{"lineNumber":251,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(commandA.equals(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":252,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":253,"author":{"gitId":"limjunxian1"},"content":"        // EP: null","lastModifiedDate":"2023-11-01"},{"lineNumber":254,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(commandA.equals(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":255,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":256,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":257,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"limjunxian1"},"content":"    public void hasVaild() {","lastModifiedDate":"2023-10-18"},{"lineNumber":259,"author":{"gitId":"limjunxian1"},"content":"        AddAltCommand.AddAltPersonDescriptor descriptorA \u003d new AddAltCommand.AddAltPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":260,"author":{"gitId":"limjunxian1"},"content":"        AddAltCommand.AddAltPersonDescriptor descriptorB \u003d new AddAltCommand.AddAltPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":261,"author":{"gitId":"limjunxian1"},"content":"        descriptorA.setTelegram(new Telegram(\"@telegram\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":262,"author":{"gitId":"limjunxian1"},"content":"        descriptorA.setLinkedin(new Linkedin(\"LINKEDIN\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":263,"author":{"gitId":"limjunxian1"},"content":"        descriptorA.setSecondaryEmail(new Email(\"email@email.com\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":264,"author":{"gitId":"limjunxian1"},"content":"        descriptorA.setBirthday(new Birthday(MonthDay.of(6, 9)));","lastModifiedDate":"2023-10-18"},{"lineNumber":265,"author":{"gitId":"limjunxian1"},"content":"        // EP: Valid fields","lastModifiedDate":"2023-11-01"},{"lineNumber":266,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(descriptorA.hasValidBirthday());","lastModifiedDate":"2023-10-18"},{"lineNumber":267,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(descriptorA.hasValidTelegram());","lastModifiedDate":"2023-10-18"},{"lineNumber":268,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(descriptorA.hasValidLinkedin());","lastModifiedDate":"2023-10-18"},{"lineNumber":269,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(descriptorA.hasValidSecondaryEmail());","lastModifiedDate":"2023-10-18"},{"lineNumber":270,"author":{"gitId":"limjunxian1"},"content":"        // EP: Invalid fields","lastModifiedDate":"2023-11-01"},{"lineNumber":271,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(descriptorB.hasValidBirthday());","lastModifiedDate":"2023-10-18"},{"lineNumber":272,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(descriptorB.hasValidTelegram());","lastModifiedDate":"2023-10-18"},{"lineNumber":273,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(descriptorB.hasValidLinkedin());","lastModifiedDate":"2023-10-18"},{"lineNumber":274,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(descriptorB.hasValidSecondaryEmail());","lastModifiedDate":"2023-10-18"},{"lineNumber":275,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":276,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":277,"author":{"gitId":"limjunxian1"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":278,"author":{"gitId":"limjunxian1"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":279,"author":{"gitId":"limjunxian1"},"content":"        AddAltCommand.AddAltPersonDescriptor addAltPersonDescriptor \u003d new AddAltCommand.AddAltPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":280,"author":{"gitId":"limjunxian1"},"content":"        AddAltCommand addAltCommand \u003d new AddAltCommand(index, addAltPersonDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":281,"author":{"gitId":"limjunxian1"},"content":"        String expected \u003d AddAltCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", addAltPersonDescriptor\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":282,"author":{"gitId":"limjunxian1"},"content":"                + addAltPersonDescriptor + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":283,"author":{"gitId":"limjunxian1"},"content":"        assertEquals(expected, addAltCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":284,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":285,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":286,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":287,"author":{"gitId":"lordidiot"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-10-17"},{"lineNumber":288,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":289,"author":{"gitId":"lordidiot"},"content":"    private class ModelStubSetPerson extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":290,"author":{"gitId":"lordidiot"},"content":"        private final Person person;","lastModifiedDate":"2023-10-17"},{"lineNumber":291,"author":{"gitId":"lordidiot"},"content":"        private final Consumer\u003cPerson\u003e consumer;","lastModifiedDate":"2023-10-17"},{"lineNumber":292,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":293,"author":{"gitId":"lordidiot"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":294,"author":{"gitId":"lordidiot"},"content":"         * Model with single person.","lastModifiedDate":"2023-10-17"},{"lineNumber":295,"author":{"gitId":"lordidiot"},"content":"         * The predicate {@code pred} must pass after setPerson is called.","lastModifiedDate":"2023-10-17"},{"lineNumber":296,"author":{"gitId":"lordidiot"},"content":"         * @param person Original person.","lastModifiedDate":"2023-10-17"},{"lineNumber":297,"author":{"gitId":"lordidiot"},"content":"         * @param consumer {@code Consumer} to test the edited person.","lastModifiedDate":"2023-10-17"},{"lineNumber":298,"author":{"gitId":"lordidiot"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":299,"author":{"gitId":"lordidiot"},"content":"        ModelStubSetPerson(Person person, Consumer\u003cPerson\u003e consumer) {","lastModifiedDate":"2023-10-17"},{"lineNumber":300,"author":{"gitId":"lordidiot"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-17"},{"lineNumber":301,"author":{"gitId":"lordidiot"},"content":"            this.person \u003d person;","lastModifiedDate":"2023-10-17"},{"lineNumber":302,"author":{"gitId":"lordidiot"},"content":"            this.consumer \u003d consumer;","lastModifiedDate":"2023-10-17"},{"lineNumber":303,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":304,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":305,"author":{"gitId":"lordidiot"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":306,"author":{"gitId":"lordidiot"},"content":"        public void setPerson(Person personA, Person personB) {","lastModifiedDate":"2023-10-17"},{"lineNumber":307,"author":{"gitId":"lordidiot"},"content":"            consumer.accept(personB);","lastModifiedDate":"2023-10-17"},{"lineNumber":308,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":309,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":310,"author":{"gitId":"lordidiot"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":311,"author":{"gitId":"lordidiot"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":312,"author":{"gitId":"lordidiot"},"content":"            return FXCollections.observableArrayList(person);","lastModifiedDate":"2023-10-17"},{"lineNumber":313,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":314,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":315,"author":{"gitId":"lordidiot"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":316,"author":{"gitId":"lordidiot"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e unused) {","lastModifiedDate":"2023-10-17"},{"lineNumber":317,"author":{"gitId":"lordidiot"},"content":"           // Do nothing","lastModifiedDate":"2023-10-17"},{"lineNumber":318,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":319,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":320,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":321,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":322,"author":{"gitId":"lordidiot"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2023-10-17"},{"lineNumber":323,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":324,"author":{"gitId":"lordidiot"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":325,"author":{"gitId":"lordidiot"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":326,"author":{"gitId":"lordidiot"},"content":"        private int id \u003d 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":327,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":328,"author":{"gitId":"lordidiot"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":329,"author":{"gitId":"lordidiot"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":330,"author":{"gitId":"lordidiot"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-17"},{"lineNumber":331,"author":{"gitId":"lordidiot"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2023-10-17"},{"lineNumber":332,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":333,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":334,"author":{"gitId":"lordidiot"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":335,"author":{"gitId":"lordidiot"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":336,"author":{"gitId":"lordidiot"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-17"},{"lineNumber":337,"author":{"gitId":"lordidiot"},"content":"            personsAdded.add(person);","lastModifiedDate":"2023-10-17"},{"lineNumber":338,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":339,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":340,"author":{"gitId":"lordidiot"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":341,"author":{"gitId":"lordidiot"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":342,"author":{"gitId":"lordidiot"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":343,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":344,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":345,"author":{"gitId":"limjunxian1"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":346,"author":{"gitId":"limjunxian1"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":347,"author":{"gitId":"limjunxian1"},"content":"            return FXCollections.observableArrayList(personsAdded);","lastModifiedDate":"2023-10-18"},{"lineNumber":348,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":349,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":350,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":351,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":352,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"limjunxian1":204,"lordidiot":148}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":105,"author":{"gitId":"conradsoon"},"content":"        private int id \u003d 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"conradsoon":2,"lordidiot":1,"-":123}},{"path":"src/test/java/seedu/address/logic/commands/AddNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"public class AddNoteCommandTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"    public void constructor_nullArgs_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddNoteCommand(Index.fromZeroBased(0), null));","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddNoteCommand(null, new Note(\"Sample note\")));","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddNoteCommand(null, null));","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"    public void execute_addNote_successful() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"        Person personA \u003d new PersonBuilder().withName(\"A\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"        Note noteToAdd \u003d new Note(\"Sample note for person A\");","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"conradsoon"},"content":"        ModelStubWithNote modelStub \u003d new ModelStubWithNote(personA, note -\u003e assertEquals(note, noteToAdd));","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"conradsoon"},"content":"        CommandResult commandResult \u003d new AddNoteCommand(Index.fromZeroBased(0), noteToAdd).execute(modelStub);","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"        Person personA \u003d new PersonBuilder().withName(\"A\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"conradsoon"},"content":"        Note noteToAdd \u003d new Note(\"Sample note for person A\");","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"conradsoon"},"content":"        ModelStubWithNote modelStub \u003d new ModelStubWithNote(personA, note -\u003e {});","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"conradsoon"},"content":"        AddNoteCommand command \u003d new AddNoteCommand(Index.fromZeroBased(1), noteToAdd);","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"conradsoon"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(modelStub),","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"conradsoon"},"content":"            Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"conradsoon"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"conradsoon"},"content":"        Note noteA \u003d new Note(\"Note A\");","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"conradsoon"},"content":"        Note noteB \u003d new Note(\"Note B\");","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"conradsoon"},"content":"        AddNoteCommand commandA \u003d new AddNoteCommand(Index.fromZeroBased(0), noteA);","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"conradsoon"},"content":"        AddNoteCommand commandB \u003d new AddNoteCommand(Index.fromZeroBased(1), noteB);","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"conradsoon"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"conradsoon"},"content":"        assertTrue(commandA.equals(commandA));","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"conradsoon"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"conradsoon"},"content":"        AddNoteCommand commandACopy \u003d new AddNoteCommand(Index.fromZeroBased(0), noteA);","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"conradsoon"},"content":"        assertTrue(commandA.equals(commandACopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"conradsoon"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"conradsoon"},"content":"        assertFalse(commandA.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"conradsoon"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"conradsoon"},"content":"        assertFalse(commandA.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"conradsoon"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"conradsoon"},"content":"        assertFalse(commandA.equals(commandB));","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"conradsoon"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"conradsoon"},"content":"    private class ModelStubWithNote extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"conradsoon"},"content":"        private final Person person;","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"conradsoon"},"content":"        private final Consumer\u003cNote\u003e consumer;","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"conradsoon"},"content":"        ModelStubWithNote(Person person, Consumer\u003cNote\u003e consumer) {","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"conradsoon"},"content":"            this.person \u003d person;","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"conradsoon"},"content":"            this.consumer \u003d consumer;","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"conradsoon"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"conradsoon"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"conradsoon"},"content":"            return FXCollections.observableArrayList(person);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"conradsoon":98}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Linkedin;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"        // Heuristic: Each Valid Input at Least Once in a Positive Test Case.","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"        Person editedPerson \u003d new PersonBuilder().withName(\"Benjamin\")","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"                .withAddress(\"311, Clementi Ave 1, #02-25\")","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"                .withEmail(\"benjamin@example.com\")","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"                .withPhone(\"98765431\")","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"                .withBirthday(MonthDay.of(11, 10))","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"                .withLinkedin(\"benjamin\")","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"                .withSecondaryEmail(\"benjamin@gmail.com\")","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"                .withTelegram(\"@benjamin\")","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"                .withTags(\"bestFriends\")","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"                .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"        EditPersonDescriptor descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setName(new Name(\"Benjamin\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setAddress(new Address(\"311, Clementi Ave 1, #02-25\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setEmail(new Email(\"benjamin@example.com\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setPhone(new Phone(\"98765431\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setBirthday(new Birthday(MonthDay.of(11, 10)));","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setLinkedin(new Linkedin(\"benjamin\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setSecondaryEmail(new Email(\"benjamin@gmail.com\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setTelegram(new Telegram(\"@benjamin\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"        HashSet\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"        tags.add(new Tag(\"bestFriends\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setTags(tags);","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"limjunxian1"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"limjunxian1"},"content":"            CommandResult commandResult \u003d editCommand.execute(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"limjunxian1"},"content":"            assertEquals(commandResult, new CommandResult(expectedMessage));","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"limjunxian1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"limjunxian1"},"content":"            fail();","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"limjunxian1"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"limjunxian1"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"limjunxian1"},"content":"        EditPersonDescriptor descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setName(new Name(VALID_NAME_BOB));","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"limjunxian1"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"limjunxian1"},"content":"        expectedModel.setPerson(personInFilteredList, editedPerson);","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":173,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"limjunxian1"},"content":"    public void execute_editEmptyFields_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":175,"author":{"gitId":"limjunxian1"},"content":"        // Heuristic applied: No More Than One Invalid Input In A Test Case","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"limjunxian1"},"content":"        // Birthday of specified person is empty.","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"limjunxian1"},"content":"        EditPersonDescriptor descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setBirthday(new Birthday(MonthDay.of(6, 9)));","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"limjunxian1"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"limjunxian1"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_USE_ADDALT_COMMAND, \"Birthday\");","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"limjunxian1"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"limjunxian1"},"content":"        // Telegram of specified person is empty.","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setTelegram(new Telegram(\"@alice\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"limjunxian1"},"content":"        editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"limjunxian1"},"content":"        expectedMessage \u003d String.format(EditCommand.MESSAGE_USE_ADDALT_COMMAND, \"Telegram\");","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"limjunxian1"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":190,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"limjunxian1"},"content":"        // Linkedin of specified person is empty.","lastModifiedDate":"2023-11-01"},{"lineNumber":192,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setLinkedin(new Linkedin(\"alice\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"limjunxian1"},"content":"        editCommand \u003d new EditCommand(Index.fromOneBased(3), descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"limjunxian1"},"content":"        expectedMessage \u003d String.format(EditCommand.MESSAGE_USE_ADDALT_COMMAND, \"Linkedin\");","lastModifiedDate":"2023-11-01"},{"lineNumber":196,"author":{"gitId":"limjunxian1"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":197,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"limjunxian1"},"content":"        // Secondary Email of specified person is empty.","lastModifiedDate":"2023-11-01"},{"lineNumber":199,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setSecondaryEmail(new Email(\"alice@email.com\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"limjunxian1"},"content":"        editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"limjunxian1"},"content":"        expectedMessage \u003d String.format(EditCommand.MESSAGE_USE_ADDALT_COMMAND, \"Secondary Email\");","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"limjunxian1"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"limjunxian1"},"content":"    public void execute_editResultsNoChange_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":208,"author":{"gitId":"limjunxian1"},"content":"        // Heuristic applied: No More Than One Invalid Input In A Test Case","lastModifiedDate":"2023-11-01"},{"lineNumber":209,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":210,"author":{"gitId":"limjunxian1"},"content":"        // Invalid input refers to filling in the exact same field value of the specified person.","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":212,"author":{"gitId":"limjunxian1"},"content":"        // Name","lastModifiedDate":"2023-11-01"},{"lineNumber":213,"author":{"gitId":"limjunxian1"},"content":"        EditPersonDescriptor descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setName(new Name(\"Benson Meier\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":215,"author":{"gitId":"limjunxian1"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":216,"author":{"gitId":"limjunxian1"},"content":"        assertCommandFailure(editCommand, model, String.format(EditCommand.MESSAGE_NO_CHANGE, \"Benson Meier\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":217,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"limjunxian1"},"content":"        // Address","lastModifiedDate":"2023-11-01"},{"lineNumber":219,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":220,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setAddress(new Address(\"311, Clementi Ave 2, #02-25\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":221,"author":{"gitId":"limjunxian1"},"content":"        editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"limjunxian1"},"content":"        assertCommandFailure(editCommand, model, String.format(EditCommand.MESSAGE_NO_CHANGE, \"Benson Meier\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":223,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":224,"author":{"gitId":"limjunxian1"},"content":"        // Email","lastModifiedDate":"2023-11-01"},{"lineNumber":225,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":226,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setEmail(new Email(\"johnd@example.com\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":227,"author":{"gitId":"limjunxian1"},"content":"        editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":228,"author":{"gitId":"limjunxian1"},"content":"        assertCommandFailure(editCommand, model, String.format(EditCommand.MESSAGE_NO_CHANGE, \"Benson Meier\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":229,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":230,"author":{"gitId":"limjunxian1"},"content":"        // Phone","lastModifiedDate":"2023-11-01"},{"lineNumber":231,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":232,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setPhone(new Phone(\"98765432\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":233,"author":{"gitId":"limjunxian1"},"content":"        editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":234,"author":{"gitId":"limjunxian1"},"content":"        assertCommandFailure(editCommand, model, String.format(EditCommand.MESSAGE_NO_CHANGE, \"Benson Meier\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":235,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":236,"author":{"gitId":"limjunxian1"},"content":"        // Birthday","lastModifiedDate":"2023-11-01"},{"lineNumber":237,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setBirthday(new Birthday(MonthDay.of(10, 10)));","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"limjunxian1"},"content":"        editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"limjunxian1"},"content":"        assertCommandFailure(editCommand, model, String.format(EditCommand.MESSAGE_NO_CHANGE, \"Benson Meier\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":241,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"limjunxian1"},"content":"        // Telegram","lastModifiedDate":"2023-11-01"},{"lineNumber":243,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":244,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setTelegram(new Telegram(\"@benson\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":245,"author":{"gitId":"limjunxian1"},"content":"        editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":246,"author":{"gitId":"limjunxian1"},"content":"        assertCommandFailure(editCommand, model, String.format(EditCommand.MESSAGE_NO_CHANGE, \"Benson Meier\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":247,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"limjunxian1"},"content":"        // Linkedin","lastModifiedDate":"2023-11-01"},{"lineNumber":249,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":250,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setLinkedin(new Linkedin(\"bensonmeier\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":251,"author":{"gitId":"limjunxian1"},"content":"        editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":252,"author":{"gitId":"limjunxian1"},"content":"        assertCommandFailure(editCommand, model, String.format(EditCommand.MESSAGE_NO_CHANGE, \"Benson Meier\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":253,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":254,"author":{"gitId":"limjunxian1"},"content":"        // SecondaryEmail","lastModifiedDate":"2023-11-01"},{"lineNumber":255,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":256,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setSecondaryEmail(new Email(\"ben10@gmail.com\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":257,"author":{"gitId":"limjunxian1"},"content":"        editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":258,"author":{"gitId":"limjunxian1"},"content":"        assertCommandFailure(editCommand, model, String.format(EditCommand.MESSAGE_NO_CHANGE, \"Benson Meier\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":259,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":260,"author":{"gitId":"limjunxian1"},"content":"        // Tags","lastModifiedDate":"2023-11-01"},{"lineNumber":261,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":262,"author":{"gitId":"limjunxian1"},"content":"        HashSet\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":263,"author":{"gitId":"limjunxian1"},"content":"        tags.add(new Tag(\"owesMoney\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":264,"author":{"gitId":"limjunxian1"},"content":"        tags.add(new Tag(\"friends\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":265,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setTags(tags);","lastModifiedDate":"2023-11-01"},{"lineNumber":266,"author":{"gitId":"limjunxian1"},"content":"        editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":267,"author":{"gitId":"limjunxian1"},"content":"        assertCommandFailure(editCommand, model, String.format(EditCommand.MESSAGE_NO_CHANGE, \"Benson Meier\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":268,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":269,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":270,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":271,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":272,"author":{"gitId":"limjunxian1"},"content":"    public void execute_editEmail_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":273,"author":{"gitId":"limjunxian1"},"content":"        // All pair strategy","lastModifiedDate":"2023-11-01"},{"lineNumber":274,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":275,"author":{"gitId":"limjunxian1"},"content":"        // Set secondary email same as primary email.","lastModifiedDate":"2023-11-01"},{"lineNumber":276,"author":{"gitId":"limjunxian1"},"content":"        EditPersonDescriptor descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":277,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setSecondaryEmail(new Email(\"johnd@example.com\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":278,"author":{"gitId":"limjunxian1"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":279,"author":{"gitId":"limjunxian1"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_DUPLICATE_EMAIL, \"Benson Meier\");","lastModifiedDate":"2023-11-01"},{"lineNumber":280,"author":{"gitId":"limjunxian1"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":281,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":282,"author":{"gitId":"limjunxian1"},"content":"        // Set primary email same as secondary email.","lastModifiedDate":"2023-11-01"},{"lineNumber":283,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":284,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setEmail(new Email(\"ben10@gmail.com\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":285,"author":{"gitId":"limjunxian1"},"content":"        editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":286,"author":{"gitId":"limjunxian1"},"content":"        expectedMessage \u003d String.format(EditCommand.MESSAGE_DUPLICATE_EMAIL, \"Benson Meier\");","lastModifiedDate":"2023-11-01"},{"lineNumber":287,"author":{"gitId":"limjunxian1"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":288,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":289,"author":{"gitId":"limjunxian1"},"content":"        // Set both primary and secondary email to be the same.","lastModifiedDate":"2023-11-01"},{"lineNumber":290,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":291,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setEmail(new Email(\"ben@gmail.com\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":292,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setSecondaryEmail(new Email(\"ben@gmail.com\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":293,"author":{"gitId":"limjunxian1"},"content":"        editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":294,"author":{"gitId":"limjunxian1"},"content":"        expectedMessage \u003d String.format(EditCommand.MESSAGE_DUPLICATE_EMAIL, \"Benson Meier\");","lastModifiedDate":"2023-11-01"},{"lineNumber":295,"author":{"gitId":"limjunxian1"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":296,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":297,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"limjunxian1":174,"-":159}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", birthday\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"                + editPersonDescriptor.getBirthday().orElse(null) + \", linkedin\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"                + editPersonDescriptor.getLinkedin().orElse(null) + \", secondaryEmail\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"                + editPersonDescriptor.getSecondaryEmail().orElse(null) + \", telegram\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"                + editPersonDescriptor.getTelegram().orElse(null) + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"limjunxian1":5,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"        // same values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"        assertFalse(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kokrui":2,"-":89}},{"path":"src/test/java/seedu/address/logic/commands/OweCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"class OweCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"        Person validPerson \u003d new PersonBuilder().withBalance(0).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"        modelStub.addPerson(validPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"        CommandResult commandResult \u003d new OweCommand(","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"                Index.fromZeroBased(0),","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"                new Balance(250)).execute(modelStub);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"        assertEquals(String.format(OweCommand.MESSAGE_SUCCESS, \"$2.50\",","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"                Messages.format(validPerson)), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"    public void execute_personExceedsBalanceLimit_throwsCommandException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"        Person validPerson \u003d new PersonBuilder().withBalance(0).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"        modelStub.addPerson(validPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"                new OweCommand(Index.fromZeroBased(0),","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"                        new Balance(1500000)).execute(modelStub));","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"        Person validPerson \u003d new PersonBuilder().withBalance(0).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"        modelStub.addPerson(validPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"        Index invalidIndex \u003d Index.fromZeroBased(modelStub.personsAdded.size() + 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"                new OweCommand(invalidIndex, new Balance(250)).execute(modelStub));","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"    public void execute_newDebtWouldExceedBalanceLimit_throwsCommandException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"        Person validPerson \u003d new PersonBuilder().withBalance(-999995).build(); // Current debt is 999995","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"        modelStub.addPerson(validPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"                new OweCommand(Index.fromZeroBased(0),","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"                        new Balance(10)).execute(modelStub)); // New debt would make it 1000005","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"        OweCommand oweFirstCommand \u003d new OweCommand(Index.fromZeroBased(0), new Balance(250));","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"        OweCommand oweSecondCommand \u003d new OweCommand(Index.fromZeroBased(1), new Balance(250));","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"        assertTrue(oweFirstCommand.equals(oweFirstCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"        OweCommand oweFirstCommandCopy \u003d new OweCommand(Index.fromZeroBased(0), new Balance(250));","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"        assertTrue(oweFirstCommand.equals(oweFirstCommandCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"        assertFalse(oweFirstCommand.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"        assertFalse(oweFirstCommand.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"        // different owe command -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"        assertFalse(oweFirstCommand.equals(oweSecondCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"     * A Model stub that always accepts the person being added.","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"            requireAllNonNull(person);","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"            return this.personsAdded.contains(person);","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"            requireAllNonNull(person);","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"            personsAdded.add(person);","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"kokrui"},"content":"            return FXCollections.observableList(personsAdded);","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"kokrui"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"kokrui"},"content":"            List\u003cPerson\u003e updatedList \u003d new ArrayList\u003c\u003e(personsAdded);","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"kokrui"},"content":"            updatedList.set(updatedList.indexOf(target), editedPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"kokrui"},"content":"            personsAdded.set(0, editedPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kokrui":129}},{"path":"src/test/java/seedu/address/logic/commands/PayCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"class PayCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"    public void execute_personAcceptedByModel_paySuccessful() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        ModelStubAcceptingPersonPaid modelStub \u003d new ModelStubAcceptingPersonPaid();","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"        Person validPerson \u003d new PersonBuilder().withBalance(-250).build(); // Initial debt of 2.50","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"        modelStub.addPerson(validPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"        CommandResult commandResult \u003d new PayCommand(","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"                Index.fromZeroBased(0),","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"                new Balance(250)).execute(modelStub);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"        assertEquals(String.format(PayCommand.MESSAGE_SUCCESS, \"$2.50\",","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"                Messages.format(validPerson)), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"    public void execute_personExceedsBalanceLimit_throwsCommandException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"        ModelStubAcceptingPersonPaid modelStub \u003d new ModelStubAcceptingPersonPaid();","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"        Person validPerson \u003d new PersonBuilder().withBalance(0).build(); // No initial debt","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"        modelStub.addPerson(validPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"                new PayCommand(Index.fromZeroBased(0),","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"                        new Balance(1500000)).execute(modelStub)); // Trying to pay too much","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"        ModelStubAcceptingPersonPaid modelStub \u003d new ModelStubAcceptingPersonPaid();","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"        Person validPerson \u003d new PersonBuilder().withBalance(0).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"        modelStub.addPerson(validPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"        Index invalidIndex \u003d Index.fromZeroBased(modelStub.personsPaid.size() + 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"                new PayCommand(invalidIndex, new Balance(250)).execute(modelStub));","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"        PayCommand payFirstCommand \u003d new PayCommand(Index.fromZeroBased(0), new Balance(250));","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"        PayCommand paySecondCommand \u003d new PayCommand(Index.fromZeroBased(1), new Balance(250));","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"        assertTrue(payFirstCommand.equals(payFirstCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"        PayCommand payFirstCommandCopy \u003d new PayCommand(Index.fromZeroBased(0), new Balance(250));","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"        assertTrue(payFirstCommand.equals(payFirstCommandCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"        assertFalse(payFirstCommand.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"        assertFalse(payFirstCommand.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"        // different pay command -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"        assertFalse(payFirstCommand.equals(paySecondCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"     * A Model stub that always accepts the payment being added.","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"    private class ModelStubAcceptingPersonPaid extends ModelStub {","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"        final ArrayList\u003cPerson\u003e personsPaid \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"            requireAllNonNull(person);","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"            return this.personsPaid.contains(person);","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"            requireAllNonNull(person);","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"            personsPaid.add(person);","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"            return FXCollections.observableList(personsPaid);","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"            List\u003cPerson\u003e updatedList \u003d new ArrayList\u003c\u003e(personsPaid);","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"            updatedList.set(updatedList.indexOf(target), editedPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"            personsPaid.set(0, editedPerson);","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kokrui":118}},{"path":"src/test/java/seedu/address/logic/commands/RemoveNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_NOTE;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_NOTE;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"public class RemoveNoteCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"    public void execute_validIndex_success() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"        Person editedPerson \u003d new PersonBuilder(personToEdit).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"        editedPerson.addNote(new Note(\"Test note\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"conradsoon"},"content":"        RemoveNoteCommand removeNoteCommand \u003d new RemoveNoteCommand(INDEX_FIRST_PERSON, Index.fromOneBased(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"conradsoon"},"content":"        String expectedMessage \u003d String.format(RemoveNoteCommand.MESSAGE_REMOVE_NOTE_SUCCESS, editedPerson.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"conradsoon"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"        expectedModel.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"        assertCommandSuccess(removeNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"conradsoon"},"content":"    public void execute_invalidPersonIndex_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"conradsoon"},"content":"        RemoveNoteCommand removeNoteCommand \u003d new RemoveNoteCommand(outOfBoundIndex, Index.fromOneBased(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"conradsoon"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e removeNoteCommand.execute(model));","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"conradsoon"},"content":"        assertEquals(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, exception.getMessage());","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"conradsoon"},"content":"    public void execute_invalidNoteIndex_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"conradsoon"},"content":"        RemoveNoteCommand removeNoteCommand \u003d new RemoveNoteCommand(INDEX_FIRST_PERSON, Index.fromOneBased(1000));","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"conradsoon"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e removeNoteCommand.execute(model));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"conradsoon"},"content":"        assertEquals(MESSAGE_INVALID_NOTE_DISPLAYED_INDEX, exception.getMessage());","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"conradsoon"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"conradsoon"},"content":"        RemoveNoteCommand removeFirstCommand \u003d new RemoveNoteCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"conradsoon"},"content":"            INDEX_FIRST_NOTE);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"conradsoon"},"content":"        RemoveNoteCommand removeSecondCommand \u003d new RemoveNoteCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"conradsoon"},"content":"            INDEX_SECOND_NOTE);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"conradsoon"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"conradsoon"},"content":"        assertTrue(removeFirstCommand.equals(removeFirstCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"conradsoon"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"conradsoon"},"content":"        RemoveNoteCommand removeFirstCommandCopy \u003d new RemoveNoteCommand(INDEX_FIRST_PERSON, INDEX_FIRST_NOTE);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"conradsoon"},"content":"        assertTrue(removeFirstCommand.equals(removeFirstCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"conradsoon"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"conradsoon"},"content":"        assertFalse(removeFirstCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"conradsoon"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"conradsoon"},"content":"        assertFalse(removeFirstCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"conradsoon"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"conradsoon"},"content":"        assertFalse(removeFirstCommand.equals(removeSecondCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"conradsoon":89}},{"path":"src/test/java/seedu/address/logic/commands/UpdatePhotoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"VN-Hao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"VN-Hao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"VN-Hao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"VN-Hao"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"VN-Hao"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"VN-Hao"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"VN-Hao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"VN-Hao"},"content":"public class UpdatePhotoCommandTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"VN-Hao"},"content":"    private final String safePath \u003d Paths.get(\"\").toAbsolutePath()","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"VN-Hao"},"content":"            + \"/src/main/resources/images/test_photo.png\";","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"VN-Hao"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"VN-Hao"},"content":"    public void execute_noIndexCommand_exceptionThrown() {","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"VN-Hao"},"content":"        AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"VN-Hao"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"VN-Hao"},"content":"            Command command \u003d parser.parseCommand(\"updatephoto path/images/default_photo.png\");","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"VN-Hao"},"content":"            assertTrue(command instanceof UpdatePhotoCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"VN-Hao"},"content":"            UpdatePhotoCommand updatePhotoCommand \u003d (UpdatePhotoCommand) command;","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"VN-Hao"},"content":"            updatePhotoCommand.execute(new ModelManager());","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"VN-Hao"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"VN-Hao"},"content":"            assertEquals(e.getMessage(),","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"VN-Hao"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdatePhotoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"VN-Hao"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"VN-Hao"},"content":"            fail();","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"VN-Hao"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"VN-Hao"},"content":"    public void execute_noPathCommand_exceptionThrown() {","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"VN-Hao"},"content":"        AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"VN-Hao"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"VN-Hao"},"content":"            Command aCommand \u003d parser.parseCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"VN-Hao"},"content":"                    \"add n/John Doe p/98765432 e/johndoe@gmail.com a/John street, block 123, #01-01 t/friend\"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"VN-Hao"},"content":"            );","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"VN-Hao"},"content":"            Command upCommand \u003d parser.parseCommand(\"updatephoto 1\");","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"VN-Hao"},"content":"            assertTrue(aCommand instanceof AddCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"VN-Hao"},"content":"            assertTrue(upCommand instanceof UpdatePhotoCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"VN-Hao"},"content":"            AddCommand addCommand \u003d (AddCommand) aCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"VN-Hao"},"content":"            UpdatePhotoCommand updatePhotoCommand \u003d (UpdatePhotoCommand) upCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"VN-Hao"},"content":"            ModelManager temp \u003d new ModelManager();","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"VN-Hao"},"content":"            addCommand.execute(temp);","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"VN-Hao"},"content":"            updatePhotoCommand.execute(temp);","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"VN-Hao"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"VN-Hao"},"content":"            assertEquals(e.getMessage(),","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"VN-Hao"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdatePhotoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"VN-Hao"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"VN-Hao"},"content":"            fail();","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"VN-Hao"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"VN-Hao"},"content":"    public void execute_invalidIndexInEmptyAddressBook_exceptionThrown() {","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"VN-Hao"},"content":"        AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"VN-Hao"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"VN-Hao"},"content":"            Command command \u003d parser.parseCommand(\"updatephoto 0 path/images/default_photo.png\");","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"VN-Hao"},"content":"            assertTrue(command instanceof UpdatePhotoCommand);","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"VN-Hao"},"content":"            UpdatePhotoCommand updatePhotoCommand \u003d (UpdatePhotoCommand) command;","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"VN-Hao"},"content":"            updatePhotoCommand.execute(new ModelManager());","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"VN-Hao"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"VN-Hao"},"content":"            fail();","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"VN-Hao"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"VN-Hao"},"content":"            assertEquals(e.getMessage(), \"The person index provided is invalid\");","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"VN-Hao"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"VN-Hao"},"content":"    public void execute_nonPositiveIndexInNonEmptyAddressBook_exceptionThrown() {","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"VN-Hao"},"content":"        AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"VN-Hao"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"VN-Hao"},"content":"            Command aCommand \u003d parser.parseCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"VN-Hao"},"content":"                    \"add n/John Doe p/98765432 e/johndoe@gmail.com a/John street, block 123, #01-01 t/friend\"","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"VN-Hao"},"content":"            );","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"VN-Hao"},"content":"            Command upCommand \u003d parser.parseCommand(\"updatephoto 0 path/images/default_photo.png\");","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"VN-Hao"},"content":"            assertTrue(aCommand instanceof AddCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"VN-Hao"},"content":"            assertTrue(upCommand instanceof UpdatePhotoCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"VN-Hao"},"content":"            AddCommand addCommand \u003d (AddCommand) aCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"VN-Hao"},"content":"            UpdatePhotoCommand updatePhotoCommand \u003d (UpdatePhotoCommand) upCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"VN-Hao"},"content":"            ModelManager temp \u003d new ModelManager();","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"VN-Hao"},"content":"            addCommand.execute(temp);","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"VN-Hao"},"content":"            updatePhotoCommand.execute(temp);","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"VN-Hao"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"VN-Hao"},"content":"            fail();","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"VN-Hao"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"VN-Hao"},"content":"            assertEquals(e.getMessage(), \"The person index provided is invalid\");","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"VN-Hao"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"VN-Hao"},"content":"    public void execute_outOfBoundIndexInNonEmptyAddressBook_exceptionThrown() {","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"VN-Hao"},"content":"        AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"VN-Hao"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"VN-Hao"},"content":"            Command aCommand \u003d parser.parseCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"VN-Hao"},"content":"                    \"add n/John Doe p/98765432 e/johndoe@gmail.com a/John street, block 123, #01-01 t/friend\"","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"VN-Hao"},"content":"            );","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"VN-Hao"},"content":"            Command upCommand \u003d parser.parseCommand(\"updatephoto 2 path/images/default_photo.png\");","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"VN-Hao"},"content":"            assertTrue(aCommand instanceof AddCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"VN-Hao"},"content":"            assertTrue(upCommand instanceof UpdatePhotoCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"VN-Hao"},"content":"            AddCommand addCommand \u003d (AddCommand) aCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"VN-Hao"},"content":"            UpdatePhotoCommand updatePhotoCommand \u003d (UpdatePhotoCommand) upCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"VN-Hao"},"content":"            ModelManager temp \u003d new ModelManager();","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"VN-Hao"},"content":"            addCommand.execute(temp);","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"VN-Hao"},"content":"            updatePhotoCommand.execute(temp);","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"VN-Hao"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"VN-Hao"},"content":"            fail();","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"VN-Hao"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"VN-Hao"},"content":"            assertEquals(e.getMessage(), \"The person index provided is invalid\");","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"VN-Hao"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"VN-Hao"},"content":"    public void execute_invalidPath_exceptionThrown() {","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"VN-Hao"},"content":"        AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"VN-Hao"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"VN-Hao"},"content":"            Command aCommand \u003d parser.parseCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"VN-Hao"},"content":"                    \"add n/John Doe p/98765432 e/johndoe@gmail.com a/John street, block 123, #01-01 t/friend\"","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"VN-Hao"},"content":"            );","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"VN-Hao"},"content":"            Command upCommand \u003d parser.parseCommand(\"updatephoto 1 path/images/defaul_photo.png\");","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"VN-Hao"},"content":"            assertTrue(aCommand instanceof AddCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"VN-Hao"},"content":"            assertTrue(upCommand instanceof UpdatePhotoCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"VN-Hao"},"content":"            AddCommand addCommand \u003d (AddCommand) aCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"VN-Hao"},"content":"            UpdatePhotoCommand updatePhotoCommand \u003d (UpdatePhotoCommand) upCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"VN-Hao"},"content":"            ModelManager temp \u003d new ModelManager();","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"VN-Hao"},"content":"            addCommand.execute(temp);","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"VN-Hao"},"content":"            updatePhotoCommand.execute(temp);","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"VN-Hao"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"VN-Hao"},"content":"            fail();","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"VN-Hao"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"VN-Hao"},"content":"            assertEquals(e.getMessage(), \"Invalid file path provided\");","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"VN-Hao"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"VN-Hao"},"content":"    public void execute_validCommand() {","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"VN-Hao"},"content":"        AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"VN-Hao"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"VN-Hao"},"content":"            Command aCommand \u003d parser.parseCommand(","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"VN-Hao"},"content":"                    \"add n/John Doe p/98765432 e/johndoe@gmail.com a/John street, block 123, #01-01 t/friend\"","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"VN-Hao"},"content":"            );","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"VN-Hao"},"content":"            Command upCommand \u003d parser.parseCommand(\"updatephoto 1 path/\" + safePath);","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"VN-Hao"},"content":"            assertTrue(aCommand instanceof AddCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"VN-Hao"},"content":"            assertTrue(upCommand instanceof UpdatePhotoCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"VN-Hao"},"content":"            AddCommand addCommand \u003d (AddCommand) aCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"VN-Hao"},"content":"            UpdatePhotoCommand updatePhotoCommand \u003d (UpdatePhotoCommand) upCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"VN-Hao"},"content":"            ModelManager temp \u003d new ModelManager();","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"VN-Hao"},"content":"            addCommand.execute(temp);","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"VN-Hao"},"content":"            updatePhotoCommand.execute(temp);","lastModifiedDate":"2023-10-30"},{"lineNumber":157,"author":{"gitId":"VN-Hao"},"content":"            assertEquals(temp.getFilteredPersonList().get(0).getAvatar().getPath(), safePath);","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"VN-Hao"},"content":"        } catch (ParseException | CommandException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"VN-Hao"},"content":"            fail();","lastModifiedDate":"2023-10-30"},{"lineNumber":160,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"VN-Hao"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":169,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"VN-Hao":173}},{"path":"src/test/java/seedu/address/logic/commands/ViewNotesCommandLogicTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"public class ViewNotesCommandLogicTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"        Person personA \u003d new PersonBuilder().withName(\"A\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"        ModelStubWithPerson modelStub \u003d new ModelStubWithPerson(personA);","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"        ViewNotesCommand command \u003d new ViewNotesCommand(1);","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"            Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, () -\u003e command.execute(modelStub));","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"    public void equals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"        ViewNotesCommand commandA \u003d new ViewNotesCommand(0);","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"        ViewNotesCommand commandB \u003d new ViewNotesCommand(1);","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"        assertTrue(commandA.equals(commandA));","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"conradsoon"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"        ViewNotesCommand commandACopy \u003d new ViewNotesCommand(0);","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"conradsoon"},"content":"        assertTrue(commandA.equals(commandACopy));","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"conradsoon"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"        assertFalse(commandA.equals(1));","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"        assertFalse(commandA.equals(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"conradsoon"},"content":"        assertFalse(commandA.equals(commandB));","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"conradsoon"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"conradsoon"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"conradsoon"},"content":"        private final Person person;","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"conradsoon"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"conradsoon"},"content":"            this.person \u003d person;","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"conradsoon"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"conradsoon"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"conradsoon"},"content":"            return FXCollections.observableArrayList(person);","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"conradsoon":67}},{"path":"src/test/java/seedu/address/logic/parser/AddAltCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINKEDIN;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SECONDARY_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"import seedu.address.logic.commands.AddAltCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Linkedin;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"public class AddAltCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAltCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"    private AddAltCommandParser parser \u003d new AddAltCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"    public void parse_validArgs_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"        // Heuristic: Each Valid Input at Least Once in a Positive Test Case.","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"        // Valid inputs for each alternative contact field: Null, Non-empty (follows format for respective fields)","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"        // All non-empty.","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"        AddAltCommand.AddAltPersonDescriptor descriptor \u003d new AddAltCommand.AddAltPersonDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"        descriptor.setTelegram(new Telegram(\"@telegram\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"        descriptor.setLinkedin(new Linkedin(\"LINKEDIN\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"        descriptor.setSecondaryEmail(new Email(\"email@email.com\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setBirthday(new Birthday(MonthDay.of(6, 9)));","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"        Index expectedIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"        assertParseSuccess(","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"                parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"                PREAMBLE_WHITESPACE + \"1\" + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"                        + PREFIX_TELEGRAM + \"@telegram\" + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"                        + PREFIX_LINKEDIN + \"LINKEDIN\" + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"                        + PREFIX_SECONDARY_EMAIL + \"email@email.com\" + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"                        + PREFIX_BIRTHDAY + \"09/06\",","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"                new AddAltCommand(expectedIndex, descriptor));","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"        // All null except Telegram.","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new AddAltCommand.AddAltPersonDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setTelegram(new Telegram(\"@telegram\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"        expectedIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        assertParseSuccess(","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"                parser,","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"                PREAMBLE_WHITESPACE + \"1\" + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"                        + PREFIX_TELEGRAM + \"@telegram\" + \" \",","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"                new AddAltCommand(expectedIndex, descriptor));","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"        // All null except Secondary Email.","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new AddAltCommand.AddAltPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setSecondaryEmail(new Email(\"email@email.com\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"        assertParseSuccess(","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"                parser,","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"                PREAMBLE_WHITESPACE + \"1\" + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"                        + PREFIX_SECONDARY_EMAIL + \"email@email.com\" + \" \",","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"                new AddAltCommand(expectedIndex, descriptor));","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"    public void parse_invalidFormat_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"        // Heuristic: No More Than One Invalid Input In A Test Case. Used all pairs strategy to exhaustively test.","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"limjunxian1"},"content":"        // No index specified","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"b/24/07\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"        // No prefixes specified","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"limjunxian1"},"content":"        // No index and no prefixes specified","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"limjunxian1"},"content":"        // Duplicate prefixes","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"1 b/24/07 b/25/07\", Messages.MESSAGE_DUPLICATE_FIELDS + \"b/\");","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"limjunxian1"},"content":"        // Invalid prefix","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"1 i/string b/24/07\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"limjunxian1"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"limjunxian1"},"content":"        // Heuristic: Boundary value analysis","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"limjunxian1"},"content":"        // One value below boundary","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"-1 b/24/07/01\" , MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"limjunxian1"},"content":"        // Value at boundary","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"0 b/24/07/01\" , MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"limjunxian1":71,"lordidiot":32}},{"path":"src/test/java/seedu/address/logic/parser/AddNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"public class AddNoteCommandParserTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"    private AddNoteCommandParser parser \u003d new AddNoteCommandParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"        AddNoteCommand expectedCommand \u003d new AddNoteCommand(Index.fromZeroBased(0), new Note(\"Test note\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"        assertParseSuccess(parser, \"1 Test note\", expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"    public void parse_missingDetails_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"        // Missing note details","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"        // Missing index","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"        assertParseFailure(parser, \"Test note\",","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"conradsoon":32}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.commands.OweCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.commands.PayCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.RemoveNoteCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parseCommand(FindCommand.COMMAND_WORD + \" n/foo \u0026\u0026 n/bar || t/baz\")","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"                instanceof FindCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"conradsoon"},"content":"    public void parseCommand_note() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"conradsoon"},"content":"        Note note \u003d new Note(\"Sample note\");","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"conradsoon"},"content":"        assertTrue(parser.parseCommand(AddNoteCommand.COMMAND_WORD + \" 1 Sample note\") instanceof AddNoteCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"conradsoon"},"content":"    public void parseCommand_removeNote() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"conradsoon"},"content":"        assertTrue(parser.parseCommand(RemoveNoteCommand.COMMAND_WORD + \" 1 2\") instanceof RemoveNoteCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"    public void parseCommand_pay() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parseCommand(\"pay 1 2.50\") instanceof PayCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"    public void parseCommand_owe() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parseCommand(\"owe 1 2.50\") instanceof OweCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"conradsoon":15,"kokrui":15,"-":92}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINKEDIN;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SECONDARY_EMAIL;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Linkedin;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"limjunxian1"},"content":"        //invalid telegram","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"1 tg/telegram\", Telegram.MESSAGE_CONSTRAINTS); // not starting with @","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"1 tg/@tel\", Telegram.MESSAGE_CONSTRAINTS); // not meeting 5 character requirement","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"1 tg/@tel?!\", Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"limjunxian1"},"content":"        // invalid birthday","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"1 b/24-01-24\", Birthday.MESSAGE_INVALID); // not following format","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"1 b/./.\", Birthday.MESSAGE_INVALID); // not valid date","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"1 b/31/02\", Birthday.MESSAGE_INVALID); // not a valid date","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"limjunxian1"},"content":"        // invalid secondaryEmail","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"1 e2/yyy.com\", Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"limjunxian1"},"content":"        // invalid linkedin","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"1 li/?\", Linkedin.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"1 li/@johndoe\", Linkedin.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"limjunxian1"},"content":"        // mix of invalid and valid fields","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"1 li/? tg/@telegram\", Linkedin.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"1 li/john-doe tg/@telegram b/31/02\", Birthday.MESSAGE_INVALID);","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"limjunxian1"},"content":"        assertParseFailure(parser, \"1 li/john-doe tg/telegram b/31/02\", Birthday.MESSAGE_INVALID);","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":197,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"limjunxian1"},"content":"        //telegram","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setTelegram(new Telegram(\"@telegram\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"limjunxian1"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"limjunxian1"},"content":"        assertParseSuccess(","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"limjunxian1"},"content":"                parser,","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"limjunxian1"},"content":"                PREAMBLE_WHITESPACE + \"3\" + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"limjunxian1"},"content":"                        + PREFIX_TELEGRAM + \"@telegram\" + \" \", expectedCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"limjunxian1"},"content":"        // secondaryEmail","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setSecondaryEmail(new Email(\"email@email.com\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"limjunxian1"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"limjunxian1"},"content":"        assertParseSuccess(","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"limjunxian1"},"content":"                parser,","lastModifiedDate":"2023-10-18"},{"lineNumber":213,"author":{"gitId":"limjunxian1"},"content":"                PREAMBLE_WHITESPACE + \"3\" + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"limjunxian1"},"content":"                        + PREFIX_SECONDARY_EMAIL + \"email@email.com\" + \" \", expectedCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"limjunxian1"},"content":"        // linkedin","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setLinkedin(new Linkedin(\"LINKEDIN\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"limjunxian1"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"limjunxian1"},"content":"        assertParseSuccess(","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"limjunxian1"},"content":"                parser,","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"limjunxian1"},"content":"                PREAMBLE_WHITESPACE + \"3\" + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"limjunxian1"},"content":"                        + PREFIX_LINKEDIN + \"LINKEDIN\" + \" \", expectedCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"limjunxian1"},"content":"        //birthday","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"limjunxian1"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"limjunxian1"},"content":"        descriptor.setBirthday(new Birthday(MonthDay.of(6, 9)));","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"limjunxian1"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"limjunxian1"},"content":"        assertParseSuccess(","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"limjunxian1"},"content":"                parser,","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"limjunxian1"},"content":"                PREAMBLE_WHITESPACE + \"3\" + \" \"","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"limjunxian1"},"content":"                        + PREFIX_BIRTHDAY + \"09/06\", expectedCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":254,"author":{"gitId":"limjunxian1"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND + \" li/amy\" + \" li/bob\"","lastModifiedDate":"2023-10-18"},{"lineNumber":255,"author":{"gitId":"limjunxian1"},"content":"                + \" b/31/07\" + \" b/31/05\" + \" e2/amy@hotmail.com\" + \" e2/bob@hotmail.com\" + \" tg/@amyyy\" + \" tg/@bobbb\";","lastModifiedDate":"2023-10-18"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":258,"author":{"gitId":"limjunxian1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":259,"author":{"gitId":"limjunxian1"},"content":"                        PREFIX_BIRTHDAY, PREFIX_SECONDARY_EMAIL, PREFIX_LINKEDIN, PREFIX_TELEGRAM));","lastModifiedDate":"2023-10-18"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"limjunxian1":74,"-":205}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"    public void parse_hasPreamble_throwsParseException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"        // just preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" hello world\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"        // preamble with valid args after","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" hello world n/Alice\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"    public void parse_conditionNotJoinedWithBooleanOp_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice n/Bob\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice t/friends\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"    public void parse_conditionInvalidBooleanOp_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice \u0026 n/Bob\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice | t/Bob\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"    public void parse_invalidCondition_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" /Alice\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" /\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"    public void parse_invalidBooleanExpression_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"        // no conditions","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" \u0026\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" !\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"        // no conditions after boolean op","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice \u0026\u0026\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice ||\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"        // no conditions before boolean op","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" \u0026\u0026 n/Alice\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" || n/Alice\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"        // no conditions between boolean op","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice \u0026\u0026 \u0026\u0026 n/Bob\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice || || n/Bob\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"        // no conditions after not op","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice ! \"));","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"    public void parse_unmatchedParens_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" (n/Alice \u0026\u0026 t/friends\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice \u0026\u0026 (t/friends || t/colleagues\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" )n/Alice \u0026\u0026 t/friends(\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" (n/Alice \u0026\u0026 t/friends))\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"    public void parse_validOneArg_returnsFindCommand() throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"        // name arg","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" n/Alice\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" n/Alice\") instanceof FindCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"        // other arg","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" t/friends\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" t/friends\") instanceof FindCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"        // optional arg","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" e2/a@a.com\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" e2/a@a.com\") instanceof FindCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"    public void parse_validMultipleArgs_returnsFindCommand() throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"        // name args","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" n/Alice \u0026\u0026 n/Li\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" n/Alice \u0026\u0026 n/Li\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"        // multiple distinct args","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" bal/-$5 \u0026\u0026 li/musk\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" bal/-$5 \u0026\u0026 li/musk\") instanceof FindCommand);","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"        // multiple distinct args with repeated fields","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" b/12 \u0026\u0026 nt/shirt \u0026\u0026 nt/blue\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" b/12 \u0026\u0026 nt/shirt \u0026\u0026 nt/blue\") instanceof FindCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"    public void parse_validArgsWithNotOp_returnsFindCommand() throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" !tg/ali\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" !tg/ali\") instanceof FindCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"        // with space after NOT","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" ! t/friends\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" ! t/friends\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"kokrui"},"content":"    public void parse_validArgsWithParens_returnFindCommand() throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" (n/Alice)\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" (n/Alice)\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"kokrui"},"content":"        // alters precedence","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" (n/Alice || t/friends) \u0026\u0026 a/street\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" (n/Alice || t/friends) \u0026\u0026 a/street\") instanceof FindCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"kokrui"},"content":"        // does not alter precedence","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" (n/Alice \u0026\u0026 t/friends) \u0026\u0026 a/street\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" (n/Alice \u0026\u0026 t/friends) \u0026\u0026 a/street\") instanceof FindCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"kokrui"},"content":"        // with space after parens","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" ( t/friends )\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" ( t/friends )\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"kokrui"},"content":"        // with space before parens","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" (t/friends )\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" (t/friends )\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"kokrui"},"content":"        // with nested parens","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" (n/Alice \u0026\u0026 (t/friends || t/colleagues))\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" (n/Alice \u0026\u0026 (t/friends || t/colleagues))\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" (n/Alice \u0026\u0026 ((((t/friends || t/colleagues)))))\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" (n/Alice \u0026\u0026 ((((t/friends || t/colleagues)))))\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"kokrui":126,"-":24}},{"path":"src/test/java/seedu/address/logic/parser/FindExpressionParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"public class FindExpressionParserTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"    private final FindExpressionParser parser \u003d new FindExpressionParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"    public void fromPrefix_invalidPrefix_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e FindExpressionParser.FindSupportedField.createFromPrefix(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e FindExpressionParser.FindSupportedField.createFromPrefix(\"asdf\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"        // correct prefix syntax but invalid prefix","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e FindExpressionParser.FindSupportedField.createFromPrefix(\"tgg/\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e FindExpressionParser.FindSupportedField.createFromPrefix(\"e2a/\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e FindExpressionParser.FindSupportedField.createFromPrefix(\"lin/\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseToPredicate(new ArrayList\u003c\u003e()));","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"    public void conditionNodeToPredicate_validField_returnsPredicate() throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.NAME, \"Alice\").toPredicate()","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.PHONE, \"12345\").toPredicate()","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.EMAIL, \"haha@haha.com\").toPredicate()","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.ADDRESS, \"123, haha street\").toPredicate()","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.TAG, \"friends\").toPredicate()","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.TELEGRAM, \"haha\").toPredicate()","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.SECONDARY_EMAIL, \"second@haha.com\").toPredicate()","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.LINKEDIN, \"elonmusk\").toPredicate()","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.BIRTHDAY, \"12\").toPredicate()","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.NOTE, \"cool\").toPredicate()","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"    public void conditionNodeToPredicate_invalidField_throwsException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"                null, \"Alice\").toPredicate());","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"    public void conditionNodeToPredicate_validOptionalField_evaluatesFalseIfEmpty() throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"        Person person \u003d new Person(","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"                new Name(\"Alice\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"                new Phone(\"12345\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"                new Email(\"alice@a.com\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"                new Address(\"123, alice street\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"                Set.of(new Tag(\"friends\"))","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"        );","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"        assertFalse(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.BIRTHDAY, \"Dec\").toPredicate().test(person));","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"        assertFalse(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.TELEGRAM, \"haha\").toPredicate().test(person));","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"        assertFalse(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.SECONDARY_EMAIL, \"a@a.com\").toPredicate().test(person));","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"        assertFalse(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.LINKEDIN, \"elonmusk\").toPredicate().test(person));","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"        assertFalse(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.NOTE, \"cool\").toPredicate().test(person));","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"kokrui"},"content":"    public void conditionNodeToPredicate_validOptionalField_evaluatesTrueIfNotEmpty() throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"kokrui"},"content":"        Person person \u003d new Person(","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"kokrui"},"content":"                new Name(\"Alice\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"kokrui"},"content":"                new Phone(\"12345\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"kokrui"},"content":"                new Email(\"alice@a.com\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"kokrui"},"content":"                new Address(\"123, alice street\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"kokrui"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"kokrui"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"kokrui"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"kokrui"},"content":"                Optional.of(new Telegram(\"@aliceeee\")),","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"kokrui"},"content":"                Set.of(new Tag(\"friends\")),","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"kokrui"},"content":"                Optional.of(999),","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"kokrui"},"content":"                FXCollections.observableArrayList(new ArrayList\u003c\u003e()),","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"kokrui"},"content":"                new Balance(0)","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"kokrui"},"content":"        );","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.TELEGRAM, \"@aliceeee\")","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"kokrui"},"content":"                .toPredicate().test(person));","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"kokrui"},"content":"    public void conditionNodeToPredicate_validBalanceField_evaluatesCorrectly() throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"conradsoon"},"content":"        Person youOwe \u003d new Person(","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"kokrui"},"content":"                new Name(\"Alice\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"kokrui"},"content":"                new Phone(\"12345\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"kokrui"},"content":"                new Email(\"alice@a.com\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"kokrui"},"content":"                new Address(\"123, alice street\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"kokrui"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"kokrui"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"kokrui"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"kokrui"},"content":"                Optional.of(new Telegram(\"@aliceeee\")),","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"kokrui"},"content":"                Set.of(new Tag(\"friends\")),","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"kokrui"},"content":"                Optional.of(999),","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"kokrui"},"content":"                FXCollections.observableArrayList(new ArrayList\u003c\u003e()),","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"kokrui"},"content":"                new Balance(-500)","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"kokrui"},"content":"        );","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.BALANCE, \"-1.12\")","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"conradsoon"},"content":"                .toPredicate().test(youOwe));","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"kokrui"},"content":"        // equal and with dollar sign","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.BALANCE, \"-$5.0\")","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"conradsoon"},"content":"                .toPredicate().test(youOwe));","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"conradsoon"},"content":"        Person owesYou \u003d new Person(","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"kokrui"},"content":"                new Name(\"Alice\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"kokrui"},"content":"                new Phone(\"12345\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"kokrui"},"content":"                new Email(\"alice@a.com\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"kokrui"},"content":"                new Address(\"123, alice street\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"kokrui"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"kokrui"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"kokrui"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"kokrui"},"content":"                Optional.of(new Telegram(\"@aliceeee\")),","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"kokrui"},"content":"                Set.of(new Tag(\"friends\")),","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"kokrui"},"content":"                Optional.of(999),","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"kokrui"},"content":"                FXCollections.observableArrayList(new ArrayList\u003c\u003e()),","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"kokrui"},"content":"                new Balance(50000)","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"kokrui"},"content":"        );","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.BALANCE, \"5.2\")","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"conradsoon"},"content":"                .toPredicate().test(owesYou));","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"kokrui"},"content":"        // equal and with dollar sign","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.BALANCE, \"$50.00\")","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"conradsoon"},"content":"                .toPredicate().test(owesYou));","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"kokrui"},"content":"    public void conditionNodeToPredicate_invalidBalanceField_evaluatesCorrectly() {","lastModifiedDate":"2023-10-31"},{"lineNumber":197,"author":{"gitId":"conradsoon"},"content":"        Person youOwe \u003d new Person(","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"kokrui"},"content":"                new Name(\"Alice\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"kokrui"},"content":"                new Phone(\"12345\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"kokrui"},"content":"                new Email(\"alice@a.com\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"kokrui"},"content":"                new Address(\"123, alice street\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"kokrui"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"kokrui"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"kokrui"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"kokrui"},"content":"                Optional.of(new Telegram(\"@aliceeee\")),","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"kokrui"},"content":"                Set.of(new Tag(\"friends\")),","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"kokrui"},"content":"                Optional.of(999),","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"kokrui"},"content":"                FXCollections.observableArrayList(new ArrayList\u003c\u003e()),","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"kokrui"},"content":"                new Balance(-500)","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"kokrui"},"content":"        );","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.BALANCE, \"1.123\")","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"conradsoon"},"content":"                .toPredicate().test(youOwe));","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.BALANCE, \"1.1.1\")","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"conradsoon"},"content":"                .toPredicate().test(youOwe));","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.BALANCE, \"$-5\")","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"conradsoon"},"content":"                .toPredicate().test(youOwe));","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.BALANCE, \"$ABCD\")","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"conradsoon"},"content":"                .toPredicate().test(youOwe));","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.BALANCE, \"$$5\")","lastModifiedDate":"2023-10-31"},{"lineNumber":230,"author":{"gitId":"conradsoon"},"content":"                .toPredicate().test(youOwe));","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"kokrui"},"content":"    public void conditionNoteToPredicate_validConditionWithQuotedKeyword_returnsPredicate()","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"kokrui"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.NAME, \"\\\"Alice Bob\\\"\").toPredicate()","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-31"},{"lineNumber":242,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.ADDRESS, \"\\\"alice park\\\"\").toPredicate()","lastModifiedDate":"2023-10-31"},{"lineNumber":243,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":244,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":245,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":246,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":247,"author":{"gitId":"kokrui"},"content":"    public void conditionNodeToPredicate_invalidConditionWithQuotedEmptyKeyword_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"kokrui"},"content":"        FindExpressionParser parser \u003d new FindExpressionParser();","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseToPredicate(","lastModifiedDate":"2023-10-31"},{"lineNumber":251,"author":{"gitId":"kokrui"},"content":"                List.of(new FindFilterStringTokenizer.Token(","lastModifiedDate":"2023-10-31"},{"lineNumber":252,"author":{"gitId":"kokrui"},"content":"                        FindFilterStringTokenizer.Token.Type.CONDITION, \"n/\\\"\\\"\"))","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"kokrui"},"content":"                )","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"kokrui"},"content":"        );","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"conradsoon":12,"kokrui":244}},{"path":"src/test/java/seedu/address/logic/parser/FindFilterStringTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"public class FindFilterStringTokenizerTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"    public void tokenToString_validInput_success() {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer.Token(","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"                FindFilterStringTokenizer.Token.Type.AND, \"Alice\").toString(), \"AND:Alice\");","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer.Token(","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"                FindFilterStringTokenizer.Token.Type.OR, \"Alice\").toString(), \"OR:Alice\");","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer.Token(","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"                FindFilterStringTokenizer.Token.Type.NOT, \"Alice\").toString(), \"NOT:Alice\");","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer.Token(","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"                FindFilterStringTokenizer.Token.Type.LPAREN, \"Alice\").toString(), \"LPAREN:Alice\");","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer.Token(","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"                FindFilterStringTokenizer.Token.Type.RPAREN, \"Alice\").toString(), \"RPAREN:Alice\");","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"    public void tokenize_simpleValidInput_correctTokens() throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer(\"\u0026\u0026\").tokenize().get(0).type,","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"                FindFilterStringTokenizer.Token.Type.AND);","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer(\"\u0026\u0026\").tokenize().get(0).text,","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"                \"\u0026\u0026\");","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer(\"||\").tokenize().get(0).type,","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"                FindFilterStringTokenizer.Token.Type.OR);","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer(\"||\").tokenize().get(0).text,","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"                \"||\");","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer(\"!\").tokenize().get(0).type,","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"                FindFilterStringTokenizer.Token.Type.NOT);","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer(\"!\").tokenize().get(0).text,","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"                \"!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer(\"(\").tokenize().get(0).type,","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"                FindFilterStringTokenizer.Token.Type.LPAREN);","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer(\"(\").tokenize().get(0).text,","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"                \"(\");","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer(\")\").tokenize().get(0).type,","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"                FindFilterStringTokenizer.Token.Type.RPAREN);","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer(\")\").tokenize().get(0).text,","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"                \")\");","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"        // basic condition","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer(\"n/Alice\").tokenize().get(0).type,","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"                FindFilterStringTokenizer.Token.Type.CONDITION);","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer(\"n/Alice\").tokenize().get(0).text,","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"                \"n/Alice\");","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"    public void tokenize_conditionWithCorrectlyQuotedString_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e new FindFilterStringTokenizer(\"n/\\\"Alice\\\"\").tokenize());","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"        // quotes with spaces","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e new FindFilterStringTokenizer(\"n/\\\"Alice Bob\\\"\").tokenize());","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"        // quoted condition in parentheses","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e new FindFilterStringTokenizer(\"(n/\\\"Alice Bob\\\")\").tokenize());","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"        // quoted condition negated","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e new FindFilterStringTokenizer(\"!n/\\\"Alice Bob\\\"\").tokenize());","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"    public void tokenize_conditionWithBrokenQuotedString_throwsParseException() throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"        // missing closing quote","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e new FindFilterStringTokenizer(\"n/\\\"Alice\").tokenize());","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"        // three quotes","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e new FindFilterStringTokenizer(\"n/\\\"Alice\\\"\\\"\").tokenize());","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"        // closing quote not end of condition","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e new FindFilterStringTokenizer(\"n/\\\"Alice\\\"Bob\").tokenize());","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"kokrui":93}},{"path":"src/test/java/seedu/address/logic/parser/OweCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.commands.OweCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"class OweCommandParserTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    private OweCommandParser parser \u003d new OweCommandParser();","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"    public void parse_validArgs_returnsOweCommand() {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"        assertParseSuccess(parser, \"1 2.50\",","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"                new OweCommand(INDEX_FIRST_PERSON, new Balance(250)));","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"        // Test with invalid index","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"        assertParseFailure(parser, \"a 2.50\",","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"        // Test with invalid negative values","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        assertParseFailure(parser, \"1 -2.50\", Balance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"        // Test with missing arguments","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, OweCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"        // Test with extra arguments","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"        assertParseFailure(parser, \"1 2.50 extraArg\", Balance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kokrui":39}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Linkedin;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"    private static final String INVALID_BALANCE \u003d \"-2.50\";","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"    private static final String VALID_BALANCE \u003d \"2.50\";","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"kokrui"},"content":"    public void parseBalance_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"kokrui"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseBalance(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"kokrui"},"content":"    public void parseBalance_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBalance(INVALID_BALANCE));","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"kokrui"},"content":"    public void parseBalance_validValueWithoutWhitespace_returnsBalance() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"kokrui"},"content":"        Balance expectedBalance \u003d new Balance(250);","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"kokrui"},"content":"        assertEquals(expectedBalance, ParserUtil.parseBalance(VALID_BALANCE));","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"kokrui"},"content":"    public void parseBalance_validValueWithWhitespace_returnsTrimmedBalance() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"kokrui"},"content":"        String balanceWithWhitespace \u003d WHITESPACE + VALID_BALANCE + WHITESPACE;","lastModifiedDate":"2023-10-25"},{"lineNumber":223,"author":{"gitId":"kokrui"},"content":"        Balance expectedBalance \u003d new Balance(250);","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"kokrui"},"content":"        assertEquals(expectedBalance, ParserUtil.parseBalance(balanceWithWhitespace));","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":228,"author":{"gitId":"kokrui"},"content":"    public void parseBalance_largeAmount_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBalance(\"123456.78\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":230,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":231,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":232,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":233,"author":{"gitId":"kokrui"},"content":"    public void parseBalance_noDollarSign_validBalance() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":234,"author":{"gitId":"kokrui"},"content":"        Balance expectedBalance \u003d new Balance(250);","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"kokrui"},"content":"        assertEquals(expectedBalance, ParserUtil.parseBalance(\"2.50\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"kokrui"},"content":"    public void parseBalance_noCents_returnsCorrectBalance() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"kokrui"},"content":"        Balance expectedBalance \u003d new Balance(20000); // 200 dollars in cents","lastModifiedDate":"2023-10-25"},{"lineNumber":241,"author":{"gitId":"kokrui"},"content":"        assertEquals(expectedBalance, ParserUtil.parseBalance(\"$200\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":243,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":244,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":245,"author":{"gitId":"kokrui"},"content":"    public void parseBalance_singleDecimalPlace_returnsCorrectBalance() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":246,"author":{"gitId":"kokrui"},"content":"        Balance expectedBalance \u003d new Balance(210); // 2.10 dollars in cents","lastModifiedDate":"2023-10-25"},{"lineNumber":247,"author":{"gitId":"kokrui"},"content":"        assertEquals(expectedBalance, ParserUtil.parseBalance(\"$2.1\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":248,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":249,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":250,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":251,"author":{"gitId":"kokrui"},"content":"    public void parseBalance_zeroBalance_returnsCorrectBalance() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":252,"author":{"gitId":"kokrui"},"content":"        Balance expectedBalance \u003d new Balance(0);","lastModifiedDate":"2023-10-25"},{"lineNumber":253,"author":{"gitId":"kokrui"},"content":"        assertEquals(expectedBalance, ParserUtil.parseBalance(\"$0\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":254,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":255,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":256,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":257,"author":{"gitId":"kokrui"},"content":"    public void parseBalance_nonNumericValue_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":258,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBalance(\"abcd.ef\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":259,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":260,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":261,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":262,"author":{"gitId":"kokrui"},"content":"    public void parseBalance_tooManyDecimalPoints_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":263,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBalance(\"12.34.56\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":264,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":265,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":266,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":267,"author":{"gitId":"kokrui"},"content":"    public void parseBalance_tooManyCentsDigits_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":268,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBalance(\"12.345\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":269,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":270,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":271,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":272,"author":{"gitId":"kokrui"},"content":"    public void parseBalance_onlyCents_throwsParseException() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":273,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBalance(\".50\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":274,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":275,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":276,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":277,"author":{"gitId":"kokrui"},"content":"    public void parseBalance_leadingZeroes_returnsCorrectBalance() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":278,"author":{"gitId":"kokrui"},"content":"        Balance expectedBalance \u003d new Balance(250); // 2.50 dollars in cents","lastModifiedDate":"2023-10-25"},{"lineNumber":279,"author":{"gitId":"kokrui"},"content":"        assertEquals(expectedBalance, ParserUtil.parseBalance(\"002.50\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":280,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":281,"author":{"gitId":"kokrui"},"content":"        expectedBalance \u003d new Balance(500); // 5 dollars in cents","lastModifiedDate":"2023-10-25"},{"lineNumber":282,"author":{"gitId":"kokrui"},"content":"        assertEquals(expectedBalance, ParserUtil.parseBalance(\"00000000000005\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":283,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":284,"author":{"gitId":"kokrui"},"content":"        expectedBalance \u003d new Balance(5); // 5 cents","lastModifiedDate":"2023-10-25"},{"lineNumber":285,"author":{"gitId":"kokrui"},"content":"        assertEquals(expectedBalance, ParserUtil.parseBalance(\"000000000000.05\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":286,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":287,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":288,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":289,"author":{"gitId":"kokrui"},"content":"    public void parseBalance_trailingZeroesAfterDecimal_returnsCorrectBalance() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":290,"author":{"gitId":"kokrui"},"content":"        Balance expectedBalance \u003d new Balance(200); // 2.00 dollars in cents","lastModifiedDate":"2023-10-25"},{"lineNumber":291,"author":{"gitId":"kokrui"},"content":"        assertEquals(expectedBalance, ParserUtil.parseBalance(\"2.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":292,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":293,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":294,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":295,"author":{"gitId":"kokrui"},"content":"    public void parseBalance_justDollarSign_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":296,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBalance(\"$\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":297,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":298,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":299,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":300,"author":{"gitId":"limjunxian1"},"content":"    public void parseTelegram() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":301,"author":{"gitId":"limjunxian1"},"content":"        // EP: Valid","lastModifiedDate":"2023-11-01"},{"lineNumber":302,"author":{"gitId":"limjunxian1"},"content":"        Telegram expectedTelegram \u003d new Telegram(\"@telegram\");","lastModifiedDate":"2023-11-01"},{"lineNumber":303,"author":{"gitId":"limjunxian1"},"content":"        assertEquals(expectedTelegram, ParserUtil.parseTelegram(\"@telegram\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":304,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":305,"author":{"gitId":"limjunxian1"},"content":"        // EP: Invalid","lastModifiedDate":"2023-11-01"},{"lineNumber":306,"author":{"gitId":"limjunxian1"},"content":"        // Blank","lastModifiedDate":"2023-11-01"},{"lineNumber":307,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegram(\"1 tg/\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":308,"author":{"gitId":"limjunxian1"},"content":"        // Not starting with @","lastModifiedDate":"2023-11-01"},{"lineNumber":309,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegram(\"1 tg/telegram\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":310,"author":{"gitId":"limjunxian1"},"content":"        // Not meeting 5 character requirement","lastModifiedDate":"2023-11-01"},{"lineNumber":311,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegram(\"1 tg/@tel\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":312,"author":{"gitId":"limjunxian1"},"content":"        // Using characters other than alphanumeric and underscores","lastModifiedDate":"2023-11-01"},{"lineNumber":313,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegram(\"1 tg/@tel?!\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":314,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":315,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":316,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":317,"author":{"gitId":"limjunxian1"},"content":"    public void parseBirthday() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":318,"author":{"gitId":"limjunxian1"},"content":"        // EP: Valid","lastModifiedDate":"2023-11-01"},{"lineNumber":319,"author":{"gitId":"limjunxian1"},"content":"        Birthday expectedBirthday \u003d new Birthday(MonthDay.of(6, 9));","lastModifiedDate":"2023-11-01"},{"lineNumber":320,"author":{"gitId":"limjunxian1"},"content":"        assertEquals(expectedBirthday, ParserUtil.parseBirthday(\"09/06\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":321,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":322,"author":{"gitId":"limjunxian1"},"content":"        // EP: Invalid","lastModifiedDate":"2023-11-01"},{"lineNumber":323,"author":{"gitId":"limjunxian1"},"content":"        // Blank","lastModifiedDate":"2023-11-01"},{"lineNumber":324,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBirthday(\"1 b/\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":325,"author":{"gitId":"limjunxian1"},"content":"        // Not following format","lastModifiedDate":"2023-11-01"},{"lineNumber":326,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBirthday(\"1 b/24-01-24\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":327,"author":{"gitId":"limjunxian1"},"content":"        // Invalid date","lastModifiedDate":"2023-11-01"},{"lineNumber":328,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBirthday(\"1 b/./.\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":329,"author":{"gitId":"limjunxian1"},"content":"        // Date that doesn\u0027t exist","lastModifiedDate":"2023-11-01"},{"lineNumber":330,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBirthday(\"1 b/31/02\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":331,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":332,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":333,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":334,"author":{"gitId":"limjunxian1"},"content":"    public void parseLinkedin() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":335,"author":{"gitId":"limjunxian1"},"content":"        // EP: Valid","lastModifiedDate":"2023-11-01"},{"lineNumber":336,"author":{"gitId":"limjunxian1"},"content":"        Linkedin expectedLinkedin \u003d new Linkedin(\"linkedin\");","lastModifiedDate":"2023-11-01"},{"lineNumber":337,"author":{"gitId":"limjunxian1"},"content":"        assertEquals(expectedLinkedin, ParserUtil.parseLinkedin(\"linkedin\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":338,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":339,"author":{"gitId":"limjunxian1"},"content":"        // EP: Invalid","lastModifiedDate":"2023-11-01"},{"lineNumber":340,"author":{"gitId":"limjunxian1"},"content":"        // Blank","lastModifiedDate":"2023-11-01"},{"lineNumber":341,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegram(\"1 li/\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":342,"author":{"gitId":"limjunxian1"},"content":"        // Has special characters","lastModifiedDate":"2023-11-01"},{"lineNumber":343,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLinkedin(\"1 li/?\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":344,"author":{"gitId":"limjunxian1"},"content":"        // Has whitespace","lastModifiedDate":"2023-11-01"},{"lineNumber":345,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLinkedin(\"1 li/linked in\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":346,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"limjunxian1":52,"kokrui":99,"-":196}},{"path":"src/test/java/seedu/address/logic/parser/PayCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.commands.PayCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"class PayCommandParserTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    private PayCommandParser parser \u003d new PayCommandParser();","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"    public void parse_validArgs_returnsPayCommand() {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"        assertParseSuccess(parser, \"1 2.50\",","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"                new PayCommand(INDEX_FIRST_PERSON, new Balance(250)));","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"        // Test with invalid index","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"        assertParseFailure(parser, \"a 2.50\",","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"        // Test with invalid negative balance","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        assertParseFailure(parser, \"1 -2.50\", Balance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"        // Test with missing arguments","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, PayCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"        // Test with extra arguments","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"        assertParseFailure(parser, \"1 2.50 extraArg\", Balance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kokrui":39}},{"path":"src/test/java/seedu/address/logic/parser/RemoveNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_NOTE;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.RemoveNoteCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"public class RemoveNoteCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"    private RemoveNoteCommandParser parser \u003d new RemoveNoteCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"    public void parse_validArgs_returnsRemoveNoteCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"        assertParseSuccess(parser, \"1 2\", new RemoveNoteCommand(INDEX_FIRST_PERSON, INDEX_SECOND_NOTE));","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"        // empty string","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"        // single number","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"        // two numbers separated by multiple spaces","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"        assertParseFailure(parser, \"1   2\",","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"        // non-numeric characters","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"        assertParseFailure(parser, \"a b\",","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"conradsoon"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"conradsoon"},"content":"        // more than two numbers","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"        assertParseFailure(parser, \"1 2 3\",","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"conradsoon"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"    public void parse_invalidFormat_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"conradsoon"},"content":"        // only one index","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"conradsoon"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"conradsoon"},"content":"        // no whitespace in between","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"conradsoon"},"content":"        assertParseFailure(parser, \"12\",","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"conradsoon"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"conradsoon"},"content":"        // non-numeric characters","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"conradsoon"},"content":"        assertParseFailure(parser, \"a b\",","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"conradsoon"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"conradsoon":59}},{"path":"src/test/java/seedu/address/logic/parser/UpdatePhotoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"VN-Hao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"VN-Hao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"VN-Hao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.logic.commands.UpdatePhotoCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"VN-Hao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"VN-Hao"},"content":"public class UpdatePhotoCommandParserTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"VN-Hao"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"VN-Hao"},"content":"    public void parse_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"VN-Hao"},"content":"        AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"VN-Hao"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"VN-Hao"},"content":"            Command updatePhotoCommand \u003d parser.parseCommand(\"updatephoto path/D:/image/cute_cat.png\");","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"VN-Hao"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"VN-Hao"},"content":"            assertEquals(e.getMessage(),","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"VN-Hao"},"content":"                    \"Invalid command format! \\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"VN-Hao"},"content":"                            + UpdatePhotoCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"VN-Hao"},"content":"}","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"VN-Hao":30}},{"path":"src/test/java/seedu/address/logic/parser/ViewNotesCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.ViewNotesCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"public class ViewNotesCommandParserTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewNotesCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"    private ViewNotesCommandParser parser \u003d new ViewNotesCommandParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"    public void parse_validArgs_returnsViewNotesCommand() {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"        assertParseSuccess(parser, \"1\", new ViewNotesCommand(0));","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"        assertParseSuccess(parser, \"  3\", new ViewNotesCommand(2)); // Whitespaces should be trimmed","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"        // Invalid format","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"        assertParseFailure(parser, \"-1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"        assertParseFailure(parser, \"0\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"        assertParseFailure(parser, \"1 a\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"        assertParseFailure(parser, \" \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"conradsoon":36}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"import java.util.Random;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"conradsoon"},"content":"    public void randomOperations_ensureUniqueIds() {","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"conradsoon"},"content":"        addressBook.resetData(new AddressBookStub(Collections.emptyList()));","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"conradsoon"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"conradsoon"},"content":"        HashSet\u003cInteger\u003e ids \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"conradsoon"},"content":"        for (int i \u003d 0; i \u003c 200; i++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"conradsoon"},"content":"            if (addressBook.getPersonList().isEmpty() || random.nextBoolean()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"conradsoon"},"content":"                String name \u003d java.util.UUID.randomUUID().toString().replace(\"-\", \"\");","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"conradsoon"},"content":"                Person newPerson \u003d new PersonBuilder().withName(name).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"conradsoon"},"content":"                addressBook.addPerson(newPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"conradsoon"},"content":"                ids.add(newPerson.getId().get());","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"conradsoon"},"content":"            } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"conradsoon"},"content":"                int randomIndex \u003d random.nextInt(addressBook.getPersonList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"conradsoon"},"content":"                Person personToRemove \u003d addressBook.getPersonList().get(randomIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"conradsoon"},"content":"                ids.remove(personToRemove.getId().get());","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"conradsoon"},"content":"                addressBook.removePerson(personToRemove);","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"conradsoon"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"conradsoon"},"content":"        for (Person person : addressBook.getPersonList()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"conradsoon"},"content":"            assertTrue(ids.contains(person.getId().get()));","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"conradsoon"},"content":"            ids.remove(person.getId().get());","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"conradsoon"},"content":"        assertTrue(ids.isEmpty());","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"conradsoon":32,"-":108}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"lordidiot"},"content":"    public void addEvent_validEvent_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"lordidiot"},"content":"        assertDoesNotThrow(() -\u003e modelManager.addEvent(new Event(\"\", \"\", LocalDateTime.MIN)));","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"lordidiot"},"content":"    public void getEventList_nonEmpty_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"lordidiot"},"content":"        assertTrue(modelManager.getEventList() !\u003d null);","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"lordidiot"},"content":"    public void getEventList_latestEvent_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"lordidiot"},"content":"        Event event \u003d new Event(\"A\", \"B\", LocalDateTime.MIN);","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"lordidiot"},"content":"        modelManager.addEvent(event);","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"lordidiot"},"content":"        assertTrue(modelManager.getEventList().contains(event));","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"lordidiot":20,"-":132}},{"path":"src/test/java/seedu/address/model/event/EventFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"public class EventFactoryTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    void createEvents_hasBirthdays_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"        modelManager.addPerson(new Person(","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"            new Name(\"Some Name\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"            new Phone(\"1235\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"            new Email(\"email@email.com\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"            new Address(\"Some address\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"            Optional.of(new Birthday(MonthDay.of(1, 20))),","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"            Optional.empty(),","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"            Optional.empty(),","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"            Optional.empty(),","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"            new HashSet\u003c\u003e(),","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"            Optional.empty(),","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"            FXCollections.observableArrayList(),","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"            new Balance(5)","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"        ));","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"        assertTrue(EventFactory.createEvents(modelManager).size() \u003e 0);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"limjunxian1":3,"conradsoon":4,"kokrui":2,"lordidiot":35}},{"path":"src/test/java/seedu/address/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.time.Duration;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"public class EventTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    void constructor_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"        assertDoesNotThrow(() -\u003e new Event(\"title\", \"description\", LocalDateTime.MIN));","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    void addMember_validMember_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"        Event event \u003d new Event(\"title\", \"description\", LocalDateTime.MIN);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"    void addReminder_validReminder_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"        assertDoesNotThrow(() -\u003e new Event(\"title\", \"description\", LocalDateTime.MIN));","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"    void getNotificationAtTime_noNotification_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"        LocalDateTime eventTime \u003d LocalDateTime.MAX;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        Event event \u003d new Event(\"title\", \"description\", eventTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"        assertTrue(event.getNotificationAtTime(eventTime.minusHours(1)).isEmpty());","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        assertTrue(event.getNotificationAtTime(eventTime.minusHours(5)).isEmpty());","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        assertTrue(event.getNotificationAtTime(eventTime.minusHours(10)).isEmpty());","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"    void getNotificationAtTime_hasNotification_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"        LocalDateTime eventTime \u003d LocalDateTime.MAX;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"        Duration reminder \u003d Duration.ofDays(1);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"        Event event \u003d new Event(\"title\", \"description\", eventTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"        event.addReminder(reminder);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"        assertTrue(event.getNotificationAtTime(eventTime.minusHours(1)).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"        assertTrue(event.getNotificationAtTime(eventTime.minusHours(5)).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"        assertTrue(event.getNotificationAtTime(eventTime.minusHours(10)).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"        assertFalse(event.getNotificationAtTime(eventTime.minusHours(25)).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"lordidiot":49}},{"path":"src/test/java/seedu/address/model/event/NotificationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"public class NotificationTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Notification(null, \"\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    public void constructor_null_throwsNullPointerException2() {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Notification(\"\", null));","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"    public void constructor_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"        assertDoesNotThrow(() -\u003e new Notification(\"title\", \"description\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    public void getTitle_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"        Notification notification \u003d new Notification(\"title\", \"description\");","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"        assertEquals(notification.getTitle(), \"title\");","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"    public void getDescription_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"        Notification notification \u003d new Notification(\"title\", \"description\");","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        assertEquals(notification.getDescription(), \"description\");","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"lordidiot":37}},{"path":"src/test/java/seedu/address/model/person/AvatarTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"VN-Hao"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"VN-Hao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"VN-Hao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"VN-Hao"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"VN-Hao"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"VN-Hao"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"VN-Hao"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"VN-Hao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"VN-Hao"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"VN-Hao"},"content":"import javafx.scene.image.PixelReader;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"VN-Hao"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"VN-Hao"},"content":"public class AvatarTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"VN-Hao"},"content":"    private static final String DEFAULT_PATH \u003d \"/images/default_photo.png\";","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"VN-Hao"},"content":"    private final String safePath \u003d Paths.get(\"\").toAbsolutePath()","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"VN-Hao"},"content":"            + \"/src/main/resources/images/test_photo.png\";","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"VN-Hao"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"VN-Hao"},"content":"    public void constructor_default() {","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"VN-Hao"},"content":"        Avatar avatar \u003d new Avatar();","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"VN-Hao"},"content":"        assertEquals(avatar.getPath(), DEFAULT_PATH);","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"VN-Hao"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"VN-Hao"},"content":"    public void constructor_invalidPath_exceptionThrown() {","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"VN-Hao"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"VN-Hao"},"content":"            Avatar avatar \u003d new Avatar(\"D\");","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"VN-Hao"},"content":"            fail();","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"VN-Hao"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"VN-Hao"},"content":"            assertTrue(true);","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"VN-Hao"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"VN-Hao"},"content":"    public void constructor_validPath() {","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"VN-Hao"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"VN-Hao"},"content":"            Avatar avatar \u003d new Avatar(safePath);","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"VN-Hao"},"content":"            assertEquals(avatar.getPath(), safePath);","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"VN-Hao"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"VN-Hao"},"content":"            fail();","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"VN-Hao"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"VN-Hao"},"content":"    public void testGetImage() {","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"VN-Hao"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"VN-Hao"},"content":"            Avatar avatar \u003d new Avatar(safePath);","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"VN-Hao"},"content":"            ImageComparator ic \u003d new ImageComparator();","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"VN-Hao"},"content":"            assertTrue(ic.areImagesEqual(avatar.getImage(), new Image(new FileInputStream(safePath))));","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"VN-Hao"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"VN-Hao"},"content":"            fail();","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"VN-Hao"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"VN-Hao"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"VN-Hao"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"VN-Hao"},"content":"            Avatar avatar \u003d new Avatar(safePath);","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"VN-Hao"},"content":"            Avatar avatar1 \u003d new Avatar(safePath);","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"VN-Hao"},"content":"            assertEquals(avatar.hashCode(), avatar1.hashCode());","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"VN-Hao"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"VN-Hao"},"content":"            fail();","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"VN-Hao"},"content":"    public class ImageComparator {","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"VN-Hao"},"content":"        private Image loadImage(String imagePath) {","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"VN-Hao"},"content":"            // Load an image from a file or create it as needed","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"VN-Hao"},"content":"            // For example:","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"VN-Hao"},"content":"            return new Image(\"file:\" + imagePath);","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"VN-Hao"},"content":"        private boolean areImagesEqual(Image image1, Image image2) {","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"VN-Hao"},"content":"            if (image1.getWidth() !\u003d image2.getWidth() || image1.getHeight() !\u003d image2.getHeight()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"VN-Hao"},"content":"                return false; // Images have different dimensions, so they are not equal.","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"VN-Hao"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"VN-Hao"},"content":"            PixelReader reader1 \u003d image1.getPixelReader();","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"VN-Hao"},"content":"            PixelReader reader2 \u003d image2.getPixelReader();","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"VN-Hao"},"content":"            int width \u003d (int) image1.getWidth();","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"VN-Hao"},"content":"            int height \u003d (int) image1.getHeight();","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"VN-Hao"},"content":"            for (int x \u003d 0; x \u003c width; x++) {","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"VN-Hao"},"content":"                for (int y \u003d 0; y \u003c height; y++) {","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"VN-Hao"},"content":"                    Color color1 \u003d reader1.getColor(x, y);","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"VN-Hao"},"content":"                    Color color2 \u003d reader2.getColor(x, y);","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"VN-Hao"},"content":"                    if (!color1.equals(color2)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"VN-Hao"},"content":"                        return false; // Images are not equal if any pixel differs.","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"VN-Hao"},"content":"                    }","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"VN-Hao"},"content":"                }","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"VN-Hao"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"VN-Hao"},"content":"            return true; // Images are equal if all pixels are the same.","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"VN-Hao"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"VN-Hao"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"VN-Hao"},"content":"}","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"VN-Hao":109}},{"path":"src/test/java/seedu/address/model/person/BalanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"class BalanceTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"    private Balance defaultBalance;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"    void setUp() {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"        defaultBalance \u003d new Balance(0);","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"    void constructor_invalidAmount_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Balance(Balance.TRANSACTION_LIMIT + 1));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Balance(-Balance.TRANSACTION_LIMIT - 1));","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"    void constructor_validAmount_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e new Balance(500));","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"    void isWithinLimits_inputBalanceWithinLimits_returnTrue() {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"        assertTrue(Balance.isWithinLimits(0));","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"        assertTrue(Balance.isWithinLimits(Balance.MAX_VALUE));","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"        assertTrue(Balance.isWithinLimits(Balance.MIN_VALUE));","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"    void isWithinLimits_inputBalanceExceedLimits_returnFalse() {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isWithinLimits(Balance.MAX_VALUE + 1));","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isWithinLimits(Balance.MIN_VALUE - 1));","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"    void isValidDollarString_withDollarSign_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"        assertTrue(Balance.isValidDollarString(\"$1000.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"        assertTrue(Balance.isValidDollarString(\"$0.5\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"        assertTrue(Balance.isValidDollarString(\"$129.75\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"        assertTrue(Balance.isValidDollarString(\"$1000\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"    void isValidDollarString_withoutDollarSign_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"        assertTrue(Balance.isValidDollarString(\"1000.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"        assertTrue(Balance.isValidDollarString(\"0.5\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"        assertTrue(Balance.isValidDollarString(\"129.75\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"        assertTrue(Balance.isValidDollarString(\"1000\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"    void isValidDollarString_invalidInput_returnFalse() {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"        // too many decimal places","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\"1000.000\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\"0.555\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"        // negative amount","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\"-1000.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\"-0.5\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"        // invalid characters","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\"ABC\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\"123ABC\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"        // empty dollar amount","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\"\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\".55\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\"$.3\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\"$\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"        // empty cents amount","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\"1000.\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\"0.\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\"129.\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\"$1000.\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"        // empty dollar and cents amount","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\".\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\"$.\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"        assertFalse(Balance.isValidDollarString(\"\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"    void toDollarString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"        assertEquals(\"$0.00\", defaultBalance.toAbsoluteDollarString());","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"        assertEquals(\"$10.00\", new Balance(1000).toAbsoluteDollarString());","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"        assertEquals(\"$10.50\", new Balance(1050).toAbsoluteDollarString());","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"    void toUiMessage() {","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"        assertEquals(\"They owe you: $0.00\", defaultBalance.toUiMessage());","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"        assertEquals(\"You owe them: $10.00\", new Balance(-1000).toUiMessage());","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"        assertEquals(\"They owe you: $10.00\", new Balance(1000).toUiMessage());","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"    void add() {","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"        Balance addedBalance \u003d defaultBalance.add(new Balance(500));","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"        assertEquals(new Balance(500), addedBalance);","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"        addedBalance \u003d defaultBalance.add(new Balance(-500));","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"        assertEquals(new Balance(-500), addedBalance);","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"    void wouldExceedBalanceLimit() {","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"        assertFalse(defaultBalance.wouldExceedBalanceLimit(new Balance(500)));","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"        System.out.println(defaultBalance.value);","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"kokrui"},"content":"        assertTrue(defaultBalance.wouldExceedBalanceLimit(new Balance(Balance.MAX_VALUE + 1)));","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"kokrui"},"content":"        assertTrue(new Balance(Balance.MAX_VALUE - 500).wouldExceedBalanceLimit(new Balance(501)));","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"kokrui"},"content":"    void testToString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"kokrui"},"content":"        assertEquals(\"0\", defaultBalance.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"kokrui"},"content":"        assertEquals(\"1000\", new Balance(1000).toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"kokrui"},"content":"    void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"kokrui"},"content":"        assertTrue(defaultBalance.equals(new Balance(0)));","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"kokrui"},"content":"        assertFalse(defaultBalance.equals(new Balance(1000)));","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"kokrui"},"content":"        assertFalse(defaultBalance.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"kokrui"},"content":"        assertFalse(defaultBalance.equals(\"SomeString\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"kokrui"},"content":"    void testHashCode() {","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"kokrui"},"content":"        Balance balance1 \u003d new Balance(1000);","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"kokrui"},"content":"        Balance balance2 \u003d new Balance(1000);","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"kokrui"},"content":"        assertEquals(balance1.hashCode(), balance2.hashCode());","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"kokrui":143}},{"path":"src/test/java/seedu/address/model/person/BirthdayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"public class BirthdayTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Birthday(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"        Birthday birthday \u003d new Birthday(MonthDay.of(1, 23));","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"        assertTrue(birthday.equals(new Birthday(MonthDay.of(1, 23))));","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"        assertTrue(birthday.equals(birthday));","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"        assertFalse(birthday.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"        assertFalse(birthday.equals(5.0f));","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"        assertFalse(birthday.equals(new Birthday(MonthDay.of(11, 11))));","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"    public void toString_validInput_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"        assertEquals(new Birthday(MonthDay.of(1, 23)).toString(), \"23 January\");","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"        assertEquals(new Birthday(MonthDay.of(2, 29)).toString(), \"29 February\");","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"        assertEquals(new Birthday(MonthDay.of(3, 31)).toString(), \"31 March\");","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"        assertEquals(new Birthday(MonthDay.of(12, 1)).toString(), \"1 December\");","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"kokrui":9,"lordidiot":37}},{"path":"src/test/java/seedu/address/model/person/LinkedinTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"public class LinkedinTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Linkedin(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"    public void constructor_invalidLinkedin_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"        String invalidLinkedin \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Linkedin(invalidLinkedin));","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"    public void isValidLinkedin() {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"        // null linkedin","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(NullPointerException.class, () -\u003e Linkedin.isValidLinkedin(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"        // invalid linkedin","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(Linkedin.isValidLinkedin(\"\")); // empty string","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(Linkedin.isValidLinkedin(\" \")); // spaces only","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(Linkedin.isValidLinkedin(\"?\")); // invalid special characters","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"        // valid linkedin","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(Linkedin.isValidLinkedin(\"johndoe\")); // alphabets","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(Linkedin.isValidLinkedin(\"j\")); // one character","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(Linkedin.isValidLinkedin(\"john-doe\")); // alphabets with hyphens","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(Linkedin.isValidLinkedin(\"john-doe12\")); // alphanumeric with hyphens","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"        Linkedin linkedin \u003d new Linkedin(\"ValidLinkedin\");","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(linkedin.equals(new Linkedin(\"ValidLinkedin\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(linkedin.equals(linkedin));","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(linkedin.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(linkedin.equals(5.0f));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(linkedin.equals(new Linkedin(\"OtherValidLinkedin\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"    public void testToString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"        assertEquals(\"linkedin\", new Linkedin(\"linkedin\").toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"        Linkedin linkedin1 \u003d new Linkedin(\"linkedin\");","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"        Linkedin linkedin2 \u003d new Linkedin(\"linkedin\");","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"        assertEquals(linkedin1.hashCode(), linkedin2.hashCode());","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"limjunxian1":71}},{"path":"src/test/java/seedu/address/model/person/NotesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"public class NotesTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"    private Person person;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"        Name name \u003d new Name(\"John Doe\");","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"        Phone phone \u003d new Phone(\"12345678\");","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"        Email email \u003d new Email(\"john.doe@example.com\");","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"        Address address \u003d new Address(\"123 Main St\");","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"        person \u003d new Person(name, phone, email, address, Collections.emptySet());","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"    public void constructor_emptyConstructor_createsEmptyNote() {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"        Note emptyNote \u003d new Note();","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"        assertEquals(\"\", emptyNote.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"    public void constructor_withText_createsNoteWithText() {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"        String noteText \u003d \"Sample Note\";","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"        Note note \u003d new Note(noteText);","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"        assertEquals(noteText, note.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"conradsoon"},"content":"    public void hashCode_validHashCode() {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"        String noteText \u003d \"Sample Note\";","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"conradsoon"},"content":"        Note note \u003d new Note(noteText);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"        // A non-null object should return a valid hashCode.","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"        assertNotNull(note.hashCode());","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"conradsoon"},"content":"        // Ensure that the hashCode generated by the Note object matches the hashCode of its text.","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"        assertEquals(noteText.hashCode(), note.hashCode());","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"conradsoon"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"conradsoon"},"content":"        String noteTextA \u003d \"Note A\";","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"conradsoon"},"content":"        String noteTextB \u003d \"Note B\";","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"conradsoon"},"content":"        String noteTextC \u003d \"Note B\";","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"conradsoon"},"content":"        Note noteA \u003d new Note(noteTextA);","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"conradsoon"},"content":"        Note noteB \u003d new Note(noteTextB);","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"conradsoon"},"content":"        Note noteC \u003d new Note(noteTextC);","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"conradsoon"},"content":"        assertEquals(noteA, noteA);","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"conradsoon"},"content":"        assertNotEquals(noteA, noteB);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"conradsoon"},"content":"        assertEquals(noteB, noteC);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"conradsoon"},"content":"    public void addNote_addSingleNote_noteAdded() {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"conradsoon"},"content":"        Note note \u003d new Note(\"Sample Note\");","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"conradsoon"},"content":"        person.addNote(note);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"conradsoon"},"content":"        assertEquals(1, person.getNotes().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"conradsoon"},"content":"        assertEquals(note, person.getNotes().get(0));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"conradsoon"},"content":"    public void removeNote_removeValidIndex_noteRemoved() {","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"conradsoon"},"content":"        Note note1 \u003d new Note(\"Sample Note 1\");","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"conradsoon"},"content":"        Note note2 \u003d new Note(\"Sample Note 2\");","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"conradsoon"},"content":"        person.addNote(note1);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"conradsoon"},"content":"        person.addNote(note2);","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"conradsoon"},"content":"        person.removeNote(0);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"conradsoon"},"content":"        assertEquals(1, person.getNotes().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"conradsoon"},"content":"        assertEquals(note2, person.getNotes().get(0));","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"conradsoon"},"content":"    public void removeNote_removeInvalidIndex_throwsException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"conradsoon"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e person.removeNote(0));","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"conradsoon"},"content":"    public void getNotes_verifyListOfNotes_returnCorrectList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"conradsoon"},"content":"        Note note1 \u003d new Note(\"Sample Note 1\");","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"conradsoon"},"content":"        Note note2 \u003d new Note(\"Sample Note 2\");","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"conradsoon"},"content":"        person.addNote(note1);","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"conradsoon"},"content":"        person.addNote(note2);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"conradsoon"},"content":"        assertEquals(2, person.getNotes().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"conradsoon"},"content":"        assertEquals(note1, person.getNotes().get(0));","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"conradsoon"},"content":"        assertEquals(note2, person.getNotes().get(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"conradsoon":101}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"limjunxian1"},"content":"        // different birthday -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"limjunxian1"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withBirthday(MonthDay.of(6, 9)).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"limjunxian1"},"content":"        // different linkedin -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"limjunxian1"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withLinkedin(\"linkedin\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"limjunxian1"},"content":"        // different secondaryEmail -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"limjunxian1"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withSecondaryEmail(\"alice@hotmail.com\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"limjunxian1"},"content":"        // different telegram -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"limjunxian1"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTelegram(\"@telegram\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"limjunxian1"},"content":"    public void hasValid() {","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"limjunxian1"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(person.hasValidTelegram());","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(person.hasValidBirthday());","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(person.hasValidLinkedin());","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(person.hasValidSecondaryEmail());","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"limjunxian1"},"content":"        person \u003d new PersonBuilder()","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"limjunxian1"},"content":"                .withBirthday(MonthDay.of(6, 9))","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"limjunxian1"},"content":"                .withLinkedin(\"linkedin\")","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"limjunxian1"},"content":"                .withTelegram(\"@telegram\")","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"limjunxian1"},"content":"                .withSecondaryEmail(\"email@email.com\")","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"limjunxian1"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(person.hasValidTelegram());","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(person.hasValidBirthday());","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(person.hasValidLinkedin());","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(person.hasValidSecondaryEmail());","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"limjunxian1"},"content":"    public void hasSameEmailMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"limjunxian1"},"content":"        Person person \u003d new PersonBuilder().withEmail(\"email@email.com\").withSecondaryEmail(\"email@email.com\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(person.hasRepeatedEmail());","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"limjunxian1"},"content":"        person \u003d new PersonBuilder().withEmail(\"email@email.com\").withSecondaryEmail(\"email@gmail.com\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(person.hasRepeatedEmail());","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"limjunxian1"},"content":"        person \u003d new PersonBuilder().withEmail(\"email@email.com\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(person.hasRepeatedEmail());","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"lordidiot"},"content":"    public void getNonEmergencyTags() {","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"lordidiot"},"content":"        Person person \u003d new PersonBuilder().withTags(\"RA\", \"SOS\", \"Friend\", \"Buddy\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"lordidiot"},"content":"        Set\u003cTag\u003e nonEmergencyTags \u003d person.getNonEmergencyTags();","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"lordidiot"},"content":"        System.out.println(nonEmergencyTags);","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"lordidiot"},"content":"        assertEquals(nonEmergencyTags.size(), 2);","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"lordidiot"},"content":"        assertFalse(nonEmergencyTags.contains(new Tag(\"RA\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"lordidiot"},"content":"        assertFalse(nonEmergencyTags.contains(new Tag(\"SOS\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"lordidiot"},"content":"        assertTrue(nonEmergencyTags.contains(new Tag(\"Friend\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"lordidiot"},"content":"        assertTrue(nonEmergencyTags.contains(new Tag(\"Buddy\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"lordidiot"},"content":"    public void getEmergencyTags() {","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"lordidiot"},"content":"        Person person \u003d new PersonBuilder().withTags(\"RA\", \"SOS\", \"Friend\", \"Buddy\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"lordidiot"},"content":"        Set\u003cTag\u003e emergencyTags \u003d person.getEmergencyTags();","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"lordidiot"},"content":"        assertEquals(emergencyTags.size(), 2);","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"lordidiot"},"content":"        assertTrue(emergencyTags.contains(new Tag(\"RA\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"lordidiot"},"content":"        assertTrue(emergencyTags.contains(new Tag(\"SOS\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"lordidiot"},"content":"        assertFalse(emergencyTags.contains(new Tag(\"Friend\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"lordidiot"},"content":"        assertFalse(emergencyTags.contains(new Tag(\"Buddy\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"limjunxian1":44,"lordidiot":27,"-":101}},{"path":"src/test/java/seedu/address/model/person/TelegramTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"public class TelegramTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Telegram(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"    public void constructor_invalidTelegram_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"        String invalidTelegram \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Telegram(invalidTelegram));","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"    public void isValidTelegram() {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"        // null telegram","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"        assertThrows(NullPointerException.class, () -\u003e Telegram.isValidTelegram(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"        // invalid telegram","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(Telegram.isValidTelegram(\"\")); // empty string","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(Telegram.isValidTelegram(\" \")); // spaces only","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(Telegram.isValidTelegram(\"?\")); // invalid special characters","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(Telegram.isValidTelegram(\"johndoe\")); // not following telegram format","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(Telegram.isValidTelegram(\"john\")); // less than minimum of 5 characters","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(Telegram.isValidTelegram(\"Johndoe\")); // no capitalised letters","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"        // valid telegram","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(Telegram.isValidTelegram(\"@johndoe\")); // alphabets","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(Telegram.isValidTelegram(\"@johndoe123\")); // alphanumeric","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(Telegram.isValidTelegram(\"@john_doe123\")); // alphanumeric with underscores","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"        Telegram telegram \u003d new Telegram(\"@validtelegram\");","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(telegram.equals(new Telegram(\"@validtelegram\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"        assertTrue(telegram.equals(telegram));","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(telegram.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(telegram.equals(5.0f));","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"        assertFalse(telegram.equals(new Telegram(\"@othervalidtelegram\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"    public void testToString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"        assertEquals(\"@telegram\", new Telegram(\"@telegram\").toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"        Telegram telegram1 \u003d new Telegram(\"@telegram\");","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"        Telegram telegram2 \u003d new Telegram(\"@telegram\");","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"        assertEquals(telegram1.hashCode(), telegram2.hashCode());","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"limjunxian1":72}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    public void isEmergencyTag() {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"        for (Tag.EmergencyTags tag: Tag.EmergencyTags.values()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"            assertTrue(Tag.EmergencyTags.isEmergencyTag(tag.name()));","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        assertFalse(Tag.EmergencyTags.isEmergencyTag(\"Friend\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        assertFalse(Tag.EmergencyTags.isEmergencyTag(\"Buddy\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"        assertFalse(Tag.EmergencyTags.isEmergencyTag(\"\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"lordidiot":13,"-":26}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"    private static final Integer INVALID_BALANCE \u003d 1000009;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"    private static final Optional\u003cMonthDay\u003e VALID_BIRTHDAY \u003d BENSON.getBirthday().map(b -\u003e b.birthday);","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"    private static final Optional\u003cString\u003e VALID_LINKEDIN \u003d BENSON.getLinkedin().map(linkedin -\u003e linkedin.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"    private static final Optional\u003cString\u003e VALID_SECONDARY_EMAIL \u003d BENSON.getSecondaryEmail().map(email -\u003e email.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"    private static final Optional\u003cString\u003e VALID_TELEGRAM \u003d BENSON.getTelegram().map(telegram -\u003e telegram.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"    private static final Integer VALID_BALANCE \u003d BENSON.getBalance().value;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"    private static final Optional\u003cInteger\u003e VALID_ID \u003d BENSON.getId();","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"    private static final List\u003cJsonAdaptedNote\u003e VALID_NOTES \u003d BENSON.getNotes().stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"conradsoon"},"content":"            .map(JsonAdaptedNote::new)","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"                        INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID,","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"                        VALID_NOTES, VALID_BALANCE","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"                );","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"                null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"                VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID,","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"                VALID_NOTES, VALID_BALANCE","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"lordidiot"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"limjunxian1"},"content":"                        VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID,","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"                        VALID_NOTES, VALID_BALANCE","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"lordidiot"},"content":"                );","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"limjunxian1"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID,","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"                        VALID_NOTES, VALID_BALANCE);","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"lordidiot"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"limjunxian1"},"content":"                        VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID,","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"                        VALID_NOTES, VALID_BALANCE","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"lordidiot"},"content":"                );","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"lordidiot"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":116,"author":{"gitId":"limjunxian1"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID,","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"                        VALID_NOTES, VALID_BALANCE);","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"lordidiot"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-10-10"},{"lineNumber":127,"author":{"gitId":"limjunxian1"},"content":"                        VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"kokrui"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID,","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"kokrui"},"content":"                        VALID_NOTES, VALID_BALANCE","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"lordidiot"},"content":"                );","lastModifiedDate":"2023-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"lordidiot"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":138,"author":{"gitId":"limjunxian1"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"kokrui"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID,","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"kokrui"},"content":"                        VALID_NOTES, VALID_BALANCE);","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"limjunxian1"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"kokrui"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, invalidTags, VALID_ID,","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"kokrui"},"content":"                        VALID_NOTES, VALID_BALANCE);","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"kokrui"},"content":"    public void toModelType_invalidBalance_throwsIllegalValueException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"kokrui"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"kokrui"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"kokrui"},"content":"                        VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"kokrui"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID,","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"kokrui"},"content":"                        VALID_NOTES, INVALID_BALANCE","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"kokrui"},"content":"                );","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"kokrui"},"content":"        String expectedMessage \u003d Balance.MESSAGE_BALANCE_LIMIT_EXCEEDED;","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"kokrui"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"kokrui"},"content":"    public void toModelType_nullBalance_throwsIllegalValueException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"kokrui"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"kokrui"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"kokrui"},"content":"                        VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"kokrui"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID,","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"kokrui"},"content":"                        VALID_NOTES, null","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"kokrui"},"content":"                );","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"kokrui"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Balance.class.getSimpleName());","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"kokrui"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"limjunxian1":12,"conradsoon":5,"kokrui":46,"lordidiot":16,"-":101}},{"path":"src/test/java/seedu/address/testutil/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":" * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"lordidiot"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"lordidiot"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"lordidiot"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"lordidiot"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"lordidiot"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"lordidiot"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"lordidiot"},"content":"    public List\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"lordidiot":99}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    private Optional\u003cBirthday\u003e birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"    private Optional\u003cLinkedin\u003e linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"    private Optional\u003cEmail\u003e secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"    private Optional\u003cTelegram\u003e telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"    private Optional\u003cInteger\u003e id;","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"    private Balance balance;","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"    private ObservableList\u003cNote\u003e notes;","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"        birthday \u003d Optional.empty(); // No birthday by default","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"        linkedin \u003d Optional.empty(); // No linkedin by default","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        secondaryEmail \u003d Optional.empty(); // No secondaryEmail by default","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"        telegram \u003d Optional.empty(); // No telegram by default","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"conradsoon"},"content":"        id \u003d Optional.empty();","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"conradsoon"},"content":"        notes \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"        balance \u003d new Balance(0);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"        birthday \u003d personToCopy.getBirthday();","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"        linkedin \u003d personToCopy.getLinkedin();","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"        secondaryEmail \u003d personToCopy.getSecondaryEmail();","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"        telegram \u003d personToCopy.getTelegram();","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"conradsoon"},"content":"        id \u003d personToCopy.getId();","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"conradsoon"},"content":"        notes \u003d personToCopy.getNotes();","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"        balance \u003d personToCopy.getBalance();","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"lordidiot"},"content":"     * Sets the {@code Birthday} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"lordidiot"},"content":"    public PersonBuilder withBirthday(MonthDay birthday) {","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"lordidiot"},"content":"        this.birthday \u003d Optional.of(new Birthday(birthday));","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"lordidiot"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":112,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":113,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":114,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"limjunxian1"},"content":"     * Sets the {@code Linkedin} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"limjunxian1"},"content":"    public PersonBuilder withLinkedin(String linkedin) {","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"limjunxian1"},"content":"        this.linkedin \u003d Optional.of(new Linkedin(linkedin));","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"limjunxian1"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"limjunxian1"},"content":"     * Sets the {@code Secondary Email} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"limjunxian1"},"content":"    public PersonBuilder withSecondaryEmail(String secondaryEmail) {","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"limjunxian1"},"content":"        this.secondaryEmail \u003d Optional.of(new Email(secondaryEmail));","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"limjunxian1"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"limjunxian1"},"content":"     * Sets the {@code Secondary Email} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"limjunxian1"},"content":"    public PersonBuilder withTelegram(String telegram) {","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"limjunxian1"},"content":"        this.telegram \u003d Optional.of(new Telegram(telegram));","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"limjunxian1"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":155,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"conradsoon"},"content":"     * Sets the {@code ID} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"conradsoon"},"content":"    public PersonBuilder withId(int id) {","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"conradsoon"},"content":"        this.id \u003d Optional.of(id);","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"conradsoon"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"conradsoon"},"content":"     * Sets the {@code Notes} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"conradsoon"},"content":"     * @param notes","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"conradsoon"},"content":"     * @return","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"conradsoon"},"content":"    public PersonBuilder withNotes(String... notes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"conradsoon"},"content":"        this.notes \u003d SampleDataUtil.getNoteList(notes);","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"conradsoon"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"kokrui"},"content":"     * Sets the {@code Balance} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"kokrui"},"content":"    public PersonBuilder withBalance(int balance) {","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"kokrui"},"content":"        this.balance \u003d new Balance(balance);","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"kokrui"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"limjunxian1"},"content":"     * Builds a {@code Person}.","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":185,"author":{"gitId":"kokrui"},"content":"        return new Person(name, phone, email, address, birthday, linkedin, secondaryEmail, telegram,","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"kokrui"},"content":"                tags, id, notes, balance);","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"limjunxian1":39,"conradsoon":27,"kokrui":14,"lordidiot":14,"-":95}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"    public static final Index INDEX_FIRST_NOTE \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"    public static final Index INDEX_SECOND_NOTE \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"conradsoon":2,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"            .withLinkedin(\"alice\")","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"            .withBirthday(MonthDay.of(10, 10))","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"            .withLinkedin(\"bensonmeier\")","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"            .withSecondaryEmail(\"ben10@gmail.com\")","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"            .withTelegram(\"@benson\")","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"conradsoon"},"content":"            .withId(1)","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"            .withNotes(\"Likes to swim\", \"Likes to run\", \"Is a chad\")","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"            .withBalance(2800)","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"            .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"    public static final Person JOHN \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"        .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"conradsoon"},"content":"        .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"        .withBirthday(MonthDay.of(10, 10))","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"conradsoon"},"content":"        .withLinkedin(\"bensonmeier\")","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"        .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"conradsoon"},"content":"        .withId(1)","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"conradsoon"},"content":"        .withNotes(\"Likes to swim\", \"Likes to run\", \"Is a chad\")","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"conradsoon"},"content":"        .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"limjunxian1":4,"conradsoon":14,"kokrui":1,"lordidiot":2,"-":75}},{"path":"src/test/java/seedu/address/ui/NotesWindowTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"import static org.testfx.api.FxAssert.verifyThat;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"import static org.testfx.matcher.control.ListViewMatchers.hasItems;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"import org.testfx.framework.junit5.ApplicationTest;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"public class NotesWindowTest extends ApplicationTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"    private NotesWindow notesWindow;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"    private final Person testPerson \u003d BENSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"            notesWindow \u003d new NotesWindow(testPerson);","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"            notesWindow.show();","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"        });","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"        interact(() -\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"conradsoon"},"content":"            notesWindow.hide();","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"            notesWindow.show();","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"conradsoon"},"content":"        });","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"    public void displayNotes_correctNumberOfItemsAndContent_displaysExpectedNotes() {","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"        interact(() -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"            List\u003cString\u003e expectedNotes \u003d Arrays.asList(\"Likes to swim\", \"Likes to run\", \"Is a chad\");","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"conradsoon"},"content":"            verifyThat(\"#notesListView\", hasItems(3));","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"            assertTrue(notesWindow.getNotesListView().getItems().containsAll(expectedNotes));","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"conradsoon"},"content":"        });","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"conradsoon"},"content":"    public void isShowing_afterShow_returnsTrue() {","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"conradsoon"},"content":"        assertTrue(notesWindow.isShowing());","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"conradsoon"},"content":"    public void isShowing_afterHide_returnsFalse() {","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"conradsoon"},"content":"        interact(() -\u003e notesWindow.hide());","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"conradsoon"},"content":"        assertFalse(notesWindow.isShowing());","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"conradsoon"},"content":"    public void handleClose_invoked_closesWindow() {","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"conradsoon"},"content":"        interact(() -\u003e notesWindow.handleClose());","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"conradsoon"},"content":"        assertFalse(notesWindow.isShowing());","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"conradsoon"},"content":"    public void escKey_onKeyPress_closesWindow() {","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"conradsoon"},"content":"        interact(() -\u003e notesWindow.show());","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"conradsoon"},"content":"        assertTrue(notesWindow.isShowing());","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"conradsoon"},"content":"        interact(()-\u003e press(KeyCode.ESCAPE));","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"conradsoon"},"content":"        assertFalse(notesWindow.isShowing());","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"conradsoon":76}},{"path":"src/test/java/seedu/address/ui/PersonCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"import org.testfx.framework.junit5.ApplicationTest;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"public class PersonCardTest extends ApplicationTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"    private final Person testPerson \u003d ALICE;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"    private PersonCard personCard;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"    public void start(Stage stage) throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"        personCard \u003d new PersonCard(testPerson, 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"        stage.setScene(new Scene(personCard.getRoot()));","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"        stage.show();","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"    public void handleNotesButtonClick_opensNotesWindow() {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"        clickOn(\"#notesButton\");","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"        assertTrue(lookup(\"Notes\").tryQuery().isPresent());","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"limjunxian1":2,"conradsoon":31}},{"path":"src/test/java/seedu/address/ui/ViewNotesCommandUiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"conradsoon"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"conradsoon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"conradsoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"conradsoon"},"content":"import org.testfx.framework.junit5.ApplicationTest;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"conradsoon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"conradsoon"},"content":"import seedu.address.logic.commands.ViewNotesCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"conradsoon"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"public class ViewNotesCommandUiTest extends ApplicationTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"    public void start(Stage stage) {};","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"    public void execute_viewNotes_successful() throws Exception {","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"        Person personA \u003d new PersonBuilder().withName(\"A\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"        ModelStubWithPerson modelStub \u003d new ModelStubWithPerson(personA);","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"        CommandResult commandResult \u003d new ViewNotesCommand(0).execute(modelStub);","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"        assertEquals(String.format(ViewNotesCommand.MESSAGE_VIEW_NOTES_SUCCESS,","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"            personA.getName()), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"        private final Person person;","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"conradsoon"},"content":"            this.person \u003d person;","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"conradsoon"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"            return FXCollections.observableArrayList(person);","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"conradsoon":46}}]
